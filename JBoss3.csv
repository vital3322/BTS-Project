Summary,Issue key,Issue id,Issue Type,Status,Project key,Project name,Project type,Project lead,Project description,Project url,Priority,Resolution,Assignee,Reporter,Creator,Created,Updated,Last Viewed,Resolved,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Affects Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Fix Version/s,Component/s,Component/s,Due Date,Votes,Labels,Description,Environment,Original Estimate,Remaining Estimate,Time Spent,Work Ratio,Σ Original Estimate,Σ Remaining Estimate,Σ Time Spent,Security Level,Outward issue link (Duplicate),Outward issue link (Related),Outward issue link (Related),Outward issue link (Related),Outward issue link (Related),Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Attachment,Custom field (Bugzilla References),Custom field (CDW blocker),Custom field (CDW devel_ack),Custom field (CDW docs_ack),Custom field (CDW exception),Custom field (CDW pm_ack),Custom field (CDW qa_ack),Custom field (CDW release),Custom field (Epic Link),Custom field (Estimated Difficulty),Custom field (External Issue URL),Custom field (Forum Reference),Custom field (Git Pull Request),Custom field (Help Desk Ticket Reference),Custom field (Number of attachments),Custom field (Number of comments),Custom field (Parent Link),Custom field (Rank),Custom field (Rank (Obsolete)),Custom field (Release Notes Text),Custom field (SourceForge Reference),Custom field (Steps to Reproduce),Custom field (Story Points),Custom field (Team),Custom field (Tester),Custom field (Workaround Description),Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment,Comment
Messages are silently discarded if DLQ cn not be created.,MB-1291,12537883,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,dgrove_redhat.com,dgrove_redhat.com,10/Apr/14 4:00 PM,10/Apr/14 4:00 PM,29/Nov/16 4:06 PM,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"Related to issue MB-1290, when creating the DLQ fails, the message is silently discarded.",A-MQ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzna8f:,196080,,,"If a MDB invocation fails, the message redelivery limit can be reached.  If this happens, and the needed DLQ does not exist, the message is silently discarded.",,,,,,,,,,,,,,,,,,,,,,,,
Add information about Job Scheduler persistence to Configuring Broker Persistence book,MB-1288,12535109,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,,jshepher,jshepher,17/Mar/14 3:35 AM,17/Mar/14 3:37 AM,29/Nov/16 4:14 PM,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"The Job Scheduler is responsible handling for message redelivery. Currently the Job Scheduler does not use the same persistenceAdapter as the broker, and also uses KahaDB. 

Customers should be made aware that the Scheduler is not using the same persistence as the broker. After completing ENH-309 there will be an option to use JDBC, but at the moment, KahaDB is the only option. The DB instance can be found at ${KARAF_DATA}amq/amq/scheduler by default.",JBoss Fuse A-MQ 6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzmtun:,193417,,,,,,,,,,,,,,,,,,,,,,,,,,,
NMS API ConnectionFactory drops parameters set on Uri,MB-1286,12530132,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,,joe.luo,joe.luo,22/Jan/14 12:41 PM,14/Feb/14 11:25 AM,29/Nov/16 4:14 PM,14/Feb/14 11:25 AM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"After some benchmarking attempts I think we’ve uncovered a problem in the NMS connection API – there are parameters you can pass in on the connection URL, which the NMS ConnectionFactory class expects mixed case, which the Uri class converts to lower case. 
It looks like anything enclosed in brackets is left unconverted, while anything outside of a set of brackets is converted to lower case. 
Depending on the parameter you’re attempting to set, and where in the connection string it’s added, it can either be:
-	Used correctly
-	Ignored silently
-	Cause an exception on startup
-	Cause the code to not work, but without throwing an exception. 

Sometimes the property is logged as being part of the Uri after it’s created, and other times it’s removed. 

The test code was created in the first place to try and work out why we get lower than expected throughput with our .NET code – and changing some settings configured seemed to have no effect. We’re trying to enable async message sending via the connection URL parameter but it seems to have no effect (we’ll be able to change the app code after the next release, a Uri change just requires a restart), but setting it on the Uri doesn’t seem to work. 
In all of this I can’t really see if the case sensitivity is the problem or not – but I can’t seem to get consistent behaviour about exactly which parameters have been set, what they are currently set to, and whether they should be preserved on the Uri or accessible somewhere else. 
Some clarity would be welcome! 

Program parameters:
Program messagesize persistent factory threadcount
JmsTest.exe 2000 true silentfail 1
Message size is the size of the payload in bytes,
Persistent true/false whether the message should be persisted
Factory – the connection Uri to be used (options: async, sync, buffer, bufferfail, asyncfail, silentfail)
Threadcount – number of publisher threads to start. 

We log the Async send property after creating the factory to see if it’s actually been set, and log the connection Uri to see what has been converted to lower case. 

When the program starts successfully, it’ll log  the time, number of messages sent in that second, total elapsed time in the Producer.send() call, and avg time spent per message in send(). 
Time:15/01/2014 14:52:48 Messages: 3043 TotalSendTime 641.621800298527 avgSendTime  0.210851725369217

Taking each test, the input, expected output and actual: 

Async: 
{code}
Uri(""activemq:failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000)?transport.initialReconnectDelay=100&transport.randomize=false&transport.timeout=30000&nms.watchTopicAdvisories=false&connection.CopyMessageOnSend=false&nms.AsyncSend=true"");
{code}
{quote}
C:\Users\jluo\Documents\Visual Studio 2010\Projects\JmsTest\JmsTest\bin\x64\Debug>JmsTest.exe 2000 true async 1
About to connect to failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000)?transport.initialreconnectdelay=100&transport.randomize=false&transport.timeout=30000
Async sends: True messageCopy: False
{quote}
Although Async sends is set correctly, it has disappeared from the logged Uri, and other properties have been converted to lower case. 

Sync:
{code}
Uri(""activemq:failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000)?transport.initialReconnectDelay=100&transport.randomize=false&transport.timeout=30000&nms.watchTopicAdvisories=false&connection.CopyMessageOnSend=false"");
{code}
{quote}
C:\Users\jluo\Documents\Visual Studio 2010\Projects\JmsTest\JmsTest\bin\x64\Debug>JmsTest.exe 2000 true sync 1
About to connect to failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000)?transport.initialreconnectdelay=100&transport.timeout=30000&transport.randomize=false
Async sends: False messageCopy: False
{quote}
As expected – again some properties converted to lower case or removed. 

Changing the send buffer:
{code}
Uri(""activemq:failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000&transport.sendBufferSize=32768,tcp://JMS01.app.local:8520?keepAlive=true&transport.sendBufferSize=32768)?transport.randomize=false&wireFormat.maxInactivityDuration=60000&transport.initialReconnectDelay=100&transport.timeout=30000&nms.watchTopicAdvisories=false&connection.CopyMessageOnSend=false&nms.AsyncSend=true"");
{code}
{quote}
C:\Users\jluo\Documents\Visual Studio 2010\Projects\JmsTest\JmsTest\bin\x64\Debug>JmsTest.exe 2000 true buffer 1
About to connect to failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000&transport.sendBufferSize=32768,tcp://JMS01.app.local:8520?keepAlive=true&transport.sendBufferSize=32768)?transport.initialreconnectdelay=100&transport.timeout=30000&transport.randomize=false&wireformat.maxinactivityduration=60000
Async sends: True messageCopy: False
{quote}
Again as expected – as tcp.sendBufferSize is set inside brackets, it’s case is preserved. 

Failing to set send buffer
{code}
Uri(""activemq:failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true)?transport.randomize=false&wireFormat.maxInactivityDuration=60000&transport.initialReconnectDelay=100&transport.timeout=30000&nms.watchTopicAdvisories=false&connection.CopyMessageOnSend=false&nms.AsyncSend=true&transport.sendBufferSize=32768"");
{code}
{quote}
C:\Users\jluo\Documents\Visual Studio 2010\Projects\JmsTest\JmsTest\bin\x64\Debug>JmsTest.exe 2000 true bufferfail 1
About to connect to failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true)?transport.initialreconnectdelay=100&transport.sendbuffersize=32768&transport.timeout=30000&transport.randomize=false&wireformat.maxinactivityduration=60000
Unhandled Exception: Apache.NMS.NMSException: No such property or field: sendbuffersize on class: FailoverTransport
{quote}
Unclear whether some transport settings need to be set on each TcpTransport instead of the FailoverTransport, or converting to lower case has broken it. 

Failing to set async:
{code}
Uri(""activemq:failover:(tcp://JMS02.app.local:8520?keepAlive=true&amp;wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true&amp;wireFormat.maxInactivityDuration=60000)?transport.initialReconnectDelay=100&amp;transport.randomize=false&transport.timeout=30000&nms.watchTopicAdvisories=false&amp;connection.CopyMessageOnSend=false&amp;nms.AsyncSend=true"");
{code}
{quote}
C:\Users\jluo\Documents\Visual Studio 2010\Projects\JmsTest\JmsTest\bin\x64\Debug>JmsTest.exe 2000 true asyncfail 1
About to connect to failover:(tcp://JMS02.app.local:8520?keepAlive=true&amp;wireFormat.maxInactivityDuration=60000,tcp://JMS01.app.local:8520?keepAlive=true&amp;wireFormat.maxInactivityDuration=60000)?transport.initialreconnectdelay=100&amp;nms.asyncsend=true&transport.timeout=30000&amp;transport.randomize=false&amp;connection.copymessageonsend=false
Async sends: False messageCopy: True
{quote}
My understanding is that &amp; should be replaced automagically by the Uri class – although it starts successfully without throwing any exceptions, it does not set the Async sends parameter to true. 

Silent failure:
{code}
Uri(""activemq:failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000&transport.sendBufferSize=32768?nms.AsyncSend=true,tcp://JMS01.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000&transport.sendBufferSize=32768?nms.AsyncSend=true)"");
{code}
{quote}
C:\Users\jluo\Documents\Visual Studio 2010\Projects\JmsTest\JmsTest\bin\x64\Debug>JmsTest.exe 2000 true silentfail 1
About to connect to failover:(tcp://JMS02.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000&transport.sendBufferSize=32768?nms.AsyncSend=true,tcp://JMS01.app.local:8520?keepAlive=true&wireFormat.maxInactivityDuration=60000&transport.sendBufferSize=32768?nms.AsyncSend=true)
Async sends: False messageCopy: True
publisher thread starting
Time:15/01/2014 15:00:25 Messages: 0 TotalSendTime 0 avgSendTime  NaN
{quote}
Making a mistake inside the failover URL (? instead of & on one parameter) stops it working but without throwing any exceptions to client code – it just fails to send any messages. 
",NMS 1.6.2,,,,,,,,,,,,,,22/Jan/14 12:47 PM;joe.luo;Program.cs;https://issues.jboss.org/secure/attachment/12380134/Program.cs,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzlx33:,188154,,,,,,,,"22/Jan/14 1:03 PM;tabish121;Transport options that affect the TCP transport or it's associated WireFormat instance itself must be applied on the individual transports in the failover URI, only the failover transport options and connection level options are valid on the outermost URI.",,,,,,,,,,,,,,,,,,,
System failure due to excessive memory use by ActiveMQ connection/session/pool,MB-1283,12516682,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,pfox,pfox,31/May/13 8:21 AM,07/Jun/13 1:46 PM,29/Nov/16 4:14 PM,31/May/13 10:37 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,broker,,,0,,"After about 3 weeks the system became extremely slow and analysis showed that all cpu capacitys were completely used by excessive garbage collecion. Servicemix runs in a 32 bit JVM and has 1 GB max heap (which it finally used up). Servicemix connects to a standalone local ActiveMQ broker using jms connection pools.

Camel-jms using org.apache.activemq.pool.PooledConnectionFactory.

Analysis of GC logs showed a constant old generation growt over the 3 weeks.

Before restaring, we took a heap dump using jconsole and loaded the dump into Eclipse MAT memory analyzer.

The results of the leak detection were:

Retained heap: 
100% retained heap: 1.029.473.232 bytes
org.apache.activemq.pool.PooledSession: 253.725.560 bytes (24%)
org.apache.activemq.pool.ConnectionPool: 246.793.208 bytes (23%)
org.apache.activemq.ActiveMQConnection: 500.059.968 bytes (48%)

This was very surprising since all 4 jms connection pools are configured with only maxConnections=2 and maximumActive=2 and of those 4 pools only one is actually used by the client bundles. The others are unused and unreferenced.

","- Servicemix: Fuse ESB 4.4.1-fuse-08-15
- ActiveMQ: Fuse ActiveMQ 5.5.1-fuse-08-15 using local kahadb
- JVM: Oracle jdk1.6.0_31 32 bit
- OS: RHEL 6, 64 Bit, 4 GB RAM, 1 CPU",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,4.0,,1|hzkjxr:,180198,,,,,,,,"31/May/13 8:22 AM;pfox;From debugging I noticed the following:

Problem:
===========
Everytime a session is created using the pooledConnectionFactory
- it takes a pooledSession out of the associated session pool.
- it wraps this sessionPool in a PooledConnection object (Bad name I think) which is really a proxy object to the session. 
- as part of that, the PooledConnection is added to the PooledSession.tempDestEventListener.
- this PooledConnection object is not removed from PooledSession.tempDestEventListener and this is why so many instance are help open.","31/May/13 10:23 AM;pfox;There has been a lot of changes on the AMQ connection pooling in the later versions. I have tested the use case using JBoss Fuse 6.0 (based on activemq 5.8) on the client side and no unexpected org.apache.activemq.pool.PooledConnection objects seemed to be retained. 

So upgrading to the latest version of JBoss A-MQ should resolve this issue.",31/May/13 10:37 AM;pfox;recommended to upgrade to latest JBoss A-MQ 6 version (based on AMQ 5.8),07/Jun/13 1:46 PM;pfox;found the AMQ JIRA that probably fixed this issue on AMQ 5.7 https://issues.apache.org/jira/browse/AMQ-3997,,,,,,,,,,,,,,,,
MessagePersistence does not work with AMQP transport,MB-1282,12516681,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,,jshepher,jshepher,24/May/13 5:32 AM,24/May/13 5:33 AM,29/Nov/16 4:14 PM,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"After restarting the broker with inflight messages in the queue, a consumer cannot consume the persisted messages.

You can use the FuseByExample, AMQP example to recreate the problem:

   https://github.com/FuseByExample/activemq-amqp-example","JBoss Fuse 6.0
AMQP TransportConnector",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkjxb:,180196,,,,,,,,,,,,,,,,,,,,,,,,,,,
javax.jms.MessageNotReadableException: Message body is write-only when trying to dispatch message from the store,MB-1280,12516679,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,kearls,mielket,mielket,22/May/13 4:30 PM,28/May/13 3:09 PM,29/Nov/16 4:14 PM,28/May/13 3:09 PM,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,,,,,,,,,,,,,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,broker,,,0,,"When the broker reads an ActiveMQBytesMessage from kahadb store and dispatches it to an AMQP consumer, it will raise the error below [1] for every BytesMessage to be dispatched. 
The actual dispatch fails because of this error.

[1]
{code}
javax.jms.MessageNotReadableException: Message body is write-only
	at org.apache.activemq.command.ActiveMQBytesMessage.checkWriteOnlyBody(ActiveMQBytesMessage.java:863)
	at org.apache.activemq.command.ActiveMQBytesMessage.initializeReading(ActiveMQBytesMessage.java:868)
	at org.apache.activemq.command.ActiveMQBytesMessage.getBodyLength(ActiveMQBytesMessage.java:190)
	at org.apache.qpid.proton.jms.AMQPNativeOutboundTransformer.transform(AMQPNativeOutboundTransformer.java:63)
	at org.apache.qpid.proton.jms.AutoOutboundTransformer.transform(AutoOutboundTransformer.java:37)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext.pumpOutbound(AmqpProtocolConverter.java:751)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter$ConsumerContext.onMessageDispatch(AmqpProtocolConverter.java:710)
	at org.apache.activemq.transport.amqp.AmqpProtocolConverter.onActiveMQCommand(AmqpProtocolConverter.java:300)
	at org.apache.activemq.transport.amqp.AmqpTransportFilter.oneway(AmqpTransportFilter.java:64)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1378)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:897)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:943)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:129)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:47)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:895)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
	at java.lang.Thread.run(Thread.java:680)
{code}

","AMQP transport, BytesMessage",,,,,,,,,,,,,,22/May/13 4:37 PM;mielket;amqp-client.zip;https://issues.jboss.org/secure/attachment/12369083/amqp-client.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkjxj:,180197,,,,,,,,22/May/13 4:30 PM;mielket;SFDC: https://c.na7.visual.force.com/apex/Case_View?id=500A000000DQSAw&sfdc.override=1,,,,,,,,,,,,,,,,,,,
Broker leaking file descriptors with transport using maximumConnections,MB-1277,12516676,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,jsherman,jsherman,06/May/13 2:56 PM,16/May/13 5:41 PM,29/Nov/16 4:14 PM,,5.5.1-fuse-10-16,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"The broker is leaking file descriptors when the transport is using the maximumConnections option and addition connections are requested from the broker.  After running a simple test an lsof show many FDS in stuck in a CLOSE_WAIT state:

{code}
java    7158 jsherman  944u  IPv6             610511      0t0    TCP 10.211.55.6:61617->10.211.55.2:51834 (CLOSE_WAIT)
java    7158 jsherman  945u  IPv6             610513      0t0    TCP 10.211.55.6:61617->10.211.55.2:51835 (CLOSE_WAIT)
java    7158 jsherman  946u  IPv6             610515      0t0    TCP 10.211.55.6:61617->10.211.55.2:51836 (CLOSE_WAIT)
java    7158 jsherman  947u  IPv6             610517      0t0    TCP 10.211.55.6:61617->10.211.55.2:51837 (CLOSE_WAIT)
java    7158 jsherman  948u  IPv6             610519      0t0    TCP 10.211.55.6:61617->10.211.55.2:51838 (CLOSE_WAIT)
{code}",,,,,,,,,,,,,,,15/May/13 9:09 PM;jsherman;broker-test.zip;https://issues.jboss.org/secure/attachment/12369082/broker-test.zip,06/May/13 7:42 PM;jsherman;fds-leak-test.zip;https://issues.jboss.org/secure/attachment/12369080/fds-leak-test.zip,07/May/13 7:08 PM;jsherman;mb-1277_lsof.txt;https://issues.jboss.org/secure/attachment/12369081/mb-1277_lsof.txt,,,,,,,,,,,,,,,,,,,,,,,,3.0,0.0,,1|hzkjwv:,180194,,,,,,,,,,,,,,,,,,,,,,,,,,,
client calls to createProducer() and send() successful even though BrokerFilter methods throw exceptions ,MB-1275,12516675,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,joe.luo,joe.luo,22/Mar/13 11:49 AM,05/Jul/13 3:35 PM,29/Nov/16 4:14 PM,,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,"Client calls to createProducer() always return without an error even though a BrokerFilter's addProducer() method throws an exception on the request. In contrast, createConsumer() throws an exception, as expected, when BrokerFilter's addConsumer() throws an exception.

Clients using transacted sessions always return successfully from send() when a BrokerFilter's send() method throws an exception.

Below is a broker configuration file using <authorizationPlugin> to illustrate the problem.

To reproduce the problem With this configuration, a test client only needs to connect with user = ""user"" and password = ""password"", and then attempt to produce messages with a transacted session to any queue other than ABC (e.g. DEF).

Tracing the cause of the issue has lead to finding that the client code for creating a producer uses an Async send for the producer information. The analogous code for consumers uses a Sync send.

I will work on a patch. It would be very helpful to have feedback on the operation of the bus and the best way to resolve this problem. Based on my research, it seems that createProducer() should be using a Sync send in place of the Async one. Not yet sure about send(). Another possibility is to move the security operations to earlier in the internal broker flow.

=== SAMPLE BROKER XML ===
{code}
<beans
xmlns=""http://www.springframework.org/schema/beans""
xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd"">

<broker xmlns=""http://activemq.apache.org/schema/core""
brokerName=""localhost""
dataDirectory=""${activemq.base}/data""
destroyApplicationContextOnStop=""true"" >

<persistenceAdapter>
<kahaDB directory=""${activemq.base}/data/kahadb""/>
</persistenceAdapter>

<plugins>
<simpleAuthenticationPlugin anonymousAccessAllowed=""true"">
<users>
<authenticationUser username=""user"" password=""password""
groups=""users""/>
</users>
</simpleAuthenticationPlugin>

<authorizationPlugin>
<map>
<authorizationMap>
<authorizationEntries>
<authorizationEntry queue=""ABC"" read=""users"" write=""users"" admin=""users"" />
<authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""users"" write=""users"" admin=""users"" />
</authorizationEntries>
</authorizationMap>
</map>
</authorizationPlugin>
</plugins>

<transportConnectors>
<transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
</transportConnectors>
</broker>
</beans>
{code}",Fuse ESB 5.5.1,,,,,,,,,,,,,,22/Mar/13 11:53 AM;joe.luo;AMQ3166Test.java;https://issues.jboss.org/secure/attachment/12369079/AMQ3166Test.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3166,,,,1.0,0.0,,1|hzkjyn:,180202,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ Webconsole fails to send message if the webapp username/password is not same as activemq username/password. ,MB-1269,12516670,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,dbosanac,ubhole,ubhole,07/Mar/13 1:21 PM,15/Mar/13 3:37 PM,29/Nov/16 4:14 PM,15/Mar/13 3:37 PM,5.5.1-fuse-08-15,5.5.1-fuse-09-16,5.5.1-fuse-10-16,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,ActiveMQ Web Console cannot send message to a queue if the webapp username/password. This was working in 5.5.1-fuse-07-11 but failed in 5.5.1-fuse-10-16. I tried to go back it seems it has broken just after 07-11 and I can see it failing on 08-15 as well. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,6.0,,1|hzkjuf:,180183,,,,,,,,"07/Mar/13 4:02 PM;dbosanac;The ""problem"" is that in 10-16 web console is not secured by default, so credentials are not used when sending the message. Setting

{code}<property name=""authenticate"" value=""true"" />{code}

in the conf/jetty.xml solves it.","07/Mar/13 4:14 PM;ubhole;Hi Dejan,

Is it a intended change that should have been documented somewhere (or have been documented)? 

BTW, this property is false in 07-11 as well by default. But yes that does the trick as it asked for username/password in first place when you go to http://localhost:8161/admin .

Regards,

Ulhas Bhole","07/Mar/13 4:37 PM;dbosanac;Hi Ulhas,

it was not intentional change. There were many changes in that area over time,  so the change was brought in with merge of [https://issues.apache.org/jira/browse/AMQ-2744]. The later on the console was again secured by default with [https://issues.apache.org/jira/browse/AMQ-4124] but that haven't been merged to 5.5.1 branch.

","07/Mar/13 4:47 PM;garytully;It looks like authenticate = true was the slip b/c the web console is restricted to localhost by default and does not need authentication.  https://issues.apache.org/jira/browse/AMQ-2744 has two commits, the first sets to true, the second to false. 07 was released between those changes. ","07/Mar/13 5:03 PM;garytully;if authenitcate=false, then the web console does not have any identity and it uses the jms connection factory via getConnection() so that the values provided in the connectionFactory bean are the defaults. When it has an identity, it uses getConnection(authenticated.user&pass) so it explicitly supplied its credentials. Hense bypassing the default values provided to the connection factory bean.",15/Mar/13 3:37 PM;garytully;working as designed.,,,,,,,,,,,,,,
SessionPool of activemq-pool needs to destroy connection object if it failed to start() the connection.,MB-1266,12516668,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,mielket,mielket,25/Feb/13 12:58 PM,08/Mar/13 4:49 PM,29/Nov/16 4:14 PM,08/Mar/13 4:48 PM,5.5.1-fuse-09-16,,,,,,,,,,,,,,,,,,,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,broker,,,0,,"SessionPool.getConnection() reads as follows

{code:java}
public Connection getConnection() throws JMSException {
        if (checkConnection()) {
            return connection;
        }
        synchronized (this) {
            connection = getConnectionFactory().createConnection();
            connection.start();
            return connection;
        }
    }
{code}

It currently does not catch any exceptions that are thrown while creating or starting the connection. Instead the exception is just passed up the stack.
If e.g. a SecurityException is thrown at connection.start() (e.g. due to unsuccessful authentication or missing authorization privileges) the exception is propagated up the stack but the connection itself remains in a dangling state (i.e. closed=false, closing=false, started=false but the underlying VMTransports peer.disposed=true) and instead of being destroyed. 

Now, the brokers web console uses SessionPool.borrowSession() API when trying to connect to the broker. The SessionPool simply reuses the already instantiated connection object with some checks if closed==true or closing==true. As these checks evaluate to false, the connection is being used to create a Session. However the VMTransports peer is disposed and this check is performed when trying to send a info command msg. It then results in this error 

{noformat}
Caused by: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
{noformat}

The main problem is that this connection is reused on the next call to SessionPool.borrowSession(). Any further calls to borrowSession() will result in the same TransportDisposedIOException. 

IMHO a possible fix could be to catch any exceptions during connection.start() and destroy the connection object, e.g.

{code:title=SessionPool.java}
public Connection getConnection() throws JMSException {
        if (checkConnection()) {
            return connection;
        }

        synchronized (this) {
            try {
                connection = getConnectionFactory().createConnection();
                connection.start();
                return connection;
            } catch (JMSException jmsx) {
           connection.close();
           connection = null;
           throw jmsx
         } 
       }
    }
{code}

The connection is completely closed and thrown away in the case of an exception, so next calls to SessionPool.borrowSession() will attempt to create a new connection.


","web console, authentication, authorization",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4359,,,,0.0,2.0,,1|hzkjtr:,180180,,,,,,,,"25/Feb/13 1:15 PM;mielket;This issue can cause a strange side effect.
Suppose a broker with authorization turned on so that a user having the web role can access queue Test.1 but not queue Test.2.

{code:title=activemq.xml}
<plugins>
      <jaasAuthenticationPlugin configuration=""PropertiesLogin"" />
      <authorizationPlugin>
        <map>
          <authorizationMap>
            <authorizationEntries>
                <authorizationEntry queue=""Test.1"" read=""admins,web"" write=""admins,web"" admin=""admins,web""/>
                <authorizationEntry queue=""Test.2"" read=""admins"" write=""admins"" admin=""admins""/>
                <authorizationEntry queue=""&gt;"" read=""admins"" write=""admins"" admin=""admins""/>
            </authorizationEntries>
          </authorizationMap>
        </map>
      </authorizationPlugin>
{code}

When running the broker with that config and opening the web console (which authenticates to the web role) it is possible to browse queue Test.1.
Trying to browse queue Test.2 correctly results in a 

{code}
java.lang.SecurityException: User jetty is not authorized to read from: Test.2
{code}

However trying to access queue Test.1 again fails with 
{code}
Caused by: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#1) disposed.
{code}

Any subsequent attempts fail as well although the authenticated user has privileges to access Test.1.

This is due to the above bug and the connection being reused. The only way to resolve this is to restart the broker. 
",08/Mar/13 4:47 PM;garytully;fix is on trunk for 6.0 a-mq.,,,,,,,,,,,,,,,,,,
Job Scheduler Store Growth is Unrestricted,MB-1264,12516625,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,ubhole,ubhole,20/Sep/12 1:59 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,15/Feb/13 2:57 PM,5.5.1-fuse-09-16,,,,,,,,,,,,,,,,,,,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,0,,"See linked issue at Apache: https://issues.apache.org/jira/browse/AMQ-4068.
The current workaround is to use disk space monitoring at the OS level to watch for unusual growth in the scheduled message store.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4068,,,,0.0,1.0,,1|hzkjsf:,180174,,,,,,,,15/Feb/13 2:57 PM;garytully;fix in  5.8 - snap: 5.8.0.redhat-60-SNAPSHOT,,,,,,,,,,,,,,,,,,,
Network Dead Lock using duplex network connector for NOB,MB-1263,12516666,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,25/Jan/13 7:24 PM,25/Feb/13 12:12 PM,29/Nov/16 4:14 PM,25/Feb/13 12:12 PM,5.4.2-fuse-05-26,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,,,,0,,"The following condition has been reported when using duplex network connector with 5.4.2-fuse-05-26:

Messages stop flowing in both directions and the thread dumps from the hub and spoke broker show the following:

*On the Hub broker I see the following:*

{code}
""ActiveMQ NIO Worker"" daemon prio=10 tid=0x00007f51180fe800 nid=0x14bf waiting for monitor entry [0x00007f5144ddf000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)
	- waiting to lock <0x00007f5172c1dcb0> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:508)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	- locked <0x00007f5172c1db98> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:129)
	at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
{code}

Which is blocked on:

{code}
""BrokerService[mq] Task-320858"" daemon prio=10 tid=0x0000000040aa4800 nid=0x14f1 waiting on condition [0x00007f513a4a3000]
   java.lang.Thread.State: TIMED_WAITING (sleeping)
	at java.lang.Thread.sleep(Native Method)
	at org.apache.activemq.transport.nio.NIOOutputStream.write(NIOOutputStream.java:164)
	at org.apache.activemq.transport.nio.NIOOutputStream.flush(NIOOutputStream.java:118)
	at java.io.DataOutputStream.flush(DataOutputStream.java:106)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:184)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:254)
	- locked <0x00007f5172c1da70> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00007f5172c1dcb0> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:776)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:163)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:121)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00007f5172c29260> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1271)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:818)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:854)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
{code}

*On the spoke broker I see the following similar blocked thread:*

{code}
""ActiveMQ Transport: tcp://mq/10.4.250.49:62626"" prio=10 tid=0x00007f18a43d7800 nid=0xa6a waiting for monitor entry [0x00007f18a08f7000]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:39)
	- waiting to lock <0x00000000e0939880> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:508)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	- locked <0x00000000e08ef5f8> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
	at java.lang.Thread.run(Thread.java:679)
{code}

Which is blocked on:

{code}
""BrokerService[shmq] Task-48017"" daemon prio=10 tid=0x00007f1888244800 nid=0x6514 runnable [0x00007f188c653000]
   java.lang.Thread.State: RUNNABLE
	at java.net.SocketOutputStream.socketWrite0(Native Method)
	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:109)
	at java.net.SocketOutputStream.write(SocketOutputStream.java:153)
	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115)
	at java.io.DataOutputStream.flush(DataOutputStream.java:123)
	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:184)
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:254)
	- locked <0x00000000e0939968> (a java.util.concurrent.atomic.AtomicBoolean)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00000000e0939880> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:81)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:776)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:163)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:121)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00000000e0d7b550> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1271)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:818)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:854)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:679)
{code}",NOB with duplex network connector,,,,,,,,,,,,,,15/Feb/13 7:13 PM;jsherman;5.8.0.redhat-60-SNAPSHOT.dump1.broker1.txt;https://issues.jboss.org/secure/attachment/12369060/5.8.0.redhat-60-SNAPSHOT.dump1.broker1.txt,15/Feb/13 7:14 PM;jsherman;5.8.0.redhat-60-SNAPSHOT.dump1.broker2.txt;https://issues.jboss.org/secure/attachment/12369063/5.8.0.redhat-60-SNAPSHOT.dump1.broker2.txt,15/Feb/13 7:13 PM;jsherman;5.8.0.redhat-60-SNAPSHOT.dump2.broker1.txt;https://issues.jboss.org/secure/attachment/12369061/5.8.0.redhat-60-SNAPSHOT.dump2.broker1.txt,15/Feb/13 7:14 PM;jsherman;5.8.0.redhat-60-SNAPSHOT.dump2.broker2.txt;https://issues.jboss.org/secure/attachment/12369062/5.8.0.redhat-60-SNAPSHOT.dump2.broker2.txt,15/Feb/13 3:52 AM;jsherman;broker1-dump1.txt;https://issues.jboss.org/secure/attachment/12369057/broker1-dump1.txt,15/Feb/13 3:52 AM;jsherman;broker1-dump2.txt;https://issues.jboss.org/secure/attachment/12369054/broker1-dump2.txt,15/Feb/13 3:36 AM;jsherman;broker1.xml;https://issues.jboss.org/secure/attachment/12369055/broker1.xml,15/Feb/13 8:05 PM;jsherman;broker1_logs.zip;https://issues.jboss.org/secure/attachment/12369064/broker1_logs.zip,15/Feb/13 3:53 AM;jsherman;broker2-dump1.txt;https://issues.jboss.org/secure/attachment/12369058/broker2-dump1.txt,15/Feb/13 3:53 AM;jsherman;broker2-dump2.txt;https://issues.jboss.org/secure/attachment/12369059/broker2-dump2.txt,15/Feb/13 3:36 AM;jsherman;broker2.xml;https://issues.jboss.org/secure/attachment/12369056/broker2.xml,15/Feb/13 8:05 PM;jsherman;broker2_logs.zip;https://issues.jboss.org/secure/attachment/12369065/broker2_logs.zip,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4328,,,,12.0,1.0,,1|hzkjt3:,180177,,,,,,,,25/Feb/13 3:00 AM;jsherman;Verified issue has been resolved in the 5.5.1-fuse-10-16 build,,,,,,,,,,,,,,,,,,,
conditionalNetworkBridgeFilterFactory ignores NetworkTTL when replayWhenNoConsumers is set to true and forward messages to network consumer. ,MB-1261,12516664,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ubhole,ubhole,23/Jan/13 4:30 PM,15/May/13 4:09 PM,29/Nov/16 4:14 PM,05/Mar/13 12:01 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,"In Fuse MB with network of brokers  conditionalNetworkBridgeFilterFactory ignores the  NetworkTTL set on the message  and forward the message over to network consumer also ignoring  replayWhenNoConsumers  set to true.

Ideally the Broker with lost consumer and pending message should ignore Network TTL only when it is replaying them back to original broker but currently it ignores it in other case as well where it check for the network consumers and forward to them before checking for replay. 

",,,,,,,,,,,,,,,28/Feb/13 4:30 PM;ubhole;amq.log.tar.gz;https://issues.jboss.org/secure/attachment/12369066/amq.log.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4283,,,,1.0,3.0,,1|hzkjwf:,180192,,,,,,,,30/Jan/13 2:12 PM;garytully;fix at apache: https://issues.apache.org/jira/browse/AMQ-4283,12/Feb/13 10:29 PM;tabish121;Fix merged. ,28/Feb/13 4:30 PM;ubhole;Log files with Extra Logging.,,,,,,,,,,,,,,,,,
Prefetch limit not remembered during failover.,MB-1260,12516658,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,20/Dec/12 10:34 PM,13/Feb/13 4:15 PM,29/Nov/16 4:14 PM,13/Feb/13 4:15 PM,5.5.1-fuse-09-16,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,"I have two brokers configured with the following policy:

{code}
 <policyEntry topic=""FOO.>"" topicPrefetch=""10"">
      <pendingMessageLimitStrategy>
        <constantPendingMessageLimitStrategy limit=""1""/>
      </pendingMessageLimitStrategy>
    </policyEntry>
{code}

My consumer will failover to the other broker, if it is no longer there:

{code}
            ActiveMQConnectionFactory connectionFactory = new ActiveMQConnectionFactory(user, password, ""failover:tcp://wildflower:61666,tcp://wildflower:61667"");
{code}

When this subscription becomes active ( ant consumer -Dsubject=FOO.TEST -Dtopic=true -Dmax=100), I can see in jconsole that prefetch limit is indeed 10. When I kill the  broker on 61666, the consumer failsover to 61667. Unfortunately, the prefetch limit has now changed to 32766. 

If one configures the consumer to set the prefetch limit:

{code}
destination = session.createTopic(subject +""?consumer.prefetchSize=20"");
{code}

It works consistently. Unfortunately, our customer doesn't have control over the consumers so this is not a good solution. 

",,,,,,,,,,,,,,,20/Dec/12 10:35 PM;sjavurek;Broker1-61666.jpg;https://issues.jboss.org/secure/attachment/12369049/Broker1-61666.jpg,20/Dec/12 10:36 PM;sjavurek;broker2-61667.jpg;https://issues.jboss.org/secure/attachment/12369050/broker2-61667.jpg,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4235,,,,2.0,3.0,,1|hzkjrz:,180172,,,,,,,,21/Dec/12 11:35 AM;garytully;The root cause (setting prefetch via a consumerControl)  is also responsible for https://issues.apache.org/jira/browse/AMQ-4234 which is stomp specific.,21/Dec/12 2:56 PM;garytully;Fix at apache via: https://issues.apache.org/jira/browse/AMQ-4235,13/Feb/13 4:15 PM;tabish121;Merged into the 5.5.1 branch.,,,,,,,,,,,,,,,,,
Submitting change to ActiveMQ startup to eliminate mangling of the classpath order,MB-1259,12516663,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,11/Jan/13 12:51 AM,15/Feb/13 2:51 PM,29/Nov/16 4:14 PM,15/Feb/13 2:51 PM,,,,,,,,,,,,,,,,,,,,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,0,,"On startup of ActiveMQ, a HashSet data structure is used to maintain elements of the classpath, thereby losing (mangling) the ordering.

In our case this has caused problems with SLF4J as our customatizations depend on newer versions than those include by ActiveMQ.  It has also prevented us from reliably being able to use our shared/local setup to provide a standard install with defaults (in the shared tree) that can easily be overriden by the local tree.

Patch submitted from customer. ",,,,,,,,,,,,,,,11/Jan/13 12:52 AM;sjavurek;orderedClasspath.patch;https://issues.jboss.org/secure/attachment/12369053/orderedClasspath.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkjs7:,180173,,,,,,,,"14/Jan/13 11:24 AM;dbosanac;Hi, this issue was tackled as a part of https://issues.apache.org/jira/browse/AMQ-4053, where the HashSet is changed to LinkedHashSet (so iteration order is preserved). I just tested and it should work fine, prepending arbitrary jars to the classpath. Maybe the best course of action would be merging (partially) this fix to 5.5 before the next release.",,,,,,,,,,,,,,,,,,,
 next() and hasNext() are never called without first calling reset(),MB-1255,12516659,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,26/Dec/12 8:03 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,10/Jan/13 9:51 PM,5.5.1-fuse-09-16,,,,,,,,,,,,,,,,,,,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,broker,,,0,,"We believe that there's a JAVA API contract being violated. Here's the sequence:

iter = LinkedList.iterator()
LinkedList.clear()
iter.hasNext()
iter.next()

tryAddMessageLast calls flushToDisk() which calls memoryList.clear().
Notice there's nothing to prevent next() and hasNext() from using iter which was set before that.

Per Christian, ""So next() and hasNext() are never called without first calling reset(). I see what you're saying: it's not documented very well what the contract is with the PendingMessageCursor. I can add that.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4248,,,,0.0,1.0,,1|hzkjqf:,180165,,,,,,,,"10/Jan/13 9:51 PM;garytully;The internal iterator was left dangling, retaining memory till next batch dispatch (which could take some time depending on consumer activity). It should have been cleared in the previous call to release.

Fix on trunk for 5.8 - https://issues.apache.org/jira/browse/AMQ-4248",,,,,,,,,,,,,,,,,,,
Poor Commit Performance when using ActiveMQ NoB with Oracle DB Store,MB-1252,12516655,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,davestanley,davestanley,30/Nov/12 3:25 PM,24/Jul/14 11:36 AM,29/Nov/16 4:14 PM,,,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"I have a small network of brokers (NoB) that use Oracle as the data store. When the brokers are configured for Master/Slave only, we see a throughput of 400+mps. When it is configured as a NoB in Master/Slave pairs.

After reviewing a thread dump of both a Master/Slave pair and a NoB with 2 Master/Slave pairs, there are a number of waits on the commit in the NoB that do not appear in the non-NoB. There are no errors in the logs on the broker.

This issue is to investigate what might be causing the wait states.","FuseMQ 5.5.1-fuse-04-01
Oracle 11g r2
RHEL 5.5
",,,,,,,,,,PROD-1607,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjon:,180157,,,,,,,,24/Jul/14 11:36 AM;garytully;think https://issues.apache.org/jira/browse/AMQ-5277 will help,,,,,,,,,,,,,,,,,,,
Messages lost on Virtual Topic  when no active consumer attached.,MB-1251,12516654,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,22/Nov/12 5:26 PM,13/Feb/13 12:13 AM,29/Nov/16 4:14 PM,13/Feb/13 12:13 AM,5.5.1-fuse-09-16,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,,,,0,,"Please see attached case.

Snippet:

{code}
// Prove that messages are NOT lost when using hoaky selector workaround selector=1<>2
				from(""activemq:queue:Consumer.mockRoute1."" + vtopicName + ""?selector=1<>2"")
				.routeId(""mockRoute1"")
						.to(""log:camel.mockRoute1?showAll=true&showBody=true"")
						.to(mock);
				
				// without workaround, messages are lost when consumer is offline
				from(""activemq:queue:Consumer.mockRoute2."" + vtopicName)
					.routeId(""mockRoute2"")
				.to(""log:camel.mockRoute2?showAll=true&showBody=true"")
				.to(mock2);

{code}

Config:

{code}
<amq:destinationInterceptors>
		   <amq:virtualDestinationInterceptor>
 		     <amq:virtualDestinations>
				<amq:virtualTopic name=""VirtualTopic.>"" selectorAware=""true"" />
				<amq:virtualTopic name=""VirtualTopicNS.>"" selectorAware=""false"" />
		     </amq:virtualDestinations>
		   </amq:virtualDestinationInterceptor>
		</amq:destinationInterceptors>
 		<amq:plugins>
		   <amq:virtualSelectorCacheBrokerPlugin persistFile=""selectorcache.data""/>
		</amq:plugins>
{code}",,,,,,,,,,,,,,,22/Nov/12 5:27 PM;socallag;fusesource-issue-selector.tgz;https://issues.jboss.org/secure/attachment/12369046/fusesource-issue-selector.tgz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4271,,,,1.0,2.0,,1|hzkjrr:,180171,,,,,,,,"10/Dec/12 1:33 PM;dbosanac;Hi,

I looked at this issue and it looks to me that everything works as designed.

The problem is that virtualSelectorCacheBrokerPlugin is designed to work only with consumers that have selectors. So it caches the consumers with selectors and messages are sent to the queue even if there's no consumers at the moment. There's no much point in caching consumers with no selectors as then we would again build-up messages in the queue. Instead of adding a fake selector on the consumer, you can just use selectorAware=false and it will all work.

It'd be good if we could discuss the use case further and see what's the desired overall application behavior. I think it'd be good to separate consumers with and without selectors to different virtual topics if that's possible. Or use some other mechanism (like durable subs)?","24/Jan/13 4:06 PM;dbosanac;I had a second look at this and made a fix that makes this use case working

https://issues.apache.org/jira/browse/AMQ-4271

So far it's only available in apache trunk.",,,,,,,,,,,,,,,,,,
Missing Data file for plist temp store on filependingmessage queue cursor overflow,MB-1250,12516653,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,21/Nov/12 9:43 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,14/Dec/12 4:41 PM,5.5.1-fuse-09-16,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,"Hi, 

Opening an exploratory bug report based off conversation with Gary. (activemq-5.5.1-fuse-09-16)

{code}
2012-11-19 08:06:49,819 [ActiveMQ Broker[activemq_gridmsg105.XXXX] Scheduler] ERROR Journal - Looking for key 67 but not found in fileMap: {70=db-70.log number = 70 , ......  length = 33554793, 58=db-58.log number = 58 , length = 33555307}
2012-11-19 08:06:49,819 [ActiveMQ Broker[activemq_gridmsg105.XXXX] Scheduler] ERROR Queue - Problem retrieving message for browse
java.util.NoSuchElementException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg105.XXXXtmp_storage/db-67.log
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:215)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:508)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:492)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:305)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1047)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:812)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: java.io.IOException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg105.XXX/tmp_storage/db-67.log
	at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
	at org.apache.kahadb.journal.Journal.read(Journal.java:597)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:394)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:213)
{code}

It may well be an issue with contention over the deletion of data files by the plist. The reference tracking. but it may also be a problem with the iterators.",,,,,,,,,,,,,,,07/Dec/12 10:52 AM;garytully;MB1250Test.java;https://issues.jboss.org/secure/attachment/12369047/MB1250Test.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4221,,,,1.0,8.0,,1|hzkjpb:,180160,,,,,,,,"07/Dec/12 10:52 AM;garytully;Test case that tries to capture the use case and stress the temp journal. Selector and dlq purge in the mix. No luck so far with various permutations.

My suspicion is some edge case with removal via expiry and cleanup but from a code inspection point of view I have not been able to pinpoint the cause.

The test uses X queues, where there is producer and selector that takes half the messages, the rest expire.
All destinations end up paging to disk (temp store)

The question is how to make the test more realistic when compared to the real use case?

Reducing the journal file size ensures more churn there, but there may be some other elements in the mix in the real use case that can help.","07/Dec/12 11:00 AM;garytully;From this bit of log, it seems that the references message is consumed diring a browse, and there are loads of messages pending.
It may be that a browse takes so long that an ack can pop in and a cleanup can occur (in some way). Need to work this angle.

{code}2012-07-24 07:11:19,476 [n.ch] Scheduler] ERROR Queue                          - Problem retrieving message for browse
java.util.NoSuchElementException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg104.cern.ch/tmp_storage/db-1093.log
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:214)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:508)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:492)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:305)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1053)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: java.io.IOException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg104.cern.ch/tmp_storage/db-1093.log
	at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
	at org.apache.kahadb.journal.Journal.read(Journal.java:597)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:394)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:212)
	... 10 more
2012-07-24 07:11:19,478 [n.ch] Scheduler] ERROR Journal                        - Looking for key 1093 but not found in fileMap: {1100=db-1100.log number = 1100 , 
length =33569520, 1101=db-1101.log number = 1101 , length = 33665248, 1102=db-1102.log number = 1102 , 
length = 33555413, 1103=db-1103.log number = 1103 , length = 33555560, 1098=db-1098.log number = 1098 , 
length = 33740318, 1099=db-1099....2639=db-2639.log number = 2639 , length = 33554686}
2012-07-24 07:11:19,479 [n.ch] Scheduler] ERROR Queue                          - Problem retrieving message for browse
java.util.NoSuchElementException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg104.cern.ch/tmp_storage/db-1093.log
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:214)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:508)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:492)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:305)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1053)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: java.io.IOException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg104.cern.ch/tmp_storage/db-1093.log
	at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
	at org.apache.kahadb.journal.Journal.read(Journal.java:597)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:394)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:212)
	... 10 more
{code} from http://fusesource.com/issues/secure/attachment/24099/activemq.log","07/Dec/12 1:22 PM;garytully;@Susan
do we know why cern use the filependingmessage cursor for queues?
One thought, and a possible workaround is the use the default store cursor for queues. 
Can we find out if this is a viable option or why it is not in use?
It may be a sensible test to validate at this stage.","12/Dec/12 12:05 PM;garytully;I have been able to reproduce some variant of what are in the cern stack trace, with an additional NPE. Reproducing is still random but seems to always happen with my current test case. So I now have something concrete to work with.","13/Dec/12 4:51 PM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-4221 - found dangling reference to free page, can lead to npe if page is not reused, but can lead to incorrect results (corruption) if page is reused before it is accessed in error. One example could be a journal file deletion in error resulting in ""Could not locate data file""","13/Dec/12 6:32 PM;garytully;I have kicked off a 5.5.1 snapshot with the fix.
http://ci.fusesource.com/hudson/view/%20Deploys/job/activemq-5.5.1-fuse-deploy/80/","13/Dec/12 6:40 PM;garytully;On the use of filependingmessagecursor. the default store cursor, caches persistent messages up to the memory limit and uses a filependingmessage cursor for non persistent messages so I think that is a better match. 
It avoids a writing persistent messages twice, initially to the journal and again to the temp store, when the pending cursor is flushed to disk when the memory limits are hit.

",14/Dec/12 11:25 AM;garytully;snapshot: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20121213.182643-70-bin.tar.gz,,,,,,,,,,,,
Ensure shipped schema includes virtualSelectorCacheBrokerPlugin,MB-1249,12516652,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,socallag,socallag,19/Nov/12 11:53 AM,19/Nov/12 2:39 PM,29/Nov/16 4:14 PM,19/Nov/12 2:39 PM,,,,,,,,,,,,,,,,,,,,,5.7.0-fuse-xx-xx,,,,,,,0,,"Tested against unofficial activemq-all-5.5.1.fuse-70-097, code for the plugin is being shipped, but schema doesn't reflect plugin exists.


Caused by: org.xml.sax.SAXParseException: cvc-complex-type.2.4.a: Invalid content was found starting with element 'virtualSelectorCacheBrokerPlugin'. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjnz:,180154,,,,,,,,19/Nov/12 2:39 PM;socallag;Fixed in 5.7.0.fuse-71-030,,,,,,,,,,,,,,,,,,,
Questionable processing of interruptions in TcpTransport::doStop,MB-1248,12516651,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,16/Nov/12 4:05 PM,30/Nov/12 1:24 PM,29/Nov/16 4:14 PM,30/Nov/12 1:24 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,,,,0,,"Tracker to ensure merge of AMQ-2526 is merged to 5.5.1 branch.

https://fisheye6.atlassian.com/changelog/activemq?cs=1188925",5.5.1.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2526,,,,0.0,1.0,,1|hzkjo7:,180155,,,,,,,,"30/Nov/12 1:24 PM;garytully;merge done.
To ssh://git@forge.fusesource.com/activemq.git
   9dfe02b..2bd219f  5.5.1-fuse -> 5.5.1-fuse",,,,,,,,,,,,,,,,,,,
InactivityMonitor thread does not catch ThreadPoolExecutor exceptions.,MB-1247,12516650,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,13/Nov/12 1:49 PM,30/Nov/12 3:12 PM,29/Nov/16 4:14 PM,30/Nov/12 3:12 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"The InactivityMonitor check threads can terminate with the following exceptions:

{code}
2012-09-28 13:42:25.234 SEVR  Inact: Thread[InactivityMonitor ReadCheck] has been terminated due to an uncaught exception. 
	At: org.fusesource.support.UncaughtErrorHandler:uncaughtException:49
	Error: Thread[InactivityMonitor ReadCheck] has been terminated due to an uncaught exception.
	Stack trace: java.util.concurrent.RejectedExecutionException: Task org.apache.activemq.transport.AbstractInactivityMonitor$4@157723f rejected from java.util.concurrent.ThreadPoolExecutor@dacbd[Terminated, pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 3608]
	at java.util.concurrent.ThreadPoolExecutor$AbortPolicy.rejectedExecution(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.reject(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.execute(Unknown Source)
	at org.apache.activemq.transport.AbstractInactivityMonitor.readCheck(AbstractInactivityMonitor.java:185)
	at org.apache.activemq.transport.AbstractInactivityMonitor$1.run(AbstractInactivityMonitor.java:94)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Unknown Source)
	at java.util.TimerThread.run(Unknown Source)
{code}

Where UncaughtErrorHandler is a non-activemq error handler and installed via Thread.setDefaultUncaughtExceptionHandler() to catch uncaught exceptions.

It looks like we might have an ordering problem when shutting down threads as from stack trace above, the reason that uncaught exception RejectExecutionException was thrown was due to fact the ThreadPoolExecutor had already been shutdown when InactivityMonitor ReadCheck thread was executing a task. ",Fuse Message Broker 5.5.1-fuse-05-01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4156,,,,0.0,0.0,,1|hzkjof:,180156,,,,,,,,,,,,,,,,,,,,,,,,,,,
Browsing a queue is not returning the actual number messages on the queue,MB-1246,12516649,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,jsherman,jsherman,02/Nov/12 8:54 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,25/Dec/12 3:45 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,When browsing a queue using the JMS API the number of messages returned by a browse is not the same as the number of messages that are actually on the queue.  This can been seen using JMX as well with the Queue Size attribute and the browse method.  ,,,,,,,,,,,,,,,03/Nov/12 12:52 PM;jsherman;BrowseSize.png;https://issues.jboss.org/secure/attachment/12369043/BrowseSize.png,03/Nov/12 12:52 PM;jsherman;QueueSize.png;https://issues.jboss.org/secure/attachment/12369042/QueueSize.png,02/Nov/12 8:59 PM;jsherman;broker-test.zip;https://issues.jboss.org/secure/attachment/12369040/broker-test.zip,05/Nov/12 6:11 PM;jsherman;camel-activemq.zip;https://issues.jboss.org/secure/attachment/12369044/camel-activemq.zip,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4181,,,,4.0,6.0,,1|hzkjsn:,180175,,,,,,,,02/Nov/12 8:59 PM;jsherman;Test case attached which demonstrates the issue.,"03/Nov/12 12:52 PM;jsherman;Attached screenshot of VisualVM showing the issue where the Queue Size reports 373 messages and the Browse and BrowseMessages  only reports 304.  I went back to my original test case and tried this on the 5.5.1-fuse-08-15 and it does not have the same behavior, it will return 400 messages on the browse as expected as the default value for maxBrowsePageSize is 400.","20/Nov/12 2:15 PM;dbosanac;JMS browsing problem should be fixed with https://issues.apache.org/jira/browse/AMQ-4181

I'll tackle JMX part next.","04/Dec/12 12:25 PM;dbosanac;Hi Jason,

I just tested all this a little bit more. The problem with this test case is that the memory limit of the queue is hit (you can see cursor memory at 70%) and that is why no further messages are being paged into the memory. If you raise the memory limit, you'll get 400 messages browsed using jmx.

can you please test it further and see if it works for you?

Thanks,
Dejan",25/Dec/12 3:45 PM;dbosanac;Changes are now merged to 5.5.1-fuse branch,25/Feb/13 3:00 AM;jsherman;Verified JMS browsing issue has been resolved in the 5.5.1-fuse-10-16 build.,,,,,,,,,,,,,,
Use Spring 3.0.6.RELEASE - CVE-2011-2894 CVE-2012-2379,MB-1245,12516648,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,garytully,garytully,31/Oct/12 9:41 PM,03/Jan/13 12:04 PM,29/Nov/16 4:14 PM,31/Oct/12 9:45 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,,,,broker,,,0,,3.0.6.RELEASE of Spring - resolves two vulnerabilities: CVE-2011-2894 CVE-2012-2379,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjq7:,180164,,,,,,,,31/Oct/12 9:45 PM;garytully;resolved in 388851a2ec2d1d6595d99ed90bc04b7614e202d2,,,,,,,,,,,,,,,,,,,
Merge AMQ-2971 to the Fuse 5.5.x branch,MB-1244,12516647,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,29/Oct/12 3:32 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,30/Nov/12 1:12 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,"Opening this Jira to track merging the fix for [AMQ-2971|https://issues.apache.org/jira/browse/AMQ-2971] to the Fuse 5.5.x branch.

Invoking resetStatistics on a queue containing messages causes the Queue Size attribute to read 0 even though messages are on the queue.

",5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2971,,,,0.0,2.0,,1|hzkjsv:,180176,,,,,,,,"30/Nov/12 1:12 PM;garytully;fix merged to 5.5.1-fuse

To ssh://git@forge.fusesource.com/activemq.git
   1337062..9dfe02b  5.5.1-fuse -> 5.5.1-fuse",25/Feb/13 3:04 AM;jsherman;Verified issue is resolved in 5.5.1-fuse-10-16 build,,,,,,,,,,,,,,,,,,
kahaDB Commit Failed with NPE using XA Transactions,MB-1242,12516645,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,19/Oct/12 8:12 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,19/Oct/12 10:54 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,,,,broker,,,0,,"We're seeing problems when using transactions:

{code}
2012-10-17 13:49:08,591 | WARN  | Store COMMIT FAILED:  | org.apache.activemq.transaction.XATransaction | ActiveMQ Transport: tcp:///158.117.223.186:57496@61616
java.lang.ClassCastException: java.lang.Long cannot be cast to java.lang.String
        at java.lang.String.compareTo(String.java:92)
        at java.util.Arrays.binarySearch0(Arrays.java:2001)
        at java.util.Arrays.binarySearch(Arrays.java:1943)
        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:371)
        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)        at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)
        at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)        at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)        at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
        at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:422)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:291)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
        at org.apache.activemq.transport.TransportLogger.onCommand(TransportLogger.java:114)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:215)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:197)
        at java.lang.Thread.run(Thread.java:619)
{code}

and 

{code}
| ActiveMQ Transport: tcp:///158.117.223.186:57484@61616
2012-10-17 13:49:08,488 | DEBUG | XA Transaction commit onePhase:false, xid: XID:[1463898948,globalId=0013a6fffffffd7ffffffdb3800011dffffffb85bffffffc0ffffffc0ffffffcaffffff8c1effffffbf40ffffff96ffffffa0ffffffd772782fffffffa7577e7b33ffffff9d62ffffffcb,branchId=0013a6fffffffd7ffffffdb3800011dffffffb85bffffffc0ffffffc0ffffffcaffffff8c1effffffbf40ffffff96ffffffa0ffffffd772782fffffffa7577e7b33ffffff9d62ffffffcb000100000000000002] | org.apache.activemq.transaction.XATransaction | ActiveMQ Transport: tcp:///158.117.223.186:57484@61616
2012-10-17 13:49:08,492 | WARN  | Store COMMIT FAILED:  | org.apache.activemq.transaction.XATransaction | ActiveMQ Transport: tcp:///158.117.223.186:57484@61616
java.lang.NullPointerException
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:676)
        at org.apache.kahadb.index.BTreeNode.put(BTreeNode.java:369)
        at org.apache.kahadb.index.BTreeIndex.put(BTreeIndex.java:189)
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.put(MessageDatabase.java:2592)
        at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1168)
        at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2082)
        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1095)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:768)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1092)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:961)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:943)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:855)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
        at org.apache.activemq.transaction.XATransaction.storeCommit(XATransaction.java:85)
        at org.apache.activemq.transaction.XATransaction.commit(XATransaction.java:75)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:263)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
        at org.apache.activemq.broker.BrokerFilter.commitTransaction(BrokerFilter.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionTwoPhase(TransportConnection.java:422)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:102)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:291)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
        at org.apache.activemq.transport.TransportLogger.onCommand(TransportLogger.java:114)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:215)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:197)
        at java.lang.Thread.run(Thread.java:619)

{code}
",,,,,,,,,,,,,,,19/Oct/12 8:13 PM;garytully;DurableSubsOfflineSelectorIndexUseXATest.java;https://issues.jboss.org/secure/attachment/12369041/DurableSubsOfflineSelectorIndexUseXATest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4118,,,,1.0,3.0,,1|hzkjlj:,180143,,,,,,,,19/Oct/12 8:13 PM;garytully;test case that is a good start on getting some thing reproducible for this issue.,19/Oct/12 10:24 PM;garytully;linking to issue at apache https://issues.apache.org/jira/browse/AMQ-4118,"19/Oct/12 10:54 PM;garytully;fix on 5.5.1 branch, SNAPSHOT - http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20121019.224452-66-bin.tar.gz",,,,,,,,,,,,,,,,,
Missing some binary files in the release kit,MB-1241,12516644,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,18/Oct/12 6:01 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,19/Oct/12 11:44 AM,,,,,,,,,,,,,,,,,,,,,5.7.0-fuse-xx-xx,,,,,,,0,,Tracker to make sure https://issues.apache.org/jira/browse/AMQ-4098 gets merged to Fuse 5.7 branch. We seem to have the same problem in the current 5.7 snapshot.,5.7-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4098,,,,0.0,1.0,,1|hzkjjr:,180135,,,,,,,,"19/Oct/12 11:44 AM;dbosanac;A new snapshot that contains a necessary fix to include wrapper.jar can be found at

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.7-fuse-SNAPSHOT/apache-activemq-5.7-fuse-20121019.112026-16-bin.tar.gz",,,,,,,,,,,,,,,,,,,
WebSocket upload of large message fails on iOS 5.1.1,MB-1240,12516643,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,18/Oct/12 5:41 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,21/Oct/12 2:40 PM,,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"When uploading a large message (~14K) from iOS 5.1.1 the AMQ Server throws the following exception.
Exception from ActiveMQ log:

{code}
2012-10-09 15:02:33,333 | WARN | handle failed | org.eclipse.jetty.io.nio | qtp552451240-52
java.lang.IllegalStateException: FULL
at org.eclipse.jetty.websocket.WebSocketParserD00.parseNext(WebSocketParserD00.java:110)
at org.eclipse.jetty.websocket.WebSocketConnectionD00.handle(WebSocketConnectionD00.java:140)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:627)
at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:51)
at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:608)
at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:543)
at java.lang.Thread.run(Thread.java:680)
{code}

To reproduce we have modified the chat.js file from the websocket demo that comes with AMQ install to upload the large message.",Fuse MB 5.7-SNAPSHOT,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkjkf:,180138,,,,,,,,"18/Oct/12 5:52 PM;davestanley;To reproduce:

1) Install xcode using app store.
2) Install 5.1 simulator
3) Add websocket transport to activemq.xml
4) Replace chat.js below <broker>/webapps/demo/websocket
5) In iOS 5.1 simulator safari hit websocket demo. Sending a message will show above stack in broker.","21/Oct/12 2:40 PM;davestanley;Closing for now.

{code}
ws://localhost:61623?websocket.bufferSize=10240
{code}

Looks to do the job. Thanks Dejan

Regards
/Dave",,,,,,,,,,,,,,,,,,
NIO + SSL: Client certificates are null,MB-1239,12516642,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,16/Oct/12 10:43 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,22/Oct/12 12:53 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,5.7.0-fuse-xx-xx,,,,,,,0,,See AMQ-2996 for details,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3996,,,,0.0,0.0,,1|hzkjkn:,180139,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport of (AMQ-4095) Problem with STOMP NIO + SSL,MB-1238,12516641,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,16/Oct/12 10:40 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,16/Oct/12 1:37 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,5.7.0-fuse-xx-xx,,,,,,0,,"Fixed on Apache 5.8, needed on next FuseSource release",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4095,,,,0.0,0.0,,1|hzkjj3:,180132,,,,,,,,,,,,,,,,,,,,,,,,,,,
Cannot use a virtual topic with a composite destination.,MB-1235,12516637,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,10/Oct/12 11:32 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,19/Oct/12 3:23 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"Suppose a composite destination setup that forwards msgs to a virtual topic:

{code:title=activemq.xml}
<destinationInterceptors>
  <virtualDestinationInterceptor>
    <virtualDestinations>
      <compositeTopic name=""CompTopic"" forwardOnly=""false"">
        <forwardTo>
          <topic physicalName=""VirtualTopic.FOO"" />
        </forwardTo> 
      </compositeTopic>
    </virtualDestinations>
  </virtualDestinationInterceptor>
</destinationInterceptors>
{code}

When a msg is sent to the composite topic ""CompTopic"" it is also forwarded to the VirtualTopic ""VirtualTopic.FOO"". However from there it is not passed to any consumers of this virtual topic, e.g. a consumer on queue Consumer.A.VirtualTopic.FOO. 

So currently it is not possible to use a virtual topic within a composite destination. 



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkjk7:,180137,,,,,,,,"12/Oct/12 12:36 PM;garytully;it should be a case of adding in the default mapping to the explicit config, as this overrides the default in the broker:
{code}<destinationInterceptors>
  <virtualDestinationInterceptor>
    <virtualDestinations>
      <compositeTopic name=""CompTopic"" forwardOnly=""false"">
        <forwardTo>
          <topic physicalName=""VirtualTopic.FOO"" />
        </forwardTo> 
      </compositeTopic>
      <!-- ensure the default values are present -->
      <virtualTopic name=""VirtualTopic.>"" />
    </virtualDestinations>
  </virtualDestinationInterceptor>
</destinationInterceptors>{code}","12/Oct/12 2:23 PM;sjavurek;Hey Gary, 

Jumping in the middle here as the guys are travelling as you probably are too! I added this to to my broker config last night and the test looks good:

1.  start consumer on my virtual topic:

ant consumer -Dsubject=VirtualTopic.TESTFOO -Durl=tcp://0.0.0.0:58405 -Dtopic=true -Dmax=10 

2.  Start producer to send to the composite topic:

ant producer -Durl=tcp://0.0.0.0:58405 -Ddurable=true -Dtopic=true -Dmax=1 -Dsubject=TESTCompTopic

One message did indeed come through to my consumer.  I'll see if we can get this tested at the customer site. 

Susan
",,,,,,,,,,,,,,,,,,
Killing ws:// connection (after it has timed out websocket.maxIdleTime=1000)  from browser results in MBean Connection-> ws_sockets not being cleaned up,MB-1234,12516638,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,05/Oct/12 3:13 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,09/Oct/12 12:16 PM,,,,,,,,,,,,,,,,,,,,,5.7.0-fuse-xx-xx,,,,,,,0,,"Tested on 5.7-14 snapshot
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4100,,,,0.0,3.0,,1|hzkjiv:,180131,,,,,,,,"05/Oct/12 3:18 PM;socallag;Using the standalone WSTransportTest.

Added a sleep in after the connection is made:

public void doTestWebSockets(WebDriver driver) throws Exception {

        driver.get(getTestURI());
        
        Thread.sleep(3000);
Broker config:

<transportConnectors>
<!-- DOS protection, limit concurrent connections to 1000 and frame size to 100MB -->
<transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616?maximumConnections=1000&wireformat.maxFrameSize=104857600""/>
<transportConnector name=""wssocket"" uri=""ws://0.0.0.0:61623?websocket.maxIdleTime=1000""/>
<transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61612?transport.closeAsync=false""/>
</transportConnectors>

If we let the test run through we do not see any list of Connection-> websocket MBeans build up.

However if we kill the launched browser or Ctrl-C the test just after the

WARN | Transport Connection to: StompSocket_1044266115 failed: java.io.IOException: closedOut 1000:Idle for 1248ms > 1000ms
is thrown the MBean is not cleaned up.

This would seem to indicate the manner in which the connection is shut differs, in the test the teardown method also calls:

private void stompDisconnect() throws IOException {
        if (stompConnection != null) {
            stompConnection.close();
            stompConnection = null;
        }
    }

So it seems an abrupt shutdown of the browser leaves the connection bean about.","09/Oct/12 12:16 PM;dbosanac;This should be fixed now with [https://issues.apache.org/jira/browse/AMQ-4100]

The snapshot containing the fix available at:

https://repository.apache.org/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.8-SNAPSHOT/apache-activemq-5.8-20121009.114836-8-bin.tar.gz","15/Oct/12 12:31 PM;dbosanac;Here's a 5.7-fuse-SNAPSHOT that contains all related fixes

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.7-fuse-SNAPSHOT/apache-activemq-5.7-fuse-20121015.120912-15-bin.tar.gz",,,,,,,,,,,,,,,,,
maxIdleTime not honored on websocket connections,MB-1232,12516635,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,03/Oct/12 12:30 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,04/Oct/12 12:24 AM,,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"We are having trouble setting the maxIdleTime on a websocket connection. 

Have tried using combinations of transport.maxIdleTime and websocket.maxIdleTime and while these are accepted by the transport, they don't seem to kick in.

 ",5.7-SNAPSHOT,,,,,,,,,,,,,,03/Oct/12 12:34 AM;davestanley;WSTransportTest.java;https://issues.jboss.org/secure/attachment/12369036/WSTransportTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkjif:,180129,,,,,,,,03/Oct/12 12:34 AM;davestanley;Attaching tweaked wstransporttest. Just changed uri and added a sleep after a connection was established. Would expect connection to timeout before test gets a chance to send any messages but don't see any timeout kick in.,"03/Oct/12 9:12 AM;dbosanac;Hi Dave,

I just played with it and websocket.maxIdleTime works for me. So when using this url on the WSTransportTest on trunk

ws://127.0.0.1:61623?websocket.maxIdleTime=1000

and add a 5 seconds sleep after the message has been sent. I get the following exception in the log

2012-10-03 11:01:55,644 [calhost] Task-1] WARN  .TransportConnection.Transport - Transport Connection to: StompSocket_1679426381 failed: java.io.IOException: closedOut 1000:Idle for 1577ms > 1000ms

and the test fails.

Please let me know if there's anything else we can do about it.","04/Oct/12 12:24 AM;davestanley;Hi Dejan,
I tried again with a clean 5.7-SNAPSHOT and it works. Not sure why it failed in my last test. We can close it for now.

Regards
/Dave
",,,,,,,,,,,,,,,,,
db.data file exhibiting abnormal growth,MB-1231,12516634,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,jsherman,jsherman,02/Oct/12 9:33 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,09/Nov/12 4:34 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"The db.data file it exhibiting abnormal growth rates.  This appears to occur after PFC has been triggered and there are multiple durable subscribers.

In the test case I have I was able to see the db.data grow to 897 MB and this was only limited by the fact that the PFC was triggered by the storeUsage limit which was set to 1 GB.",5.5.1-fuse-snapshot,,,,,,,,,,,,,,03/Oct/12 3:39 PM;jsherman;activemq.xml;https://issues.jboss.org/secure/attachment/12369038/activemq.xml,03/Oct/12 2:22 PM;jsherman;durablesub-pfc-test.zip;https://issues.jboss.org/secure/attachment/12369037/durablesub-pfc-test.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4094,,,,2.0,1.0,,1|hzkjnb:,180151,,,,,,,,05/Oct/12 3:11 PM;garytully;opened issue at apache to track and fix - https://issues.apache.org/jira/browse/AMQ-4094,,,,,,,,,,,,,,,,,,,
Connection setClientID doesn't catch and convert all exceptions to CMSException,MB-1230,12516633,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,jsherman,jsherman,02/Oct/12 3:35 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,02/Oct/12 3:38 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"When using the setClientID method to configure a client identifier for Connections that create durable consumers the method shuold be ensuring that only CMSException types are thrown, but it misses that and can lead to uncaught exceptions.",AMQCPP 3.4.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQCPP-426,,,,0.0,2.0,,1|hzkjhr:,180126,,,,,,,,02/Oct/12 3:36 PM;jsherman;This issue has been resolved by Tim at Apache. Please see [AMQCPP-426|https://issues.apache.org/jira/browse/AMQCPP-426],02/Oct/12 3:38 PM;jsherman;This issue has been resolved and applied to 3.4.x and 3.5.x branches.,,,,,,,,,,,,,,,,,,
Unable to configure memorylimit on temporary topics,MB-1229,12516632,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,02/Oct/12 3:29 AM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,03/Oct/12 12:29 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,,,,broker,,,0,,"Hi, 

I have a customer who uses temporary topics fo replay purposes and may have a flux off messages that need to be throttled. We are unable to set the memoryLimit on the policy for tempTopics.  

For topics, the following works:

{code}
   <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""2mb"">
                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
                </policyEntry>
{code}

After starting a consumer, I can see the memoryLimit in jconsole is indeed 2097152. 

When I use a tempTopic, the following settings seem to have no affect:

{code}
          <policyEntry tempTopic=""true""  cursorMemoryHighWaterMark=""100""
                        producerFlowControl=""false"" memoryLimit=""2MB"">
                  <pendingSubscriberPolicy>
                    <vmCursor />
                  </pendingSubscriberPolicy>
               </policyEntry>
{code}

Tried with fileCursor as well. In this case, the memoryLimit is always that specified in the systemUsage:

{code}
     <memoryUsage>
                    <memoryUsage limit=""10MB""/>
                </memoryUsage>
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4091,,,,0.0,3.0,,1|hzkjhz:,180127,,,,,,,,02/Oct/12 9:02 PM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-4091,03/Oct/12 12:28 PM;garytully;fix merged to 5.5.1-fuse branch,03/Oct/12 12:29 PM;garytully;snapshot will be available shortly - build 70 - http://ci.fusesource.com/hudson/view/%20Deploys/job/activemq-5.5.1-fuse-deploy/,,,,,,,,,,,,,,,,,
Cannot shut down broker under certain conditions with schedule delivery and producer flow control,MB-1227,12516630,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,joe.luo,joe.luo,25/Sep/12 10:14 AM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"When producer flow control is enabled and the the job scheduler attempts delivery, the job scheduler blocks while attempting delivery. This blocking holds the lock on the job scheduler and stops all other job scheduler activity. The holding of the lock on the job scheduler also blocks the delivery of additional scheduled messages and can impact the shutdown of the broker.

org.apache.activemq.broker.scheduler.JobSchedulerImpl.schedule(String, ByteSequence, String, long, long, int) waits for the lock while the job scheduler is blocked. Any transport connections attempting to call this method get blocked and are also unable to shutdown. Connections do log ""2012-09-24 12:04:23,661 [main ] - INFO TransportConnection - The connection to 'vm://localhost#0' is taking a long time to shutdown."" when attempting shutdown with the job scheduler blocked and a client attempting to schedule a message, but do not log anything when this situation occurs under normal broker operation. The producer simply stops producing messages.

The shutdown is blocked by org.apache.activemq.broker.TransportConnection.serviceLock as it is owned by the blocked thread trying to schedule a new message.

An unit test that reproduces the issue is attached on https://issues.apache.org/jira/browse/AMQ-4073.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4073,,,,0.0,0.0,,1|hzkjjz:,180136,,,,,,,,,,,,,,,,,,,,,,,,,,,
Infinite TemqQueue advisory messages,MB-1226,12516629,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,25/Sep/12 10:05 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,25/Oct/12 12:04 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,,,,,,,0,,"For more detail, please take a look at: https://issues.apache.org/jira/browse/AMQ-3851",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3851,,,,0.0,1.0,,1|hzkjkv:,180140,,,,,,,,25/Oct/12 12:04 PM;garytully;5.5.1 snapshot with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20121025.110409-67-bin.tar.gz,,,,,,,,,,,,,,,,,,,
ExpiredMessages > Prefetch Queue results in messages no longer being dequeued.,MB-1224,12516627,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,24/Sep/12 12:41 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,26/Sep/12 8:13 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,5.6.1-fuse-xx-xx,5.7.0-fuse-xx-xx,,,,,0,,"See test attached. Tested against apache-activemq-5.5.1.fuse-70-084 and 5.7 snapshot.

What it does is to send messages with a mix of small and large TTL. 
Some of the messages expire, and some do not. 
The ones that do not expire cause the deliveredCounter to reset, but the dispatch queue is not reset. 
After enough messages, messages are no longer consumed.
",,,,,,,,,,,,,,,24/Sep/12 12:42 PM;socallag;App10.java;https://issues.jboss.org/secure/attachment/12369028/App10.java,26/Sep/12 3:42 PM;tabish121;MB1224Test.java;https://issues.jboss.org/secure/attachment/12369035/MB1224Test.java,26/Sep/12 2:53 PM;tabish121;MB1224Test.java;https://issues.jboss.org/secure/attachment/12369034/MB1224Test.java,26/Sep/12 2:29 PM;tabish121;MB1224Test.java;https://issues.jboss.org/secure/attachment/12369033/MB1224Test.java,24/Sep/12 12:42 PM;socallag;Screen Shot 2012-09-24 at 11.54.42.png;https://issues.jboss.org/secure/attachment/12369027/Screen+Shot+2012-09-24+at+11.54.42.png,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4083,,,,5.0,1.0,,1|hzkjqv:,180167,,,,,,,,26/Sep/12 8:13 PM;tabish121;Fix applied ,,,,,,,,,,,,,,,,,,,
Setting queue policy queuePrefetch=0 in broker configuration causes messages to stay in pending state in broker - the messages aren't consumed,MB-1221,12516624,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,pfox,pfox,19/Sep/12 9:14 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,17/Dec/12 2:07 PM,5.5.1-fuse-08-15,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Setting the queuePrefetch=""0"" using the policy entries config cause the messages to remain on the broker and not be consumed

To Replicate:

Add the following config to activemq config

{code}
<destinationPolicy>
            <policyMap>
                <policyEntries>
                    <policyEntry queue="">"" producerFlowControl=""false"" queuePrefetch=""0"" advisoryWhenFull=""true"" advisoryForDiscardingMessages=""true"">
                        <deadLetterStrategy>
                            <individualDeadLetterStrategy queuePrefix=""DLQ."" />
                        </deadLetterStrategy>
                    </policyEntry>
                </policyEntries>
            </policyMap>
        </destinationPolicy>
{code} 

run the example producer in .../apache-activemq-5.5.1-fuse-08-15/example

{code}
  ant producer -Dsubject=test.q2
{code}

Run the sample consumer in .../apache-activemq-5.5.1-fuse-08-15/example

{code}
  ant consumer -Dsubject=test.q2
{code}

The consumer does not consume any of the messages produced.
Note: changing queuePrefetch=""1"" all message appear to be consumed.


",apache-activemq-5.5.1-fuse-08-15 and apache-activemq-5.6.0,,,,,,,,,,,,,,19/Sep/12 9:58 PM;pfox;activemq-core-5.x-apache_trunk.patch;https://issues.jboss.org/secure/attachment/12369026/activemq-core-5.x-apache_trunk.patch,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4224,,,,1.0,4.0,,1|hzkjov:,180158,,,,,,,,"19/Sep/12 10:46 AM;garytully;That is by design. The consumer uses a message listener unless the maxiumMessages or receiveTimeOut is > 0, but both default to 0.

When either is specified, the client uses a receive(..) call so that it polls for messages. With prefetch=0, the consumer must poll the broker to get a message. it is a pull consumer.

so you will poll using either of:
{code} ant consumer -Dsubject=test.q2 -Dreceive-time-out=2000{code}
or {code}ant consumer -Dsubject=test.q2 -Dmax=10{code}

In the code for the example consumer, see line 149 of http://svn.apache.org/viewvc/activemq/trunk/assembly/src/release/example/src/ConsumerTool.java?view=markup","19/Sep/12 10:08 PM;garytully;Ok, there is something unusual. A prefetch 0 requires a client to poll or change behaviour. But in this case the client is unaware of the broker value. Please reopen.",14/Dec/12 4:07 PM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-4224 where this issue will be resolved,17/Dec/12 2:07 PM;garytully;fix will be in 5.8 - ent 7.2,,,,,,,,,,,,,,,,
"Web sockets demo fails with apache-activemq-5.6-fuse-20120829.002856-46, when using localhost in connect uri.",MB-1220,12516623,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,18/Sep/12 11:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,26/Sep/12 6:42 AM,,,,,,,,,,,,,,,,,,,,,5.7.0-fuse-xx-xx,,,,,,,0,,"Running into an issue with websockets and latest 5.6 snapshot. Using localhost as the connect uri doesn't seem to work.


Steps to reproduce:

1) Unzipped the 5.6-46 SNAPSHOT. 
2) Added web sockets transport. 

{code}
<transportConnector name=""websockets"" uri=""ws://0.0.0.0:61614""/>
{code}

3) Start broker in console mode

4) Access http://localhost:8161/demo/websocket

5) Hit connect and received the following the browser window. The AMQ console windows does not show any error.

Opening Web Socket...
Whoops! Lost connection to ws://localhost:61614/stomp

If the connection uri is changed to ws://<hostname>:61614/stomp the connection is successful.

Regards
/Dave

","Fuse MB 5.6 snapshot/ build 46. Mac OS X 10.7.4
Chrome : Version 21.0.1180.89
Safari : Version 6.0 (7536.25)
Java version ""1.6.0_35""
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3918,,,,0.0,2.0,,1|hzkjhj:,180125,,,,,,,,19/Sep/12 10:39 AM;dbosanac;I reproduced it while playing with Sean's test. I think it's broker related as it works fine with 5.6.0. I'll take a look at it now.,"26/Sep/12 6:42 AM;dbosanac;This is now fixed as an additional commit for https://issues.apache.org/jira/browse/AMQ-3918

The latest 5.7-SNAPSHOT

http://repo.fusesource.com/nexus/content/repositories/public-snapshots/org/apache/activemq/apache-activemq/5.7-fuse-SNAPSHOT/

contains this fix.",,,,,,,,,,,,,,,,,,
Durable subscription not getting unregistered on networked broker,MB-1218,12516621,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,mielket,mielket,03/Sep/12 10:05 AM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"In a network of two brokers, a durable subscription is correctly propagated across to the remote broker. However when the consumer unsubscribes from the durable subscription again, it is only removed on the local broker but not on the remote broker. The remote broker keeps its durable subscription alive.

As a consequence messages sent to the topic destination on the remote broker for which the durable subscriptions existed, are passed on to the local broker, although there is no active subscription on the local broker. The local broker will discard these msgs but unnecessary traffic has already occurred on the network bridge.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4000,,,,0.0,2.0,,1|hzkjxz:,180199,,,,,,,,15/Feb/13 5:45 AM;ceposta;Fixed at apache. https://issues.apache.org/jira/browse/AMQ-4000,13/May/13 12:39 PM;dbosanac;I just noticed that AMQ-4000 is reopened at apache. So I'll try to provide a new fix.,,,,,,,,,,,,,,,,,,
Unable to use webconsole to view queues when broker is configured to use authorization tables,MB-1217,12516620,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,29/Aug/12 9:27 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,31/Aug/12 4:33 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Hi, 

We have a broker configured inside of servicemix 4.4.1-fuse-06-03 to use authorization, ie.:

{code}
 <plugins>
      <!--  use JAAS to authenticate using the login.config file on the classpath to configure JAAS -->
    <simpleAuthenticationPlugin>
        <users>
                <authenticationUser username=""system"" password=""manager""
                        groups=""users,admins""/>
                <authenticationUser username=""user"" password=""password""
                        groups=""users""/>
                <authenticationUser username=""guest"" password=""password"" groups=""guests""/>
        </users>
    </simpleAuthenticationPlugin>

      <!--  lets configure a destination based authorization mechanism -->
      <authorizationPlugin>
        <map>
          <authorizationMap>
            <authorizationEntries>
              <authorizationEntry queue="">"" read=""admins"" write=""admins"" admin=""admins"" />
              <authorizationEntry queue=""TEST.FOO"" read=""users"" write=""users"" admin=""users"" />
              <authorizationEntry queue=""USERS.>"" read=""users"" write=""users"" admin=""users"" />
              <authorizationEntry queue=""GUEST.>"" read=""guests"" write=""guests,users"" admin=""guests,users"" />

              <authorizationEntry topic="">"" read=""admins"" write=""admins"" admin=""admins"" />
              <authorizationEntry topic=""USERS.>"" read=""users"" write=""users"" admin=""users"" />
              <authorizationEntry topic=""GUEST.>"" read=""guests"" write=""guests,users"" admin=""guests,users"" />

              <authorizationEntry topic=""ActiveMQ.Advisory.>"" read=""guests,users"" write=""guests,users"" admin=""guests,users""/>
            </authorizationEntries>

            <!-- let's assign roles to temporary destinations. comment this entry if we don't want any roles assigned to temp destinations  -->
            <tempDestinationAuthorizationEntry>
              <tempDestinationAuthorizationEntry read=""tempDestinationAdmins"" write=""tempDestinationAdmins"" admin=""tempDestinationAdmins""/>
           </tempDestinationAuthorizationEntry>
          </authorizationMap>
        </map>
      </authorizationPlugin>
    </plugins>
{code}

Add the username and password to the Connection factory:

{code}
   <bean id=""activemqConnectionFactory"" class=""org.apache.activemq.ActiveMQConnectionFactory"">

        <property name=""brokerURL"" value=""vm://default?create=false&amp;waitForStart=10000"" />
        <property name=""userName"" value=""user""/>
        <property name=""password"" value=""password""/>
    </bean>
{code}

Afterwards, set up the webconsole: 

karaf@root> features:install war
karaf@root> features:install activemq-web-console
Add the following to system.properties:

{code}
webconsole.type=properties
webconsole.jms.url=tcp://localhost:61616
webconsole.jmx.url=service:jmx:rmi:///jndi/rmi://localhost:1099/karaf-root
webconsole.jmx.user=smx
webconsole.jmx.password=smx
{code}

Send a message to TEST.FOO and then try to browse the message via the webconsole:

http://localhost:8181/activemqweb/queues.jsp

We see the error:
{code}

Problem accessing /activemqweb/browse.jsp. Reason:

    Error creating bean with name 'queueBrowser' defined in ServletContext resource [/WEB-INF/webconsole-query.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.apache.activemq.web.QueueBrowseQuery]: Constructor threw exception; nested exception is javax.jms.JMSException: User name [null] or password is invalid.
Caused by:

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'queueBrowser' defined in ServletContext resource [/WEB-INF/webconsole-query.xml]: Instantiation of bean failed; nested exception is org.springframework.beans.BeanInstantiationException: Could not instantiate bean class [org.apache.activemq.web.QueueBrowseQuery]: Constructor threw exception; nested exception is javax.jms.JMSException: User name [null] or password is invalid.
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:286)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:993)
.....
Caused by:

java.lang.SecurityException: User name [null] or password is invalid.
	at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:80)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:699)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:291)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:215)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:197)
	at java.lang.Thread.run(Thread.java:680)
{code}

This looks quite similar to MB-1050 where we had to spruce up activemq-admin to allow username and password to be entered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkjfz:,180118,,,,,,,,"31/Aug/12 3:25 PM;dbosanac;So, the web console uses two connections to the broker:

- JMX for getting most of the information
- JMS to browse queues

So in order to connect to the secured broker you need to configure user/pass for the JMS connection as well. It can be done by something like

{code}webconsole.jms.user=system
webconsole.jms.password=manager{code}","31/Aug/12 4:33 PM;sjavurek;Hi Dejan, 

That did the trick! I'll make sure we add a KB article for it. 

Susan",,,,,,,,,,,,,,,,,,
activemq-pool - Closing a PooledConnection does not seem to return associated sessions to the SessionPool ,MB-1214,12516617,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,davsclaus,davsclaus,27/Aug/12 11:55 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,27/Aug/12 1:18 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,,,,0,,"See MR-652 for background

At ASF ActiveMQ this ticket has been reported
https://issues.apache.org/jira/browse/AMQ-2643

It has been fixed at ASF in ActiveMQ 5.6.0, in the activemq-pool component.
We need this fix backported to Fuse MQ 5.5.1 branch as it affects our customers. (both the ENT branch and the regular branch)

I have verified that the fix from AMQ-2643 solves the problem reported from MR-642 (see parent ticket for customer report).

Besides this fix AMQ-2643, there is a number of other fixes in activemq-pool on ASF trunk, that has not been backported.
I have put up a list in MR-652 with the ""gap"".

Some of these commits may be candidates to backport as well.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2643,,,,0.0,2.0,,1|hzk57r:,177826,,,,,,,,"27/Aug/12 1:03 PM;garytully;Merged all activemq-pool related fixes as they all have good test cases to validate the fix: 
https://issues.apache.org/jira/browse/AMQ-3457 
https://issues.apache.org/jira/browse/AMQ-3506
https://issues.apache.org/jira/browse/AMQ-2643 (The crux of the problem)
https://issues.apache.org/jira/browse/AMQ-3680
https://issues.apache.org/jira/browse/AMQ-3482 ","27/Aug/12 1:18 PM;garytully;Fix on 5.5.1-fuse branch.
snapshot with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120827.131310-53-bin.tar.gz",,,,,,,,,,,,,,,,,,
Ensure api support to determine if a broker is a master or a slave,MB-1213,12516616,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,dbosanac,davestanley,davestanley,22/Aug/12 4:43 PM,23/Aug/12 12:28 PM,29/Nov/16 4:14 PM,23/Aug/12 11:48 AM,,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,broker,,,0,,"Tracker for ENH-147

Ensure we can expose via an API the ablilty to tell the difference between a slave and a master and know when a slave is promoted
",,,,,,,,,,,ENH-147,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjdj:,180107,,,,,,,,"23/Aug/12 11:48 AM;dbosanac;Just checked ... isSlave() already does this job, so we can put this one to rest",,,,,,,,,,,,,,,,,,,
BlobJDBCAdapter has invalid SQL for addStatements,MB-1212,12516615,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,22/Aug/12 3:32 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,23/Aug/12 10:06 AM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,,,,0,,"The following SQL statement in BlogJDBCAdapter.java should specify the XID column:

{code}
 @Override
    public void setStatements(Statements statements) {

        String addMessageStatement = ""INSERT INTO ""
            + statements.getFullMessageTableName()
            + ""(ID, MSGID_PROD, MSGID_SEQ, CONTAINER, EXPIRATION, PRIORITY, MSG) VALUES (?, ?, ?, ?, ?, ?, empty_blob(), empty_blob())"";
        statements.setAddMessageStatement(addMessageStatement);

        String findMessageByIdStatement = ""SELECT MSG FROM "" +
        	statements.getFullMessageTableName() + "" WHERE ID=? FOR UPDATE"";
        statements.setFindMessageByIdStatement(findMessageByIdStatement);

        super.setStatements(statements);
    }

{code}

In the SQL statement there a 7 columns specified with 8 values.  The XID column is missing from the statement.",5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3872,,,,0.0,1.0,,1|hzkjd3:,180105,,,,,,,,23/Aug/12 10:06 AM;garytully;fix on 5.5.1-fuse branch,,,,,,,,,,,,,,,,,,,
"When durable subscriber is stopped and then reconnects, messages are consumed but the pending queue count seems to stay 1 plus prefetch size or at prefetch size",MB-1211,12516614,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,21/Aug/12 9:52 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,05/Sep/12 10:22 AM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,,,,broker,,,0,,"1. Start a broker with default config
2.  start a consumer:

ant consumer -Ddurable=true -Dtransacted=true -Dtopic=true -Dsubject=myTopic -Dmax=500 -DsleepTime=3000 -DclientId=2 -Dbatch=1 -Durl=""tcp://localhost:61616?jms.prefetchPolicy.all=10""

3.  Send 20 messages and kill -9 the consumer before the messages are all sent

4.  Restart the consumer
5.  Bring up jconsole and you can see the pending queue count never goes below the prefetch limit.  See attached screen shot, pendingMessagesStuck. Note the consumer has received my 30 messages and committed them (batch=1).

6.  Stop the consumer.  Pending Queue Size goes down to 0.   Sent another 30 messages over and let the consumer consume normally. Pending Queue Count behaves normally.




",,,,,,,,,,,,,,,23/Aug/12 8:41 PM;sjavurek;Example2.jpg;https://issues.jboss.org/secure/attachment/12369022/Example2.jpg,21/Aug/12 9:53 PM;sjavurek;PendingMessagesAfterKillMinusNine.jpg;https://issues.jboss.org/secure/attachment/12369020/PendingMessagesAfterKillMinusNine.jpg,25/Aug/12 11:35 PM;sjavurek;TopicConnect.java;https://issues.jboss.org/secure/attachment/12369024/TopicConnect.java,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3998,,,,3.0,6.0,,1|hzkjjj:,180134,,,,,,,,23/Aug/12 7:07 PM;sjavurek;This also seems to occur when doing a kill -9 on the broker. ,"23/Aug/12 8:40 PM;sjavurek;Hi, 

I also see this in a non-transacted consumer. In this case the pending queue stays equal to the prefetch limit, i.e:

ant consumer -Dsubject=TEST2?consumer.prefetchSize=14 -Dtopic=true -Ddurable=true -Dmax=500 -Dsleeime=3000

See screenshot for example 2. 

I can see this behavior simply stopping the consumer, ctrl +c after the producer starts sending. 

",24/Aug/12 10:02 PM;garytully;It is ok to dispatch more than is sent if the consumer connects more than once and has a pre fetch > 0. It just means the message was not acked on the first dispatch.,"25/Aug/12 11:33 PM;sjavurek;Hi Gary, 

I'm had a crack at a test case ....  the results I get here  are:

{code}
2012-08-25 19:26:24,176 [main           ] - INFO  TopicConnect                   - Beginning Pending Queue Size count: 0
2012-08-25 19:26:24,178 [main           ] - INFO  TopicConnect                   - Prefetch Limit: 10
2012-08-25 19:26:24,312 [main           ] - INFO  TopicConnect                   - Killing consumer at 15
2012-08-25 19:26:24,343 [main           ] - INFO  TopicConnect                   - Sent 20 messages in total
2012-08-25 19:26:24,353 [main           ] - INFO  TopicConnect                   - Pending Queue Size count: 30
2012-08-25 19:26:24,354 [main           ] - INFO  TopicConnect                   - Re-connect client and consume messages
2012-08-25 19:26:30,374 [main           ] - INFO  TopicConnect                   - Received: 20
2012-08-25 19:26:30,376 [main           ] - INFO  TopicConnect                   - Pending Queue Size count: 10
2012-08-25 19:26:30,381 [main           ] - INFO  TopicConnect                   - FINAL Pending Queue Size count (after consumer close): 0
{code}


Not sure if this is quite the same with the nice closing of the session vs ctrl-c or kill -9, but count does seem off for some reason.  Anyhow, will be interesting to see how it behaves at your place.  Also, apologies it could be tidied up a bit but hopefully is enough to get us going.  At moment it is directed to an external broker.  When I flipped it back to internal I was getting weird errors so left it to remote. I'm sure it's something simple but it's getting late here today. 

Susan","27/Aug/12 11:49 AM;garytully;@Susan
thanks for the test case. There is a problem with the reporting of the pendingQueueSize, am looking into resolving it.",05/Sep/12 10:22 AM;garytully;fix on 5.5.1-fuse branch,,,,,,,,,,,,,,
Enqueue Counts with jms.prefetchPolicy.all=0,MB-1208,12516611,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,20/Aug/12 4:25 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,27/Aug/12 1:56 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,5.6.1-fuse-xx-xx,,,broker,,,0,,"I started a durable consumer and then started jconsole.  The Enqueue count kept increasing by one even though I was not sending any messages to it.  The consumer was patiently waiting for it's 10 messages. 

The change here was the use of prefetchPolicy.all=0, i.e.  -Durl=""failover:(tcp://localhost:61616)?jms.prefetchPolicy.all=0"".  

I stopped the broker, deleted the data directory and tried again without prefetchPolicy, EnqueueCount did not increase.  Then I restarted consumer with prefetchPolicy. Same behavior. 

The attached screen shot will show the consumer, producer is stopped, broker and jconsole screen where the enqueue count is 154.  Hit refresh it just increases.  I've double checked *nothing* else is running that could be influencing the test. 

Using demos to run the test specifically:

ant consumer -Ddurable=true -Dtopic=true -Dsubject=CountTestTopic -Dmax=10  -Durl=""failover:(tcp://localhost:61616)?jms.prefetchPolicy.all=0""

Also tried without the failover, seems to boil down to the prefetch guy.
",,,,,,,,,,,,,,,20/Aug/12 4:25 PM;sjavurek;screenshot-1.jpg;https://issues.jboss.org/secure/attachment/12369018/screenshot-1.jpg,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3992,,,,1.0,0.0,,1|hzkjfb:,180115,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQConnection temp advisory consumer should respect asyncDispatch flag - can cause deadlock with slow consumers,MB-1207,12516610,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,20/Aug/12 3:21 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,23/Aug/12 1:54 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,,,,0,,"The advisory consumer created by default for temp destinations by an activemq connection, is created sync in error. It should use async dispatch or reflect the corresponding connection flag. The code in error is: org.apache.activemq.AdvisoryConsumer#AdvisoryConsumer
 it needs: {code}info.setDispatchAsync(connection.isDispatchAsync());{code}

As it is now (with this bug), A slow consumer on one connection can block dispatch on a second connection.

A workaround is to disable the use of an advisory consumer on an activemq connection.
Through the broker url {code}tcp://xxx:61616?jms.watchTopicAdvisories=false{code} or setting that attribute on the connection factory or connection.
Advisory consumers are used to allow a connection to keep track of temp dest creation/deletion so that it can know about their existence without a round trip to the broker. It is really an optimization and an issue of jms spec conformance so that the correct exception can be throw to a client. In production it can be safely disabled unless clients depend on the exceptions semantics of temp destination use after deletion.
",,,,,,,,,,,,,,,23/Aug/12 2:53 PM;garytully;FailoverWatchTopicAdvisoriesTest.java;https://issues.jboss.org/secure/attachment/12369021/FailoverWatchTopicAdvisoriesTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3985,,,,1.0,5.0,,1|hzkjzb:,180205,,,,,,,,23/Aug/12 1:54 PM;garytully;snapshot with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120822.160625-50-bin.tar.gz,"23/Aug/12 2:53 PM;garytully;Test case used to explore solution, does not show any problem but may be useful in the future.","12/Nov/12 8:14 PM;pfox;Here is a more detailed explanation of MB-1207:

Explanation:
==========

By default each ActiveMQ connection creates an advisory consumer that listens to ""ActiveMQ.Advisory.TempQueue"" and ""ActiveMQ.Advisory.TempTopic"". As part of adding a consumer to Advisory topic, the broker replays ALL the broker's previous DestinationInfo messages to the appropriate advisory topics. This is to ensure a new advisory consumer is aware of the broker's state. Hence if temporary queues have been created on the broker, these temporary queue DestinationInfo messages will be replayed to the ""ActiveMQ.Advisory.TempQueue"" when a new consumer is added to an advisory topic.

So where is the issue?
---------------------

Without the fix applied, the connection's advisory consumer uses ""dispatchSync"". This means the messages will be dispatched to the consumer using the same thread that sent the message to the topic[1]. This thread retains the lock for ""ActiveMQ.Advisory.TempQueue"" until dispatch to consumer is complete. If the consumer was unresponsive,
that thread will hold the lock on the topic ""ActiveMQ.Advisory.TempQueue"" indefinitely.

The next ActiveMQ connection will try to create the advisory consumer that listens to ""ActiveMQ.Advisory.TempQueue"". In turn this triggers a replay the DestinationInfo messages to ""ActiveMQ.Advisory.TempQueue"" but that will be blocked waiting to the acquire the lock for ""ActiveMQ.Advisory.TempQueue"" .

How is this fixed?
--------------------

With the fix applied, the ActiveMQ connection's advisory consumer uses ""dispatchAsync"" - a different thread used for sending to the topic and dispatching to the consumer. If the consumer is unresponsive the lock for ""ActiveMQ.Advisory.TempQueue"" will be released so other connections can be created.

NOTES: 

1. The fix must be applied to the client side.


2. [1] If the consumer side prefetch is already full (i.e the consumer did not block until after the prefetch was filled), the message will be queued in the broker for dispatch later by a different thread. In this case the unresponsive consumer will not result in the lock for ""ActiveMQ.Advisory.TempQueue"" being retained indefinitely and avoid the locking issue above.

3. Creating a temp destination will force a message send to the temp dest advisory topic, so that can also block if consumers are using sync dispatch. So the problem is essentially the slow consumer problem. but the default sync dispatch created during connection creation makes it a problem for any operation that creates an advisory.",12/Nov/12 8:18 PM;garytully;note: there is a test case that can demonstrate the problem at: https://fisheye6.atlassian.com/viewrep/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/JmsTempDestinationTest.java?r1=643460&r2=1375595,"08/Oct/13 10:57 AM;garytully;disabling advisorySupport at the broker level will also workaround this issue {code}<broker ... advisorySupport=""false"" .. />{code}",,,,,,,,,,,,,,,
 RAR Adapter Does Not Honor Property Overrides,MB-1205,12516608,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,14/Aug/12 8:53 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,09/Nov/12 4:35 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,"Hi, 

We can't seem to get the RAR adapter to honor the prefetch limits.  I've set in 3 ways on several versions including the latest:

1.  On the custom properties of the resource adapter (attached TestCaseA-B.jpg)
2.  On the URI connecting to the actual broker (also attached TestCaseA-B.jpg). Note this configuration causes an error in earlier versions.
3.  Creating a connecting factory and setting it there. (attached TestCaseC.jpg)

The results on jconsole are always the default, 100 (attached results.jpg).

This particular test case is set up as follows:

1.  Install RAR into WAS. If you are using the latest version of our RAR file, then you will need to edit the WAS startup script to include the following java option:


C:\IBM\WebSphere\AppServer\bin\startServer

{code}
%JAVA_EXE% -Dcom.ibm.ws.bootstrap.allowLocalProtectedLoads=true -Djava.endorsed.dirs=""%WAS_ENDORSED_DIRS%"" -Dcmd.properties.file=%TMPJAVAPROPFILE% %WAS_TRACE% %WAS_DEBUG% %CONSOLE_ENCODING% ""%CLIENTSAS%"" ""%CLIENTSSL%"" %USER_INSTALL_PROP% ""-Dwas.install.root=%WAS_HOME%"" com.ibm.ws.bootstrap.WSLauncher com.ibm.ws.management.tools.WsServerLauncher ""%CONFIG_ROOT%"" ""%WAS_CELL%"" ""%WAS_NODE%"" %* %WORKSPACE_ROOT_PROP%
SET RC=%ERRORLEVEL%
{code}

The bit to add is ""-Dcom.ibm.ws.bootstrap.allowLocalProtectedLoads=true ""  Otherwise, you will run into the issue for DEV-3898 regarding SLF4J libraries.

2.  Edit custom properties of the resource adapter:

A.  URL to remote broker
B.  durableTopicPrefetch

3.  Create an activation specification (see attached customspecsettings)

At this point save all the changes, start your remote broker and restart WAS.  You should see the connection established and that the prefetch is still 100. 

After this, I tried the other various components.  Maybe I didn't set the connectionFactory correctly but I never saw my subscriber ID so I'm wondering if we need to be able to set this guy on the specification page?

If you need any additional info on websphere setup, please let me know. 
",,,,,,,,,,,,,,,24/Aug/12 3:06 PM;sjavurek;ConnectionFactoryTopic.jpg;https://issues.jboss.org/secure/attachment/12369023/ConnectionFactoryTopic.jpg,14/Aug/12 9:06 PM;sjavurek;CustomSpecificationSettings.jpg;https://issues.jboss.org/secure/attachment/12369017/CustomSpecificationSettings.jpg,23/Aug/12 3:50 PM;sjavurek;MDBBindingProperties.jpg;https://issues.jboss.org/secure/attachment/12369019/MDBBindingProperties.jpg,14/Aug/12 8:56 PM;sjavurek;Results.jpg;https://issues.jboss.org/secure/attachment/12369016/Results.jpg,14/Aug/12 8:54 PM;sjavurek;TestCaseA-B.jpg;https://issues.jboss.org/secure/attachment/12369014/TestCaseA-B.jpg,14/Aug/12 8:56 PM;sjavurek;TestCaseC.jpg;https://issues.jboss.org/secure/attachment/12369015/TestCaseC.jpg,30/Aug/12 4:14 PM;sjavurek;aug30.jpg;https://issues.jboss.org/secure/attachment/12369025/aug30.jpg,,,,,,,,,,,,,,,,,,,,7.0,2.0,,1|hzkjnj:,180152,,,,,,,,"22/Aug/12 4:03 PM;sjavurek;Hi Dejan, 

I added the following to my broker config:

{code}

          <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""1mb"" durableTopicPrefetch=""0""
{code}

That looks good and prefetch limit for my topic 0. However, once I start my consumer, i can see the prefetch limit go back
to 100 which looks reasonable as it's specified in the information received by the broker:

{code}
2012-08-22 11:59:22,213 | DEBUG | RECEIVED: ConsumerInfo {commandId = 3, responseRequired = false, consumerId = ID:vmware2-2500-1345650016187-4:1:-1:2, destination = topic://WASTestTopic7, prefetchSize = 100, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = true, selector = RELEVANT=true, subscriptionName = prod1593c, noLocal = false, exclusive = false, retroactive = false, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null} | org.apache.activemq.transport.TransportLogger.Connection:1 | ActiveMQ Transport: tcp:///192.168.0.68:2503
{code}

I have:

durableTopicPrefetch 0  

which is set on the screen depicted by TestCaseC.jpg.


","23/Aug/12 11:09 AM;dbosanac;Hi Susan,

I took a look at that I found a problem you're seeing.

The problem is that in ""most"" cases durable subscriptions don't use durableTopicPrefetch, but optimizeDurableTopicPreftech value. To be precise, this option is used when optmizeDisplatch is set on the connection (which is by default) and auto acknowledge is used. 
I added support to RA adapter to support this property as well https://issues.apache.org/jira/browse/AMQ-3986 and it should solve this particular issue. For all other prefetch values everything should work fine as is.
I still didn't merge the fix to any fuse branch. Maybe it's best to test trunk first and see it works fine in WAS. And then we can see where we need the fix merged. We also need some more docs around it for sure.",,,,,,,,,,,,,,,,,,
Virtual Topics are not durable,MB-1204,12516609,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,dbosanac,joe.luo,joe.luo,14/Aug/12 11:36 AM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,24/Aug/12 2:15 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,"I did some tests with Virtual Topic. And I found that virtual topic is not durable in a case that if there is no consumer connected to a physical queue to consume message from the virtual topic since the message will not be forwarded to the physical queue.  

Here is an instruction for how to reproduce the problem:
1. add following physical destinations into activemq.xml configuration file:
{code}
<destinations>
    <queue physicalName=""Consumer.A.VirtualTopic.FOO"" />
    <queue physicalName=""Consumer.B.VirtualTopic.FOO"" />
    <queue physicalName=""Consumer.C.VirtualTopic.FOO""/>
</destinations>
{code}
and above three queues will be created during broker startup;
2. using shipped demo producer to send 10 message to a Virtual Topic named ""VirtualTopic.FOO"" with following command:
{code}
ant producer -Dsubject=VirtualTopic.FOO -Dtopic=true -Dmax=10 -Ddurable=true
{code}
You will see that there will be no message forwarded to the three queues;
3. using shipped demo consumer to connect to one of the three queues with below command:
{code}
ant consumer -Dsubject=Consumer.B.VirtualTopic.FOO -Dtopic=false
{code}
and then send another 10 messages to the virtual topic ""VirtualTopic.FOO"". You will see that only the queue ""Consumer.B.VirtualTopic.FOO"" will enqueue/dequeue 10 messages;
4. kill the only consumer that connected to the queue ""Consumer.B.VirtualTopic.FOO"" and send another 10 messages from the producer. this time none of three queues will be able receive any messages.",Fuse MB 5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,6.0,,1|hzkjdz:,180109,,,,,,,,"15/Aug/12 1:10 PM;dbosanac;I can't reproduce this. I added <destination> snippet to xml config, ran ant producer and was able to see messages in queues. Can you provide your exact xml config?","15/Aug/12 1:52 PM;joe.luo;Hi, Dejan

Sorry, my mistake. It looks like that it was the attribute ""selectorAware"" caused the problem although I did not set any selector on the physical queues. Here is extra configuration I had apart from above <destinations> config:
{code}
<destinationInterceptors>
            <virtualDestinationInterceptor>
                <virtualDestinations>
                    <virtualTopic name=""VirtualTopic.FOO"" prefix=""Consumer.*."" selectorAware=""true""/>
                </virtualDestinations>
            </virtualDestinationInterceptor>
        </destinationInterceptors>
{code}

I also tried to change the attribute ""selectorAware"" value to ""false"", then it worked fine. Could you please confirm my findings?

Cheers,
/Joe","15/Aug/12 3:31 PM;dbosanac;Hi Joe,

yes, this is the expected behavior. When you use selectorAware option, the message will be sent to the queue only if there's a consumer there that matches the selector.

We need to document this better. I'll do that soon.","15/Aug/12 3:50 PM;joe.luo;Hi, Dejan

Thank you very much for confirming this. So if I change the value of ""selectorAware"" to ""false"", can I still add selector on those physical queues? For instance, adding following <destinations> to activemq.xml configuration file?
{code}
<destinations>
<queue physicalName=""Consumer.A.VirtualTopic.FOO?selector=myfilter='UVW'"" />
<queue physicalName=""Consumer.B.VirtualTopic.FOO?selector=myfilter='XYZ'"" />
<queue physicalName=""Consumer.C.VirtualTopic.FOO""/>
</destinations>
{code}
Would selectors on the queue ""Consumer.A.VirtualTopic.FOO"" and ""Consumer.B.VirtualTopic.FOO"" work as it should?

Cheers,
/Joe","15/Aug/12 4:01 PM;dbosanac;Hi Joe,

defining ?selector=xxx on a queue name doesn't have an effect you're hoping for. It'll just create a destination with that name. You need to have actual consumer for this to work. I guess the better route to achieve this functionality would be to define a camel route that will do an appropriate routing.",24/Aug/12 2:15 PM;joe.luo;It is an expected behaviour so won't fix.,,,,,,,,,,,,,,
Expired msgs not getting acked to broker causing consumer to fill up its prefetch and not getting more msgs.,MB-1203,12516607,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,mielket,mielket,08/Aug/12 2:37 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,13/Aug/12 8:11 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,java client,,,0,,"It is possible to get a consumer stalled and not receiving any more messages when using optimizeAcknowledge.
Let me illustrate in an example (JUnit test attached).

Suppose a consumer with optimizeAcknowledge and a prefetch of 100 msgs.
The broker's queue contains 105 msg. The first 45 msgs have a very low expiry time, the remaining don't expiry. 

So the first 100 msgs get dispatched to the consumer (due to prefetch=100). Out of these the first 45 msgs do not get dispatched to consumer code because their expiry has elapsed by the time that are handled in the client. 

{code:title=ActiveMQMessageConsumer.java}
public void dispatch(MessageDispatch md) {
        MessageListener listener = this.messageListener.get();
        try {
            [...]
            synchronized (unconsumedMessages.getMutex()) {
                if (!unconsumedMessages.isClosed()) {
                    if (this.info.isBrowser() || !session.connection.isDuplicate(this, md.getMessage())) {
                        if (listener != null && unconsumedMessages.isRunning()) {
                            ActiveMQMessage message = createActiveMQMessage(md);
                            beforeMessageIsConsumed(md);
                            try {
                                boolean expired = message.isExpired();
                                if (!expired) {
                                    listener.onMessage(message);
                                }
                                afterMessageIsConsumed(md, expired);
{code}

listener.onMessage() above is not called as the msg has expired. 
However it will calls into afterMessagesIsConsumed()

{code:title=ActiveMQMessageConsumer.java}
    private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
      [...]  
      if (messageExpired) {
            synchronized (deliveredMessages) {
                deliveredMessages.remove(md);
            }
            stats.getExpiredMessageCount().increment();
            ackLater(md, MessageAck.DELIVERED_ACK_TYPE);

{code}

and will remove the expired msg from the deliveredMessages list. It then calls into ackLater(). 
However ackLater() only fires an ack back to the broker when the number of unsent acks has reached 50% of the prefetch value.

{code:title=ActiveMQMessageConsumer.java}
 private void ackLater(MessageDispatch md, byte ackType) throws JMSException {
    [...]
    if ((0.5 * info.getPrefetchSize()) <= (deliveredCounter - additionalWindowSize)) {
            session.sendAck(pendingAck);
{code}        

In our example it has not reached that mark (only 45 expired msgs, i.e. 45%). 
So the first 45 msgs, which expired before being dispatched, did not cause an ack being sent to the broker.

Now the next 55 messages get processed. These don't have an expiry so they get dispatched to consumer code. 
After dispatching each msg to the registered application code, we call into afterMessageIsConsumed() but this time executing a different branch as the msgs are not expired

{code:title=ActiveMQMessageConsumer.java}
private void afterMessageIsConsumed(MessageDispatch md, boolean messageExpired) throws JMSException {
    [...]
    else if (isAutoAcknowledgeEach()) {
                if (deliveryingAcknowledgements.compareAndSet(false, true)) {
                    synchronized (deliveredMessages) {
                        if (!deliveredMessages.isEmpty()) {
                            if (optimizeAcknowledge) {
                                ackCounter++;
                                if (ackCounter >= (info.getPrefetchSize() * .65) || (optimizeAcknowledgeTimeOut > 0 && System.currentTimeMillis() >= (optimizeAckTimestamp + optimizeAcknowledgeTimeOut))) {
                                    MessageAck ack = makeAckForAllDeliveredMessages(MessageAck.STANDARD_ACK_TYPE);
                                    if (ack != null) {
                                        deliveredMessages.clear();
                                        ackCounter = 0;
                                        session.sendAck(ack);
                                        optimizeAckTimestamp = System.currentTimeMillis();
                                    }
                                }
{code}

with optimizeAcknowledge=true we only send an ack back to the broker if either optimizeAcknowledgeTimeOut has elapsed or the ackCounter has reached 65% of the prefetch (100). 
The timeout will not have kicked in. The ackCounter will be at 55 after processing the last of 100 prefetched messages which is less than 65% of 100. So with the last prefetched msg being processed, it will not generate an ack back to the broker. 
As a result, the client has processed all prefetched message and will not get any new messages dispatched from the broker. The broker has another 5 msgs on the queue but since it never received an ack from the client, it won't dispatch any further messages. 

The client is stalled. 





",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3965,,,,0.0,3.0,,1|hzkj9z:,180090,,,,,,,,"08/Aug/12 2:41 PM;mielket;A possible fix for this may be to no hold back acks for expired messages (as currently done by calling ackLater()) but to ack any expired messages
straight away. 
This however will cause more acks to be written back to the broker, but only in case of expired messages.

Perhaps there is a better solution that has less of an overhead? ",08/Aug/12 2:43 PM;garytully;think an approach where any pending ack is sent before a batch or optimized ack will sort it w/o additional overhead.,"10/Aug/12 11:34 AM;mielket;See latest feedback on AMQ-3965.
",,,,,,,,,,,,,,,,,
data.db is not cleaned up properly with durable subscribers transacted,MB-1202,12516606,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,08/Aug/12 12:05 AM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,10/Aug/12 3:25 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"*Test Case*

Based off our examples and is triggered by increasing number of messages through system.  It's also important the consumers are not active when the producer is. 

1. Start a 5.5.1 broker based on latest snapshot to pick up MB-1198 and friends.  Default broker config is fine. 
2.  Start consumer as a durable subscriber.  Ctrl-C out of it. Note, do not unsubscribe. 
3.  I've been using this little script which I will attach:

{code}
local numMessages=5000
for i in {1..4}
do


numMessages=$((5000*$i))
echo **** Run $i:  $numMessages
echo ""===============================================""
echo ""  -- Producer ""
ant producer -Dtopic=true -Ddurable=true -Dtransacted=true -DsleepTime=1 -Dsubject=test.foo.topic.1  -DmessageSize=4000  -Dmax=$numMessages
ls -alh /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-04-01-mixed/data/kahadb/*

echo ""  -- Consumer ""
ant consumer -Dtopic=true -Dsubject=test.foo.topic.1 -Ddurable=true -Dtransacted=true -DsleepTime=2 -DclientId=test1 -Dmax=$numMessages
ls -alh /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-04-01-mixed/data/kahadb/*


done
{code}

Essentially the producer starts and sends 5000 messages, consumer get them. Then another batch is sent exponentially higher than the last.  In between I was dumping the directory to monitor the growth.  In my case, data.db looked like the following:

Start:  44K (after client is connected and disconnected).
Iteration 1.  1.3MB
Iteration 2.  2.6MB
Iteration 3.  4.0MB
Iteration 4.  5.3 MB

As all the messages are consumed, we would expect these guys to be cleaned up.  Note, if you run the same test over, you won't see any extra growth unless a larger size message batch is sent through.

",,,,,,,,,,,,,,,08/Aug/12 12:07 AM;sjavurek;tc.sh;https://issues.jboss.org/secure/attachment/12369012/tc.sh,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkj9j:,180088,,,,,,,,"08/Aug/12 9:16 AM;garytully;This is expected behaviour. 
The page file is not subject to gc by design, it needs to be large enough to accommodate the max load.
It is like an OS swap file.
Internally pages are reused so it settles down but if there is a new max it will grow.",,,,,,,,,,,,,,,,,,,
NetworkBridgeFilterFactory should be assigned to Queue not NetworkBridge (backport fix for AMQ-3630 to 5.5.1 MB),MB-1200,12516604,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,04/Aug/12 3:16 PM,06/Aug/12 2:20 PM,29/Nov/16 4:14 PM,06/Aug/12 2:20 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,There is already a fix for this issue at  https://issues.apache.org/jira/browse/AMQ-3630 but has not been back ported to 5.5.1 yet.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3630,,,,0.0,0.0,,1|hzkj8v:,180085,,,,,,,,,,,,,,,,,,,,,,,,,,,
NPE exception in kahadb after index issue,MB-1199,12516603,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,02/Aug/12 2:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,21/Aug/12 5:55 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-10-16,,,,broker,,,0,,"{code}
2012-07-24 07:11:19,476 [n.ch] Scheduler] ERROR Queue                          - Problem retrieving message for browse
java.util.NoSuchElementException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg104.cern.ch/tmp_storage/db-1093.log
        at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:214)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:508)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:492)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:305)
        at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1053)
        at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
        at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
        at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
        at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
        at java.util.TimerThread.mainLoop(Timer.java:512)
        at java.util.TimerThread.run(Timer.java:462)
Caused by: java.io.IOException: Could not locate data file /var/lib/activemq/data/activemq_gridmsg104.cern.ch/tmp_storage/db-1093.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
        at org.apache.kahadb.journal.Journal.read(Journal.java:597)
        at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:394)
        at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:212)
        ... 10 more

{code}
After a restart, we now see NPE related to KahaDB:

{code}

2012-07-24 11:39:05,287 [n.ch] Scheduler] ERROR Queue                          - Problem retrieving message for browse
java.lang.NullPointerException
	at org.apache.kahadb.index.ListNode.access$200(ListNode.java:37)
	at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:265)
	at org.apache.kahadb.index.ListNode$NodeMarshaller.writePayload(ListNode.java:255)
	at org.apache.kahadb.page.Transaction.store(Transaction.java:248)
	at org.apache.kahadb.index.ListIndex.storeNode(ListIndex.java:326)
	at org.apache.kahadb.index.ListNode.store(ListNode.java:348)
	at org.apache.kahadb.index.ListNode.access$500(ListNode.java:37)
	at org.apache.kahadb.index.ListNode$ListIterator.remove(ListNode.java:227)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator$1.execute(PList.java:228)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:765)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.remove(PList.java:225)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.remove(FilePendingMessageCursor.java:517)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.remove(FilePendingMessageCursor.java:321)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1061)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

{code}

Seems to be a variant of https://issues.apache.org/jira/browse/AMQ-3434 and Gary put together a test case which we believe represents the problem.",,,,,,,,,,,,,,,10/Aug/12 2:44 PM;garytully;testcase.patch;https://issues.jboss.org/secure/attachment/12369013/testcase.patch,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3982,,,,1.0,5.0,,1|hzkjvz:,180190,,,,,,,,"10/Aug/12 10:54 AM;garytully;I have a test case that runs for <5mins and always shows a problem, but the symptoms vary (From iterators reading too much to chunk stream not exist to NPE). I am getting closer to the root cause, but don't yet have it narrowed doen completely.
","10/Aug/12 11:31 AM;joe.luo;Sometimes, following stack trace can also be seen:
{quote}
2012-08-08 20:49:47,918 [n.ch] Scheduler] ERROR Queue                          - Problem retrieving message for browse
java.util.NoSuchElementException: Chunk stream does not exist, page: 75281 is marked free
	at org.apache.kahadb.index.ListNode$ListIterator.getFromNextNode(ListNode.java:165)
	at org.apache.kahadb.index.ListNode$ListIterator.hasNext(ListNode.java:176)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.hasNext(PList.java:204)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.hasNext(FilePendingMessageCursor.java:503)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.hasNext(FilePendingMessageCursor.java:297)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:1052)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:804)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:91)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:131)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
Caused by: java.io.EOFException: Chunk stream does not exist, page: 75281 is marked free
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:455)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:432)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:429)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:405)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:362)
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:306)
{quote}","10/Aug/12 2:44 PM;garytully;An additional test that breaks and can demonstrate the problem:
org.apache.activemq.store.kahadb.plist.PListTest#testConcurrentAddIterate","20/Aug/12 2:48 PM;garytully;great news on this one, looks like the problem is in reading and seek. Top find tim.","22/Aug/12 2:12 PM;sjavurek;Hi Tim, 

It looks like a new snapshot built last night:

apache-activemq-5.5.1.fuse-20120822.002833-49-bin.tar.gz.md5	 Wed Aug 22 09:07:15 UTC 2012	 32	  

Will it be in there or do you think we need to wait for the next one?

Susan
",,,,,,,,,,,,,,,
data.db is not cleaned up properly when durable subscribers come and go off-line,MB-1198,12516602,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,31/Jul/12 9:00 PM,07/Nov/13 5:43 AM,29/Nov/16 4:14 PM,01/Aug/12 12:20 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,5.6.0-fuse-00-00,,,,,,0,,"Gary added a unit test ""testRemovedDurableSubDeletesFromIndex()"" in the DurableSubscriptionOfflineTest test in org.apache.activemq.usecases, The test creates a number of durable consumers, takes them off-line, pushes a bunch of messages and then unsubscribes each of the consumers.  What we are seeing is that the data.db file is growing.  However, it only seems to grow when more than 3000 messages are sent. 

I ran subsequent tests this afternoon. One with 50000 messages and increased the loop to 10 subscribers. I have one one journal file of 33MB and my db.data grew to 14MB which is 42%.

I then modified the test to use an external broker.  This loop is for 20 repeats and 100000 messages. While monitoring the test, I saw 2 journal files and my data.db was around 24% of the journal files.  After the old journal file rolled off, the data.db size did *not* change.  I'm on the 5th iteration, with one journal file of size 66.6MB, the data.db is 30.4 MB, 46% of journal files.  I'll let it run and update the ticket later but safe to say there is a gremlin here somewhere. 

Susan

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3956,,,,0.0,5.0,,1|hzkjcf:,180102,,,,,,,,"31/Jul/12 11:30 PM;sjavurek;The big test ended with 1 journal file, 66.6MB. data.db of 37MB, 56% of the journal size. 

Broker re-started ok. No signs of corrupted index. ",01/Aug/12 11:59 AM;garytully;Linking to https://issues.apache.org/jira/browse/AMQ-3956 where the issue is resolved,"01/Aug/12 12:20 PM;garytully;fix for https://issues.apache.org/jira/browse/AMQ-3956 on 5.5.1-fuse and 5.6.x-fuse branches
New snapshots being built.","01/Aug/12 1:22 PM;garytully;snapshots

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120801.123438-45-bin.tar.gz

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-fuse-SNAPSHOT/apache-activemq-5.6-fuse-20120801.123527-35-bin.tar.gz","01/Aug/12 7:00 PM;sjavurek;Ran various tests on the 04-01 release with kahadb and core jars from snapshot.  Results look good and test case is passing.  I also ran a pretty high load, 50000 messages with 50 subscribers.  data.db was 15MB in the end.",,,,,,,,,,,,,,,
Race condition with StompServlet and transport listener for websockets,MB-1197,12516601,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ceposta,ceposta,31/Jul/12 2:22 PM,07/Nov/13 5:17 AM,29/Nov/16 4:14 PM,01/Aug/12 10:57 AM,5.6.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,broker,,,0,,"In the StompServlet, when a websocket request comes in, we are starting up the broker's websocket connection when we call listener.onAccept(socket). 
Under the covers, it begins a task in a new thread to create the connection, instantiate the transport listener, and set the listener on the transport. However, this is done asynchronously, and when the StompServlet calls listener.onAccept(socket), it immediately returns to the underlying jetty websockets implementation, returning the StompSocket (which as the websocket onTextMessage listener). It seems it's possible the jetty code could call back the onTextMessage listener's onMessage(...) method and expect the StompSocket to process the Stomp message *before* the steps taken to complete creating the connection from the async listener.onAccept(..) call. This would cause the exception in DEV-4312. I have reproduced, but only in a debugger not with live-running examples. I suspect if the conditions are just right (lock contention, for example) the issue in DEV-4312 could happen in a live system. 
",,,,,,,,,,,,,,,31/Jul/12 11:28 PM;ceposta;MB-1197___Race_condition_with_StompServlet_and_transport_listener_for_websockets.patch;https://issues.jboss.org/secure/attachment/12369011/MB-1197___Race_condition_with_StompServlet_and_transport_listener_for_websockets.patch,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3955,,,,1.0,2.0,,1|hzkj8f:,180083,,,,,,,,31/Jul/12 11:28 PM;ceposta;Added patch,01/Aug/12 10:57 AM;dbosanac;Fixed at apache trunk. It'll be available in 5.6 release. Thanks for the patch,,,,,,,,,,,,,,,,,,
Remove the synchronized definition from the ActiveMQEndpointWorker anonymous Work instance (Bark port AMQ-3748 to 5.5.x).  Blocking integration with JBoss 7.1.x or newer.,MB-1196,12516600,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,ccorsi1,ccorsi1,30/Jul/12 1:58 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,31/Jul/12 12:51 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,,,,0,,"The synchronization of the anonymous Work run method is not allowing our 5.5.1 distribution to not be deploy within JBoss 7.1.x or later.

Can we back port https://issues.apache.org/jira/browse/AMQ-3748 to our 5.5.1 branch?",,,,,,,,,,,DEV-4325,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3748,,,,0.0,0.0,,1|hzkjgf:,180120,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merge AMQ-3823 to Fuse Message Broker 5.5.1 branch,MB-1194,12516598,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,25/Jul/12 1:44 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,30/Jul/12 12:26 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Need to merge fix of AMQ-3823 back to Fuse Message Broker 5.5.1-fuse branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3823,,,,0.0,1.0,,1|hzkj7z:,180081,,,,,,,,"30/Jul/12 12:26 PM;dbosanac;Changes have been cherry-picked to 5.5.1-fuse branch. Here's the snapshot with the changes

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120730.112447-44-bin.tar.gz",,,,,,,,,,,,,,,,,,,
Please update the documentation to include deleting db.redo on kahadb corruption issues,MB-1192,12516596,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,sjavurek,sjavurek,20/Jul/12 4:08 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,10/Aug/12 3:27 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"The following documentation specifies removing the db.data file  to force database recovery.  We had an issue yesterday where this alone did not restore topic data. We believe that the index rebuild was short-cuted by using the db.redo file.  We ended up restarted again without deleting anything (corrupted file check kicked in to force a recovery) and this time the restore worked as db.redo worked. As such, a subsequent restart rebuilt the indexes and restored topics and queues properly.

We need to update the documentation to explain that you should also delete the db.redo when forcing a rebuild.  If your going to that drastic of a measure, it's probably a good thing to do to avoid this type of issue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjcv:,180104,,,,,,,,"01/Aug/12 2:42 PM;garytully;Actually, I just looked at the code on this one, and the .redo is only referenced if there is an existing db.data that has non zero length. So I don't think that it is really necessary to remove the .redo file.

There must have been something else going on in that first recovery attempt. I think the issue with durables being lost on first recovery may need some more investigation.
The existence of a db.redo when there was no db.data would not account for it.",,,,,,,,,,,,,,,,,,,
ConcurrentModificationException Marshalling Message To Persistent Queue,MB-1191,12516595,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Cannot Reproduce Bug,,jsherman,jsherman,20/Jul/12 1:50 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/Aug/12 4:43 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"Opening issue to investigate the following area of code as a ConcurrentModificationException exception was reported:

{code}
Caused by: java.util.ConcurrentModificationException
        at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
        at java.util.HashMap$KeyIterator.next(HashMap.java:828)
        at org.apache.activemq.util.MarshallingSupport.marshalPrimitiveMap(MarshallingSupport.java:64)
        at org.apache.activemq.command.Message.beforeMarshall(Message.java:210)
        at org.apache.activemq.command.ActiveMQTextMessage.beforeMarshall(ActiveMQTextMessage.java:107)
        at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:277)
        at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
        at org.apache.activemq.openwire.v6.ActiveMQTextMessageMarshaller.looseMarshal(ActiveMQTextMessageMarshaller.java:111)
        at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:410)
        at org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1148)
        ... 3 more
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjb3:,180095,,,,,,,,17/Aug/12 1:27 PM;jsherman;The customer hasn't seen this problem occur for a while.  I have checked with them to see if we can close the customer issue.,,,,,,,,,,,,,,,,,,,
data.db size is not included in calculation to monitor systemUsage settings,MB-1190,12516594,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,19/Jul/12 8:49 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,15/Aug/12 8:37 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,5.6.0-fuse-00-00,,,,,,0,,"We had a situation today where db.data size grew to 190GB, most likely as result of MB-1117.  Unfortunately, producer flow control on the storeUsage setting did not kick as size of db.data is not take into account.  This should really be part of it as in the end customer experienced an outage as the data store ran out of space. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3973,,,,0.0,3.0,,1|hzkjaf:,180092,,,,,,,,15/Aug/12 8:37 AM;dbosanac;Fixed and merged to 5.6.x-fuse branch,16/Aug/12 9:14 AM;dbosanac;It's merged now also to 5.5.1-fuse branch,16/Aug/12 12:43 PM;sjavurek;Thanks Dejan!,,,,,,,,,,,,,,,,,
TotalEnqueueCount > Integer.MAX_VALUE causes problems with new consumers no longer receiving messages across network of broker.,MB-1189,12516593,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Unresolved,tabish121,socallag,socallag,19/Jul/12 12:48 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,01/Aug/13 6:44 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjz3:,180204,,,,,,,,"19/Jul/12 12:49 PM;socallag;

it occured when TotalEnqueueCount reached Integer.MAX_VALUE

unfortunately we had to restart the broker as we were proceeding to business tests, and the logs where not in debug mode.

it's clear now that TotalEnqueueCount > Integer.MAX_VALUE causes the problem.
",,,,,,,,,,,,,,,,,,,
Duplicated durable subscriptions after broker retart with option keepDurableSubsActive=true,MB-1186,12516589,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,10/Jul/12 11:50 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,11/Jul/12 10:08 AM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,0,,"Attached is a slightly modified version of JUnit test case org.apache.activemq.usecases.DurableSubscriptionActivationTest from activemq-core and it failed because reactivated subscription with the same SubscriptionName and ClientID after broker restart was not correctly recognized and as a result, a duplicated durable subscriptions was added to consumers list.",Fuse MB 5.5.1-fuse-07-11,,,,,,,,,,MB-683,,,,10/Jul/12 12:05 PM;joe.luo;DurableSubscriptionActivationTest.java;https://issues.jboss.org/secure/attachment/12369010/DurableSubscriptionActivationTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3921,,,,1.0,2.0,,1|hzkj13:,180050,,,,,,,,11/Jul/12 10:08 AM;dbosanac;Fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches. See [https://issues.apache.org/jira/browse/AMQ-3921] and [https://issues.apache.org/jira/browse/AMQ-2665] for more details.,11/Jul/12 10:35 AM;dbosanac;Snapshot http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120711.101436-38-bin.tar.gz,,,,,,,,,,,,,,,,,,
JConsole browse() function does not  work if useCache=false,MB-1185,12516590,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,09/Jul/12 10:59 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Jul/12 12:28 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,5.6.0-fuse-00-00,,,,,,0,,"if  <policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""1mb"" useCache=""false""> is set though the destinations Enqueue Count is updated as groups of messages are sent,  the number of messages returned from  browse() does not get updated, and remains at the value of the first batch of messages sent.",,,,,,,,,,,,,,,09/Jul/12 10:59 AM;socallag;Screen Shot 2012-07-09 at 11.53.53.png;https://issues.jboss.org/secure/attachment/12369008/Screen+Shot+2012-07-09+at+11.53.53.png,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3935,,,,1.0,2.0,,1|hzkj3j:,180061,,,,,,,,09/Jul/12 11:00 AM;socallag;BQ:Medium,17/Jul/12 12:28 PM;garytully;fix on 5.5.1-fuse branch,,,,,,,,,,,,,,,,,,
Please document jms selector requirements,MB-1184,12516588,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,fbolton,sjavurek,sjavurek,06/Jul/12 2:58 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-05-26,,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"Hi, 

We need to document that certain selector types are invalid in Activemq, i.e. anything with a ""-"" in it. There might be other so we should pull up the spec and see.

This came to light from  https://issues.apache.org/jira/browse/AMQ-3355. 

Susan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkj1r:,180053,,,,,,,,,,,,,,,,,,,,,,,,,,,
Failover transport does not work properly ,MB-1183,12516587,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,05/Jul/12 5:43 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Jul/12 1:45 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"I have a test case to demonstrate a problem with failover transport.

1. Two ActiveMQ brokers are running on two different servers and they are not networked together;

2. A camel client is deployed in Jetty container. The camel route is quite simple:
{code}
<route id=""testMessage"">
    <from uri=""direct:test""/>
    <inOut uri=""activemq:queue:send"" />
</route>
{code}
And the ""brokerURL"" is configured to use ""failover"" transport:
{code}
failover:(tcp://localhost:61616,tcp://10.5.1.27:61616)?randomize=false
{code}
The first ActiveMQ broker is running on ""localhost"" and the second ActiveMQ broker is running on a remote server ""10.5.1.27"". 

And it also contains a simple Servlet to use Camel Producer Template to send a message over to the ""direct:test"" endpoint and display the reply message.

3. There is another simple camel route and it consumes the message from the queue ""send"" and modifies the message body. It is deployed onto both ActiveMQ brokers when they are started:
{code}
<route id=""receiver"">
          <from uri=""activemq:send"" />
          <setBody>
           <simple>TEST : ${body} </simple>
          </setBody>
          <log message=""***Reply sent to ${header.JMSReplyTo} CorrelationID = ${header.JMSCorrelationID}"" />
</route>
<bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" >
        <property name=""connectionFactory"">
          <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
            <property name=""brokerURL"" value=""vm://localhost?create=false&amp;waitForStart=10000"" />
            <property name=""userName"" value=""${activemq.username}""/>
            <property name=""password"" value=""${activemq.password}""/>
          </bean>
        </property>
    </bean>
{code}
Because it is an InOut exchange, the reply message will be sent back to a Temp queue that is determined by *JMSReplyTo"" property.

Here is steps to demonstrate a problem:
1. start two brokers and they will also deploy the little ""receiver"" camel route;
2. start jetty container and send a message from a browser. The camel client will connect to the first broker on ""localhost:61616"" and receive a reply message and display it on the browser. So it's successful.
3. stop the first broker. You will see from Jetty container logging that the failover transport will be connecting to the second broker successfully;
4. start the first broker and wait for a while, say at least 15 ~ 20 seconds or longer. Note, do not send any message meantime.
5. now from web interface the Jetty servlet, send a message. You will see an error like:
{quote}
117201 [qtp978777649-19] WARN  org.eclipse.jetty.servlet.ServletHandler  - /jms-tester/send
org.apache.camel.CamelExecutionException: Exception occurred during execution on the exchange: Exchange[Message: 1]
	at org.apache.camel.util.ObjectHelper.wrapCamelExecutionException(ObjectHelper.java:1161)
	at org.apache.camel.util.ExchangeHelper.extractResultBody(ExchangeHelper.java:512)
	at org.apache.camel.impl.DefaultProducerTemplate.extractResultBody(DefaultProducerTemplate.java:441)
	at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:119)
	at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:135)
	at org.apache.camel.impl.DefaultProducerTemplate.requestBody(DefaultProducerTemplate.java:283)
	at com.toyota.jms.test.SendCwsMessage.processRequest(SendCwsMessage.java:42)
	at com.toyota.jms.test.SendCwsMessage.doGet(SendCwsMessage.java:71)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:565)
	at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:479)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
	at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:499)
	at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:227)
	at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1031)
	at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:406)
	at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:186)
	at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:965)
	at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
	at org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:250)
	at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:149)
	at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:111)
	at org.eclipse.jetty.server.Server.handle(Server.java:349)
	at org.eclipse.jetty.server.AbstractHttpConnection.handleRequest(AbstractHttpConnection.java:449)
	at org.eclipse.jetty.server.AbstractHttpConnection$RequestHandler.headerComplete(AbstractHttpConnection.java:910)
	at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:634)
	at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:230)
	at org.eclipse.jetty.server.AsyncHttpConnection.handle(AsyncHttpConnection.java:76)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint.handle(SelectChannelEndPoint.java:609)
	at org.eclipse.jetty.io.nio.SelectChannelEndPoint$1.run(SelectChannelEndPoint.java:45)
	at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:599)
	at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:534)
	at java.lang.Thread.run(Thread.java:680)
Caused by: org.apache.camel.ExchangeTimedOutException: The OUT message was not received within: 20000 millis. Exchange[Message: 1]
	at org.apache.camel.component.jms.reply.ReplyManagerSupport.processReply(ReplyManagerSupport.java:117)
	at org.apache.camel.component.jms.reply.TemporaryQueueReplyHandler.onTimeout(TemporaryQueueReplyHandler.java:59)
	at org.apache.camel.component.jms.reply.CorrelationMap.onEviction(CorrelationMap.java:34)
	at org.apache.camel.component.jms.reply.CorrelationMap.onEviction(CorrelationMap.java:26)
	at org.apache.camel.util.DefaultTimeoutMap.purge(DefaultTimeoutMap.java:202)
	at org.apache.camel.util.DefaultTimeoutMap.run(DefaultTimeoutMap.java:158)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	... 1 more
{quote}

Here is some DEBUG logging from ActiveMQ on Jetty client side:
{quote}
8563 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - restore consumer: ID:jluoMac-52164-1341495843045-2:1:-1:1 in pull mode pending recovery, overriding prefetch: 1000
8563 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - restore consumer: ID:jluoMac-52164-1341495843045-2:1:-1:1
8564 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: ConnectionControl \{commandId = 0, responseRequired = false, suspend = false, resume = false, close = false, exit = false, faultTolerant = false, connectedBrokers = , reconnectTo = , rebalanceConnection = false}
8564 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: ConsumerInfo \{commandId = 2, responseRequired = true, consumerId = ID:jluoMac-52164-1341495843045-2:1:-1:1, destination = ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic, prefetchSize = 0, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = false, selector = null, subscriptionName = null, noLocal = true, exclusive = false, retroactive = false, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null}
8564 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - session: ID:jluoMac-52164-1341495843045-2:1:2
8564 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: Response \{commandId = 0, responseRequired = false, correlationId = 1}
8564 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: SessionInfo \{commandId = 4, responseRequired = false, sessionId = ID:jluoMac-52164-1341495843045-2:1:2}
8564 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.ResponseCorrelator  - Received unexpected response: \{Response \{commandId = 0, responseRequired = false, correlationId = 1}}for command id: 1
8564 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - restore consumer: ID:jluoMac-52164-1341495843045-2:1:2:1 in pull mode pending recovery, overriding prefetch: 1000
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - restore consumer: ID:jluoMac-52164-1341495843045-2:1:2:1
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: ConsumerInfo \{commandId = 7, responseRequired = true, consumerId = ID:jluoMac-52164-1341495843045-2:1:2:1, destination = temp-queue://ID:jluoMac-52164-1341495843045-2:1:1, prefetchSize = 0, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = true, selector = null, subscriptionName = null, noLocal = false, exclusive = false, retroactive = false, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null}
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - session: ID:jluoMac-52164-1341495843045-2:1:1
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: SessionInfo \{commandId = 3, responseRequired = false, sessionId = ID:jluoMac-52164-1341495843045-2:1:1}
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.state.ConnectionStateTracker  - producer: ID:jluoMac-52164-1341495843045-2:1:1:1
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: ProducerInfo \{commandId = 6, responseRequired = false, producerId = ID:jluoMac-52164-1341495843045-2:1:1:1, destination = null, brokerPath = null, dispatchAsync = false, windowSize = 0}
8565 [ActiveMQ Failover Worker: 132715097] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connection established
8566 [ActiveMQ Failover Worker: 132715097] INFO  org.apache.activemq.transport.failover.FailoverTransport  - Successfully reconnected to tcp://10.5.1.27:61616?trace=true
8566 [ActiveMQConnection[ID:jluoMac-52164-1341495843045-2:1] Scheduler] DEBUG org.apache.activemq.state.ConnectionStateTracker  - restored recovering consumer: ID:jluoMac-52164-1341495843045-2:1:-1:1 with: 1000
8567 [ActiveMQConnection[ID:jluoMac-52164-1341495843045-2:1] Scheduler] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: ConsumerControl \{commandId = 0, responseRequired = false, consumerId = ID:jluoMac-52164-1341495843045-2:1:-1:1, close = false, stop = false, start = false, flush = false, prefetch = 1000, destination = ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic}
8567 [ActiveMQConnection[ID:jluoMac-52164-1341495843045-2:1] Scheduler] DEBUG org.apache.activemq.state.ConnectionStateTracker  - restored recovering consumer: ID:jluoMac-52164-1341495843045-2:1:2:1 with: 1000
8567 [ActiveMQConnection[ID:jluoMac-52164-1341495843045-2:1] Scheduler] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: ConsumerControl \{commandId = 0, responseRequired = false, consumerId = ID:jluoMac-52164-1341495843045-2:1:2:1, close = false, stop = false, start = false, flush = false, prefetch = 1000, destination = temp-queue://ID:jluoMac-52164-1341495843045-2:1:1}
8568 [ActiveMQConnection[ID:jluoMac-52164-1341495843045-2:1] Scheduler] DEBUG org.apache.activemq.ActiveMQConnection  - notified failover transport (tcp://10.5.1.27:61616?trace=true) of interruption completion for: ID:jluoMac-52164-1341495843045-2:1
8568 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: Response \{commandId = 0, responseRequired = false, correlationId = 5}
8568 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.ResponseCorrelator  - Received unexpected response: \{Response \{commandId = 0, responseRequired = false, correlationId = 5}}for command id: 5
8570 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: Response \{commandId = 0, responseRequired = false, correlationId = 2}
8570 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.ResponseCorrelator  - Received unexpected response: \{Response \{commandId = 0, responseRequired = false, correlationId = 2}}for command id: 2
8573 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: Response \{commandId = 0, responseRequired = false, correlationId = 7}
8573 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.ResponseCorrelator  - Received unexpected response: \{Response \{commandId = 0, responseRequired = false, correlationId = 7}}for command id: 7
28561 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: KeepAliveInfo \{}
28561 [InactivityMonitor WriteCheck] DEBUG org.apache.activemq.transport.AbstractInactivityMonitor  - org.apache.activemq.transport.AbstractInactivityMonitor$2@7e5284e9 10000 ms elapsed since last write check.
28563 [InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@3acff49f] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: KeepAliveInfo \{}
38561 [InactivityMonitor WriteCheck] DEBUG org.apache.activemq.transport.AbstractInactivityMonitor  - org.apache.activemq.transport.AbstractInactivityMonitor$2@7e5284e9 10000 ms elapsed since last write check.
38561 [InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@3acff49f] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - SENDING: KeepAliveInfo \{}
38567 [ActiveMQ Transport: tcp:///10.5.1.27:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:2  - RECEIVED: KeepAliveInfo \{}
44015 [qtp978777649-14] DEBUG org.apache.camel.impl.ProducerCache  - >>>> Endpoint[direct://cws] Exchange[Message: 1]
44016 [qtp978777649-14] INFO  org.apache.camel.processor.interceptor.Tracer  - ID-jluoMac-52159-1341495839047-0-4 >>> (cwsMessage) from(direct://cws) --> cwsJms://queue:CWS.eprr.Receive <<< Pattern:InOut, Headers:\{breadcrumbId=ID-jluoMac-52159-1341495839047-0-5}, BodyType:String, Body:1
44016 [qtp978777649-14] DEBUG org.apache.camel.processor.SendProcessor  - >>>> Endpoint[cwsJms://queue:CWS.eprr.Receive] Exchange[Message: 1]
44017 [qtp978777649-14] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Reconnect was triggered but transport is not started yet. Wait for start to connect the transport.
44017 [qtp978777649-14] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Started unconnected
44017 [qtp978777649-14] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Waking up reconnect task
44018 [ActiveMQ Failover Worker: 1540639465] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - urlList connectionList:[tcp://localhost:61616?trace=true, tcp://10.5.1.27:61616?trace=true], from: [tcp://localhost:61616?trace=true, tcp://10.5.1.27:61616?trace=true]
44018 [ActiveMQ Failover Worker: 1540639465] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Attempting  0th  connect to: tcp://localhost:61616?trace=true
44019 [ActiveMQ Failover Worker: 1540639465] DEBUG org.apache.activemq.transport.WireFormatNegotiator  - Sending: WireFormatInfo \{ version=8, properties=\{MaxFrameSize=104857600, CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
44019 [ActiveMQ Failover Worker: 1540639465] DEBUG org.apache.activemq.transport.TransportLogger.Connection:3  - SENDING: WireFormatInfo \{ version=8, properties=\{MaxFrameSize=104857600, CacheSize=1024, CacheEnabled=true, SizePrefixDisabled=false, MaxInactivityDurationInitalDelay=10000, TcpNoDelayEnabled=true, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
44019 [ActiveMQ Failover Worker: 1540639465] DEBUG org.apache.activemq.transport.failover.FailoverTransport  - Connection established
44019 [ActiveMQ Failover Worker: 1540639465] INFO  org.apache.activemq.transport.failover.FailoverTransport  - Successfully connected to tcp://localhost:61616?trace=true
44060 [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] DEBUG org.apache.activemq.transport.TransportLogger.Connection:3  - RECEIVED: WireFormatInfo \{ version=8, properties=\{CacheSize=1024, MaxFrameSize=104857600, CacheEnabled=true, SizePrefixDisabled=false, TcpNoDelayEnabled=true, MaxInactivityDurationInitalDelay=10000, MaxInactivityDuration=30000, TightEncodingEnabled=true, StackTraceEnabled=true}, magic=[A,c,t,i,v,e,M,Q]}
{quote}
You can see that from the line starting with ""8566..."", the failover transport was already reconnected to the second broker successfully. However, the line starting with ""44017..."" indicated that *it somehow decided to reconnect and failover back the first broker again*. Because the broker was just restarted and there was not a temp queue created, therefore, the request/reply failed due to 20000 miliseconds timeout kicked in on ""JMSReplyTo"" queue. ",Fuse MB 5.5.1-fuse-xx-xx,,,,,,,,,,,,,,06/Jul/12 7:59 PM;tabish121;ComplexRequestReplyTest.java;https://issues.jboss.org/secure/attachment/12369006/ComplexRequestReplyTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,0.0,,1|hzkj5z:,180072,,,,,,,,,,,,,,,,,,,,,,,,,,,
Backport of AMQ-3877-  Add ability to set a timeout for the calls made to Broker MBeans - to 5.5.x ,MB-1180,12516586,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,socallag,socallag,04/Jul/12 2:25 PM,05/Jul/12 8:48 AM,29/Nov/16 4:15 PM,05/Jul/12 8:48 AM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3877,,,,0.0,0.0,,1|hzkiyf:,180038,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fuse Message Broker 5.5.1-fuse icon file webapps/favicon.ico is broken,MB-1179,12516585,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,davsclaus,joe.luo,joe.luo,03/Jul/12 1:22 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Jun/13 3:03 PM,,,,,,,,,,,,,,,,,,,,,JBoss A-MQ 6 (5.8.0-fuse-xx-xx),,,,,,,0,,"The favicon.ico file from Fuse Message Broker 5.5.1 branch is broken while the one in Apache ActiveMQ trunk looks ok.

Using md5 to verify the file:

(5.5.1)
d781e8c3c5151219849ca7cd14b08bd2 apache-activemq-5.5.1-fuse-07-11/webapps/favicon.ico

(trunk)
05664fb0c7afcd6436179437e31f3aa6 activemq/assembly/src/release/webapps/favicon.ico

Trying to open the file using different apps:
The file favicon.ico from 5.5.1-fuse branch does not display properly on any of the browsers. It does not display properly either on ""Microsoft Picture and Fax Viewer"" app and ""Paint"" app on Windows. While the file favicon.ico from Apache trunk does display fine on any of above apps.",Fuse Message Broker 5.5.1-fuse-xx-xx,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-4081,,,,0.0,1.0,,1|hzkjyf:,180201,,,,,,,,27/Jun/13 3:03 PM;dbosanac;Fix with an additional commit to the https://issues.apache.org/jira/browse/AMQ-4098 and merged to 5.8.0.fuse-7-2-x-stable branch,,,,,,,,,,,,,,,,,,,
Mesage may get stuck inside broker until restart if msg ack was pending at the time of a tx rollback. ,MB-1177,12516582,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,28/Jun/12 3:04 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,28/Jun/12 3:09 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,0,,Fixed as part of [AMQ-3872|https://issues.apache.org/jira/browse/AMQ-3872] and [AMQ-3305|https://issues.apache.org/jira/browse/AMQ-3305]in revision http://svn.apache.org/viewvc?view=revision&revision=1354449.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3872,,,,0.0,1.0,,1|hzkiwn:,180029,,,,,,,,"28/Jun/12 3:09 PM;garytully;Issue was related to queue dispatch, dispatching an acked message and the subscription dropping it.
Unit test at: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/broker/XARecoveryBrokerTest.java?r1=1354449&r2=1354448&pathrev=1354449

fix: http://svn.apache.org/viewvc?view=revision&revision=1354449",,,,,,,,,,,,,,,,,,,
JMX connector does not bind to a specific port when a connectHost is specified on the managementContext,MB-1176,12516584,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,jsherman,jsherman,27/Jun/12 2:49 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Jul/12 1:22 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,0,,"Using the following managementContext:

{code}
<managementContext>
      <managementContext connectorHost=""172.16.26.175"" connectorPort=""9003"" rmiServerPort=""9004"" createConnector=""true""/>
</managementContext>
{code}

I see the following  occur from running netstat:

{code}
tcp        0      0 *:9004                      *:*                         LISTEN 
tcp        0      0 *:9003                      *:*                         LISTEN
{code}

In this case the goal is accomplish the binding the ports to the specified IP address such as

{code}
tcp        0      0 172.16.26.175:9004                      *:*                         LISTEN 
tcp        0      0 172.16.26.175:9003                      *:*                         LISTEN
{code}

However this does not occur.  Can the broker be improved so that the ports bind to the specific IP address?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3915,,,,0.0,1.0,,1|hzkiyv:,180040,,,,,,,,"06/Jul/12 1:22 PM;dbosanac;This should be fixed now and available in 5.5.x-fuse and 5.5.1-fuse branches. You can find a snapshot with the fix here

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120706.123613-37-bin.tar.gz

so give it a try",,,,,,,,,,,,,,,,,,,
Messages sometimes not received by active subscription,MB-1175,12516581,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,26/Jun/12 2:54 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Jul/12 8:53 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,broker,,,0,,"Please consider the attached program that uses two STOMP connections and (in a loop):

    subscribes to a topic, with a receipt
    sends a message
    attempts to receive it

On some brokers (usually with fast hardware), the message is sometimes not received. This happens randomly, here are for instance results of consecutive runs:
{code}
received 989/1000
received 989/1000
received 992/1000
received 988/1000
{code}

This is not a problem of timeout since increasing the TIMEOUT constant does not make the problem go away. It seems that the subscription is not yet ""active"" when the message gets sent so it gets discarded.

Since this program is single threaded, the message gets sent only when the RECEIPT frame is received, i.e. when the broker has confirmed that the subscription has been created.",Fuse MB 5.5.1-fuse-06-03,,,,,,,,,,,,,,26/Jun/12 2:58 PM;joe.luo;MB-1175.pl;https://issues.jboss.org/secure/attachment/12369004/MB-1175.pl,26/Jun/12 2:58 PM;joe.luo;stomp-auth-broker.xml;https://issues.jboss.org/secure/attachment/12369005/stomp-auth-broker.xml,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3909,,,,2.0,1.0,,1|hzkj6n:,180075,,,,,,,,26/Jun/12 2:58 PM;joe.luo;Attached are perl scripts and activemq configure xml.,,,,,,,,,,,,,,,,,,,
"The JMX message move, copy and remove operation do not take messages in FIFO order",MB-1174,12516580,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,25/Jun/12 1:06 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Jun/12 9:43 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"When a page is pulled in, it is placed in a LinkedHashMap which preserves the queue order, but the below code then pulls the values from the LinkedHashMap and puts them in a Set. This causes the FIFO order of the queue to be lost. If the number of max messages to move is smaller the the page size, then the outcome looks like random messages from the queue being moved (copied or removed).
{code}
...

Set<MessageReference> set = new HashSet<MessageReference>();
ConnectionContext context = createConnectionContext();
do {
    doPageIn(true);
    pagedInMessagesLock.readLock().lock();
    try{ 
        set.addAll(pagedInMessages.values()); 
    } finally { 
        pagedInMessagesLock.readLock().unlock(); 
    }
...
{code}

Can this be changed to preserve the queue order?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3846,,,,0.0,1.0,,1|hzkiw7:,180027,,,,,,,,26/Jun/12 10:34 PM;tabish121;Fix and test added to ActiveMQ trunk.,,,,,,,,,,,,,,,,,,,
Broker sends a RECEIPT frame although the subscription fails,MB-1173,12516579,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,21/Jun/12 9:30 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,22/Jun/12 8:12 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,,,,0,,"When using STOMP to subscribe to ActiveMQ/5.5.1-fuse-06-03 using a receipt and an invalid selector, the broker replies with a RECEIPT frame giving the impression that the subscription did succeed.

See the attached script to reproduce the problem: a RECEIPT frame is received, followed by an ERROR frame.

Since the subscription fails, a RECEIPT frame should not be sent.

",Fuse MB 5.5.1-fuse-06-03,,,,,,,,,,,,,,21/Jun/12 9:33 AM;joe.luo;MB-1173.pl;https://issues.jboss.org/secure/attachment/12369001/MB-1173.pl,21/Jun/12 9:38 AM;joe.luo;stomp-auth-broker.xml;https://issues.jboss.org/secure/attachment/12369003/stomp-auth-broker.xml,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3895,,,,2.0,2.0,,1|hzkiuv:,180021,,,,,,,,"21/Jun/12 9:33 AM;joe.luo;Here´s test output:
{code}
user@ubuntu-11:/local/workspace/testcases/MB-1173$ perl MB-1173.pl 
# Net::STOMP::Client->connect()
#  encoded CONNECT frame
#   H passcode:manager
#   H host:localhost
#   H accept-version:1.0,1.1
#   H login:system
#   sent 78 bytes
#   received 118 bytes
#  decoding CONNECTED frame
#   H heart-beat:0,0
#   H session:ID:ubuntu-11-40562-1340127948027-4:2
#   H server:ActiveMQ/5.5.1-fuse-06-03
#   H version:1.1
# Net::STOMP::Client->subscribe()
#  encoded SUBSCRIBE frame
#   H selector:foo.bar = 1
#   H destination:/topic/test
#   H id:8b702b4-4fe0bada-cff-a6ee-1
#   H receipt:8b702b4-4fe0bada-cff-a6ee-2
#   sent 124 bytes
#   received 50 bytes
#  decoding RECEIPT frame
#   H receipt-id:8b702b4-4fe0bada-cff-a6ee-2
#   received 2843 bytes
#  decoding ERROR frame
#   H content-type:text/plain
#   H message:Couldn't create TopicSubscription
#   B 0000 6a617661 782e6a6d 732e4a4d 53457863  java x.jm s.JM SExc
#   B 0010 65707469 6f6e3a20 436f756c 646e2774  epti on:  Coul dn't
#   B 0020 20637265 61746520 546f7069 63537562   cre ate  Topi cSub
#   B 0030 73637269 7074696f 6e0a0961 74206f72  scri ptio n..a t or
#   B 0040 672e6170 61636865 2e616374 6976656d  g.ap ache .act ivem
#   B 0050 712e6272 6f6b6572 2e726567 696f6e2e  q.br oker .reg ion.
#   B 0060 546f7069 63526567 696f6e2e 63726561  Topi cReg ion. crea
#   B 0070 74655375 62736372 69707469 6f6e2854  teSu bscr ipti on(T
#   B 0080 6f706963 52656769 6f6e2e6a 6176613a  opic Regi on.j ava:
#   B 0090 33323729 0a096174 206f7267 2e617061  327) ..at  org .apa
#   B 00a0 6368652e 61637469 76656d71 2e62726f  che. acti vemq .bro
#   B 00b0 6b65722e 6a6d782e 4d616e61 67656454  ker. jmx. Mana gedT
#   B 00c0 6f706963 52656769 6f6e2e63 72656174  opic Regi on.c reat
#   B 00d0 65537562 73637269 7074696f 6e284d61  eSub scri ptio n(Ma
#   B 00e0 6e616765 64546f70 69635265 67696f6e  nage dTop icRe gion
#   B 00f0 2e6a6176 613a3434 290a0961 74206f72  .jav a:44 )..a t or
*** unexpected ERROR frame received: Couldn't create TopicSubscription
# Net::STOMP::Client->disconnect()
#  encoded DISCONNECT frame
#   sent 13 bytes
{code}",21/Jun/12 9:38 AM;joe.luo;ActiveMQ configuration xml.,,,,,,,,,,,,,,,,,,
Excessive padding added by NMS client when marshalling data,MB-1172,12516578,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,tabish121,joe.luo,joe.luo,21/Jun/12 9:00 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Jul/12 1:42 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"When analyzing the packets transmitted through the network by ActiveMQ, we realized the padding added by ActiveMQ (NMS library and / or FMB) is very important (~40% in some cases).

The measurements are done like this:

    measure the object sent to the NMS library
    look the packets sent through the network with Wireshark

Here are some test results:
|| Client Type  ||Message Type  ||      Message Size in Bytes|| Number of TCP Packets sent for the message|| TCP Packet size || Actual payload size in the Packet|| Overhead %||
|Java|BytesMessage|512|1|631|561|9.57%|
|Java|TextMessage|512|1|635|565|10.35%|
|NMS|BytesMessage|512|1|818|748|46.09%|
|NMS|TextMessage|512|1|822|752|46.87%|
|NMS|ObjectMessage(Text)|512|1|843|773|50.97%|
|NMS|ObjectMessage(MemoryStream)|540|2|1514+158|1444+88|183%|

Note the formula for calculating overhead in the last column was 
*(Actual payload size in the Packet - Message Size in Bytes)/(Message Size in Bytes)*

Also tried connection Uri option ""wireFormat.tightEncodingEnabled=true"" with NMS clients but it did not seems to make any impact at all.

",,,,,,,,,,,,,,,21/Jun/12 9:02 AM;joe.luo;ActiveMQTest.zip;https://issues.jboss.org/secure/attachment/12369000/ActiveMQTest.zip,21/Jun/12 9:20 AM;joe.luo;ProducerTool.java;https://issues.jboss.org/secure/attachment/12369002/ProducerTool.java,,,,,,,,,,,,,,,,,,,,,,,,,2.0,2.0,,1|hzkj3z:,180063,,,,,,,,21/Jun/12 9:02 AM;joe.luo;Here is attached C# project to send different type of messages to broker. ,"21/Jun/12 9:20 AM;joe.luo;Attached ProducerTool.java is a modified version from demo to send either BytesMessage or TextMessage of 512 bytes to broker from Java client. 

By default, it will send BytesMessage. To send TextMessage, please modify the line #59 to change value to ""false"":
{code}
59     private boolean bytesMessage = false;
{code}
It is the same options as original demo to launch producer.",,,,,,,,,,,,,,,,,,
WebSocket URL should be exposed via JMX ,MB-1170,12516577,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,jsherman,jsherman,15/Jun/12 4:23 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,10/Jul/12 9:53 AM,5.5.1-fuse-03-04,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,1,,"The broker JMX properties should expose the WebSocket URL just as it does for OpenWireURL and StompURL.

When a user queries ActiveMQ they are unable to determine the WebSocketURL:
{code}
FuseESB:karaf@root> fabric:container-connect mq activemq:query
Connecting to host new-host-2.home on port 8102
Connected
Type = Connector
ConnectorName = openwire
BrokerName = mq
StatisticsEnabled = true

TopicSubscribers = []
TemporaryQueues = []
TemporaryTopicSubscribers = []
MemoryPercentUsage = 0
BrokerVersion = 5.5.1.fuse-7-061
StatisticsEnabled = true
TotalDequeueCount = 0
TopicProducers = []
QueueSubscribers = []
Topics = []
TotalMessageCount = 0
SslURL = 
TemporaryQueueSubscribers = []
BrokerName = mq
DynamicDestinationProducers = []
Persistent = true
DataDirectory = /Users/jsherman/Development/tools/servicemix/fuse-esb-7.0.0.fuse-061/instances/mq/data/mq
Queues = []
DurableTopicSubscribers = []
TotalConsumerCount = 0
InactiveDurableTopicSubscribers = []
TempPercentUsage = 0
MemoryLimit = 67108864
VMURL = vm://mq
OpenWireURL = tcp://new-host-2.home:61617
TotalEnqueueCount = 0
TemporaryQueueProducers = []
StompSslURL = 
TemporaryTopics = []
StompURL = 
Slave = false
BrokerId = ID:new-host-2.home-52636-1339773319741-0:1
TotalProducerCount = 0
Type = Broker
StorePercentUsage = 0
StoreLimit = 107374182400
TemporaryTopicProducers = []
TempLimit = 107374182400
QueueProducers = []

Type = Connector
ConnectorName = websocket
BrokerName = mq
StatisticsEnabled = true

FuseESB:karaf@root> 
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3918,,,,0.0,1.0,,1|hzkizb:,180042,,,,,,,,"10/Jul/12 9:53 AM;dbosanac;This is now fixed on trunk, see [https://issues.apache.org/jira/browse/AMQ-3918] for more details.

As changes are dependent on [MB-1158], this is scheduled for 5.6.0 fuse release.",,,,,,,,,,,,,,,,,,,
Broker should not send advisories for slow consumers or fast producers if the destination in question is an advisory destination already.,MB-1169,12516576,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,15/Jun/12 1:40 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,19/Jun/12 1:02 PM,5.4.2-fuse-05-26,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,broker,,,0,,The code in the AdvisoryBroker class that sends out the advisory for slow consumer and fast producer doesn't check the destination of those producers and consumers to see if they themselves are advisory destinations. This could lead to some undesirable side effects based on how those advisories are being handled.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3882,,,,0.0,0.0,,1|hzkirr:,180010,,,,,,,,,,,,,,,,,,,,,,,,,,,
.JobSchedulerStoreTest.testRestart fails,MB-1168,12516575,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,kearls,kearls,kearls,15/Jun/12 1:22 PM,23/Apr/13 9:49 PM,29/Nov/16 4:15 PM,23/Apr/13 9:49 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"This fails both on Hudson and when I run it on it's own.  I have added an @Ignore to it.

-------------------------------------------------------------------------------
Test set: org.apache.activemq.broker.scheduler.JobSchedulerStoreTest
-------------------------------------------------------------------------------
Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 39.362 sec <<< FAILURE!
testRestart(org.apache.activemq.broker.scheduler.JobSchedulerStoreTest)  Time elapsed: 39.329 sec  <<< FAILURE!
junit.framework.ComparisonFailure: null expected:<testjob[0]> but was:<testjob[168]>
	at junit.framework.Assert.assertEquals(Assert.java:81)
	at junit.framework.Assert.assertEquals(Assert.java:87)
	at org.apache.activemq.broker.scheduler.JobSchedulerStoreTest.testRestart(JobSchedulerStoreTest.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:83)
	at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:59)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:115)
	at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:140)
	at org.apache.maven.surefire.Surefire.run(Surefire.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:290)
	at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1017)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkjvr:,180189,,,,,,,,,,,,,,,,,,,,,,,,,,,
investigate startup deadlock with vm transport,MB-1167,12516573,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,garytully,garytully,14/Jun/12 10:57 AM,15/Jun/12 3:45 PM,29/Nov/16 4:15 PM,15/Jun/12 3:45 PM,5.6.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,broker,,,0,,there was some work to tidy up the sync in vm transport but it looks like the sync on 'starting' is too broad. Stack trace in https://issues.apache.org/jira/browse/AMQ-3873,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3873,,,,0.0,0.0,,1|hzkirb:,180008,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Backport of AMQ-3164, Upgrade the bundled service wrapper to version 3.5.7 to remove 4GB heap limitation",MB-1166,12516572,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,tabish121,socallag,socallag,14/Jun/12 10:49 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,25/Jul/12 9:23 AM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,0,,User is looking to backport AMQ-3164 to 5.5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3164,,,,0.0,1.0,,1|hzkj73:,180077,,,,,,,,25/Jul/12 9:23 AM;socallag;3.2.3 is the last community version available so we are unable to move beyond this version,,,,,,,,,,,,,,,,,,,
DestinationFilter/DynamicallyIncludedDestinations not working as expected.,MB-1165,12516574,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,13/Jun/12 11:18 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,22/Jun/12 3:12 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Have tested this on -06-03 also,

Pair of networked brokers, cfgs attached.

Network Connector on Broker (have tried all permutations of destinationFilter  and dynamicallyIncludedDestinations
{code}
        <networkConnector
                name=""vdc-resflow""
                uri=""static:(tcp://0.0.0.0:61618)""
                dynamicOnly=""true""
                bridgeTempDestinations=""false""
                destinationFilter=""Queue.CRS.AVAIL.SVC.REQ.>, ActiveMQ.Advisory.Consumer.Queue.CRS.AVAIL.SVC.REQ.>"">
                 <dynamicallyIncludedDestinations>
               <queue physicalName=""CRS.AVAIL.SVC.REQ.>""/>
              </dynamicallyIncludedDestinations>
            </networkConnector>
        </networkConnectors>

{code}


ant consumer -Durl=tcp://0.0.0.0:61618 -DsleepTime=10 -Dsubject=CRS.AVAL.SVC.REQ.V3
ant producer -Durl=tcp://0.0.0.0:61618 -DsleepTime=10 -Dsubject=CRS.AVAL.SVC.REQ.V3

We see networkConnector form between brokers but messages to other broker fail to filter through to consumer.
ant producer -Durl=tcp://0.0.0.0:61616 -DsleepTime=10 -Dsubject=CRS.AVAL.SVC.REQ.V3

Removing DestinationFilter DynamicallyIncludedDestinations and messages flow from one broker to other.",,,,,,,,,,,,,,,13/Jun/12 11:18 AM;socallag;prod1482-broker1.xml;https://issues.jboss.org/secure/attachment/12368999/prod1482-broker1.xml,13/Jun/12 11:18 AM;socallag;prod1482-broker2.xml;https://issues.jboss.org/secure/attachment/12368997/prod1482-broker2.xml,13/Jun/12 12:43 PM;socallag;tracelogs.txt;https://issues.jboss.org/secure/attachment/12368998/tracelogs.txt,,,,,,,,,,,,,,,,,,,,,,,,3.0,2.0,,1|hzkitr:,180019,,,,,,,,"14/Jun/12 6:58 AM;dbosanac;Just a quick comment before I dig into it further. From 5.6 onwards destinationFilter is not required for this usecase, as it will be automatically created from dynamically included destinations. See

http://activemq.apache.org/networks-of-brokers.html#NetworksofBrokers-Dynamicnetworkshttp://activemq.apache.org/networks-of-brokers.html#NetworksofBrokers-Dynamicnetworks

for more info. However, I'd expect it to work as it's configured, so we need to take a closer look at it.","14/Jun/12 8:14 AM;dbosanac;Hi, it seems to me it's just a typo in the example

The filter uses

{code}CRS.AVAIL.SVC.REQ.>{code}

and producers/consumers 

{code}CRS.AVAL.SVC.REQ.V3{code}

(AVAL != AVAIL), with this fixed everything works as expected.

As I said in the previous comment, destination filter is not necessary any more. But even if you use them, the above config is not optimal as it registers the same destination twice. So instead

{code}Queue.CRS.AVAIL.SVC.REQ.>, ActiveMQ.Advisory.Consumer.Queue.CRS.AVAIL.SVC.REQ.>{code}

it's enough to say

{code}Queue.CRS.AVAIL.SVC.REQ.>{code}

Again, a configuration like

{code}<networkConnector
  name=""vdc-resflow""
  uri=""static:(tcp://0.0.0.0:61618)""
  dynamicOnly=""true""
  bridgeTempDestinations=""false"">
  <dynamicallyIncludedDestinations>
    <queue physicalName=""CRS.AVAIL.SVC.REQ.>""/>
  </dynamicallyIncludedDestinations>
</networkConnector>{code}

should be sufficient going forward.

",,,,,,,,,,,,,,,,,,
The MirroredQueue feature uses the Topic MemoryUsage instead of the Queue MemoryUsage when forwarding the message to the queue after sending it to the Topic,MB-1164,12516571,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,ccorsi1,ccorsi1,20/May/12 5:15 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,29/May/12 1:25 PM,5.5.1-fuse-07-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,,,,0,,"The MirroredQueue implementation was designed to send messages being sent to a queue to also be sent to a mirrored topic.

There is a problem where when we send the message to the topic.  The message memory usage get set to the topic memory usage.  

This is what is expected but when this same message is sent to the original queue.  The memory usage instance use is the topics and not the queue.

The reason is that the setRegionDestination method will set the message memory usage instance only if it is null and in this case it is not.

The solution is to null out the memory usage of the message before forwarding it to the queue.  This will insure that the proper memory usage instance is being used.
",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3669,,,,0.0,1.0,,1|hzkinz:,179993,,,,,,,,24/May/12 4:09 PM;tabish121;Fix was committed on Apache.  Should allow the tests to run a few times before looking at a back port.,,,,,,,,,,,,,,,,,,,
CachedLDAPAuthorizationMap can't reconnect to LDAP Server if the LDAP server was temporarily down,MB-1161,12516568,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,16/May/12 3:04 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,11/Jun/12 1:13 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,0,,"CachedLDAPAuthorizationMap can't reconnect to LDAP Server if the LDAP server was temporarily down.

To reproduce configure the CachedLDAPAuthorizationMap with a short ""refreshInterval"" and shutdown the ldap server ,wait > refreshInterval and start the ldap server again.

{quote}
2012-05-16 15:51:31,425 | DEBUG | Updating authorization map! | org.apache.activemq.security.CachedLDAPAuthorizationMap | ActiveMQ Transport: tcp:///127.0.0.1:54055
2012-05-16 15:51:31,425 | ERROR | Error updating authorization map | org.apache.activemq.security.CachedLDAPAuthorizationMap | ActiveMQ Transport: tcp:///127.0.0.1:54055
javax.naming.CommunicationException: connection closed [Root exception is java.io.IOException: connection closed]; remaining name 'ou=Destination,ou=ActiveMQ,ou=system'
	at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1983)
	at com.sun.jndi.ldap.LdapCtx.searchAux(LdapCtx.java:1827)
	at com.sun.jndi.ldap.LdapCtx.c_search(LdapCtx.java:1752)
	at com.sun.jndi.toolkit.ctx.ComponentDirContext.p_search(ComponentDirContext.java:368)
	at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:338)
	at com.sun.jndi.toolkit.ctx.PartialCompositeDirContext.search(PartialCompositeDirContext.java:321)
	at javax.naming.directory.InitialDirContext.search(InitialDirContext.java:248)
	at org.apache.activemq.security.CachedLDAPAuthorizationMap.query(CachedLDAPAuthorizationMap.java:121)
	at org.apache.activemq.security.CachedLDAPAuthorizationMap.getAllEntries(CachedLDAPAuthorizationMap.java:226)
	at org.apache.activemq.security.DefaultAuthorizationMap.getReadACLs(DefaultAuthorizationMap.java:94)
	at org.apache.activemq.security.AuthorizationBroker.addConsumer(AuthorizationBroker.java:113)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:558)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.io.IOException: connection closed
	at com.sun.jndi.ldap.LdapClient.ensureOpen(LdapClient.java:1558)
	at com.sun.jndi.ldap.LdapClient.search(LdapClient.java:503)
	at com.sun.jndi.ldap.LdapCtx.doSearch(LdapCtx.java:1965)
	... 23 more
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3845,,,,0.0,1.0,,1|hzkipb:,179999,,,,,,,,"11/Jun/12 1:13 PM;dbosanac;It's fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches. You can also find a snapshot (20120611.122533-24) with the fix in the repo

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/

Besides main issue, some more cached ldap auth module fixes have been merged back:

* https://issues.apache.org/jira/browse/AMQ-3322
* https://issues.apache.org/jira/browse/AMQ-3749
* https://issues.apache.org/jira/browse/AMQ-3770
* https://issues.apache.org/jira/browse/AMQ-3791",,,,,,,,,,,,,,,,,,,
Assignment accidentally commented out in ActiveMQ-CPP v3.4.0,MB-1160,12516567,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,rkieley,rkieley,11/May/12 8:20 PM,16/May/12 3:16 PM,29/Nov/16 4:15 PM,16/May/12 3:16 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"In ConnectionStateTracker.cpp line 594 we see:
{code}
Pointer<ConnectionId> connectionId;// =
                ack->getConsumerId()->getParentId()->getParentId();
{code}","OSX 10.7.4, ActiveMQ-CPP v3.4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQCPP-402,,,,0.0,1.0,,1|hzkimn:,179987,,,,,,,,16/May/12 3:16 PM;tabish121;This is resolved in the 3.4.x branch at apache and will be removed completely in trunk.  The tracker shouldn't be tracking acks as they can be stale on reconnect.  Instead the consumer rollback and redeliver will ack the message on a successful redelivery and commit.  The code in 3.4.x was doing the right thing in ignoring them but removing the body of the method makes this more clear.,,,,,,,,,,,,,,,,,,,
The current sslContext element does not provide the ability to define the keystore key password key.,MB-1159,12516566,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,mhernon,mhernon,11/May/12 7:09 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,14/May/12 2:00 PM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,broker,,,0,,Raising this MB to track backporting the ENH-100 to MB 5.5.1. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3822,,,,0.0,0.0,,1|hzkilz:,179984,,,,,,,,,,,,,,,,,,,,,,,,,,,
STOMP 1.1 specification does not allow trimming of header values,MB-1154,12516561,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,01/May/12 4:34 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,19/Jun/12 4:05 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,broker,,,0,,,tested on Fuse MB 5.5.1-fuse-04-01,,,,,,,,,,,,,,01/May/12 5:18 PM;pfox;Stomp11HeaderTest.java;https://issues.jboss.org/secure/attachment/12368995/Stomp11HeaderTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3823,,,,1.0,3.0,,1|hzkis7:,180012,,,,,,,,"01/May/12 4:39 PM;pfox;In the Stomp 1.1 spec (http://stomp.github.com/stomp-specification-1.1.html#Standard_Headers) in the last line in section ""Value Encoding"" the last paragraph states 

{code}
The STOMP 1.0 specification included many example frames with padding in the headers and many servers and clients were implemented to trim or pad header values.
This causes problems if applications want to send headers that SHOULD not get trimmed. In STOMP 1.1, clients and servers MUST never trim or pad headers with spaces.
{code}

In 5.5.1-fuse-04-01 if I send the following STOMP frame to the broker (note the ""foo"" header):
{code}

2012-05-01 18:25:20,728 [main           ] - INFO  StompPropertyTest              - Frame sent:SEND
foo: abc 
bar:123
destination:/queue/org.apache.activemq.transport.stomp.StompPropertyTest.testSendMessageWithLeadingSpaces

Hello World

{code}

I receive the STOMP frame back from the broker as:

{code}

2012-05-01 18:25:20,774 [main           ] - INFO  StompPropertyTest              - Frame received:MESSAGE
message-id:ID:Progresss-MacBook-Pro.local-64520-1335889520381-4:1:-1:1:1
JMSXUserID:system
foo:abc
destination:/queue/org.apache.activemq.transport.stomp.StompPropertyTest.testSendMessageWithLeadingSpaces
timestamp:1335889520729
expires:0
subscription:12345
priority:4
bar:123

Hello World

{code} 

The leading and trailing spaces of the foo header value has been removed.",01/May/12 5:18 PM;pfox;Added Stomp11HeaderTest.java to capture the issue in a test,"06/Jun/12 3:21 PM;joe.luo;Tested with 5.5.1-fuse-06-03 and the problem still persists. 

Here I modified the Stomp11HeaderTest.java to send a slightly different STOMP frame:
{code}
String message = ""SEND\n"" + "" foo: abc \n"" + ""destination:/queue/"" + getQueueName() + ""\n\n""
 + ""Hello World"" + Stomp.NULL;
{code}
you can see a leading space before "" foo: acb \n"". 

Here is logging output for STOMP frame sent:
{code}
2012-06-06 15:46:50,519 [main           ] - INFO  StompTest                      - CLIENT SENT: SEND
 foo: abc
destination:/queue/org.apache.activemq.transport.stomp.Stomp11HeaderTest.testHeaderValueLeadingSpaces

Hello World^@
{code}

STOMP frame received:
{code}
2012-06-06 15:46:50,575 [main           ] - INFO  StompTest                      - CLIENT RECEIVED: MESSAGE
message-id:ID:jluoMac-52655-1338994010209-4:1:-1:1:1
JMSXUserID:system
foo: abc
destination:/queue/org.apache.activemq.transport.stomp.Stomp11HeaderTest.testHeaderValueLeadingSpaces
timestamp:1338994010520
expires:0
subscription:12345
priority:4

Hello World
{code}

And if modify the line #144
{code}
144         assertEquals("" foo header value"","" abc "",stompFrame.getHeaders().get("" foo""));
{code}
assertion then failed with following stack trace:
{quote}
testHeaderValueLeadingSpaces(org.apache.activemq.transport.stomp.Stomp11HeaderTest)  Time elapsed: 3.212 sec  <<< FAILURE!
junit.framework.ComparisonFailure: foo header value expected:< abc > but was:<null>
        at junit.framework.Assert.assertEquals(Assert.java:81)
        at org.apache.activemq.transport.stomp.Stomp11HeaderTest.testHeaderValueLeadingSpaces(Stomp11HeaderTest.java:144)
{quote}
",,,,,,,,,,,,,,,,,
DequeueCount not increase on topics w/ durable subs,MB-1153,12516560,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,raul.kripalani,raul.kripalani,01/May/12 4:26 PM,04/May/12 2:23 PM,29/Nov/16 4:15 PM,,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Running on FMB 5.5.1-fuse-03-06, when messages are sent to topics with durable subscribers, the DequeueCount does not increase even if the subscribers are up and consuming on-line. However, if the same test is run on a topic with normal non-durable subscribers, the DequeueCount increases with as many acks as received.

You can reproduce the behaviour using the Ant scripts in the example/ directory of the distribution. Open two consoles:

*Durable subs (buggy scenario):*
{code}
ant consumer -Ddurable=true -Dtopic=true -DclientId=foo
ant producer -Dtopic=true
{code}

*Non-durable subs (increases correctly):*
{code}
ant consumer -Dtopic=true
ant producer -Dtopic=true
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkikv:,179979,,,,,,,,,,,,,,,,,,,,,,,,,,,
The defined SslContext is not used by the https transport protocol.,MB-1152,12516558,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,ccorsi1,ccorsi1,30/Apr/12 9:49 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,10/May/12 2:25 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,,,,0,,"The sslcontext that is defined using the broker configuration file is not used by the https transport protocol.

The problem is that we do not propagate the defined SslContext instance to the https transport.
We currently only allow us to use the standard properties to setup the https transport.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3827,,,,0.0,0.0,,1|hzkilj:,179982,,,,,,,,,,,,,,,,,,,,,,,,,,,
linux-x86-32 activemq wrapper not restarting correctly,MB-1151,12516559,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,socallag,socallag,26/Apr/12 4:16 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.5.1-fuse-01-13,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"The wrapper does start but does throw an java.lang.UnsatisfiedLinkError, see below.
The wrapper also seems to correctly ping the broker, however once the broker dies, the wrapper fails to restart the broker



jvm 1    | Wrapper Manager: Registering shutdown hook
jvm 1    | Wrapper Manager: Using wrapper
jvm 1    | Load native library.  One or more attempts may fail if platform specific libraries do not exist.
jvm 1    | Loading native library failed: libwrapper-linux-x86-32.so  Cause: java.lang.UnsatisfiedLinkError: no wrapper-linux-x86-32 in java.library.path
jvm 1    | Loaded native library: libwrapper.so
jvm 1    | Calling native initialization method.
jvm 1    | Inside native WrapperManager initialization method
jvm 1    | Java Version   : 1.6.0_22-b22 OpenJDK Server VM
jvm 1    | Java VM Vendor : Sun Microsystems Inc.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkif3:,179953,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ RAR Interop issues with WebSphere 8.0,MB-1147,12516554,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,sjavurek,sjavurek,24/Apr/12 3:51 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,12/Oct/12 9:10 PM,5.5.1-fuse-03-04,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,,,,0,,"Hi, 

We've been battling some interop issues with WebSphere. Dave and I decided to open a bug report up to explore alternative implementations to see if we can avoid the issue in WebSphere.  It may very well be that we can not and that customer will need to go back to IBM for complete resolution.  

Note, I'll add exact details of how to navigate websphere in separate comment.

*1.  slf4j libraries. * 

A. Install RAR and create a connection factory. Restart the application server. 

	Results from \ibm\WebSphere\AppServer\profiles\AppSrv01\logs\SystemOut.log:

	{code}
	java.lang.NoClassDefFoundError: org.slf4j.LoggerFactory
	at org.apache.activemq.ra.ActiveMQConnectionSupport.<init>(ActiveMQConnectionSupport.java:34)
	at org.apache.activemq.ra.ActiveMQResourceAdapter.<init>(ActiveMQResourceAdapter.java:64)
	at java.lang.J9VMInternals.newInstanceImpl(Native Method)
	at java.lang.Class.newInstance(Class.java:1355)
	at com.ibm.ejs.j2c.RAWrapperImpl.createAndConfigureRA(RAWrapperImpl.java:2227)
	at com.ibm.ejs.j2c.RAWrapperImpl.startRA(RAWrapperImpl.java:704)
	at com.ibm.ejs.j2c.RALifeCycleManagerImpl.startRA(RALifeCycleManagerImpl.java:1160)
	at com.ibm.ejs.j2c.RALifeCycleManagerImpl.resourceProviderEvent(RALifeCycleManagerImpl.java:879)
	at com.ibm.ws.runtime.component.ResourceMgrImpl$ResourceEventListenerFilterProxy.resourceProviderEvent(ResourceMgrImpl.java:2208)
	at com.ibm.ws.runtime.component.ResourceMgrImpl.notifyResourceEventListeners(ResourceMgrImpl.java:1622)
	{code}

B.  As WebSphere also has a version of slf4j, I tried removing these files from the RAR file to let it use the WebSphere ones. Unfortunately, it's annoyed that it can not find them:

	{code}
	J2CA0646E: An unexpected exception occurred in the Update service, exception: J2CA0646E: An unexpected exception occurred in the 
	Update service, exception: ADMN0051E: The service failed to introspect the class:org.apache.activemq.ra.ActiveMQResourceAdapter. The
 	exception is com.ibm.websphere.management.exception.AdminException: ADMN0051E: The service failed to introspect the
 	class:org.apache.activemq.ra.ActiveMQResourceAdapter. The exception is java.lang.NoClassDefFoundError: org.slf4j.impl.StaticLoggerBinder
	{code}

	These are the very files it says it can't find later on....

C.  Isolating the resource.  There is an option on the Resource adapter page to say do not use WebSphere classpath but have your own for this resource.  With this approach, I can get further if I add the slf4j libraries already in WebSphere to the classpath definition AND remove the slf4j libraries from the installedConnector. So to be clear:

	1. From admin console add the following to the ActiveMQ definition for classpath:

{code}
		${WAS_INSTALL_ROOT}/plugins/slf4j-api-1.5.6.jar
		${WAS_INSTALL_ROOT}/plugins/slf4j-jdk14-1.5.6.jar
		${CONNECTOR_INSTALL_ROOT}activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-ra-5.6-fuse-SNAPSHOT.jar
		${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-core-5.6-fuse-SNAPSHOT.jar
{code}
		Note, am using the WebSphere slf4j jars now.

		BTW, I'm using the 5.6 RAR because of https://issues.apache.org/jira/browse/AMQ-3803 although,  I have the same results in 5.5.1-fuse-03-06.

	2.  Delete C:\IBM\WebSphere\AppServer\profiles\AppSrv01\installedConnectors\activemq-rar-5.6-fuse-20120202.161426-30.rar\slf4j*

	If I don't delete these libraries, I end up with error regarding multiple versions found in the SystemErr.out file. 


2. Simple Producer

After getting through the above scenario, I've been trying to run a producer to resolve a few jndi contexts and send a message. As the resource adapter is isolated, I had to add a shared reference library with activemq core otherwise, I get a class cast exception on the destination returned.  Unfortunately, I'm stuck on:

{quote}
Calling test function ...Setting inital context Exception occured during send: Could not create Transport. Reason: java.io.IOException: Transport scheme NOT recognized: [tcp] javax.jms.JMSException: Could not create Transport. Reason: java.io.IOException: Transport scheme NOT recognized: [tcp] at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:35) at org.apache.activemq.ActiveMQConnectionFactory.createTransport(ActiveMQConnectionFactory.java:250) at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:263) at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:190) at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:79) at org.apache.activemq.ra.ActiveMQConnectionSupport.makeConnection(ActiveMQConnectionSupport.java:61) at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.createManagedConnection(ActiveMQManagedConnectionFactory.java:169) at com.ibm.ejs.j2c.FreePool.createManagedConnectionWithMCWrapper(FreePool.java:2038) at com.ibm.ejs.j2c.FreePool.createOrWaitForConnection(FreePool.java:1719) at com.ibm.ejs.j2c.PoolManager.reserve(PoolManager.java:3166) at com.ibm.ejs.j2c.PoolManager.reserve(PoolManager.java:2529) at com.ibm.ejs.j2c.ConnectionManager.allocateMCWrapper(ConnectionManager.java:1499) at 
{quote}

From what I can tell this looks to be an issue once again with the classpath but in this case it's either finding multiple versions of activemq-core or finding it twice. I just don't see how that is as without the core file in the shared library I get a different error.  The reason this is interesting is that in 5.3.2 version which customer is currently using, all this works ok as they don't have to use the isolate resource option.  Ideally, we'd want to avoid having them to use that. ",,,,,,,,,,,,,,,24/Apr/12 6:14 PM;sjavurek;App1.jpg;https://issues.jboss.org/secure/attachment/12368979/App1.jpg,24/Apr/12 6:14 PM;sjavurek;App2.jpg;https://issues.jboss.org/secure/attachment/12368980/App2.jpg,24/Apr/12 6:14 PM;sjavurek;App3.jpg;https://issues.jboss.org/secure/attachment/12368983/App3.jpg,24/Apr/12 6:15 PM;sjavurek;App4.jpg;https://issues.jboss.org/secure/attachment/12368981/App4.jpg,24/Apr/12 6:17 PM;sjavurek;SimpleJndiProducer 2.zip;https://issues.jboss.org/secure/attachment/12368990/SimpleJndiProducer+2.zip,24/Apr/12 6:15 PM;sjavurek;ra-j2c-fact.jpg;https://issues.jboss.org/secure/attachment/12368982/ra-j2c-fact.jpg,24/Apr/12 6:15 PM;sjavurek;ra-j2c-queue.jpg;https://issues.jboss.org/secure/attachment/12368984/ra-j2c-queue.jpg,24/Apr/12 6:15 PM;sjavurek;ra-j2c-queue2.jpg;https://issues.jboss.org/secure/attachment/12368985/ra-j2c-queue2.jpg,24/Apr/12 6:16 PM;sjavurek;ra1.jpg;https://issues.jboss.org/secure/attachment/12368989/ra1.jpg,24/Apr/12 6:15 PM;sjavurek;ra2-updated.jpg;https://issues.jboss.org/secure/attachment/12368986/ra2-updated.jpg,24/Apr/12 6:15 PM;sjavurek;ra2.jpg;https://issues.jboss.org/secure/attachment/12368987/ra2.jpg,24/Apr/12 6:15 PM;sjavurek;shared_lib1.jpg;https://issues.jboss.org/secure/attachment/12368988/shared_lib1.jpg,,,,,,,,,,,,,,,12.0,4.0,,1|hzkjrb:,180169,,,,,,,,"24/Apr/12 6:05 PM;sjavurek;+Test Case 1: - Original issue+

1.   Start the container (start menu, IBM WebSphere, IBM WebSphere AppSvr 8.0, AppSrv01, Start Server)
2.    Bring up the web console admin

https://<WebSphere IP>:9043/ibm/console/login.do?action=secure

3.  Navigate to the resource Adapters panel under Resources and add a new Resource Adapter (RA1.jpg and RA2.jpg).
4.  Under same panel (Resource Adapters), create a new J2C connection factory (RA-j2c-fact.jpg). Please keep the JNDI name same so the producer test will work later on. 
5.  Under same panel (Resource Adapters), create a new J2C administered object for our queue (RA-j2c-queue.jpg). Please keep the JNDI name same so test will work later on.
6. After creating the queue, click on the ""J2C administered objects custom properties"" under Additional properties to the right. Add the actual queue name (RA-j2c-queue2.jpg)
7. At this point, stop the server and start it again (menu option from step 1)
8. Check the log in C:\IBM\WebSphere\AppServer\profiles\AppSrv01\logs\server1\SystemOut.log and search for eis\AMQ or activemq.  You'll see the class not found error. 


+Test Case 2: Potential work around albeit un-elegant:+

1. Return to the admin console and definition of our resource adapter.  Update the classpath and select ""isolate resource"" (ra-updated.jpg). For easy cutting and pasting here is classpath I used:

{code}

${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar
${WAS_INSTALL_ROOT}/plugins/slf4j-api-1.5.6.jar
${WAS_INSTALL_ROOT}/plugins/slf4j-jdk14-1.5.6.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-core-5.6-fuse-SNAPSHOT.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-ra-5.6-fuse-SNAPSHOT.jar

{code}

2.  Stop the server.  If you restart it from this point, the C:\IBM\WebSphere\AppServer\profiles\AppSrv01\logs\server1\SystemErr.log will complain that i found two slf4j libs. The only way I saw to avoid this issue was to delete the libraries out of RAR file *after* it was installed.  WebSphere keeps these files in:

C:\IBM\WebSphere\AppServer\profiles\AppSrv01\installedConnectors\activemq-rar-5.6-fuse-20120202.161426-30.rar

With server down, do an erase slf4j*.

3. Restart the server and we no longer see any errors in the log although I'm not sure the broker started.

 If I do *not* use isolate resources, I can not get around this issue even by copying the slf4j libraries above into the rare directory or the \ibm\WebSphere\AppServer\lib\ext directory which should be picked up by everything ....

+Test Case 3: Try to run a simple test with attached SimpleJNDIServlet.+

1.  The servlet was built with NetBeans as I tested all this stuff with GlassFish.  After compiling it, you'll need to deploy it to WebSphere.

2.  From the WebSphere Admin panel go to Applications, ApplicationTypes, WebSphere enterprise applications and click Install.  Point to the JAR file from the servlet. I accepted all the defaults and gave a context of ""test3""

3. Try to run the servlet:

http://<WebSphere IP Addr>:9080/test3/FuseSourceExample

In this scenario you'll get a class cast exception on the destination. I changed the code to inspect the object to see what it was and and then did the normal call to demonstrate the exception in this case:

{code}

            
            Object o = jndiContext.lookup(destinationName);
            if (o instanceof Destination) {
                pw.println(""is a desination!!!!!!!"");
                destination = (Destination)o;
            } else {
                pw.println(""Not a destination ..."");
                Reference ref = (Reference)o;
               
                pw.println(""Assuming we got a reference ... details: "" + ref.toString());
              
            }

          // Added this back in just so you can see the error
          destination = (Destination)jndiContext.lookup(destinationName);
             
{code}

With output:

{quote}
alling test function ...Setting inital context Not a destination ... Assuming we got a reference ... details: Reference Class Name: org.apache.activemq.command.ActiveMQQueue Type: physicalName Content: MyPhysicalTestQueue JNDI API lookup failed: javax.naming.Reference incompatible with javax.jms.Destination java.lang.ClassCastException: javax.naming.Reference incompatible with javax.jms.Destination at com.fusesource.example.SusanUtil.sendMessage(SusanUtil.java:104) at
{quote}

The customer tells me they never had this error until the isolated the resource as such no one else in the container has access to it so I created a shared library  to get around this issue:

1.  From WebSphere console, go to Environment, SharedLibraries and click new (shared_lib1.jbp)
2.   Classpath used:

{code}
${WAS_INSTALL_ROOT}/plugins/slf4j-api-1.5.6.jar
${WAS_INSTALL_ROOT}/plugins/slf4j-jdk14-1.5.6.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-core-5.6-fuse-SNAPSHOT.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-ra-5.6-fuse-SNAPSHOT.jar
{code}

I used isolate class loader to keep things tidy (although have same results regardless of how this one is set).

3.  Tell the application about the shared library by going back to the Applications, Application Types, WebSphere Enterprise Applications and selecting your servlet.  (app1.jpg)
4.  Click on Shared library references towards bottom left hand pane which takes you to another screen (app2.jpg)
5.  Check the application and click on References button. 
6.  From this screen (app3.jpg), you'll see the library we just created. Select it and click the right arrow to move it to the right hand column box. Click ok. Note, you should see the Shared Library listed in the table now (as is on app2.jpg).
7. Keep clicking ok until you reach the main application page (app4.jpg).  On this page be sure to click ""save"" to save your changes.  As it says, sometimes you have to restart the server. I usually try the test first and if I have the same results bounce it. 

For the most part I get bad transport exception:

{code}
org.apache.activemq.ra.ActiveMQConnectionFactory@1da5414 Exception occured during send: Could not create Transport. Reason: java.io.IOException: Transport scheme NOT recognized: [tcp] javax.jms.JMSException: Could not create Transport.
{code}

although once I received:


{code}
org.apache.activemq.ra.ActiveMQConnectionFactory@1a1a945 Exception occured during send: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused: connect javax.jms.JMSException: Could not connect to broker URL: tcp://localhost:61616. Reason: java.net.ConnectException: Connection refused: connect at
{code}

The latter was after monkeying around with the settings, removing shared library and then adding it back in to whip up this text.  After restarting the server, I was back to above error. 

After googling around I found a thread by Gary that says these types of errors can occur more than one classloader involved and that  either all of the activemq classes must be shared by all RARs or embedded in the RAR so that it each RAR gets its own copy. As such, I took one more effort and added all the jars specifically to both shared library and the RAR:

{code}
${WAS_INSTALL_ROOT}/plugins/slf4j-api-1.5.6.jar
${WAS_INSTALL_ROOT}/plugins/slf4j-jdk14-1.5.6.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-core-5.6-fuse-SNAPSHOT.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-ra-5.6-fuse-SNAPSHOT.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/activemq-protobuf-1.1.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/aopalliance-1.0.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/commons-logging-1.1.1.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/commons-net-2.2.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/derby-10.1.3.1.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/geronimo-j2ee-management_1.1_spec-1.0.1.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/jasypt-1.8.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/kahadb-5.6-fuse-SNAPSHOT.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/org.osgi.core-4.1.0.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/spring-aop-3.0.6.RELEASE.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/spring-asm-3.0.6.RELEASE.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/spring-beans-3.0.6.RELEASE.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/spring-context-3.0.6.RELEASE.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/spring-expression-3.0.6.RELEASE.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/xbean-spring-3.9.jar
${CONNECTOR_INSTALL_ROOT}/activemq-rar-5.6-fuse-20120202.161426-30.rar/spring-core-3.0.6.RELEASE.jar
{code}

Same thing ... it's a hornets nest of classpath loaders and would be great if we could get it to work at all /improve it so it isn't so cumbersome.  Note, it may very well be action items on IBM but we thought we would explore it here.

I'm on vacation for the next couple of weeks but when I'm back please let me know if there is anything more I can do. I can't tell you how much I want to see this work! :-) 











","20/Jul/12 3:21 PM;sjavurek;Classpath fix seems to have solved the issue. (com.ibm.ws.bootstrap.ExtClassLoadter was treating the org.slf4j.LoggerFactory as ""Protectect"" because the slf4j-api-1.5.6.jar and slf4j-jdk14-1.5.6.jar files were in the <install>\AppServer\plugins directory. I removed the files and was able to start the application,) Closing.","14/Aug/12 9:48 PM;sjavurek;Just adding a comment that the following setting when starting WAS also fixes this issue:

-Dcom.ibm.ws.bootstrap.allowLocalProtectedLoads=true","30/Jan/13 5:56 PM;sjavurek;This issue is also fixed in the latest service pack of 8.0. It re-appears in 8.5 out of the box but after applying  Service Pack 1, it works ok without changing the startup settings.",,,,,,,,,,,,,,,,
Invalid error: NACK received but connection is in v1.0 mode using a STOMP client,MB-1144,12516552,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,19/Apr/12 1:56 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/Apr/12 6:23 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,,,,0,,"Affects 5.5.1-fuse-04-01

Perl script attached reproduces error below when run against a STOMP broker:

Broker output:
{code}
WARN | Exception occurred processing: 
NACK
message-id:ID:Seans-Mac.local-50104-1334840051223-2:1:-1:1:1
subscription:test

: org.apache.activemq.transport.stomp.ProtocolException: NACK received but connection is in v1.0 mode.

{code}",,,,,,,,,,,,,,,19/Apr/12 1:57 PM;socallag;DEV-4032.pl;https://issues.jboss.org/secure/attachment/12368978/DEV-4032.pl,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3670,,,,1.0,1.0,,1|hzkie7:,179949,,,,,,,,20/Apr/12 6:23 PM;tabish121;Merged fix for AMQ-3670 to resolve NACK issues.,,,,,,,,,,,,,,,,,,,
Fuse MB ruby example doesn't show any messages on topic and hence doesn't work as expected. ,MB-1142,12516550,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ubhole,ubhole,18/Apr/12 12:34 PM,18/Apr/12 12:36 PM,29/Nov/16 4:15 PM,,5.4.2-fuse-05-26,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Fuse MB Ruby example even though starts when typed anything on the console doesn't send it to topic and hence it doesn't appear on other side. It needs to be fixed or if the example is working the README needs more information as to what was done wrong to avoid same behavior being seen again.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkibj:,179937,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fuse MB ruby example README should explain usage a bit more in details. ,MB-1141,12516549,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,,ubhole,ubhole,18/Apr/12 12:31 PM,18/Apr/12 12:31 PM,29/Nov/16 4:15 PM,,5.4.2-fuse-05-26,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"README.txt from Fuse MB examples/ruby should mention it needs stomp transport connector configured in activemq configuration. (By default only openwire connector is configured) Also, the readme doesn't talk anything about listener.rb and publisher.rb as such. It should atleast clarify for what they are used and if they are needed by catstomp.rb and stompcat.rb

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkib3:,179935,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker performance does not scale with multiple consumers when using JDBC persistence adapter.,MB-1140,12516548,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,13/Apr/12 3:14 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Jun/12 10:45 AM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,broker,,,1,,"The brokers throughput should scale with multiple concurrent consumers connected. This is the case when kahadb is used as the persistence adapter but its not the case when running the broker with the JDBC persistence adapter. 
The JDBC persistence adapter should be improved to scale similarly to KahaDB.

",JDBC persistence adapter,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2868,,,,0.0,1.0,,1|hzkj2v:,180058,,,,,,,,"01/Jun/12 10:45 AM;dbosanac;We removed synchronization on commit in the transaction store used by JDBC, as it is not needed any more. This should improve performances of this use case (all the tests indicate so). The snapshot with this change (20120601.101605-21) is available at

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Have ActiveMQ JDBC persistence adapter support XA transactions layered over a JDBC XA driver,MB-1139,12516547,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,mielket,mielket,13/Apr/12 3:08 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,14/Jun/12 4:07 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,broker,,,1,,"The JDBC persistence adapter currently ignores the call to a TX prepare in a two phase commit XA transaction.
If the broker dies after the prepare but before the commit, it is not able to recover the transaction as no data is persisted in the prepare phase. If at the same time all other resources of the XA transaction have committed, the data is in an inconsistent state. 

This bug is to request that the broker writes the transaction information in the prepare phase into the JDBC database, leveraging the XA JDBC driver.



","JDBC persistence adapter, XA transactions",,,,,,,,,,MB-1127,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3872,,,,0.0,4.0,,1|hzkiqv:,180006,,,,,,,,"13/Apr/12 3:09 PM;mielket;This bug is similar to MB-1127 but this bug requests the proper fix, whereas MB-1127 only requests that the broker returns an error to the tx manager in case it is asked about a tx that it does not know about.

",01/Jun/12 11:33 AM;garytully;Linking to https://issues.apache.org/jira/browse/AMQ-3872 at apache. ,"01/Jun/12 2:49 PM;garytully;Using JDBC XA is not a flier due to the simple single table schema, an update lock in a prepared transaction blocks all table scans and leaves the broker inoperable.

The current implementation does work on prepare (insert/update) and also work on the outcome. The outcome (commit|rollback) requires an update so row level locking. 
some more detail in: https://issues.apache.org/jira/browse/AMQ-3872?focusedCommentId=13287450&page=com.atlassian.jira.plugin.system.issuetabpanels:comment-tabpanel#comment-13287450",12/Jun/12 11:07 AM;garytully;snapshot available: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120612.104045-26-bin.tar.gz,,,,,,,,,,,,,,,,
Backport of AMQ-1853 to 5.5.1 branch,MB-1138,12516546,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,pfox,pfox,13/Apr/12 9:11 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,19/Apr/12 6:43 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,broker,,,0,,Place holder for back porting AMQ-1853 to 5.5.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkidb:,179945,,,,,,,,19/Apr/12 6:43 PM;garytully;fix back ported to 5.5.1-fuse and new snapshot deployed.,,,,,,,,,,,,,,,,,,,
.net consumers frequently fail to reconnect after broker outage/failover.,MB-1137,12516545,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,13/Apr/12 9:08 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,19/Apr/12 12:40 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"When using the failover transport we frequently see consumers fail to reconnect after failover between brokers or a broker outage. This behaviour is something we have been able to easily replicate in a test environment.

The failure seems exagerated when connecting to a remote broker, we've tried to replicate it running the producers and consumers on the same local host but with no joy.

Processes/connections that work purely as producers don't experience the same problem. In our tests frequently failing can cause all consumers to disconnect. The failure doesn't occurr unless broker is under load i.e. when producers must be active for failure to occur.

The NMS client's connection threads and failover threads appear to have died/ended after a consumer fails to failover.

Broker config is attached.

Client connections use AsyncSend = true and have WatchTopicAdvisories = false (to avoid AMQNET-371). We've also tested this with and without DispatchAsync = true .

Error messages - nothing obvious in NMS Trace or broker logs though we have on occasion whilst performing this test seen the messages detailed in AMQNET-370.

Test code available at https://github.com/chillitom/NmsFailoverTest
",Apache.NMS.ActiveMQ v1.5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQNET-379,,,,0.0,1.0,,1|hzkic7:,179940,,,,,,,,"19/Apr/12 12:40 PM;tabish121;Reported as resolved by the customer.  Tests show the issues is fixed, will be in the next release. v1.5.5",,,,,,,,,,,,,,,,,,,
PendingMessages not being dispatched to DurableSubscriber,MB-1136,12516544,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,jsherman,jsherman,11/Apr/12 7:00 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Jun/12 1:31 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,broker,,,0,,"Seems there might be an issue with DurableSubscribers and messages being dispatched to the consumer.  It was reported that the PendingQueueSize shows message, however they dont appear to be dispatched to the consumer.","5.5.1-fuse-03-06
5.4.2-fuse",,,,,,,,,,,,,,29/May/12 9:57 PM;tabish121;DurableSubscriberNonPersistentMessageTest.java;https://issues.jboss.org/secure/attachment/12368996/DurableSubscriberNonPersistentMessageTest.java,11/Apr/12 7:11 PM;jsherman;DurableTopicSubscribers.jpg;https://issues.jboss.org/secure/attachment/12368971/DurableTopicSubscribers.jpg,11/Apr/12 7:11 PM;jsherman;PendingMessage-ConsumerRestarted.jpg;https://issues.jboss.org/secure/attachment/12368972/PendingMessage-ConsumerRestarted.jpg,11/Apr/12 7:11 PM;jsherman;PendingMessage-TestComplete.jpg;https://issues.jboss.org/secure/attachment/12368970/PendingMessage-TestComplete.jpg,21/May/12 9:46 PM;jsherman;broker-test.zip;https://issues.jboss.org/secure/attachment/12368994/broker-test.zip,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3871,,,,5.0,2.0,,1|hzkiof:,179995,,,,,,,,"12/Apr/12 7:30 PM;jsherman;Attached test case.  

This test shows that Non-Persistent messages are not being cleaned up on durable subscribers.  The messages will not be delivered to the consumer, yet they remain and the broker stats for CursoryMemoryUsage and PendingQueueSize reflect these messages.

I have tested this against Apache ActiveMQ 5.5.1 and it does not have the same behavior and the attached test case passes.",21/May/12 9:46 PM;jsherman;Updated test case to work with Apache 5.6,,,,,,,,,,,,,,,,,,
Back port AMQ-3588 to Fuse Message Broker 5.3.0.5,MB-1135,12516543,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Cannot Reproduce Bug,,jsherman,jsherman,05/Apr/12 6:30 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,27/Apr/12 3:11 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,Is it possible to have the fix for https://issues.apache.org/jira/browse/AMQ-3588 back ported to the Fuse 5.3.0.5 branch?,"activemq-rar-5.3.0.5-fuse.rar
Weblogic (rar) 
JDK = 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3588,,,,0.0,0.0,,1|hzkifz:,179957,,,,,,,,,,,,,,,,,,,,,,,,,,,
Why do we need to get the Size/Count of the Topic messages during consumer remove,MB-1134,12516541,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ccorsi1,ccorsi1,05/Apr/12 4:03 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,05/Sep/12 10:23 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-08-15,,,,broker,,,0,,"Opened to ticket to investigate why there is a call to the store when unsubscribing if keepDurableSubsActive=true

Here is the stack trace showing the thread that is making the call to the getMessageCount.

{noformat}
ActiveMQ Transport: tcp:///127.0.0.1:54115
sun.misc.Unsafe.park at line #-2
java.util.concurrent.locks.LockSupport.park at line #186
java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt at line #834
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued at line #867
java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire at line #1197
java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock at line #945
org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.getMessageCount at line #782
org.apache.activemq.store.ProxyTopicMessageStore.getMessageCount at line #116
org.apache.activemq.broker.region.cursors.TopicStorePrefetch.getStoreSize at line #83
org.apache.activemq.broker.region.cursors.AbstractStoreCursor.resetSize at line #66
org.apache.activemq.broker.region.cursors.AbstractStoreCursor.gc at line #246
org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.stop at line #98
org.apache.activemq.broker.region.DurableTopicSubscription.deactivate at line #171
org.apache.activemq.broker.region.TopicRegion.removeConsumer at line #164
org.apache.activemq.broker.region.RegionBroker.removeConsumer at line #473
org.apache.activemq.broker.jmx.ManagedRegionBroker.removeConsumer at line #266
org.apache.activemq.broker.BrokerFilter.removeConsumer at line #117
org.apache.activemq.broker.BrokerFilter.removeConsumer at line #117
org.apache.activemq.broker.MutableBrokerFilter.removeConsumer at line #123
org.apache.activemq.broker.TransportConnection.processRemoveConsumer at line #580
org.apache.activemq.broker.TransportConnection.processRemoveSession at line #617
org.apache.activemq.command.RemoveInfo.visit at line #74
org.apache.activemq.broker.TransportConnection.service at line #291
org.apache.activemq.broker.TransportConnection$1.onCommand at line #149
org.apache.activemq.transport.MutexTransport.onCommand at line #50
org.apache.activemq.transport.WireFormatNegotiator.onCommand at line #113
org.apache.activemq.transport.AbstractInactivityMonitor.onCommand at line #229
org.apache.activemq.transport.TransportSupport.doConsume at line #83
org.apache.activemq.transport.tcp.TcpTransport.doRun at line #215
org.apache.activemq.transport.tcp.TcpTransport.run at line #197
java.lang.Thread.run at line #722
{noformat}
",,,,,,,,,,,,,,,18/Apr/12 2:13 PM;tabish121;AbstractStoreCursor.java;https://issues.jboss.org/secure/attachment/12368976/AbstractStoreCursor.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3999,,,,1.0,1.0,,1|hzkjg7:,180119,,,,,,,,05/Sep/12 10:23 AM;garytully;fix on 5.5.1-fuse branch,,,,,,,,,,,,,,,,,,,
"DurableSubProcessWithRestartTest , acknowledged messages appear to intermittently be redelivered to the subscriber",MB-1133,12516542,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,pfox,pfox,05/Apr/12 9:59 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,04/May/12 5:06 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,broker,,,0,,"See log file snippet below.

{code}

2012-04-05 09:36:09,070 [Server         ] - INFO  rableSubProcessWithRestartTest - Sending Trans[id=37, count=673, clientType=D]
2012-04-05 09:36:09,294 [Server         ] - INFO  rableSubProcessWithRestartTest - About to Commit Trans[id=37, count=673, clientType=D], ID=22327
2012-04-05 09:36:09,402 [Client3        ] - INFO  rableSubProcessWithRestartTest - Received Trans[id=37, count=673] in Client[id=3, type=D].
2012-04-05 09:36:09,402 [Client3        ] - INFO  rableSubProcessWithRestartTest - Going offline during transaction commit.
2012-04-05 09:36:09,428 [Client3        ] - INFO  rableSubProcessWithRestartTest - Client[id=3, type=D] OFFLINE.
2012-04-05 09:36:09,462 [Server         ] - INFO  rableSubProcessWithRestartTest - Committed Trans[id=37, count=673, clientType=D], ID=22327
2012-04-05 09:36:09,462 [Client8        ] - INFO  rableSubProcessWithRestartTest - Received Trans[id=37, count=0] in Client[id=8, type=B].

.....
.....

2012-04-05 09:36:15,195 [Server         ] - INFO  rableSubProcessWithRestartTest - Sending Trans[id=47, count=571, clientType=null]
2012-04-05 09:36:15,387 [Server         ] - INFO  rableSubProcessWithRestartTest - About to Commit Trans[id=47, count=571, clientType=null], ID=28247
2012-04-05 09:36:15,498 [Server         ] - INFO  rableSubProcessWithRestartTest - Committed Trans[id=47, count=571, clientType=null], ID=28247
2012-04-05 09:36:15,644 [Client3        ] - INFO  rableSubProcessWithRestartTest - Client[id=3, type=D] ONLINE.
2012-04-05 09:36:15,645 [ActiveMQ Task-3] - INFO  FailoverTransport              - Successfully connected to tcp://localhost:61656?wireFormat.maxInactivityDuration=0
2012-04-05 09:36:15,662 [Client3        ] - INFO  rableSubProcessWithRestartTest - ! Message has been processed before. Client[id=3, type=D] message = ActiveMQMessage {commandId = 225, responseRequired = true, messageId = ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1:1:221, originalDestination = null, originalTransactionId = null, producerId = ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1:1, destination = topic://TopicT, transactionId = TX:ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1, expiration = 0, timestamp = 1333611369144, arrival = 0, brokerInTime = 1333611369144, brokerOutTime = 1333611375647, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@274ce1fd, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {ID=21874, CARGO=aaaaaa...a, TYPE=h, TRANS=37}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
2012-04-05 09:36:15,663 [Client3        ] - ERROR rableSubProcessWithRestartTest - Missing messages!
Missing TRANS=40, size=1
Received message: ActiveMQMessage {commandId = 225, responseRequired = true, messageId = ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1:1:221, originalDestination = null, originalTransactionId = null, producerId = ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1:1, destination = topic://TopicT, transactionId = TX:ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1, expiration = 0, timestamp = 1333611369144, arrival = 0, brokerInTime = 1333611369144, brokerOutTime = 1333611375647, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@274ce1fd, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {ID=21874, CARGO=aaaaaaaaaaaa...., TYPE=h, TRANS=37}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
Expected message: ActiveMQMessage {commandId = 514, responseRequired = true, messageId = ID:unknown3c07543fab70.home-55675-1333611344002-5:40:1:1:510, originalDestination = null, originalTransactionId = null, producerId = ID:unknown3c07543fab70.home-55675-1333611344002-5:40:1:1, destination = topic://TopicT, transactionId = TX:ID:unknown3c07543fab70.home-55675-1333611344002-5:40:1, expiration = 0, timestamp = 1333611370812, arrival = 0, brokerInTime = 1333611370812, brokerOutTime = 1333611372628, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@2888bd33, dataStructure = null, redeliveryCounter = 0, size = 1071, properties = {COMMIT=true, RELEVANT=true, ID=24037, TRANS=40}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
java.lang.RuntimeException: Missing messages!
Missing TRANS=40, size=1
Received message: ActiveMQMessage {commandId = 225, responseRequired = true, messageId = ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1:1:221, originalDestination = null, originalTransactionId = null, producerId = ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1:1, destination = topic://TopicT, transactionId = TX:ID:unknown3c07543fab70.home-55675-1333611344002-5:37:1, expiration = 0, timestamp = 1333611369144, arrival = 0, brokerInTime = 1333611369144, brokerOutTime = 1333611375647, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@274ce1fd, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {ID=21874, CARGO=aaaaaaaaaaaaaaaaaa..., TYPE=h, TRANS=37}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
Expected message: ActiveMQMessage {commandId = 514, responseRequired = true, messageId = ID:unknown3c07543fab70.home-55675-1333611344002-5:40:1:1:510, originalDestination = null, originalTransactionId = null, producerId = ID:unknown3c07543fab70.home-55675-1333611344002-5:40:1:1, destination = topic://TopicT, transactionId = TX:ID:unknown3c07543fab70.home-55675-1333611344002-5:40:1, expiration = 0, timestamp = 1333611370812, arrival = 0, brokerInTime = 1333611370812, brokerOutTime = 1333611372628, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@2888bd33, dataStructure = null, redeliveryCounter = 0, size = 1071, properties = {COMMIT=true, RELEVANT=true, ID=24037, TRANS=40}, readOnlyProperties = true, readOnlyBody = true, droppable = false}
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest.exit(DurableSubProcessWithRestartTest.java:823)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest.exit(DurableSubProcessWithRestartTest.java:819)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Client.onClientMessage(DurableSubProcessWithRestartTest.java:648)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Client.process(DurableSubProcessWithRestartTest.java:547)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Client.run(DurableSubProcessWithRestartTest.java:495)

{code}

Client3 appears to recieve the message batch/message in server transaction that is being commited as client3 goes OFFLINE. When client 3 comes back on line later, a message from that message batch is redelivered to the client3


","tested with apache-activemq-5.5.1.fuse-20120330.033257-8
",,,,,,,,,,MB-1117,DEV-3871,,,05/Apr/12 12:55 PM;pfox;DurableSubProcessWithRestartTest.java;https://issues.jboss.org/secure/attachment/12368968/DurableSubProcessWithRestartTest.java,05/Apr/12 10:05 AM;pfox;DurableSubProcessWithRestartTest.java;https://issues.jboss.org/secure/attachment/12368964/DurableSubProcessWithRestartTest.java,10/Apr/12 3:16 PM;garytully;DurableSubProcessWithRestartTestDuplicatePat.java;https://issues.jboss.org/secure/attachment/12368969/DurableSubProcessWithRestartTestDuplicatePat.java,05/Apr/12 1:02 PM;pfox;org.apache.activemq.usecases.DurableSubProcessWithRestartTest-output.txt;https://issues.jboss.org/secure/attachment/12368966/org.apache.activemq.usecases.DurableSubProcessWithRestartTest-output.txt,05/Apr/12 10:05 AM;pfox;test_output.txt;https://issues.jboss.org/secure/attachment/12368965/test_output.txt,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3805,,,,5.0,3.0,,1|hzkilb:,179981,,,,,,,,"05/Apr/12 10:06 AM;pfox;Perhaps this is linked to MB-1117, not definite yet.",04/May/12 5:06 PM;garytully;fix for https://issues.apache.org/jira/browse/AMQ-3805 is on the 5.5.1-fuse branch. ,08/May/12 11:35 AM;garytully;snapshot with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120504.171059-15-bin.tar.gz,,,,,,,,,,,,,,,,,
Non-persistent messages held in memory are not cleaned up when destination is deleted,MB-1130,12516538,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,jsherman,jsherman,03/Apr/12 9:16 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Apr/12 7:32 PM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,,,,0,,"If a queue is dynamically deleted messages are left in memory resulting in the memoryPercentUsage to continue to increase, (or perhaps the usage is not being updated when the destination is deleted).  This can be seen by running the attached test case and monitoring the Broker's memoryPercentUsage attribute.",,,,,,,,,,,,,,,03/Apr/12 9:43 PM;jsherman;amqTest3.zip;https://issues.jboss.org/secure/attachment/12368963/amqTest3.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3780,,,,1.0,1.0,,1|hzki8f:,179923,,,,,,,,03/Apr/12 9:43 PM;jsherman;Test case attached.,,,,,,,,,,,,,,,,,,,
Duplex option on Network Connector not supported,MB-1129,12516537,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,29/Mar/12 7:22 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Apr/12 10:05 AM,5.5.1-fuse-03-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,,,,0,,"It has been reported and confirmed with testing that when configuring a NetworkConnector as follows messages are not forwarded across the bridge.  The scenario for this test case is as follows:

NetworkConnector configured on 5.5.1-fuse-03-06

{code}
<networkConnector uri=""static:(failover:(tcp://localhost:61616,tcp://localhost:62616))?maxReconnectAttempts=1000;useExponentialBackOff=false;maxReconnectDelay=30000""
                       name=""bridge""
                       networkTTL=""6""
                       duplex=""true""
                       dynamicOnly=""false""
                       conduitSubscriptions=""true""
                       decreaseNetworkConsumerPriority=""false"">
                <excludedDestinations>
                </excludedDestinations>
                <dynamicallyIncludedDestinations>
                   <topic physicalName=""TEST""/>
                </dynamicallyIncludedDestinations>
                <staticallyIncludedDestinations>
                </staticallyIncludedDestinations>
</networkConnector>
{code}

Though the duplex option is configured messages will not flow as follows:

producer -> 5.3.0.4 -> 5.5.1-fuse-03-06 -> consumer

However sending messages in the other direction does work:

consumer <- 5.3.0.4 <- 5.5.1-fuse-03-06 <- producer

It seems in the first case the duplex option is ignored.  If the same network connector is used with brokers of the same version, messages can flow in both directions.

Additionally if the network connector is defined in the 5.3.0.4 broker I see messages can flow in both directions.
","Fuse Message Broker 5.5.1-fuse-03-06
Fuse Message Broker 5.3.0.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3384,,,,0.0,4.0,,1|hzki67:,179913,,,,,,,,"02/Apr/12 5:12 PM;garytully;There is a workaround. The problem stems from the change to the way the destinationFilter[1] is used. In a duplex network, the destinationFilter is propagated to the other end, in this case a 5.3.0, which cannot deal with the changed destinationFilter value.
The workaround is to specify a non default destination filter with a dummy value that can consume the prepended ""ActiveMQ.Advisory.Consumer."" that is added in 5.3.x
If there are no dynamicallyIncludedDestinations, a value for *destinationFilter* of ""Legacy,ActiveMQ.Advisory.Consumer.>"" will suffice.
Otherwise, adding a dummy ""legacy"" destination to the list of dynamically included destinations will work.
{code}<dynamicallyIncludedDestinations>
                   <topic physicalName=""Legacy""/>
                   <topic physicalName=""TEST""/>
                </dynamicallyIncludedDestinations>{code}

[1] https://issues.apache.org/jira/browse/AMQ-3384","02/Apr/12 5:13 PM;garytully;Also, note that failover should only be used with a network connector of the *maxReconnectAttempts=0* because the network connector needs to be aware of transport failures so that it can recreate the forwarding bridge.",03/Apr/12 10:09 AM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-3384 where the changes were introduced that are the root cause or the problem.,"03/Apr/12 2:03 PM;jsherman;I spoke with Gary on this issue this morning.  For the work around to work in my testing the destinationFilter needed to be defined in order to get messages to flow from the 5.3.x broker to 5.5.x broker.  The configuration used was as follows:

{code}
<networkConnectors>
              <networkConnector uri=""static:(failover:(tcp://localhost:63616)?maxReconnectAttempts=0)?useExponentialBackOff=false;maxReconnectDelay=30000""
                        name=""bridge-551-to-5304M""
                        networkTTL=""6""
                        duplex=""true""
                        dynamicOnly=""false""
                        conduitSubscriptions=""true""
                        decreaseNetworkConsumerPriority=""false""
                        destinationFilter=""Legacy,ActiveMQ.Advisory.Consumer.Topic.TEST"">
                <excludedDestinations>
                </excludedDestinations>
                <dynamicallyIncludedDestinations>    
                   <topic physicalName=""TEST""/>
                </dynamicallyIncludedDestinations>
                    
                <staticallyIncludedDestinations>
                </staticallyIncludedDestinations>
              </networkConnector>
</networkConnectors>
{code}",,,,,,,,,,,,,,,,
"The jdbc store is not doing XA as it does not respect the prepared state, and not throwing exception on restart.",MB-1127,12516535,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,socallag,socallag,29/Mar/12 8:47 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.5.1-fuse-03-04,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Related to  DEV-3851

A bit more context from Gary:

There is no persistent prepare record, so in the event of a failure
after prepare, the transaction will rollback... there will be no
modifications to the store.

On commit, or commit_one_phase the result of the local jdbc transaction is returned.

So the jdbc store is not doing XA as it does not respect the prepared state.

To be better, it should throw a Heuristic exception  on a commit/rollback after a restart.
Atm it will just silently do nothing.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkijr:,179974,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please make bstat more tolerant of InstancesNotFound situations,MB-1125,12516534,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,22/Mar/12 9:55 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,29/Mar/12 10:19 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,"Hi, 

We've encountered a situation where bstat ends due to an instance not found exception:

{quote}

ERROR: java.lang.Exception: javax.management.InstanceNotFoundException:
org.apache.activemq:BrokerName=MYBROKER,Type=Subscription,persistentMode=Non-Durable,destinationType=Queue,destinationName=TEST.FOO,clientId=myClientID,consumerId=ID_myBroker38549-1331758171313-14_2_1_100089
{quote}

NB: parameter values changed to obscure end user.

In this situation, bstat ends. We'd like to improve this so that we either just list these instances ere not available or skip them so that the rest of the information can be displayed. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3790,,,,0.0,1.0,,1|hzki6n:,179915,,,,,,,,29/Mar/12 10:19 AM;dbosanac;Fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches,,,,,,,,,,,,,,,,,,,
Merge AMQ-3492: AMQ Maven Performance Plugin Patch to 5.5,MB-1123,12516531,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sully6768,sully6768,21/Mar/12 6:51 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,29/Mar/12 11:16 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,,,,0,,"Please merge in the changes for the custom message to the AMQ Maven Performance Plugin to our 5.5.1 release.  It is fixed in the 5.6-SNAPSHOT.  Details can be found in the linked AMQ JIRA issue.

Thanks,
Scott ES",5.5.1-fuse-03-06 (not listed in the available Affects Versions),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3492,,,,0.0,1.0,,1|hzki5b:,179909,,,,,,,,29/Mar/12 11:16 AM;dbosanac;Merged to 5.5.x-fuse and 5.5.1-fuse branches,,,,,,,,,,,,,,,,,,,
Non-persistent messages in the tmp-storage directory are not cleaned up when destination is deleted,MB-1122,12516530,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Duplicate Issue,tabish121,mielket,mielket,21/Mar/12 8:05 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Mar/12 1:39 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,Non-persistent messages stored in the tmp-storage directory are not cleaned up when the destination is deleted. The StoreQueueCursor doesn't clear out its FilePendingMessageCursor on stop so the non-persistent messages are left on disk when the Queue is deleted.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3780,,,,0.0,1.0,,1|hzki3j:,179901,,,,,,,,21/Mar/12 1:39 PM;tabish121;Fixed by MB-1118,,,,,,,,,,,,,,,,,,,
Backport of AMQ-3732 to 5.5.1 branch,MB-1121,12516529,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,20/Mar/12 10:55 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,20/Mar/12 11:57 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,Placeholder to track back port of https://issues.apache.org/jira/browse/AMQ-3732 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3732,,,,0.0,1.0,,1|hzki2f:,179896,,,,,,,,20/Mar/12 11:57 PM;tabish121;merged to 5.5.x-fuse and 5.5.1-fuse,,,,,,,,,,,,,,,,,,,
NPE exception occurs when stopping broker,MB-1120,12516528,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,16/Mar/12 2:41 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,23/May/12 4:55 PM,5.5.1-fuse-04-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,0,,"Hi, 

A customer reported a NPE when stopping the broker in fuse-02-05.  I tried it here and on fuse-03-6 and yes, there's a NPE thrown:

1.  start out of the box broker -- ./activemq start 
2.  stop broker, -- ./activemq stop

{quote}
5.5.1/apache-activemq-5.5.1-fuse-03-06/data -Djava.io.tmpdir=/Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-03-06/tmp
ACTIVEMQ_HOME: /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-03-06
ACTIVEMQ_BASE: /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-03-06
ACTIVEMQ_CONF: /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-03-06/conf
ACTIVEMQ_DATA: /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-03-06/data
Connecting to pid: 47706
ERROR: java.lang.NullPointerException
java.lang.NullPointerException
	at javax.management.remote.JMXServiceURL.<init>(JMXServiceURL.java:122)
	at org.apache.activemq.console.command.AbstractJmxCommand.handleOption(AbstractJmxCommand.java:350)
	at org.apache.activemq.console.command.ShutdownCommand.handleOption(ShutdownCommand.java:156)
	at org.apache.activemq.console.command.AbstractCommand.parseOptions(AbstractCommand.java:73)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:45)
	at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:380)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:257)
	at org.apache.activemq.console.Main.main(Main.java:111)

.............................
INFO: Regular shutdown not successful,  sending SIGKILL to process with pid '47706'

{quote}

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3789,,,,0.0,7.0,,1|hzkinr:,179992,,,,,,,,29/Mar/12 10:17 AM;dbosanac;Fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches,"04/May/12 6:53 PM;jsherman;This issue is still occurring and seems to be related to the following configuration:

{code}
<managementContext>
<managementContext createConnector=""true"" connectorPort=""${connector.port}"" rmiServerPort=""${server.port}"" jmxDomainName=""org.apache.activemq"">
   <property xmlns=""http://www.springframework.org/schema/beans"" name=""environment"">
      <map xmlns=""http://www.springframework.org/schema/beans"">
         <entry xmlns=""http://www.springframework.org/schema/beans"" key=""jmx.remote.x.password.file"" value=""${activemq.base}/conf/jmx.password""/>
         <entry xmlns=""http://www.springframework.org/schema/beans"" key=""jmx.remote.x.access.file"" value=""${activemq.base}/conf/jmx.access""/>
      </map>
   </property>
</managementContext>
</managementContext>
{code}

After issuing the restart commands several times I get the following NPE:

{code}
[jsherman@titan apache-activemq-5.5.1-fuse-04-01]$ ./bin/magicjms restart
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/jsherman/.activemqrc)

INFO: Invoke the following command to create a configuration file
/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/bin/activemq setup [ /etc/default/activemq | /home/jsherman/.activemqrc ]

INFO: Using java '/usr/java/jdk1.6.0_31/bin/java'
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/jsherman/.activemqrc)

INFO: Invoke the following command to create a configuration file
/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/bin/activemq setup [ /etc/default/activemq | /home/jsherman/.activemqrc ]

INFO: Using java '/usr/java/jdk1.6.0_31/bin/java'
INFO: Waiting at least 30 seconds for regular process termination of pid '16816' : 
Java Runtime: Sun Microsystems Inc. 1.6.0_31 /usr/java/jdk1.6.0_31/jre
  Heap sizes: current=2027264k  free=2016079k  max=2027264k
    JVM args: -Xmx2048m -Xms2048m -XX:PermSize=256m -XX:MaxPermSize=256m -XX:+HeapDumpOnOutOfMemoryError -Dapp.id=amq-magic -Djava.rmi.server.hostname=titan -Dorg.apache.activemq.UseDedicatedTaskRunner=false -Djava.util.logging.config.file=logging.properties -Dactivemq.classpath=/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/conf; -Dactivemq.home=/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01 -Dactivemq.base=/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01 -Dactivemq.conf=/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/conf -Dactivemq.data=/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/data
ACTIVEMQ_HOME: /home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01
ACTIVEMQ_BASE: /home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01
ACTIVEMQ_CONF: /home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/conf
ACTIVEMQ_DATA: /home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/data
Connecting to pid: 16816
ERROR: java.lang.NullPointerException
java.lang.NullPointerException
	at javax.management.remote.JMXServiceURL.<init>(JMXServiceURL.java:122)
	at org.apache.activemq.console.command.AbstractJmxCommand.handleOption(AbstractJmxCommand.java:350)
	at org.apache.activemq.console.command.ShutdownCommand.handleOption(ShutdownCommand.java:156)
	at org.apache.activemq.console.command.AbstractCommand.parseOptions(AbstractCommand.java:73)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:45)
	at org.apache.activemq.console.command.AbstractJmxCommand.execute(AbstractJmxCommand.java:380)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:257)
	at org.apache.activemq.console.Main.main(Main.java:111)
. FINISHED
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/jsherman/.activemqrc)

INFO: Invoke the following command to create a configuration file
/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/bin/activemq setup [ /etc/default/activemq | /home/jsherman/.activemqrc ]

INFO: Using java '/usr/java/jdk1.6.0_31/bin/java'
ActiveMQ not running
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/jsherman/.activemqrc)

INFO: Invoke the following command to create a configuration file
/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/bin/activemq setup [ /etc/default/activemq | /home/jsherman/.activemqrc ]

INFO: Using java '/usr/java/jdk1.6.0_31/bin/java'
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details
INFO: pidfile created : '/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/data/activemq-titan.pid' (pid '16935')
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/jsherman/.activemqrc)

INFO: Invoke the following command to create a configuration file
/home/jsherman/tools/activemq/apache-activemq-5.5.1-fuse-04-01/bin/activemq setup [ /etc/default/activemq | /home/jsherman/.activemqrc ]

INFO: Using java '/usr/java/jdk1.6.0_31/bin/java'
ActiveMQ is running (pid '16935')
[jsherman@titan apache-activemq-5.5.1-fuse-04-01]$ 
{code}","16/May/12 8:18 PM;mhernon;Steve at IHG requested this issue be fixed in the next (23rd) release of the MB.  He was going to upgrade in production the previous MB release 
we provided them (which contained the NPE fix and the bstat fix) however due to this newly found NPE he was not able to.",18/May/12 1:29 PM;mhernon;BQ:High,"23/May/12 4:07 PM;garytully;opened https://issues.apache.org/jira/browse/AMQ-3858 to deal better when not resolving a jvm locally from the pid.

Note: it looks like the jmx url is secure (user/pass) but the local jvm visibility of jmx is unsecure. I guess we need to determine if that is desired?

I would have expected there be a need to pass:
{code}-Dactivemq.jmx.user=admin -Dactivemq.jmx.password=activemq{code} the the ./bin/activemq stop|restart commands",23/May/12 4:55 PM;garytully;fix for  https://issues.apache.org/jira/browse/AMQ-3858 pushed to 5.5.1-fuse,23/May/12 6:40 PM;garytully;snapshot with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120523.164936-19-bin.tar.gz,,,,,,,,,,,,,
Occasional hangs on ensureConnectionInfoSent,MB-1119,12516527,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,jsherman,jsherman,15/Mar/12 3:57 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,19/Mar/12 2:02 PM,5.5.1-fuse-01-13,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,,,,0,,"Occasionally, it has been reported that the client connections hang and never get a response from the broker.

The following stack trace has been provided:

{code}
""main"" prio=3 tid=0x0264c800 nid=0x7c waiting on condition [0x38cff000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x8fb5a1b8> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1925)
	at java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:317)
	at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:87)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1286)
	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1394)
	- locked <0x8fafdd10> (a java.lang.Object)
	at org.apache.activemq.ActiveMQConnection.start(ActiveMQConnection.java:506)
	at org.apache.activemq.pool.ConnectionPool.start(ConnectionPool.java:91)
	at org.apache.activemq.pool.PooledConnection.start(PooledConnection.java:78)
	at org.springframework.jms.listener.AbstractJmsListeningContainer.refreshSharedConnection(AbstractJmsListeningContainer.java:390)
	- locked <0x748e2a80> (a java.lang.Object)
	at org.springframework.jms.listener.DefaultMessageListenerContainer.refreshConnectionUntilSuccessful(DefaultMessageListenerContainer.java:856)
	at org.springframework.jms.listener.DefaultMessageListenerContainer.recoverAfterListenerSetupFailure(DefaultMessageListenerContainer.java:838)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:969)
	- locked <0x748e2d58> (a java.lang.Object)
	at java.lang.Thread.run(Thread.java:619)
{code}

Apache has a Jira open for this same issue: https://issues.apache.org/jira/browse/AMQ-2798
 This is possibly also related to  https://issues.apache.org/jira/browse/AMQ-3719

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2798,,,,0.0,2.0,,1|hzki1z:,179894,,,,,,,,"15/Mar/12 4:07 PM;jsherman;Though in most cases the above stack trace would be normal as the client is awaiting a response from the broker, in this case it seems the response is never received.",19/Mar/12 2:02 PM;tabish121;Merged fix for https://issues.apache.org/jira/browse/AMQ-3719 into 5.5.x-fuse and 5.5.1-fuse,,,,,,,,,,,,,,,,,,
Non-persistent messages in the tmp-storage directory are not cleaned up when destination is deleted,MB-1118,12516526,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,jsherman,jsherman,13/Mar/12 9:00 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Mar/12 1:39 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,Non-persistent messages stored in the tmp-storage directory are not cleaned up when the destination is deleted.,"5.3.1-fuse-02-01
5.5.1-fuse-03-04",,,,,,,,,,,,,,19/Mar/12 9:39 PM;tabish121;TempStoreDataCleanupTest.java;https://issues.jboss.org/secure/attachment/12368954/TempStoreDataCleanupTest.java,13/Mar/12 10:10 PM;jsherman;testcase.zip;https://issues.jboss.org/secure/attachment/12368955/testcase.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3780,,,,2.0,4.0,,1|hzki73:,179917,,,,,,,,13/Mar/12 9:01 PM;jsherman;Will attach test case shortly.,13/Mar/12 10:10 PM;jsherman;Test case attached.,"16/Mar/12 4:17 PM;jsherman;From running the attached test case you can see the following:

{code}
new-host-3:tmp_storage jsherman$ pwd
/Users/jsherman/Downloads/testcase/activemq-data/coreBroker/tmp_storage
new-host-3:tmp_storage jsherman$ ls -al
total 548920
drwxr-xr-x  13 jsherman  staff       442 Mar 16 12:14 .
drwxr-xr-x   3 jsherman  staff       102 Mar 16 12:09 ..
-rw-r--r--   1 jsherman  staff  33554599 Mar 16 12:10 db-1.log
-rw-r--r--   1 jsherman  staff  33554869 Mar 16 12:10 db-2.log
-rw-r--r--   1 jsherman  staff  33554613 Mar 16 12:11 db-3.log
-rw-r--r--   1 jsherman  staff  33555606 Mar 16 12:12 db-4.log
-rw-r--r--   1 jsherman  staff  33554865 Mar 16 12:13 db-5.log
-rw-r--r--   1 jsherman  staff  33555058 Mar 16 12:13 db-6.log
-rw-r--r--   1 jsherman  staff  33555304 Mar 16 12:14 db-7.log
-rw-r--r--   1 jsherman  staff  33030144 Mar 16 12:14 db-8.log
-rw-r--r--   1 jsherman  staff         0 Mar 16 12:09 lock
-rw-r--r--   1 jsherman  staff   9818112 Mar 16 12:13 tmpDB.data
-rw-r--r--   1 jsherman  staff   3287296 Mar 16 12:13 tmpDB.redo
new-host-3:tmp_storage jsherman$ 
{code}

The attached test case sends 100000 messages to a queue, then deletes the queue.  It then repeats this for another queue.  At the end of the test both queues have been deleted, however the log files shown above remain.",21/Mar/12 1:39 PM;tabish121;Fix merged to 5.5.1-fixes branch,,,,,,,,,,,,,,,,
"KahaDB journal files retained after delay in ""unsubscribing"" durable subscriber from topic.",MB-1117,12516525,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,09/Mar/12 2:18 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,03/May/12 1:35 PM,5.5.1-fuse-02-05,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,5.6.0-fuse-00-00,,,broker,,,0,,"KahaDB journal files retained after delay in ""unsubscribing"" durable subscriber from topic.This issue only appears to occur when Durable Subscriber is registered with a ""selector"" that does not match all messages on topic. 

Scenario:

Msg Producer sending messages to topic.

Durable subscriber registered with a selector on topic
After 20 seconds; stop calling consumer.receive() .
Another Durable subscriber registers on the topic
After 20 seconds; stop calling consumer.receive() .
Continue this pattern till 10 durable subscribers are registered with topic 

Then unsubscribe all 10 Durable subscribers.


Other Notes:
When durable subs unsubscribed DIRECTLY after use, no KahaDB journal files are retained
When selector ""matches"" all messages, no KahaDB journal files are retained
No subscribers appear to be subscribed to topic in JMX tree at end of test (using jconsole to visually inspect) 

For 5.5.1.Fuse-03-04 KahaDB debug log contains:
{code}
..  Checkpoint started.
2012-03-09 15:07:35,018 [eckpoint Worker] - TRACE MessageDatabase                - Last update: 36:354945, full gc candidates set: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
2012-03-09 15:07:35,018 [eckpoint Worker] - TRACE MessageDatabase                - gc candidates after first tx:36:354945, [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
2012-03-09 15:07:35,019 [eckpoint Worker] - TRACE MessageDatabase                - gc candidates after dest:1:TopicT, [3, 4, 5, 6, 7]
2012-03-09 15:07:35,019 [eckpoint Worker] - TRACE MessageDatabase                - gc candidates: [3, 4, 5, 6, 7]
2012-03-09 15:07:35,019 [eckpoint Worker] - DEBUG MessageDatabase                - Cleanup removing the data files: [3, 4, 5, 6, 7]
2012-03-09 15:07:35,019 [eckpoint Worker] - DEBUG MessageDatabase                - Checkpoint done.
{code}



Same test in 5.4.2.Fuse-02-00 gives KahaDB debug log

{code}
... - Checkpoint started.
2012-03-09 15:14:21,703 [eckpoint Worker] TRACE MessageDatabase                - Last update: 36:225386, full gc candidates set: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36]
2012-03-09 15:14:21,703 [eckpoint Worker] TRACE MessageDatabase                - gc candidates after first tx:36:225386, [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
2012-03-09 15:14:21,703 [eckpoint Worker] TRACE MessageDatabase                - gc candidates after dest:1:TopicT, [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
2012-03-09 15:14:21,703 [eckpoint Worker] TRACE MessageDatabase                - gc candidates: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
2012-03-09 15:14:21,703 [eckpoint Worker] DEBUG MessageDatabase                - Cleanup removing the data files: [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35]
2012-03-09 15:14:21,707 [eckpoint Worker] DEBUG MessageDatabase                - Checkpoint done.

{code}


",replicated on 5.5.1-fuse-03-04,,,,,,,,,,MB-1114,,,,19/Apr/12 11:24 AM;pfox;DurableSubDelayedUnsubscribeTest.java;https://issues.jboss.org/secure/attachment/12368977/DurableSubDelayedUnsubscribeTest.java,30/Mar/12 8:07 PM;tabish121;DurableSubProcessWithRestartTest.java;https://issues.jboss.org/secure/attachment/12368962/DurableSubProcessWithRestartTest.java,30/Mar/12 3:29 PM;pfox;DurableSubProcessWithRestartTest.java;https://issues.jboss.org/secure/attachment/12368961/DurableSubProcessWithRestartTest.java,14/Apr/12 2:34 PM;pfox;DurableSubProcessWithRestartTest_WITHLONGERCLIENTTIMES.java;https://issues.jboss.org/secure/attachment/12368973/DurableSubProcessWithRestartTest_WITHLONGERCLIENTTIMES.java,17/Apr/12 9:18 AM;pfox;DurableSubProcessWithRestartTest_WITHLONGERCLIENTTIMES_V2.java;https://issues.jboss.org/secure/attachment/12368974/DurableSubProcessWithRestartTest_WITHLONGERCLIENTTIMES_V2.java,17/Apr/12 11:34 PM;pfox;DurableSubProcessWithRestartTest_WITHLONGERCLIENTTIMES_V3.java;https://issues.jboss.org/secure/attachment/12368975/DurableSubProcessWithRestartTest_WITHLONGERCLIENTTIMES_V3.java,23/Mar/12 1:34 PM;pfox;DurableSubSelectorDelayTest.java;https://issues.jboss.org/secure/attachment/12368958/DurableSubSelectorDelayTest.java,22/Mar/12 4:40 PM;pfox;DurableSubSelectorDelayTest.java;https://issues.jboss.org/secure/attachment/12368959/DurableSubSelectorDelayTest.java,09/Mar/12 2:23 PM;pfox;DurableSubSelectorDelayTest.java;https://issues.jboss.org/secure/attachment/12368953/DurableSubSelectorDelayTest.java,06/Apr/12 8:08 PM;pfox;DurableSubSelectorDelayWithRestartTest.java;https://issues.jboss.org/secure/attachment/12368967/DurableSubSelectorDelayWithRestartTest.java,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3775,,,,10.0,3.0,,1|hzkjbr:,180099,,,,,,,,"09/Mar/12 2:23 PM;pfox;This issue was originally detected in DurableSubProcessWithRestartTest.java. I believe DurableSubSelectorDelayTest reproduces the same issue but in a simpler approach.
",21/Mar/12 1:40 PM;tabish121;Fixed merged to 5.5.1-fuse branch.,12/Apr/12 2:02 PM;garytully;snapshot with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120412.134309-11-bin.tar.gz,,,,,,,,,,,,,,,,,
FUSE MB JMX stats shows negative queue size. ,MB-1115,12516523,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ubhole,ubhole,05/Mar/12 4:56 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,28/Mar/12 10:28 AM,5.5.1-fuse-02-05,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,,,,0,,"Fuse Message Broker/ActiveMQ shows negative JMX stats when hit purge on queue where message are still pending to be processed. 

",,,,,,,,,,,,,,,05/Mar/12 5:14 PM;ubhole;JMX-screen-negative-queuesize.tiff;https://issues.jboss.org/secure/attachment/12368951/JMX-screen-negative-queuesize.tiff,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3473,,,,1.0,3.0,,1|hzki4f:,179905,,,,,,,,"27/Mar/12 11:47 AM;garytully;A second purge always reset the negative counter, it appears that there are outstanding acks and these decrement the stats on receipt. I am not sure this is a real problem.","27/Mar/12 11:52 AM;garytully;I guess we could make those stats positive only, but there is actually some sense to a negative count in this case. it reflects inflight messages that have been dispatched before the purge and received after the purge.","28/Mar/12 10:28 AM;garytully;From my tests, the purge issue is not problematic. Any inflight messages that have not been acked before a purge will result in negative statistics when the acks are received. However, a second call to purge will reset those values. So the negative values are an indication of acks in progress.
In the case that the store suppresses a duplicate, in the log ""Duplicate message add attempt rejected"" (https://issues.apache.org/jira/browse/AMQ-3473) there is an issue. That is now fixed, the statistics are now reverted on when a duplicate is suppressed.
The ability to use a producer message audit on a network connector is also useful in this scenario, to suppress the duplicate at source, or in the event that it has already been dispatched, so the fix for https://issues.apache.org/jira/browse/AMQ-3576 is relevant.
Both are merged to the 5.5.1 branch. ",,,,,,,,,,,,,,,,,
"regression to ""MB-834 using durable subs messages stay in KahaDB indefinitely if broker is restarted"" ",MB-1114,12516522,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,05/Mar/12 12:10 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Mar/12 1:41 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,5.6.0-fuse-00-00,,,broker,,,0,,"Running DurableSubProcessWithRestartTest (extending the test run to 10 minutes)  in FuseMQ 5.4.2-fuse-02-00 one 4.7 MB ""db-X.log"" remains as expected. 

{code}
$pwd
apache-activemq-5.4.2-fuse-02-00/src/activemq-core/activemq-data/DurableSubProcessWithRestartTest-kahadb

$ls -al
drwxr-xr-x  6 pfox  staff      204 Mar  5 12:41 .
drwxr-xr-x  4 pfox  staff      136 Mar  5 12:31 ..
-rw-r--r--  1 pfox  staff  4718592 Mar  5 12:42 db-14.log
-rw-r--r--  1 pfox  staff  3543040 Mar  5 12:42 db.data
-rw-r--r--  1 pfox  staff  3311920 Mar  5 12:42 db.redo
-rw-r--r--  1 pfox  staff        0 Mar  5 12:41 lock

{code}

However running the same test in Fuse MQ 5.5.1-fuse-02-05 5 files remain

{code}
$pwd
apache-activemq-5.5.1-fuse-02-05/src/activemq-core/activemq-data/DurableSubProcessWithRestartTest-kahadb

$ls -al
drwxr-xr-x  10 pfox  staff      340 Mar  5 12:54 .
drwxr-xr-x   4 pfox  staff      136 Mar  5 12:44 ..
-rw-r--r--   1 pfox  staff  5242910 Mar  5 12:45 db-1.log
-rw-r--r--   1 pfox  staff  5242979 Mar  5 12:45 db-2.log
-rw-r--r--   1 pfox  staff  5243063 Mar  5 12:46 db-3.log
-rw-r--r--   1 pfox  staff  5243460 Mar  5 12:47 db-4.log
-rw-r--r--   1 pfox  staff  4718592 Mar  5 13:08 db-5.log
-rw-r--r--   1 pfox  staff  1163264 Mar  5 13:08 db.data
-rw-r--r--   1 pfox  staff  1071136 Mar  5 13:08 db.redo
-rw-r--r--   1 pfox  staff        0 Mar  5 12:54 lock

{code}

This appears to be a regression of MB-834",Fuse MQ 5.5.1-fuse-02-05,,,,,,,,,,,,,,07/Mar/12 11:04 AM;pfox;DurableSubProcessMultiRestartTest.java;https://issues.jboss.org/secure/attachment/12368952/DurableSubProcessMultiRestartTest.java,21/Mar/12 2:29 PM;pfox;DurableSubProcessWithRestartTest.java;https://issues.jboss.org/secure/attachment/12368957/DurableSubProcessWithRestartTest.java,21/Mar/12 2:29 PM;pfox;org.apache.activemq.usecases.DurableSubProcessWithRestartTest-output.txt;https://issues.jboss.org/secure/attachment/12368956/org.apache.activemq.usecases.DurableSubProcessWithRestartTest-output.txt,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3775,,,,3.0,2.0,,1|hzki33:,179899,,,,,,,,"07/Mar/12 11:04 AM;pfox;Added ""DurableSubProcessMultiRestartTest"" as a simpler/more deterministic test that can still replicate this issue.

",21/Mar/12 1:41 PM;tabish121;Fix merged to 5.5.1-fuse branch ,,,,,,,,,,,,,,,,,,
Investigate intermittent junit failure org.apache.activemq.transport.stomp.StompTest,MB-1113,12516521,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,garytully,garytully,02/Mar/12 6:03 PM,25/Oct/12 3:06 PM,29/Nov/16 4:15 PM,,5.5.1-fuse-03-04,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"intermittent:
target/surefire-reports/org.apache.activemq.transport.stomp.StompSslTest.txt:Tests run: 64, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 383.877 sec <<< FAILURE!
target/surefire-reports/org.apache.activemq.transport.stomp.StompTest.txt:Tests run: 64, Failures: 0, Errors: 3, Skipped: 0, Time elapsed: 293.925 sec <<< FAILURE!

Issue seems to be related to prefetch in transactions, that prefetch is not decremented on a rollback, leading to more dispatch than expected.. but this needs more investigation.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkjl3:,180141,,,,,,,,,,,,,,,,,,,,,,,,,,,
DurableSubProcessWithRestartTest intermittently throws java.lang.ClassCastException: org.apache.kahadb.index.BTreeNode cannot be cast to org.apache.kahadb.index.ListNode  ,MB-1112,12516520,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,pfox,pfox,02/Mar/12 3:12 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,30/Mar/12 2:31 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,"Increased the RUNTIME variable to 

{code}
 public static final long RUNTIME =  20 * 60 * 1000;
{code}

The test logs reported the following exception

{code}
 ERROR rableSubProcessWithRestartTest - Server.run failed
java.lang.RuntimeException: Server.run failed
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest.exit(DurableSubProcessWithRestartTest.java:738)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Server.run(DurableSubProcessWithRestartTest.java:185)
Caused by: javax.jms.JMSException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1297)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:748)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:322)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Server.send(DurableSubProcessWithRestartTest.java:232)
	at org.apache.activemq.usecases.DurableSubProcessWithRestartTest$Server.run(DurableSubProcessWithRestartTest.java:179)
Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:414)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:291)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:149)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.ClassCastException: org.apache.kahadb.index.BTreeNode cannot be cast to org.apache.kahadb.index.ListNode
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:289)
	at org.apache.kahadb.index.ListIndex.getHead(ListIndex.java:98)
	at org.apache.kahadb.index.ListIndex.iterator(ListIndex.java:266)
	at org.apache.kahadb.index.ListIndex.get(ListIndex.java:127)
	at org.apache.activemq.store.kahadb.MessageDatabase.addAckLocationForNewMessage(MessageDatabase.java:1826)
	at org.apache.activemq.store.kahadb.MessageDatabase.upadateIndex(MessageDatabase.java:1130)
	at org.apache.activemq.store.kahadb.MessageDatabase$AddOpperation.execute(MessageDatabase.java:2029)
	at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1055)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:765)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1052)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:921)
	at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:903)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:815)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	... 14 more
{code}

",also replicated it on 5.5.1-fuse-02-05,,,,,,,,,,DEV-3871,,,,02/Mar/12 3:19 PM;pfox;org.apache.activemq.usecases.DurableSubProcessWithRestartTest-output.txt;https://issues.jboss.org/secure/attachment/12368949/org.apache.activemq.usecases.DurableSubProcessWithRestartTest-output.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3768,,,,1.0,2.0,,1|hzki5r:,179911,,,,,,,,"02/Mar/12 3:19 PM;pfox;attached ""DurableSubProcessWithRestartTest-output.txt"" is output from test run in activemq-fuse.5.5.1-02-05. 

",27/Mar/12 12:55 PM;garytully;link to https://issues.apache.org/jira/browse/AMQ-3768,,,,,,,,,,,,,,,,,,
Composite destinations break simple authorisation through role aggregation,MB-1111,12516519,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,garytully,garytully,01/Mar/12 7:27 PM,01/Mar/12 7:38 PM,29/Nov/16 4:15 PM,01/Mar/12 7:38 PM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-03-04,,,broker,,,0,,"Given authorisation where there is overlap in roles, using a composite destination can gain access in error. eg:{code}
<authorizationMap>
    <authorizationEntries>
      <authorizationEntry queue="">"" read=""admins"" write=""admins"" admin=""admins"" />
      <authorizationEntry queue=""USER.>"" read=""users"" write=""users"" admin=""users"" />
      ...{code}
The correct expectation is that a 'user' can only access queues that match 'USER.>' but a user can bypass this and access a private queue using a composite destination q(PRIVATE,USER.A) because the permissions are aggregated in error and we look for a single match.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3749,,,,0.0,1.0,,1|hzkhwn:,179870,,,,,,,,01/Mar/12 7:38 PM;garytully;fix on 5.5.x and 5.5.1 branch,,,,,,,,,,,,,,,,,,,
Scheduled/Delayed Messages Lost During Ungraceful Broker Shutdown,MB-1108,12516517,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ccorsi1,ccorsi1,01/Mar/12 5:14 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,05/Apr/12 2:03 PM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,"Whenever we use the scheduled delay messages and a hard shutdown has occurred the scheduled delay messages are not recovered.

This does not happen when the broker was shutdown gracefully.
",MB 5.5.1-fuse-01-13,,,,,,,,,,,,,,30/Mar/12 2:59 PM;ccorsi1;incompletepatch.diffs;https://issues.jboss.org/secure/attachment/12368960/incompletepatch.diffs,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3801,,,,1.0,2.0,,1|hzki7j:,179919,,,,,,,,30/Mar/12 3:12 PM;garytully;need to get this into the next release,"05/Apr/12 2:03 PM;dbosanac;I fixed the current implementation to flush the index on every write. That should solve this particular issue.

You can find the snapshot with this fix here

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1.fuse-SNAPSHOT/apache-activemq-5.5.1.fuse-20120405.121310-9-bin.tar.gz",,,,,,,,,,,,,,,,,,
Broker Web Console should disable HTTP TRACE by default,MB-1107,12516516,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,29/Feb/12 9:04 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,25/Sep/12 6:11 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,broker,,,0,,"This is a follow on issue to MR-579.

If you hit http://0.0.0.0:8161/demo with a HTTP TRACE it responds. It should be disabled by default.

",Fuse MB  5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,4.0,,1|hzkjhb:,180124,,,,,,,,"05/Apr/12 2:59 PM;dbosanac;I think this is not a problem. 302 status simply means / is at /index.html ... if you tweak test a bit and use http://0.0.0.0:8161/demo/index.html url (or any other valid demo or admin url), you'll get a proper 405 status.",05/Apr/12 3:11 PM;davestanley;This is a follow on to a similar issue with camel - main driver for fix was http://www.kb.cert.org/vuls/id/867593,"06/Apr/12 10:38 AM;dbosanac;Hi Dave,

I did some more research on this. This has nothing to do with Spring or any of the Servlets, this is purely how Jetty handles TRACE requests. And it can be interpreted in different ways, but it could be argued that this is a proper behavior.

So demo app doesn't include any servlets from our side and is purely a set of client (http/js) examples. So some web servers probably intercept any TRACE calls and return error 403,405 or some 5xx status. Others first resolve the url fully and only if the URL is valid return  TRACE disabled status. Jetty do this, so for example if you try

http://0.0.0.0:8161/demoqwe

you'll get 404 as this URL doesn't exist. The url used in test

http://0.0.0.0:8161/demo

requires for Jetty to do a redirect to

http://0.0.0.0:8161/demo/

and hence the 302 status code. If the security tool follow this new URL it will get 405 as expected.

There's even a blog post from a guy that's into this PCI compliant testings

http://blog.techstacks.com/2008/10/consolidated-post-trace-method-handling.html

and you can see that he discusses this case, so it's probably common.

We can raise issue against Jetty and I can even patch it if needed. but it'd be good to first communicate this with the customer,",18/May/12 3:26 PM;davestanley;Closing for now.,,,,,,,,,,,,,,,,
"Repeated call to PooledConnection.setClientID() with the same clientId should not raise a IllegalStateException(""Setting clientID on a used Connection is not allowed"")",MB-1106,12516515,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,28/Feb/12 1:29 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,02/Mar/12 1:16 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-03-04,,,broker,,,0,,"Calling ActiveMQConnection.setClientID() twice currently raises an IllegalStateException:

{code:title=ActiveMQConnection.java}
public void setClientID(String newClientID) throws JMSException {
        checkClosedOrFailed();

        if (this.isConnectionInfoSentToBroker) {
            throw new IllegalStateException(""Setting clientID on a used Connection is not allowed"");
        }
        
        this.info.setClientId(newClientID);
        this.userSpecifiedClientID = true;
        ensureConnectionInfoSent();
    }
{code}

This successfully prevents from overriding clientID on an already started connection.
However in the case of using a Camel JMS endpoint with durable subscriptions, transactions and configuring for a PooledConnectionFactory, this current behavior causes problems. 
Due to the durable sub a clientID needs to be set on the connection. This happens at startup of the JMS consumer by calling ActiveMQConnection.setClientID().
If you stop the Camel route, the connection will be released back to the pool with the clientID remaining. 
If you restart the Camel route, it will setup a new Spring DMLC and reinitialize the connection with the configured clientId. A new connection is obtained from the pool and setClientID() is invoked on that connection. This will raise the above Exception. 

If we try to set the same clientID on the PooledConnection again, we should simply ignore the call rather than raising an exception.This allows the camel-jms consumer to be restarted. 

Without a fix, its impossible restart a Camel route that uses camel-jms with durable subscriptions and the PooledConnectionFactory.
",,,,,,,,,,,,,,,28/Feb/12 4:48 PM;mielket;MB-1106.patch;https://issues.jboss.org/secure/attachment/12368948/MB-1106.patch,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3752,,,,1.0,2.0,,1|hzkhyv:,179880,,,,,,,,28/Feb/12 4:48 PM;mielket;Proposed fix including JUnit test.,02/Mar/12 1:16 PM;garytully;fix on 5.5.x and 5.5.1,,,,,,,,,,,,,,,,,,
StompNIOTransport doStop should check for null before calling selection.stop(),MB-1105,12516514,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,rkieley,rkieley,28/Feb/12 12:48 PM,28/Feb/12 3:25 PM,29/Nov/16 4:15 PM,28/Feb/12 3:25 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,,,,0,,"NPE with STOMP+NIO has root case of doStop check for null missing.
Has been raised and fixed externally as AMQ-3721",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3721,,,,0.0,1.0,,1|hzkhpj:,179837,,,,,,,,28/Feb/12 3:25 PM;tabish121;Fix merged.,,,,,,,,,,,,,,,,,,,
Backport AMQ-3742 to 5.5.1: STOMP subscriber does not receive TextMessage with null body sent from JMS,MB-1104,12516512,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,pfox,pfox,28/Feb/12 9:00 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,28/Feb/12 3:26 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,broker,,,0,,"Please backport fix for AMQ-3742 (STOMP subscriber does not receive TextMessage with null body sent from JMS) to the 5.5.1 branch.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3742,,,,0.0,1.0,,1|hzkhpz:,179839,,,,,,,,28/Feb/12 3:26 PM;tabish121;Fix merged.,,,,,,,,,,,,,,,,,,,
JMX stats are off when a duplicate consumer ID is added when using failover URI ,MB-1102,12516513,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,27/Feb/12 8:02 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,06/Apr/12 3:20 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"We've discovered that normally you get an error when you try to register a consumer with a client ID already in use:

{quote}
Unable to connect to JMS broker
javax.jms.InvalidClientIDException: Broker: localhost - Client: TopicSubscriber-1 already connected from /127.0.0.1:55998
{quote}

Unfortunately, when using a failover URI in the client, this exception does not bubble back. The test case tries to register 4 consumers:

{code}
        new TopicSubscriber(""TopicSubscriber-1"",""Request.Internal.Instance1"");
        new TopicSubscriber(""TopicSubscriber-1"",""Request.Internal.Instance2"");
        new TopicSubscriber(""TopicSubscriber-3"",""Request.Internal.Instance3"");
        new TopicSubscriber(""TopicSubscriber-4"",""Request.Internal.Instance4"");
{code}

The ""TopicSubscriber"" uses the first parameter as the client ID which you can see is duplicated in the above example.  When we run this example with a client connection of:

{code}
        ""failover:(tcp://localhost:61616)"";
{code}

We do see a message on the broker side that there was trouble registering the Mbean:

{quote}

 WARN | Failed to register MBean: org.apache.activemq:BrokerName=localhost,Type=Connection,ConnectorName=openwire,Connection=TopicSubscriber-1

{quote}

However, there is no exception returned to the client and the broker stats are off. It lists 4 consumers and the connection only shows the three.  From netstat it looks like the connection is there:

{code}
tcp4       0      0  Susan-Javureks-M.61616 Susan-Javureks-M.56101 ESTABLISHED
tcp4       0      0  Susan-Javureks-M.61616 Susan-Javureks-M.56100 ESTABLISHED
tcp4       0      0  Susan-Javureks-M.61616 Susan-Javureks-M.56099 ESTABLISHED
tcp4       0      0  Susan-Javureks-M.61616 Susan-Javureks-M.56098 ESTABLISHED
{code}

And if I send a message to the associated queue, it receives it so it was allowed in there. In this situation the broker consumer count shows 4 but the actual connections only show one TopicSubscriber-1, TopicSubscriber-3 and TopicSubscriber-4.  Things are a bit off ...

Kindest regards, 
Susan
 
",,,,,,,,,,,,,,,27/Feb/12 8:04 PM;sjavurek;tc-1305.zip;https://issues.jboss.org/secure/attachment/12368950/tc-1305.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3792,,,,1.0,3.0,,1|hzkjpz:,180163,,,,,,,,"27/Feb/12 8:06 PM;sjavurek;Test Case attached.  Just build it and and use the profile client, mvn -P client to run the test. The test at moment is set up to demonstrate the above behavior.  

","29/Mar/12 10:09 PM;garytully;looking more at this, the current difference in behavior between failover: and tcp: is problematic. A duplicate should result in InvalidClientIDException, irrespective of the transport.
I have resolved this in https://issues.apache.org/jira/browse/AMQ-3792 and found only one test that is incorrectly dependent on the old behavior.
The duplicate connectionId suppression in TransportConnection is sufficient for both the network and failover reconnect case.",06/Apr/12 3:20 PM;garytully;fix is on trunk.,,,,,,,,,,,,,,,,,
camel jetty endpoints have dependency on org.eclipse.jetty.http.ssl.SslContextFactory,MB-1101,12516510,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,27/Feb/12 5:48 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Mar/12 12:38 AM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,,,,0,,"The 5.5.1.x branch is aligned with camel 2.8.x branch.

Camel 2.8.x has a dependency on 7.3.1.v20110307 but the broker is shipping 7.1.6v20100715

When starting a camel jetty endpoint embedded within the broker, jetty endpoint cannot be created resulting
in the following exception

{code}
Caused by: java.lang.ClassNotFoundException: org.eclipse.jetty.http.ssl.SslContextFactory
	at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
{code}

Example Route:

{code}
<camelContext xmlns=""http://camel.apache.org/schema/spring"" id=""abc-camel-context"">
<route id=""abc-route"">
<description>HTTP to Queue Route</description>
<from uri=""jetty:http://0.0.0.0:3333/abc""/>
<to uri=""activemq:example.A"" pattern=""InOnly""/>
</route>
</camelContext>
{code}

Workaround: Manually upgrading version of <broker>/lib/web/jetty-all and <broker>/lib/web/jetty-websocket 7.3.1.v20110307 resolves the issue.

",5.5.1.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkhs7:,179849,,,,,,,,01/Mar/12 12:38 AM;tabish121;Changes merged from trunk for jetty and httpClient fixes.  Jetty now on v7.3.1 and HttpClient moved to 4.1.2,,,,,,,,,,,,,,,,,,,
Merge AMQ-3588 to 5.4.x branch/3.5.x ESB,MB-1100,12516508,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,23/Feb/12 2:57 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,24/Feb/12 3:03 PM,5.4.2-fuse-05-05,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-05-26,,,,,,,0,,Place holder issue to track merge of AMQ-3588 to 5.4.x branch.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkhnj:,179828,,,,,,,,24/Feb/12 3:03 PM;tabish121;Changes merged to 5.4.x-fuse,,,,,,,,,,,,,,,,,,,
Topic subscriber is assumed to be slow consumer when prefetch is set to one.,MB-1098,12516507,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,pfox,pfox,22/Feb/12 1:48 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,28/Mar/12 10:56 AM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-04-01,,,broker,,,0,,"This is place holder for https://issues.apache.org/jira/browse/AMQ-3733. From AMQ-3733:

The broker checks for slow subscribers by checking its dispatch queue size against the prefetch size. If the dispatch queue is greater than or equal to the prefetch size the broker treats this subscription is a slow subscriber.

However if the subscribers prefetch size is ""1"" then the subscription will get treated as a slow subscriber even if the messages do not remain long in the subscription. This can result in a lot of warning log statements

{code}
""TopicSubscription: consumer=... has reached its prefetch limit without an ack, it appears to be slow""
{code}

and slow consumer advisory messages being generated if ""AdvisoryForSlowConsumers"" has been turned on.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3733,,,,0.0,2.0,,1|hzki7z:,179921,,,,,,,,02/Mar/12 6:18 PM;garytully;schedule for next release as that warn was recently introduced.,28/Mar/12 10:56 AM;garytully;fix on the 5.5.x and 5.5.1 -fuse branches,,,,,,,,,,,,,,,,,,
Suspicious NPE in log when network bridge cannot be established and loggingBrokerPlugin configured,MB-1096,12516505,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,17/Feb/12 10:55 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Feb/12 3:30 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,broker,,,0,,"WIth the following broker plugins enabled:

{code}
<plugins>
<loggingBrokerPlugin logAll=""true"" logConnectionEvents=""false""/>
<traceBrokerPathPlugin/>
</plugins>
{code}

and network bridge down (only one broker up), the following error appears in the active broker log:

{code}
WARN  - DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker1?async=false&network=true and: tcp://0.0.0.0:61627?soWriteTimeout=15000&soTimeout=15000&wireFormat.maxInactivityDuration=30000 due to: java.net.ConnectException: Connection refused
WARN  - DemandForwardingBridgeSupport  - Caught an exception processing local command
java.lang.NullPointerException
	at org.apache.activemq.broker.util.LoggingBrokerPlugin.removeBroker(LoggingBrokerPlugin.java:406)
	at org.apache.activemq.broker.MutableBrokerFilter.removeBroker(MutableBrokerFilter.java:195)
	at org.apache.activemq.broker.MutableBrokerFilter.removeBroker(MutableBrokerFilter.java:195)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:339)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:718)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:130)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
	at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:991)
	at org.apache.activemq.broker.TransportConnection$4.run(TransportConnection.java:954)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)

{code}


","5.5-SNAPSHOT, 5.5.1.x",,,,,,,,,,DEV-3819,,,,17/Feb/12 10:56 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368947/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3731,,,,1.0,2.0,,1|hzkho7:,179831,,,,,,,,"17/Feb/12 10:56 PM;davestanley;Testcase attached. To run:

>mvn -Pbroker1
>mvn -Pbroker2

Then ctrl-c broker2
",27/Feb/12 3:30 PM;tabish121;Fix merged to 5.5,,,,,,,,,,,,,,,,,,
Dynamic Failover Breaks NetworkConnector & Queue MBean Creation,MB-1088,12516499,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,sully6768,sully6768,16/Feb/12 5:47 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,17/Feb/12 12:51 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"When enabling dynamic failover, some or all brokers are missing their NetworkConnector & Queue MBeans.  See [AMQ-3724|https://issues.apache.org/jira/browse/AMQ-3724] for details.

Thanks,
Scott ES",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3724,,,,0.0,1.0,,1|hzki4v:,179907,,,,,,,,"17/Feb/12 12:51 PM;sully6768;Issue has been resolved and a new unit test patch has been attached to the JIRA issue at apache.

Thanks,
Scott ES
http://fusesource.com",,,,,,,,,,,,,,,,,,,
"""activemq-admin browse"" help command prints wrong argument name  ",MB-1087,12516498,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Trivial,Done,tabish121,pfox,pfox,16/Feb/12 9:56 AM,27/Feb/12 3:30 PM,29/Nov/16 4:15 PM,27/Feb/12 3:30 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,broker,,,0,,"""activemq-admin browse"" help command prints wrong argument name ,

The help message printed that is printed out
{code}

  Main browse --amqurl tcp://localhost:61616 --user someUser --pass somePass FOO.BAR
        - Print the message header, custom message header, and message body of all messages in the
          queue FOO.BAR, using someUser as the user name, and somePass as the password  

{code}

the ""-pass"" argument above  is not recognized, it seems to use ""-password"" 

",,,,,,,,,,,MB-1050,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3722,,,,0.0,2.0,,1|hzkhon:,179833,,,,,,,,16/Feb/12 10:56 AM;pfox;Actually the argument name is printed out multiple times in the help message sometimes correctly sometimes incorrectly.,27/Feb/12 3:30 PM;tabish121;Fix merged to 5.5,,,,,,,,,,,,,,,,,,
"Network connector leaks, when conduitSubscriptions=""true"" ",MB-1086,12516496,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,14/Feb/12 4:06 PM,17/Feb/12 1:10 PM,29/Nov/16 4:15 PM,17/Feb/12 1:10 PM,5.5.1-fuse-02-02,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-03-04,,,,,,0,,"When conduitSubscriptions=""true"" which is true by default, a small memory leak occurs in our hashmap for queues with multiple consumers. 

A workaround it to use conduitSubscriptions=""false"".  conduitSubscriptions is important for topics because it ensures not duplicates. For queues, it ensures that multiple consumers of a single destination on a local broker map to a single consumer on a remote broker.  When set to false, there is a one to one mapping between local consumer and network bridge consumers on the remote broker. The key question relating to impact of changing this config value is if there are multiple consumers per destination, because when false, each of these will be bridged. If there is high volume, more resources will be consumed on the remote broker to keep all consumers prefetch buffers filled. If the volume is low, the impact will be low.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3716,,,,0.0,1.0,,1|hzkhlr:,179820,,,,,,,,"17/Feb/12 1:10 PM;garytully;merged to 5.5.1-fuse 
note: new snapshot uses *.* in place of *-* as the prefix for fuse;
_*5.5.1.fuse-SNAPSHOT*_",,,,,,,,,,,,,,,,,,,
activemq-all.jar is missing the slf4j-log4j12 dependency,MB-1085,12516497,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,jsherman,jsherman,13/Feb/12 5:01 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Feb/12 4:53 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,broker,,,0,,"According to the documentation [1], the activemq-all.jar should contain all required libraries. However when running a sample project the following error occurs:

java.lang.reflect.InvocationTargetException
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:297)
at java.lang.Thread.run(Thread.java:680)
Caused by: java.lang.NoClassDefFoundError: org/slf4j/impl/StaticLoggerBinder
at org.slf4j.LoggerFactory.getSingleton(LoggerFactory.java:230)
at org.slf4j.LoggerFactory.bind(LoggerFactory.java:121)
at org.slf4j.LoggerFactory.performInitialization(LoggerFactory.java:112)
at org.slf4j.LoggerFactory.getILoggerFactory(LoggerFactory.java:275)
at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:248)
at org.slf4j.LoggerFactory.getLogger(LoggerFactory.java:261)
at org.apache.activemq.ActiveMQPrefetchPolicy.<clinit>(ActiveMQPrefetchPolicy.java:38)
at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:88)
at org.apache.activemq.ActiveMQConnectionFactory.<init>(ActiveMQConnectionFactory.java:131)
at com.fusesource.example.Producer.<init>(Producer.java:25)
at com.fusesource.example.DEV3783.main(DEV3783.java:47)
... 6 more
Caused by: java.lang.ClassNotFoundException: org.slf4j.impl.StaticLoggerBinder
at java.net.URLClassLoader$1.run(URLClassLoader.java:202)
at java.security.AccessController.doPrivileged(Native Method)
at java.net.URLClassLoader.findClass(URLClassLoader.java:190)
at java.lang.ClassLoader.loadClass(ClassLoader.java:306)
at java.lang.ClassLoader.loadClass(ClassLoader.java:247)
... 17 more

[1] http://activemq.apache.org/initial-configuration.html",apache-activemq-5.5.1-fuse-01-13,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3715,,,,0.0,1.0,,1|hzkhmv:,179825,,,,,,,,17/Feb/12 4:53 PM;tabish121;Fix merged into 5.5.1-fuse,,,,,,,,,,,,,,,,,,,
Merge AMQ-3588 to 5.5.x branch,MB-1079,12516490,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,09/Feb/12 5:58 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,17/Feb/12 1:09 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-05,,,,,,,0,,Tracking bug. Can we get https://issues.apache.org/jira/browse/AMQ-3588 merged to the 5.5.x branch. Its already in 5.6,5.5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3588,,,,0.0,1.0,,1|hzki0n:,179888,,,,,,,,"17/Feb/12 1:09 PM;garytully;merged to 5.5.1-fuse 
note: new snapshot uses *.* in place of *-* as the prefix for fuse;
_*5.5.1.fuse-SNAPSHOT*_",,,,,,,,,,,,,,,,,,,
Copyright notice is out of date in AMQ console,MB-1078,12516489,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Trivial,Done,tabish121,davestanley,davestanley,07/Feb/12 8:24 PM,12/Jun/12 2:21 PM,29/Nov/16 4:15 PM,12/Jun/12 2:21 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"
Start broker
http://0.0.0.0:8161/admin/queues.jsp

Copyright 2005-2007 The Apache Software Foundation. (printable version)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3078,,,,0.0,0.0,,1|hzkipr:,180001,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fix Jetty security hole in ActiveMQ 5.5.x,MB-1075,12516486,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,joe.luo,joe.luo,02/Feb/12 10:23 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Mar/12 3:53 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-03-04,,,,,,,0,,Please fix the security hole described in AMQ-3693 and apply the fix to the 5.5 branch,,,,,,,,,,,MB-1101,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3693,,,,0.0,1.0,,1|hzkhtb:,179854,,,,,,,,29/Feb/12 7:58 PM;garytully;We need to align the jetty version with camel,,,,,,,,,,,,,,,,,,,
Connecting to AMQ using stomp from telnet issue,MB-1074,12516485,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,garytully,davsclaus,davsclaus,02/Feb/12 5:05 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,29/Feb/12 7:40 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-03-04,,,broker,,,0,,"See forum for description and steps to reproduce the issue
http://fusesource.com/forums/thread.jspa?threadID=3668&tstart=0","apache-activemq-5.5.1-fuse-01-13
OS = Mac OS X 10.6.8.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3729,,,,0.0,2.0,,1|hzkj7j:,180079,,,,,,,,20/Feb/12 3:00 PM;garytully;ref to issue at apache: https://issues.apache.org/jira/browse/AMQ-3729,29/Feb/12 7:40 PM;garytully;fix on 5.5.x and 5.5.1 so will make sp3,,,,,,,,,,,,,,,,,,
Durable subscribers on durable topics don't receive messages after network disconnect,MB-1073,12516484,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,31/Jan/12 7:44 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,02/Feb/12 10:50 AM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-05-26,,,,broker,,,0,,"Need backport of https://issues.apache.org/jira/browse/AMQ-3353 to the 5.4.x branch.

I made the backport of the fix in the Apache issue, but test still fails on 5.4.x. I am wondering if
additional fixes may be required.

",5.4.2-02-00.,,,,,,,,,,,,,,31/Jan/12 7:45 PM;davestanley;patch.txt;https://issues.jboss.org/secure/attachment/12368945/patch.txt,31/Jan/12 7:45 PM;davestanley;testcase.zip;https://issues.jboss.org/secure/attachment/12368946/testcase.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3353,,,,2.0,4.0,,1|hzkhgf:,179796,,,,,,,,"31/Jan/12 7:45 PM;davestanley;Attaching testcase and patch applied. With the patch
the test is better in that messages flow, but seems the 
second test fails.",31/Jan/12 7:46 PM;davestanley;BQ:High,"02/Feb/12 10:50 AM;garytully;fix is on the 5.4.x-fuse branch and all tests, including the new one, are good",02/Feb/12 10:56 AM;garytully;next step is to schedule http://fusesource.com/issues/browse/MB/fixforversion/11620,,,,,,,,,,,,,,,,
java.util.ConcurrentModificationException in org.apache.activemq.broker.region.Queue.iterate(),MB-1072,12516483,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,31/Jan/12 4:49 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Feb/12 9:46 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-02-02,5.6.0-fuse-00-00,,broker,,,0,,"The following stack was reproduced in AMQ 5.5.1 but not the Fuse Message Broker version.

{code}
 Exception in thread ""BrokerService[3561F026-E8F62746-2A202922-F17EADF0-7BCA8E67] Task-5053"" java.util.ConcurrentModificationException
jvm 1    | 	at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
jvm 1    | 	at java.util.LinkedHashMap$ValueIterator.next(LinkedHashMap.java:388)
jvm 1    | 	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1376)
jvm 1    | 	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:127)
jvm 1    | 	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:48)
jvm 1    | 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
jvm 1    | 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
jvm 1    | 	at java.lang.Thread.run(Thread.java:662)
{code}

This issue is to audit the pagedInMessages LinkedHashMap and verify its protected sufficiently.

",5.5.1 AMQ,,,,,,,,,,DEV-3761,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3700,,,,0.0,1.0,,1|hzkhjz:,179812,,,,,,,,06/Feb/12 9:46 PM;tabish121;Fix applied.,,,,,,,,,,,,,,,,,,,
Broker throws javax.jms.ResourceAllocationException: Temp Store is Full  (0% of ....)  - when using virtual topics and memory limit is hit,MB-1071,12516482,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,31/Jan/12 3:19 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Feb/12 4:32 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"We have a producer sending to a virtual topic with a slow consumer consuming messages from a queue associated
with the virtual topic.

As expected, the broker hits its memory limits and producer flow control kicks in. In this scenario
the broker is throwing a javax.jms.ResourceAllocationException as follows:

{code}
2012-01-30 17:38:37,120 [ActiveMQ Task-3] - WARN  Service                        - Async error occurred: javax.jms.ResourceAllocationException:
 Temp Store is Full (0% of 10485760). Stopping producer (ID:dstanley-mbp.home-53940-1327963081000-4:2:1:1) to prevent flooding 
queue://Consumer.FOO.VirtualTopic.test. See http://activemq.apache.org/producer-flow-control.html for more info
javax.jms.ResourceAllocationException: Temp Store is Full (0% of 10485760). Stopping producer (ID:dstanley-mbp.home-53940-
1327963081000-4:2:1:1) to prevent flooding queue://Consumer.FOO.VirtualTopic.test. See http://activemq.apache.org/producer-flow-
control.html for more info

	at org.apache.activemq.broker.region.BaseDestination.waitForSpace(BaseDestination.java:597)
	at org.apache.activemq.broker.region.BaseDestination.waitForSpace(BaseDestination.java:591)
	at org.apache.activemq.broker.region.Queue.checkUsage(Queue.java:751)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:668)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:647)
	at org.apache.activemq.broker.region.DestinationFilter.send(DestinationFilter.java:137)
	at org.apache.activemq.broker.region.virtual.VirtualTopicInterceptor.send(VirtualTopicInterceptor.java:48)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:409)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:542)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:470)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:218)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
{code}","5.5.x, 5.5.1.-01-13",,,,,,,,,,DEV-3762,,,,31/Jan/12 3:21 PM;davestanley;MemoryUsageTrial.java;https://issues.jboss.org/secure/attachment/12368944/MemoryUsageTrial.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzkhif:,179805,,,,,,,,"31/Jan/12 3:21 PM;davestanley;Attaching testcase. Just copy in below 

<fusemb>/activemq-core/src/test/java/org/apache/activemq/broker

Then run within IDE..",01/Feb/12 4:01 PM;tabish121;The root cause of the issue here is that they have configured to the temp store to 10mb but the default size of the journal file used by the PList store in the temp store is 32mb so you immediately exceed the percentage used.  The solution is to configure the max journal size to something less thean the max temp store size.  ,"01/Feb/12 4:23 PM;tabish121;The test can be made to run if you add this bit of config:

{noformat}
        service.getSystemUsage().getTempUsage().getStore().setJournalMaxFileLength(10*1048576);
{noformat}",03/Feb/12 4:32 PM;tabish121;Added an additional error check in BrokerSerivce to report the scenario.  Better documentation of this in the configuration docs would help as well.,,,,,,,,,,,,,,,,
Failover using a JDBC Message Store and Virtual Topic can result in a lost message if queue is empty,MB-1070,12516481,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,27/Jan/12 1:37 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Feb/12 12:33 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-02-02,,,,,,0,,"If two brokers are configured for failover and using the same JDBC message store, a message can be lost if using virtual topics.  

The following occurs in this scenario:
A consumer connects to the broker and expresses interest in the virtual topic and the queue is created and empty
The consumer then disconnects
The broker is killed and the producer fails over to the next broker
The producer sends the message to the topic
The consumer reconnects to the broker, however it has no message waiting the virtual topic's queue","apache-activemq-5.5.1-fuse-01-13
apache-activemq-5.5.0
SQL Server 2008 R2
MySQL 5.5.20",,,,,,,,,,,,,,27/Jan/12 1:39 AM;jsherman;TestFailover.zip;https://issues.jboss.org/secure/attachment/12368942/TestFailover.zip,27/Jan/12 8:11 PM;jsherman;mb-1070.zip;https://issues.jboss.org/secure/attachment/12368943/mb-1070.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3695,,,,2.0,1.0,,1|hzkhjj:,179810,,,,,,,,"06/Feb/12 12:33 PM;garytully;https://issues.apache.org/jira/browse/AMQ-3695
fix on 5.5.x and 5.5.1 -fuse branches.",,,,,,,,,,,,,,,,,,,
Cluster rebalancing in a simple network of brokers does not work as expected,MB-1069,12516480,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,rkieley,rkieley,26/Jan/12 8:23 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,29/Feb/12 1:27 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-03-04,,,broker,,,0,,"With two brokers configured as a network, with 20 producers and 20 consumers
launched via the included example program, taking one down and bringing it back
up does not result in a balanced situation.

When tested the results were 5 vs. 15 consumers in my case and 7 vs. 13 producers.
Possibly related to AMQ-3544.","5.5.1-fuse-01-13, OSX 10.7.2, jdk 1.6.0_29",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3706,,,,0.0,2.0,,1|hzkhrj:,179846,,,,,,,,"10/Feb/12 4:01 PM;dbosanac;This is now fixed with https://issues.apache.org/jira/browse/AMQ-3706

It'll be merged to 5.5.1-fuse branch after the current release",29/Feb/12 1:27 PM;garytully;fix merged to 5.5.1-fuse branch for sp3,,,,,,,,,,,,,,,,,,
ClassCastException in KahaDB,MB-1068,12516479,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,25/Jan/12 12:19 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,17/Feb/12 4:05 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"So far have seen this with users using SAN disk, difficult to reproduce as only occurs very occasionally.

Problem occurs in 5.4.x versions also.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2284,,,,0.0,1.0,,1|hzkhmf:,179823,,,,,,,,"25/Jan/12 3:30 PM;socallag;Exception the user is seeing:

{code}
2012-01-19 12:18:22,131 | ERROR | ce[default] Task | xxxxxxxxxx| Failed to page in more queue messages
java.lang.RuntimeException: java.lang.RuntimeException: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:112)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1688)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1908)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1435)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)[:1.6.0_26]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)[:1.6.0_26]
        at java.lang.Thread.run(Thread.java:662)[:1.6.0_26]
Caused by: java.lang.RuntimeException: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:264)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:109)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        ... 9 more
Caused by: java.lang.ClassCastException: java.lang.String cannot be cast to java.lang.Long
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.next(MessageDatabase.java:2326)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.next(MessageDatabase.java:2254)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:493)45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)[46:org.apache.activemq.kahadb:5.4.2.fuse-01-00]
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:485)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:88)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:261)[45:org.apache.activemq.activemq-core:5.4.2.fuse-01-00]
        ... 10 more
{code}",,,,,,,,,,,,,,,,,,,
Space at end of queue name is not honored by consumers,MB-1067,12516478,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,24/Jan/12 10:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Feb/12 6:48 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"Hi, 

Matt is on-site for a potential customer and noted the following behavior in 5.5.1-fuse-01-20:

1. Create a queue with a space on the end.. ""MyQueue ""
2. Publish X number of messages to ""MyQueue ""
3. Create a queue, same name w/o space on the end. ""MyQueue""
4. Publish Y number of messages to ""MyQueue""
5. Attempt to consume messages from ""MyQueue"" fails.

To reproduce the issue here, use the producer demo:

1.  ant producer -Durl=tcp://Susan-Javureks-MacBook-Pro-3.local:61616 -Dsubject=""TEST.FOO "" -Dmax=5
2.  ant producer -Durl=tcp://Susan-Javureks-MacBook-Pro-3.local:61616 -Dsubject=""TEST.FOO"" -Dmax=5 

Via jconsole, you'll see two queues created.  Looking closely at the name attribute, you can see the space if you highlight the entire name (see attached jconsole.jpg). 

3. ant consumer -Durl=tcp://Susan-Javureks-MacBook-Pro-3.local:61616 -Dsubject=""TEST.FOO"" -Dmax=10

Will work grab all 10 messages regardless of the ""space"" at the end:

Susan-Javureks-MacBook-Pro-3:example sjavurek$ ant consumer -Durl=tcp://Susan-Javureks-MacBook-Pro-3.local:61616 -Dsubject=""TEST.FOO"" -Dmax=10
Buildfile: /Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-01-20/example/build.xml

init:

compile:

{code}
consumer:
     [echo] Running consumer against server at $url = tcp://Susan-Javureks-MacBook-Pro-3.local:61616 for subject $subject = TEST.FOO
     [java] Connecting to URL: tcp://Susan-Javureks-MacBook-Pro-3.local:61616 (:)
     [java] Consuming queue: TEST.FOO
     [java] Using a non-durable subscription
     [java] Running 1 parallel threads
     [java] [Thread-3] We are about to wait until we consume: 10 message(s) then we will shutdown
     [java] [Thread-3] Received: 'Message: 0 sent at: Tue Jan 24 17:14:27 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 1 sent at: Tue Jan 24 17:14:27 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 2 sent at: Tue Jan 24 17:14:27 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 3 sent at: Tue Jan 24 17:14:27 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 4 sent at: Tue Jan 24 17:14:27 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 0 sent at: Tue Jan 24 17:14:35 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 1 sent at: Tue Jan 24 17:14:35 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 2 sent at: Tue Jan 24 17:14:35 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 3 sent at: Tue Jan 24 17:14:35 EST 2012  ...' (length 1000)
     [java] [Thread-3] Received: 'Message: 4 sent at: Tue Jan 24 17:14:35 EST 2012  ...' (length 1000)
     [java] [Thread-3] Closing connection
     [java] All threads completed their work

BUILD SUCCESSFUL
Total time: 2 seconds
Susan-Javureks-MacBook-Pro-3:example sjavurek$ 
{code}

The queue size for both queues goes to 0. Running consumer with -Dmax=1 for -Dsubject=""TEST.FOO "" twice in a row results in one message pulled of ""TEST.FOO "" and one from ""TEST.FOO"". 

Seems a bit confused ....",,,,,,,,,,,,,,,24/Jan/12 10:20 PM;sjavurek;jconsole.jpg;https://issues.jboss.org/secure/attachment/12368941/jconsole.jpg,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3586,,,,1.0,1.0,,1|hzkhiv:,179807,,,,,,,,03/Feb/12 6:48 PM;tabish121;The code will now trim off any extra whitespace at the start or end of the destination name to prevent this sort of situation from happening again.,,,,,,,,,,,,,,,,,,,
NPE when upgrading from 5.5.1-fuse-00-08 to 551-fuse-01-20 ,MB-1062,12516473,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,20/Jan/12 4:23 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Jan/12 10:51 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"When upgrading from 5.5.1-fuse-00-08 to the latest distro 551-fuse-01-20, the broker will not start due to errors loading the Kahadb. The exception that is thrown on startup is:

{code}
ERROR | Failed to start ActiveMQ JMS Message Broker (localhost, null). Reason: java.io.EOFException
java.io.EOFException
at java.io.RandomAccessFile.readFully(RandomAccessFile.java:399)
at java.io.RandomAccessFile.readFully(RandomAccessFile.java:377)
at org.apache.kahadb.page.PageFile.readPage(PageFile.java:827)
at org.apache.kahadb.page.Transaction.load(Transaction.java:412)
at org.apache.kahadb.page.Transaction.load(Transaction.java:362)
at org.apache.kahadb.index.BTreeIndex.load(BTreeIndex.java:159)
at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.load(MessageDatabase.java:2375)
at org.apache.activemq.store.kahadb.MessageDatabase.loadStoredDestination(MessageDatabase.java:1706)
at org.apache.activemq.store.kahadb.MessageDatabase.access$100(MessageDatabase.java:97)
at org.apache.activemq.store.kahadb.MessageDatabase$2.execute(MessageDatabase.java:277)
at org.apache.kahadb.page.Transaction.execute(Transaction.java:765)
at org.apache.activemq.store.kahadb.MessageDatabase.loadPageFile(MessageDatabase.java:273)
at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:337)
at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:387)
at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:235)
at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:175)
at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:54)
at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:193)
at org.apache.activemq.broker.BrokerService.start(BrokerService.java:508)
at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&lt;init&gt;(ResourceXmlApplicationContext.java:64)
at org.apache.xbean.spring.context.ResourceXmlApplicationContext.&lt;init&gt;(ResourceXmlApplicationContext.java:52)
at org.apache.activemq.xbean.XBeanBrokerFactory$1.&lt;init&gt;(XBeanBrokerFactory.java:106)
at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:106)
at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
at org.apache.activemq.console.Main.main(Main.java:107)
{code}

The broker then attempts to stop, but reports similar NPE's.

This is replicable from the distribution zip's if you download 551-00-08 start it up, and in the admin console do:

    create a durable topic subscriber (any name)
    send a perisistent message to a topic (not the topic the durable subscriber is registered against)
    stop the broker
    copy the data/ to a 551-01-20 distro, and attempt to start up the broker.


All is fine if I delete the kahadb/db.data and startup.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3467,,,,0.0,4.0,,1|hzkhfj:,179792,,,,,,,,"27/Jan/12 5:10 PM;garytully;Exception for a durable sub, that results from migrating from 5.5.0-fuse-00-06 to 5.5.1-fuse-01-20 without an index rebuild. The expiry throws this, a reconnect of a durable does not get any messages.{code} WARN | Failed to browse Topic: Bar
java.io.EOFException
	at java.io.DataInputStream.readFully(DataInputStream.java:180)
	at java.io.DataInputStream.readUTF(DataInputStream.java:592)
	at java.io.DataInputStream.readUTF(DataInputStream.java:547)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageKeysMarshaller.readPayload(MessageDatabase.java:1452)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageKeysMarshaller.readPayload(MessageDatabase.java:1448)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:201)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:147)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:407)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:362)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeIndex.getRoot(BTreeIndex.java:174)
	at org.apache.kahadb.index.BTreeIndex.iterator(BTreeIndex.java:232)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.<init>(MessageDatabase.java:2565)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.iterator(MessageDatabase.java:2540)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$3.execute(KahaDBStore.java:506)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:765)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:502)
	at org.apache.activemq.store.ProxyTopicMessageStore.recover(ProxyTopicMessageStore.java:53)
	at org.apache.activemq.broker.region.Topic.doBrowse(Topic.java:543)
	at org.apache.activemq.broker.region.Topic.access$100(Topic.java:63)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:667)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462){code}

stopping, removing db.data and db.redo and having the index rebuild after a restart sorts this out. So I think we may just need to document the need for an index rebuild.
","27/Jan/12 5:54 PM;garytully;With a minimal pom.xml{code}<?xml version=""1.0"" encoding=""UTF-8""?>
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.fusesource.support</groupId>
  <artifactId>test</artifactId>
  <version>1.0-SNAPSHOT</version>
</project>{code} the activemq maven plugin is very useful for validating, eg:{code}$ mvn org.apache.activemq.tooling:maven-activemq-plugin:5.5.1-fuse-SNAPSHOT:run -DconfigUri=""broker:(tcp://localhost:61616)"" -Dlog4j.configuration=file:///Users/gtully/bugs/mb1062/target/classes/log4j.properties{code}
or another version:{code}$ mvn org.apache.activemq.tooling:maven-activemq-plugin:5.5.1-fuse-00-06 -DconfigUri=""broker:(tcp://localhost:61616)"" -Dlog4j.configuration=file:///Users/gtully/bugs/mb1062/target/classes/log4j.properties{code}",27/Jan/12 10:03 PM;garytully;There was a bug in the auto upgrade procedure from https://issues.apache.org/jira/browse/AMQ-3467 - resolved that on trunk so that the upgrade can now be automatic,27/Jan/12 10:51 PM;garytully;the upgrade is now automatic from kahaDB v3 to v4 so there is no need to recover the index.,,,,,,,,,,,,,,,,
"STOMP 1.1, NACKed messages will be sent straight to DLQ",MB-1061,12516472,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,20/Jan/12 3:20 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,09/Aug/12 1:06 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,broker,,,0,,"Is it possible to make this work in a similar manner as with JMS and respect the redelivery policy, e.g
http://activemq.apache.org/message-redelivery-and-dlq-handling.html",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,http://fusesource.com/issues/browse/MB-1157,,,,0.0,1.0,,1|hzkjpj:,180161,,,,,,,,09/Aug/12 1:06 PM;garytully;Resolving without change to the client. Broker redelivery from MB-1157 can give the desired behavior.,,,,,,,,,,,,,,,,,,,
NullPointerException generated to stderr on InactivityMonitor WriteCheck,MB-1059,12516470,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,rkieley,rkieley,19/Jan/12 2:47 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,27/Jan/12 4:09 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,5.6.0-fuse-00-00,,,,,,0,,"{code:xml}
Exception in thread ""InactivityMonitor WriteCheck"" java.lang.NullPointerException
        at org.apache.activemq.transport.InactivityMonitor.writeCheck(InactivityMonitor.java:147)
        at org.apache.activemq.transport.InactivityMonitor$2.run(InactivityMonitor.java:113)
        at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
        at java.util.TimerThread.mainLoop(Timer.java:512)
        at java.util.TimerThread.run(Timer.java:462)
{code}","Solaris 10
ActiveMQ :- apache-activemq-5.5.0-fuse-00-27",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkhfb:,179791,,,,,,,,27/Jan/12 4:09 PM;tabish121;Fixed by some other work that's already been done on the Stomp transport and the Transport Connectors.  The shutdown of the InactivityMonitor now waits for all the Queue tasks to finish.,,,,,,,,,,,,,,,,,,,
NPE exception when querying a starting broker use JMX program ,MB-1058,12516469,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,16/Jan/12 6:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/Jan/12 5:28 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"Hi, 

This occurs in the latest release, SP-20.  Essentially if your broker is slow starting up, e.g. you force a rebuild of the index file by deleting db.data & db.redo on a large kahadb and you try to obtain the list of queues on the broker, e.g. mbean.getQueues(), you'll get a NPE exception:

{code}
 * testing getQueues 
java.lang.NullPointerException
	at org.apache.activemq.broker.jmx.BrokerView.getQueues(BrokerView.java:189)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:93)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:27)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:208)
	at com.sun.jmx.mbeanserver.PerInterface.getAttribute(PerInterface.java:65)
	at com.sun.jmx.mbeanserver.MBeanSupport.getAttribute(MBeanSupport.java:216)
	at javax.management.StandardMBean.getAttribute(StandardMBean.java:358)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:666)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:638)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1404)
	at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectionImpl.java:72)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1265)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1360)
	at javax.management.remote.rmi.RMIConnectionImpl.getAttribute(RMIConnectionImpl.java:600)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
	at sun.rmi.transport.Transport$1.run(Transport.java:159)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
{code}

To reproduce cause the broker to be slow starting up and then try to run the attached program accordingly:

 java -cp ~/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-01-20/activemq-all-5.5.1-fuse-01-20.jar:./ GetQueue
",,,,,,,,,,,,,,,16/Jan/12 6:23 PM;sjavurek;GetQueue.java;https://issues.jboss.org/secure/attachment/12368940/GetQueue.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3672,,,,1.0,1.0,,1|hzkhdj:,179783,,,,,,,,20/Jan/12 5:28 PM;tabish121;Fix applied.  ,,,,,,,,,,,,,,,,,,,
Wrapper scripts configuration needs adjusting with respect to chkconfig and wrapper.java.library.path.1,MB-1054,12516466,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,05/Jan/12 2:48 PM,13/Jan/12 3:33 PM,29/Nov/16 4:15 PM,13/Jan/12 3:33 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"From the user:

activemq wrapper scripts (in bin/linux-x86-64, bin/linux-x86-32, bin/macosx) have the wrong chkconfig directives - probably just got the start/stop levels round the wrong way:

# chkconfig: 2345 20 80
Starting at level 20 is way too early I would suggest & something like start level of 80 is probably more appropriate. We have seen problems with starting this early in our environment, probably because other services are not up at that point

Stop level of 20 is probably appropriate as well so chkconfig directive should be something like:

# chkconfig: 2345 80 20
Also the wrapper.conf files in the same directories (except macosx) have an incorrect value set for wrapper.java.library.path.1, e.g.

wrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux/
Starting using the activemq script reports that it can't handle system signals correctly, although it appears to work okay.

Should be for 64 bit:

wrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux-x86-64/
and for 32 bit:

wrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux-x86-32/",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3659,,,,0.0,1.0,,1|hzkh6n:,179752,,,,,,,,13/Jan/12 3:33 PM;tabish121;fix applied.,,,,,,,,,,,,,,,,,,,
Examine size of temporary transaction files written to disk,MB-1053,12516465,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,22/Dec/11 5:10 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Dec/11 12:37 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-02-02,,,,,,0,,"Tracking jira to audit code that writes temporary transaction files written to disk. They seem to be a good bit larger
than the actual transaction itself.
",5.5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3374,,,,0.0,1.0,,1|hzkh3r:,179739,,,,,,,,"27/Dec/11 12:37 PM;dbosanac;The original implementation of the [https://issues.apache.org/jira/browse/AMQ-3374] calculated actual size of kahadb transaction wrong. It's fixed now and there is a snapshot available for testing

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1-fuse-SNAPSHOT/apache-activemq-5.5.1-fuse-20111227.121613-31-bin.tar.gz

From my tests I got the results comparable to 5.4.2 (but with no possibility of OOM)

If performances are still not good, we should investigate https://issues.apache.org/jira/browse/AMQ-3467 further as it also has an impact on this use case.

",,,,,,,,,,,,,,,,,,,
fileQueueCursor does not support message priority,MB-1052,12516464,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,jsherman,jsherman,21/Dec/11 9:33 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Jan/12 9:18 AM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"When using the fileQueueCursor, message priority is ignored when consuming messages from a prioritized queue.

This issue has been resolved at apache.  Using this Jira to track porting this fix back to the Fuse 5.5.x branch.",apache-activemq-5.5.1-fuse-01-13,,,,,,,,,,,,,,21/Dec/11 10:29 PM;jsherman;example.zip;https://issues.jboss.org/secure/attachment/12368937/example.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3596,,,,1.0,3.0,,1|hzkh5j:,179747,,,,,,,,"21/Dec/11 10:27 PM;jsherman;I did some testing with apache-activemq-5.6-fuse-SNAPSHOT and got the following results:

{code}
     [java] [Thread-3] We are about to wait until we consume: 10 message(s) then we will shutdown
     [java] [Thread-3] Received: 'Message: 1 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 1 )
     [java] [Thread-3] Received: 'Message: 9 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 9 )
     [java] [Thread-3] Received: 'Message: 8 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 8 )
     [java] [Thread-3] Received: 'Message: 7 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 7 )
     [java] [Thread-3] Received: 'Message: 6 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 6 )
     [java] [Thread-3] Received: 'Message: 5 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 5 )
     [java] [Thread-3] Received: 'Message: 4 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 4 )
     [java] [Thread-3] Received: 'Message: 3 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 3 )
     [java] [Thread-3] Received: 'Message: 2 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 2 )
     [java] [Thread-3] Received: 'Message: 0 sent at: Wed Dec 21 17:15:54 EST 2011  ...' (length 1000) (priority 0 )
{code}

On almost every run, the first message received is of lower priority.

I am using the following destination policy:

{code}
<policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""100mb"" prioritizedMessages=""true"">
    <pendingQueuePolicy>
       <fileQueueCursor/>
    </pendingQueuePolicy>
 </policyEntry>
{code}

I have modified the ProducerTool and ConsumerTool in the examples to send and receive messages with varying priorities.  The example can be run with the following commands:
{code}
ant producer -Durl=tcp://localhost:61616 -Ddurable=true -Dmax=10
ant consumer -Durl=tcp://localhost:61616 -Dmax=10
{code}",21/Dec/11 10:29 PM;jsherman;Attached modified example ProducerTool and ConsumerTool which use priority. ,"06/Jan/12 9:18 AM;dbosanac;Fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches

Snapshot with this fix can be found here:  http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1-fuse-SNAPSHOT/apache-activemq-5.5.1-fuse-20120106.085531-33-bin.tar.gz",,,,,,,,,,,,,,,,,
Broker deadlocking  within org.apache.activemq.broker.jmx.ManagedTransportConnection when stop() is called on STOMP connnections,MB-1051,12516463,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,21/Dec/11 12:19 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,19/Jan/12 11:30 AM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,5.6.0-fuse-00-00,,,,,,0,,"Please see the attached thread dump. 
This is a snippet:

It seems many of the threads are deadlocking after the call to org.apache.activemq.broker.jmx.ConnectionView.stop

{code}
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	- waiting to lock <0x0000000408274340> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:937)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.jmx.ConnectionView.stop(ConnectionView.java:34)
{code}

{code}
jvm 1    | 2011/12/21 09:10:25 | ""ActiveMQ Connection Dispatcher: /200.143.244.164:58304"" daemon prio=10 tid=0x00002aaacaa79800 nid=0x476d waiting for monitor entry [0x00002aab19288000]
INFO   | jvm 1    | 2011/12/21 09:10:25 |    java.lang.Thread.State: BLOCKED (on object monitor)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1434)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	- waiting to lock <0x0000000408274340> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.getConsumerBrokerExchange(TransportConnection.java:1348)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	- locked <0x000000040827f200> (a java.util.HashMap)
{code}

{code}
INFO   | jvm 1    | 2011/12/21 09:10:25 | ""ActiveMQ Transport: tcp:///200.143.244.164:58304"" daemon prio=10 tid=0x00002aaacdc69000 nid=0x476e waiting for monitor entry [0x00002aab1867c000]
INFO   | jvm 1    | 2011/12/21 09:10:25 |    java.lang.Thread.State: BLOCKED (on object monitor)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.removeConsumerBrokerExchange(TransportConnection.java:1371)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	- waiting to lock <0x000000040827f200> (a java.util.HashMap)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:588)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.processRemoveSession(TransportConnection.java:625)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:741)
INFO   | jvm 1    | 2011/12/21 09:10:25 | 	- locked <0x0000000408274340> (a org.apache.activemq.broker.jmx.ManagedTransportConnection)
{code}

",,,,,,,,,,,MB-1028,,,,21/Dec/11 12:19 PM;socallag;wrapper.log.dump.tgz;https://issues.jboss.org/secure/attachment/12368938/wrapper.log.dump.tgz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkhcn:,179779,,,,,,,,06/Jan/12 4:10 PM;davestanley;We've made a few fixes in relation to MB-1028 that may help this issue.,19/Jan/12 11:30 AM;tabish121;Fixed by MB-1028,,,,,,,,,,,,,,,,,,
"activemq-admin not setting username & password on JMS Connection used by  ""activemq-admin browse"" ",MB-1050,12516462,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,pfox,pfox,20/Dec/11 4:13 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,18/Jan/12 3:28 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"activemq-admin not setting username & password on JMS Connection used by  ""activemq-admin browse"" . 

It seems this has been fixed in activemq 5.6 but not back ported yet.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3411,,,,0.0,3.0,,1|hzkhl3:,179817,,,,,,,,"18/Jan/12 3:26 PM;garytully;setting fix version to next release. Fix was merged to fuse 5.5.x on Jan 5, but it did not make 5.5.1-fuse-01-20 which was cut on Jan4","18/Jan/12 3:28 PM;garytully;@Dejan, assigning to you since you did the merge. Fix is already on the fix branches so the work is done.","20/Jan/12 3:47 PM;mhernon;BQ:High (IHG definitely want to see this in the next 5.5.1 broker release, likely the 4.4.1-fuse-02-xx release, unless there is an earlier plan for a 5.5.1.x release)",,,,,,,,,,,,,,,,,
Setting ACTIVEMQ_USER may result in permissios error on the some created files,MB-1049,12516460,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,15/Dec/11 5:13 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,23/Dec/11 12:11 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"set ACTIVEMQ_USER=activemq 
log in as someone like root so that you have a varied set of permissions

{code}
INFO: Using java '/usr/bin/java'
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details
INFO: changing to user 'activemq' to invoke java
-su: line 2: /apps/XXXX/data/activemq-ubuntu-amq.pid: Permission denied
INFO: pidfile created : '/apps/XXXX/data/activemq-ubuntu-amq.pid' (pid '1145')
{code}

This seems to be because the data directory was created as root and new user doesn't have permissions to it. We should probably open that up or switch users earlier.



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3645,,,,0.0,1.0,,1|hzkh3j:,179738,,,,,,,,23/Dec/11 12:11 PM;dbosanac;Fixed and merged to 5.5.1-fuse,,,,,,,,,,,,,,,,,,,
Can not set entire list of published environment variables for broker,MB-1048,12516461,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,15/Dec/11 5:08 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,23/Dec/11 12:10 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"We list the following variables that users can set:

ACTIVEMQ_HOME
ACTIVEMQ_CLASSPATH
ACTIVEMQ_SSL_OPTS
ACTIVEMQ_CONFIG_DIR
ACTIVEMQ_DATA_DIR
ACTIVEMQ_PIDFILE
ACTIVEMQ_USER
ACTIVEMQ_OPTS_MEMORY
ACTIVEMQ_QUEUEMANAGERURL
ACTIVEMQ_KILL_MAXSECONDS 

Using the last one as an example, ACTIVEMQ_KILL_MAXSECONDS, this is set in the script as follows:

{code}
# ActiveMQ tries to shutdown the broker by jmx,
# after a specified number of seconds send SIGKILL
ACTIVEMQ_KILL_MAXSECONDS=30
{code}

We don't ever check if it was set at an environment level. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3645,,,,0.0,1.0,,1|hzkh33:,179736,,,,,,,,23/Dec/11 12:10 PM;dbosanac;Fixed and merged to 5.5.1-fuse branch,,,,,,,,,,,,,,,,,,,
Virtual Topic Subscriber and Individual Dead Letter Queue Handling,MB-1047,12516459,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,15/Dec/11 3:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,16/Dec/11 11:19 AM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"Configuring individual DLQs for virtual subscribers does not create individual queues for the subscribers but rather a single DQL for the topic.  This results in the following warning message and messages to be discarded if the expire on the queue...

WARN | Duplicate message add attempt rejected. Destination: ActiveMQ.DLQ, Message id: ID:macbookpro-251a.home-49577-1323962613433-2:1:1:1:51576

Thousands of these messages can be produced and clutter the log files.

This has already been fixed at apache and applied to Fuse trunk branch.  Can this fix be back ported to the 5.5.x branch?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3536,,,,0.0,2.0,,1|hzkgz3:,179718,,,,,,,,15/Dec/11 4:56 PM;jsherman;I also see this affects the latest release 5.5.1-fuse-01-13 however the apache-activemq-5.6-fuse-SNAPSHOT does contain the fix and resolves the issue.,16/Dec/11 11:19 AM;garytully;fix on 5.5.*-fuse branches,,,,,,,,,,,,,,,,,,
 java.lang.NegativeArraySizeException when starting the broker,MB-1046,12516457,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,14/Dec/11 6:27 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,13/Apr/12 4:09 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-04-01,,,,broker,,,0,,"We are seeing an  java.lang.NegativeArraySizeException when activemq starts:

{quote}


011-12-09 20:22:57,103 | INFO  | ActiveMQ 5.5.1-fuse-01-11 JMS Message Broker (adcmqp4) is starting | org.apache.activemq.broker.BrokerService | main
2011-12-09 20:22:57,105 | INFO  | For help or more information please see: http://activemq.apache.org/ | org.apache.activemq.broker.BrokerService | main
2011-12-09 20:23:00,200 | ERROR | Failed to start ActiveMQ JMS Message Broker (adcmqp4, null). Reason: java.io.IOException: Invalid location: 27:17551776, : java.lang.NegativeArraySizeException | org.apache.activemq.broker.BrokerService | main
java.io.IOException: Invalid location: 27:17551776, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)
	at org.apache.kahadb.journal.Journal.read(Journal.java:601)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:870)
	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:993)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$3.execute(KahaDBStore.java:512)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:502)
	at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:52)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:267)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:487)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:125)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:97)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:201)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:113)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:123)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1814)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:494)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:106)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:106)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
2011-12-09 20:23:00,203 | INFO  | ActiveMQ Message Broker (adcmqp4, null) is shutting down | org.apache.activemq.broker.BrokerService | main
{quote}

This error occurred after a failover occurred.  In looking at the master log before it fell over, I see a the following errors which look suspicious:

{quote}
2011-12-09 16:39:09,285 | WARN  | Failed to discard data file /activemq/data/kahadb/db-4.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
2011-12-09 16:39:09,404 | WARN  | Failed to discard data file /activemq/data/kahadb/db-5.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
2011-12-09 16:39:09,439 | WARN  | Failed to discard data file /activemq/data/kahadb/db-6.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
2011-12-09 16:39:09,446 | WARN  | Failed to discard data file /activemq/data/kahadb/db-7.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
2011-12-09 16:39:09,458 | WARN  | Failed to discard data file /activemq/data/kahadb/db-13.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
2011-12-09 16:39:09,467 | WARN  | Failed to discard data file /activemq/data/kahadb/db-14.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
2011-12-09 16:39:09,474 | WARN  | Failed to discard data file /activemq/data/kahadb/db-15.log | org.apache.kahadb.journal.Journal | ActiveMQ Journal Checkpoint Worker
.....
2011-12-09 16:46:45,760 | ERROR | KahaDB failed to store to Journal | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Transport: tcp:///XXXXX
java.io.IOException: Invalid argument
        at java.io.RandomAccessFile.seek(Native Method)
        at org.apache.kahadb.page.PageFile.readPage(PageFile.java:826)
        at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:439)
        at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:430)
        at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:427)
        at org.apache.kahadb.page.Transaction.load(Transaction.java:403)
        at org.apache.kahadb.page.Transaction.load(Transaction.java:360)
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:283)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.remove(MessageDatabase.java:2356)
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1173)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:2054)
        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1067)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1064)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:915)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:827)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:432)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
        at java.lang.Thread.run(Thread.java:662)
2011-12-09 16:46:45,764 | INFO  | Stopping the broker due to IO exception, java.io.IOException: Invalid argument | org.apache.activemq.util.DefaultIOExceptionHandler | ActiveMQ Transport: tcp:///XXXXXX
java.io.IOException: Invalid argument
        at java.io.RandomAccessFile.seek(Native Method)
        at org.apache.kahadb.page.PageFile.readPage(PageFile.java:826)
        at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:439)
        at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:430)
        at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:427)
        at org.apache.kahadb.page.Transaction.load(Transaction.java:403)
        at org.apache.kahadb.page.Transaction.load(Transaction.java:360)
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:283)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.remove(MessageDatabase.java:2356)
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1173)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:2054)
        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1067)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1064)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:915)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:827)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:432)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
        at java.lang.Thread.run(Thread.java:662)
2011-12-09 16:46:45,766 | WARN  | Store COMMIT FAILED:  | org.apache.activemq.transaction.LocalTransaction | ActiveMQ Transport: tcp:///XXXXX
java.io.IOException: Invalid argument
        at java.io.RandomAccessFile.seek(Native Method)
        at org.apache.kahadb.page.PageFile.readPage(PageFile.java:826)
        at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:439)
        at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:430)
        at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:427)
        at org.apache.kahadb.page.Transaction.load(Transaction.java:403)
        at org.apache.kahadb.page.Transaction.load(Transaction.java:360)
        at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
        at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:283)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeNode.remove(BTreeNode.java:287)
        at org.apache.kahadb.index.BTreeIndex.remove(BTreeIndex.java:194)
        at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex.remove(MessageDatabase.java:2356)
        at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1173)
        at org.apache.activemq.store.kahadb.MessageDatabase$RemoveOpperation.execute(MessageDatabase.java:2054)
        at org.apache.activemq.store.kahadb.MessageDatabase$18.execute(MessageDatabase.java:1067)
        at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:1064)
        at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:933)
        at org.apache.activemq.store.kahadb.data.KahaCommitCommand.visit(KahaCommitCommand.java:130)
        at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:915)
        at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:827)
        at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:267)
        at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
        at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
        at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
        at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:432)
        at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.MutexTransport.onCommand(MutexTransport.java:50)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
        at org.apache.activemq.transport.AbstractInactivityMonitor.onCommand(AbstractInactivityMonitor.java:229)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
        at java.lang.Thread.run(Thread.java:662)
2011-12-09 16:46:45,769 | INFO  | ActiveMQ Message Broker (adcmqp4, ID:XXXXXX:1) is shutting down | org.apache.activemq.broker.BrokerService | Stopping the broker due to IO exception
2011-12-09 16:46:45,943 | INFO 
{quote}

Unlike MB-1034, this issue can be resolved by deleting the index files and rebuilding the index. 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3806,,,,0.0,3.0,,1|hzki9z:,179930,,,,,,,,"29/Mar/12 2:30 PM;sjavurek;I retested this in fuse-03-6 and the results were different  I did not see an exception and the broker appeared to be starting, however, it never actually starts.  I let it run from 4 PM or so until 10 AM the following morning. It indicated it was still trying to load.  Upon stopping the broker I received the following error:

{code}
p.amer.corp.local has recovered 1004650000 messages. 2147483647% complete
 INFO | cursor for queue://JMS/XXXXXl.prod18340@XXX.local has recovered 1004660000 messages. 2147483647% complete

^C INFO | cursor for queue://JMS/XXXX.local.prod18340@mbp.amer.corp.local has recovered 1004670000 messages. 2147483647% complete
 INFO | ActiveMQ Message Broker (atpjmssq1.ATPJMS, null) is shutting down
 INFO | Connector network Stopped
 WARN | Failed to fire add to DLQ advisory, reason: org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$3@4b1cdfd5
 WARN | Failed to fire expired advisory, reason: org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$3@4b1cdfd5
ERROR | Failed to start ActiveMQ JMS Message Broker (atpjmssq1.ATPJMS, null). Reason: org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$3@4b1cdfd5
org.apache.activemq.broker.BrokerStoppedException: Broker has been stopped: org.apache.activemq.broker.BrokerService$3@4b1cdfd5
	at org.apache.activemq.broker.ErrorBroker.messageExpired(ErrorBroker.java:260)
	at org.apache.activemq.broker.MutableBrokerFilter.messageExpired(MutableBrokerFilter.java:269)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1619)
	at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1612)
	at org.apache.activemq.broker.region.Queue$BatchMessageRecoveryListener.processExpired(Queue.java:293)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:344)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:532)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:137)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:308)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:99)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:202)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:113)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:123)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1845)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:516)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:108)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:108)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:72)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:91)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:257)
	at org.apache.activemq.console.Main.main(Main.java:111)
 INFO | ActiveMQ Message Broker (atpjmssq1.ATPJMS, null) is shutting down
 INFO | Connector network Stopped
 INFO | PListStore:[/Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-03-06/data/atpjmssq1.XXXX/tmp_storage ] stopped
 INFO | Stopping async queue tasks
 INFO | Stopping async topic tasks
 INFO | Stopped KahaDB
 INFO | ActiveMQ JMS Message Broker (atpjmssq1.ATPJMS, null) stopped
Susan-Javureks-MacBook-Pro-3:bin sjavurek$ 
{code}

Upon starting the broker there was an indication of corrupt files:

{code}
 INFO | Using Persistence Adapter: org.apache.activemq.store.kahadb.KahaDBStore@49f10a67
 INFO | Corrupt journal records found in '/Users/sjavurek/Fuse/SRs/XXXXX/prod-1182/kahadb.20111209.orig.mar28/db-25.log' between offsets: 25520441-25520763
 INFO | Corrupt journal records found in '/Users/sjavurek/Fuse/SRsXXXXX/prod-1182/kahadb.20111209.orig.mar28/db-27.log' between offsets: 17566197-17572407
 INFO | KahaDB is version 4
 INFO | Recovering from the journal ...
 INFO | Recovery replayed 1 operations from the journal in 0.063 seconds.
 INFO | ActiveMQ 5.5.1-fuse-03-06 JMS Message Broker (atpjmssq1.XXXX) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
 INFO | cursor for queue://JMS/XXXXX.local.prod18340@mbp.amer.corp.local has recovered 10000 messages. 2147483647% complete
 INFO | cursor for queue://JMSXXX.local.prod18340@mbp.amer.corp.local has recovered 20000 messages. 2147483647% complete
{code}

As you can see the percent complete was also  incorrect and occasional it will flip to negative value: 

{code}
 INFO | cursor for queue://JMS.XXXX.local.prod18340@mbp.amer.corp.local has recovered 966360000 messages. 2147483647% complete
 INFO | cursor for queue://JMS/XXX.local.prod18340@mbp.amer.corp.local has recovered 966370000 messages. -2147483648% complete
{code}


",13/Apr/12 3:42 PM;garytully;the looping recovery is the result of iterating over a destination with no messages. This is now avoided via https://issues.apache.org/jira/browse/AMQ-3806,13/Apr/12 4:09 PM;garytully;The fix for https://issues.apache.org/jira/browse/AMQ-3775 is merged to 5.5.1 branch and the store can load and recovery successfully with that change.,,,,,,,,,,,,,,,,,
Purge command does not accept message selectors,MB-1045,12516458,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,14/Dec/11 5:57 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Jan/12 9:17 AM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,See https://issues.apache.org/jira/browse/AMQ-3404,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3404,,,,0.0,1.0,,1|hzkh5b:,179746,,,,,,,,"06/Jan/12 9:17 AM;dbosanac;Fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches

Snapshot with this fix can be found here:  http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1-fuse-SNAPSHOT/apache-activemq-5.5.1-fuse-20120106.085531-33-bin.tar.gz",,,,,,,,,,,,,,,,,,,
NullPointerException while loading node from kahadb during vmcursor replay,MB-1043,12516455,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,09/Dec/11 9:39 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,16/Dec/11 11:21 AM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"Hi, 

I have a set of files that causes a NPE when starting the broker:

{code}
INFO | Recovery replayed 7784653 operations from the journal in 895.065 seconds.
 INFO | ActiveMQ 5.5.1-fuse-01-11 JMS Message Broker (SJ-TEST) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
ERROR | Failed to start ActiveMQ JMS Message Broker (SJ-TEST, null). Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:103)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:121)
	at org.apache.activemq.store.kahadb.MessageDatabase$MessageOrderIndex$MessageOrderIterator.hasNext(MessageDatabase.java:2597)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$3.execute(KahaDBStore.java:506)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:760)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:502)
	at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:52)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:267)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:487)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:125)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:97)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:201)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:157)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:123)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1814)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:494)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:106)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:106)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:91)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
 INFO | ActiveMQ Message Broker (SJ-TEST, null) is shutting down

{code}

Steps to reproduce:

1.  Will ftp the kahadb files
2.  start broker using attached configuration file
3. Wait ~5 minutes or so

Note, deleting the index files and restarting does *not* resolve this problem. It will also fail and if you try to restart the broker without doing anything you get the error straight away, after 1 replayed message:

{code}
INFO | Recovering from the journal ...
 INFO | Recovery replayed 1 operations from the journal in 0.033 seconds.
 INFO | ActiveMQ 5.5.1-fuse-01-11 JMS Message Broker (SJ-TEST) is starting
 INFO | For help or more information please see: http://activemq.apache.org/
ERROR | Failed to start ActiveMQ JMS Message Broker (SJ-TEST, null). Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:264)
	at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:103)
{code}
",,,,,,,,,,,,,,,10/Dec/11 2:52 AM;sjavurek;activemq-prod1179.xml;https://issues.jboss.org/secure/attachment/12368932/activemq-prod1179.xml,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3637,,,,1.0,4.0,,1|hzkgzz:,179722,,,,,,,,"13/Dec/11 2:27 PM;garytully;The problem related to message expiry during recovery. When the vm cursor is used with persistent messages, on recovery the vm cursor needs to be initialized and this is achieved by replaying the journal through the cursor. During the phase there is also an expiry check and this is problematic for some queues where expiry is sporadic. This is a bug. The replay iterator is modified by the expiry remove, sometimes in a detrimental way.

The workaround to avoid the use of the vmcursor with destinations that have persistent messages. Some of the destinations in question are of the form:
{{queue://JMS/CRM.WFLOW.COC.ESB.RSP.10.102.241.217.prod.8891.8091, queue://JMS/CRM.WFLOW.COC.ESB.RSP.10.102.241.118.prod.8884.8084}}, as in it has an IP address embedded in the name.

In order to avoid this problem, only use the vmCursor for non persistent messages or not at all. The default store cursor should be fine for most needs.","13/Dec/11 3:01 PM;garytully;So the workaround for the failure to restart due to corrupt index is to modify the following config:
{code}                  <policyEntry
                        queue=""JMS/CRM.WFLOW.COC.ESB.RSP.>""
                        memoryLimit=""5mb""
                        producerFlowControl=""true""
                        expireMessagesPeriod=""0"">
                        <deadLetterStrategy>
                            <sharedDeadLetterStrategy
                                processExpired=""false"" />
                        </deadLetterStrategy>
                        <pendingQueuePolicy>
                            <vmQueueCursor />
                        </pendingQueuePolicy>
                    </policyEntry>{code} and remove the 
{code}                        <pendingQueuePolicy>
                            <vmQueueCursor />
                        </pendingQueuePolicy>{code} It would be good to fully understand the reason for the choice of vmQueueCursor in the first place though. 
This change would allow the broker to come up with the existing store. 
Unless there are more destinations that use expiry and vmQueueCursor, all will need to be changed to fully recover.",15/Dec/11 5:48 PM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-3637 - which resolved this problem,16/Dec/11 11:21 AM;garytully;fix on 5.5.*-fuse branches,,,,,,,,,,,,,,,,
"Naming convention of ActiveMQ software ZIP files, inconsistent with related Apache projects.",MB-1042,12516387,Bug,Reopened,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,22/Sep/11 2:19 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"It looks like some of our naming conventions are a bit inconsistent between projects. Some use ""-src"" and just .zip for the binary distro:

  - apache-cxf-2.4.1.zip
- apache-cxf-2.4.1-src.zip

- apache-servicemix-4.3.0.zip
- apache-servicemix-4.3.0-src.zip

- apache-camel-2.7.2.zip
- apache-camel-2.7.2-src.zip

Apache ActiveMQ naming of the same type of software distributions:

- apache-activemq-5.5.0-bin.zip
- activemq-parent-5.5.0-source-release.zip


It looks like our FuseSource stuff uses -src but we do use the ""-bin"" convention. 

Spoke to Dejan and this should be easy enough to fix up. 


There is an existing issue at Apache for the names there, https://issues.apache.org/jira/browse/AMQ-3377.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkgxr:,179712,,,,,,,,08/Dec/11 6:33 PM;terranotsoferma;This issue is a PROD issue and is tracked in the AMQ queue.  Not an enhancement,,,,,,,,,,,,,,,,,,,
"After receiving exception ""Async error occurred: javax.jms.JMSException: The destination temp-queue://ID-xxxx does not exist"", broker tore down network connection and re-created the network bridge",MB-1041,12516454,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,joe.luo,joe.luo,08/Dec/11 3:36 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,02/Feb/12 12:44 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"We have a configuration involves four brokers that are networked together so each broker has a netwrok connector to connect to the rest of three brokers (full mesh). We have a producer on the broker 1 and sends messages to a queue. It also sets ""JMSReplyTo"" property on the message with a Temp queue so the producer can listen on the Temp queue for response. A consumer on the broker 2 will listen on the named queue for the request message and send a response back to the Temp queue.

In some case, it could happen that the producer might close the Temp queue before the response message is forwarded from the broker 2 to the broker 1. In this case, a JMSException ""Async error occurred: javax.jms.JMSException: The destination temp-queue://ID-xxxx does not exist"" will be thrown. In response to this relatively simple exception, what the broker does is to tear down the network connection and re-create a network bridge. 

Here are logs from one of brokers:
{quote}
2011-12-01 14:40:35,864 | WARN | Async error occurred: javax.jms.JMSException: The destination temp-queue://ID:olt-eimu1s-46458-1322744840477-0:7:17 does not exist. | org.apache.activemq.broker.TransportConnection.Service | ActiveMQ Transport: tcp://zhh-eimu1/x.x.x.x:61616
javax.jms.JMSException: The destination temp-queue://ID:olt-eimu1s-46458-1322744840477-0:7:17 does not exist.
at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:149)
at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:420)
at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:247)
at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:462)
at org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(ManagedRegionBroker.java:248)
at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:79)
at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:89)
at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:95)
at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:558)
at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.vm.VMTransport.dispatch(VMTransport.java:121)
at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
at org.apache.activemq.network.DemandForwardingBridgeSupport.addSubscription(DemandForwardingBridgeSupport.java:611)
at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:958)
at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteConsumerAdvisory(DemandForwardingBridgeSupport.java:546)
at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:395)
at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:169)
at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
at java.lang.Thread.run(Thread.java:662)
2011-12-01 14:40:35,865 | INFO | Network connection between vm://broker-olt-eimu2s#20 and tcp://zhh-eimu1s/x.x.x.x:61616 shutdown due to a local error: javax.jms.JMSException: The destination temp-queue://ID:olt-eimu1s-46458-1322744840477-0:7:17 does not exist. | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Connection Dispatcher: vm://broker-olt-eimu2s#20
2011-12-01 14:40:35,908 | INFO | broker-olt-eimu2s bridge to broker-zhh-eimu1s stopped | org.apache.activemq.network.DemandForwardingBridgeSupport | ActiveMQ Task-242
2011-12-01 14:40:39,869 | INFO | Establishing network connection from vm://broker-olt-eimu2s?async=false&network=true to tcp://zhh-eimu1s:61616 | org.apache.activemq.network.DiscoveryNetworkConnector | Simple Discovery Agent-243
2011-12-01 14:40:39,924 | INFO | Network connection between vm://broker-olt-eimu2s#22 and tcp://zhh-eimu1s/x.x.x.x:61616(broker-zhh-eimu1s) has been established. | org.apache.activemq.network.DemandForwardingBridgeSupport | StartLocalBridge: localBroker=vm://broker-olt-eimu2s#22
{quote}

And this is the log entry written on the other broker:
{quote}
2011-12-01 14:40:35,875 | WARN | Transport failed: java.net.SocketException: Connection reset | org.apache.activemq.broker.TransportConnection.Transport | Async Exception Handler
{quote}

So do we have a better way to deal with this simple JMSException rather than tear down the network connection and recreate it again?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3694,,,,0.0,3.0,,1|hzkhgv:,179798,,,,,,,,"01/Feb/12 4:24 PM;garytully;I was trying to understand why the exception is occurring in the first place. I have found and resolved https://issues.apache.org/jira/browse/AMQ-3694 which can recreate the problem.

There are a few scenarios where an exception can occur, but in the duplex case, the resolution of AMQ-3694 helps.
In the non duplex case, under load, it is possible that messages race/beat advisories to a networked broker. In this case, it is useful to allow a responding producer create the temp destination on demand. Prior to the latest changes, this temp was associated with the producer connection, which could go out of scope before the consumer advisory form the bridging broker, resulting in this exception.
With the changes, this temp destination is now unassociated. It gets cleaned up when the destination advisory remove command arrives. In the case of a network partition where the advisory is lost (or where temps are used without advisories), they can be periodically cleaned up by destination gc. In general this will not be needed.",01/Feb/12 4:33 PM;garytully;link to issue at apache - https://issues.apache.org/jira/browse/AMQ-3694,"02/Feb/12 12:44 PM;garytully;I have tackled the root cause of the problem, eliminating the exception. An exception of that nature is really indicative of a problem that should be addressed. It can lead to a stuck message or a missed message (in the case of a broker restart). Restarting the bridge, will resend advisories and allow messages again to flow so it is still a sensible default.
When considering an exception handler for a network bridge, it is not clear what exceptions it would make sense to ignore because a failure to forward will not resolve itself with out a shake up.
",,,,,,,,,,,,,,,,,
"STOMP ""reply-to"" headers have extra info prepended by the broker",MB-1040,12516452,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,08/Dec/11 11:00 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/Dec/11 12:55 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"See attached diff of activemq-core/src/test/java/org/apache/activemq/transport/stomp/StompTest.java

{code}

Failed tests:   testReplytoModification(org.apache.activemq.transport.stomp.StompTest): expected:<[]some destination> but was:<[/queue/]some destination>

{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3496,,,,0.0,1.0,,1|hzkh27:,179732,,,,,,,,20/Dec/11 12:55 PM;dbosanac;Fixed and merged to 5.5.1-fuse branch. I'll create a new snapshot with this fix soon.,,,,,,,,,,,,,,,,,,,
temp queues looping between networked brokers,MB-1039,12516453,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,07/Dec/11 2:17 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,16/Dec/11 11:17 AM,5.5.1-fuse-00-06,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"In a network of brokers information about temp destinations are broadcast inside the network. 
The attached JUnit testcase reveals a bug where the use of temp destinations may result in those temp destinations being constantly created/updated on all brokers rather than being destroyed. It causes the brokers to spin.

",,,,,,,,,,,,,,,09/Dec/11 4:13 PM;mielket;testcase-trimmed.tgz;https://issues.jboss.org/secure/attachment/12368931/testcase-trimmed.tgz,07/Dec/11 2:21 PM;mielket;testcase.tgz;https://issues.jboss.org/secure/attachment/12368934/testcase.tgz,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3253,,,,2.0,4.0,,1|hzkgyf:,179715,,,,,,,,"07/Dec/11 2:21 PM;mielket;Use mvn test to run the testcase. It may take a few test runs before reproducing the problem. In the two environments that I tested, almost every test run did reproduce it.

When reproduced you will see loads of logging output of this kind:

{noformat}
DEBUG AbstractRegion                 - Removing destination: temp-queue://ID:Mac.local-52310-1323267147531-11:161:1
DEBUG Queue                          - ID:Mac.local-52310-1323267147531-11:183:1 toPageIn: 0, Inflight: 0, 
pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
DEBUG Queue                          - ID:Mac.local-52310-1323267147531-11:171:1 toPageIn: 0, Inflight: 0, 
pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
DEBUG AbstractRegion                 - BrokerA adding destination: temp-queue://ID:Mac.local-
52310-1323267147531-11:183:1
DEBUG AbstractRegion                 - BrokerB adding destination: temp-queue://ID:Mac.local-
52310-1323267147531-11:171:1
DEBUG AbstractRegion                 - assigning ownership of auto created temp : temp-queue://ID:Mac.local-
52310-1323267147531-11:183:1 to connection:ID:Mac.local-52310-1323267147531-9:2
DEBUG AbstractRegion                 - assigning ownership of auto created temp : temp-queue://ID:Mac.local-
52310-1323267147531-11:171:1 to connection:ID:Mac.local-52310-1323267147531-8:2
DEBUG AbstractRegion                 - Removing destination: temp-queue://ID:Mac.local-52310-1323267147531-11:182:1
DEBUG Queue                          - ID:Mac.local-52310-1323267147531-11:183:1 toPageIn: 0, Inflight: 0, 
pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
DEBUG AbstractRegion                 - BrokerC adding destination: temp-queue://ID:Mac.local-
52310-1323267147531-11:183:1
DEBUG AbstractRegion                 - BrokerB adding destination: temp-queue://ID:Mac.local-
52310-1323267147531-11:193:1
DEBUG AbstractRegion                 - assigning ownership of auto created temp : temp-queue://ID:Mac.local-
52310-1323267147531-11:183:1 to connection:ID:Mac.local-52310-1323267147531-6:2
DEBUG Queue                          - ID:Mac.local-52310-1323267147531-11:161:1 toPageIn: 0, Inflight: 0, 
pagedInMessages.size 0, enqueueCount: 0, dequeueCount: 0
{noformat}","09/Dec/11 4:13 PM;mielket;Attaching a trimmed down testcase (testcase-trimmed.tgz). 
It only uses two brokers in a network and plain JMS APIs (no more stomp). 
Using this testcase the problem reproduces fairly every time now.",12/Dec/11 11:48 AM;garytully;reopened https://issues.apache.org/jira/browse/AMQ-3253 to address this problem,16/Dec/11 11:17 AM;garytully;fix on the 5.5.* fuse branches,,,,,,,,,,,,,,,,
Master and Slave broker instances both shutdown on SQLServer shutdown ,MB-1037,12516450,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,pfox,pfox,06/Dec/11 5:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/Jun/12 3:13 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,broker,,,0,,"In a Master/Slave deployment the *current* expected behavior when the database becomes unavailable; the master broker will exit and the slave broker will keep trying to obtain the lock and become master when database is available again. The issue is when using SQLServer the slave broker and master broker both exit when the database is not available.   


The slave broker does not seem to be getting as far as the DatabaseLocker. It seems to be waiting in the org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTable(). The Slave broker's SQL statement ""INSERT INTO ACTIVEMQ_LOCK(ID) VALUES (1)"" does not complete when using SQLserver. When the SQLserver DB is shutdown an exception is caught and the remaining prepared statements are executed and fail with exceptions (as expected). However the subsequent ""c.getConnection().commit();"" throws an SQLexception regarding db ""connection closed"" . This exception bubbles up and shuts down the Slave Broker.

When using MySQL as the persistent db the ""INSERT INTO ACTIVEMQ_LOCK(ID) VALUES (1)"" completed and the slave proceeded to the DatabaseLocker functionality. And then at DB shutdown the DatabaseLocker deals with the retries on exception as expected.

I believe this issue is caused by lock contention which by default has no timeout on SQLServer (see http://msdn.microsoft.com/en-us/library/ms177413.aspx - Customizing the Lock Time-Out). In MySQL the default lock timeout is set to 30 seconds.

Potential configuration workaround:

As this the issue is in the slave broker, the master broker should have created the tables already. In this case, we can turn off the create table functionality in the slave broker with the following config

<persistenceAdapter>
       <jdbcPersistenceAdapter createTablesOnStartup=""false""  dataDirectory=...
 </persistenceAdapter>
Pros: works out of the box no code change required.

Cons: if the master broker fails the first time before it creates the tables, the slave will not create the tables.

Potential code change:

java.sql.Statement.setQueryTimeout() - Sets the number of seconds the driver will wait for a Statement object to execute to the given number of seconds. We could introduce an optional timeout config variable that is applied to the statement that executes the prepared statements in org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTable().

I have tested this briefly on SQLServer using com.microsoft.sqlserver.jdbc.SQLServerDriver and it does appear to take effect.

Pros: it is optional configuration so it will not change the behavior in previously working cases.
Cons: if one statement timed out and the others succeeded perhaps you could get into a inconsistent state - not sure.
",SQLServer DB,,,,,,,,,,MB-1156,DEV-3499,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkitb:,180017,,,,,,,,20/Jun/12 3:10 PM;garytully;Linking to http://fusesource.com/issues/browse/MB-1156 which introduces a lease based locker that can survive a db outage,20/Jun/12 3:13 PM;garytully;marking resolved with implementation from http://fusesource.com/issues/browse/MB-1156,,,,,,,,,,,,,,,,,,
ActiveMQ failover Denial of Service,MB-1036,12516449,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,06/Dec/11 5:05 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,16/Dec/11 11:39 AM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-02-02,,,broker,,,0,,"Abusing the 'failover' feature in ActiveMQ, an unauthenticated user can trigger a Denial of Service condition against the broker service.

In detail, an attacker can issue multiple ActiveMQ openwire connection requests using the following connection string:  failover:tcp://<IP>:61616

Due to the 'failure' mechanism, all TCP connections remain active even if a valid session is not created. 
Please note that no valid credentials have been used.

After a few thousand requests, a ""java.net.SocketException: Too many open files"" exception is triggered causing the freeze/crash of the broker. Connected systems may crash as well.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3294,,,,0.0,2.0,,1|hzkh13:,179727,,,,,,,,"06/Dec/11 5:07 PM;jsherman;This issue appears to be resolved at apache and has been committed to the trunk branch.  Can we get this fix merged back to Fuse 5.5.x.

",16/Dec/11 11:39 AM;garytully;fix on 5.5.*-fuse branches,,,,,,,,,,,,,,,,,,
NPE Exception when starting broker followed by immediate NPE when stopping ,MB-1035,12516447,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,06/Dec/11 2:32 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Jan/12 2:32 PM,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"ERROR | Failed to start ActiveMQ JMS Message Broker (localhost, null). Reason: java.io.EOFException
java.io.EOFException
...
 INFO | ActiveMQ Message Broker (localhost, null) is shutting down
 INFO | Connector openwire Stopped
 INFO | PListStore:[/Users/sjavurek/Fuse/activemq/5.5.1/apache-activemq-5.5.1-fuse-01-11/data/localhost/tmp_storage ] stopped
 INFO | Stopping async queue tasks
 INFO | Stopping async topic tasks
 INFO | Stopped KahaDB
ERROR | Could not stop service: org.apache.activemq.store.kahadb.KahaDBStore@10ba5a81. Reason: java.lang.NullPointerException
java.lang.NullPointerException

Complete log file attached.  This may be related or similar to MB-992, however, the stack traces are slightly different. 
",,,,,,,,,,,,,,,07/Dec/11 10:02 PM;sjavurek;dev-3537-log.rtf;https://issues.jboss.org/secure/attachment/12368930/dev-3537-log.rtf,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3634,,,,1.0,2.0,,1|hzkhf3:,179790,,,,,,,,"27/Jan/12 1:25 PM;garytully;I made further refinements to https://issues.apache.org/jira/browse/AMQ-3634. This feature will help in this case. With the changes, it takes 45mins to rebuild the index, which matches the manual case. Then there is a bunch of message expiry that kicks in.
One possibility to reduce that subsequent expiry overhead would be to eliminate expired messages from replay. An enhancement like that is worth some investigation.",27/Jan/12 2:32 PM;garytully;Fix applied to 5.5.x and 5.5.1 branches,,,,,,,,,,,,,,,,,,
"ioExceptionHandler  stop/start can result in a javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=jdbcBroker,Type=Connector,ConnectorName...",MB-1034,12516446,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,pfox,pfox,06/Dec/11 1:34 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.5.1-fuse-01-11,,,,,,,,,,,,,,,,,,,,,,,,broker,,,1,,"The following ioExceptionHandler configuration can be used to ensure broker does not stop when DB is not available. This will cause the Transport Connectors to be stopped until the DB is available. When they become available the connectors are restarted. 

{code}

<ioExceptionHandler>
  <defaultIOExceptionHandler ignoreSQLExceptions=""false"" stopStartConnectors=""true"" />
</ioExceptionHandler>

{code}

However if the broker is configured to useJMX this will result in the following exception when the broker tries to restart the transport connector

{code}

Java.io.IOException: Transport Connector could not be registered in
JMX: org.apache.activemq:BrokerName=jdbcBroker,Type=Connector,ConnectorName=default
at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:27)
at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1681)
at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:2169)
at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:2085)
at org.apache.activemq.util.DefaultIOExceptionHandler$2.run(DefaultIOExceptionHandler.java:99)
Caused by: javax.management.InstanceAlreadyExistsException:
org.apache.activemq:BrokerName=jdbcBroker,Type=Connector,ConnectorName=default
at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:300)
at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:65)
at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1678)

{code}


",all,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkgwn:,179707,,,,,,,,"06/Dec/11 1:48 PM;pfox;Discussed this with gtully and he suggested two options to resolve this:

1) using jmx, call the removeConnector(connectorName) operation on the broker view. You will need to do this when the DB is down.

2) alternative is to  override the ioexception handler with your own impl and extend the org.apache.activemq.util.DefaultIOExceptionHandler, copy/paste the impl of handle() (it was not build for reuse) and
toggle the useJmx attribute before restarting the transport connectors.

",,,,,,,,,,,,,,,,,,,
Please enhance the activemq create script to copy additional files and fix executable permissions,MB-1033,12516448,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,05/Dec/11 6:51 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,16/Dec/11 11:20 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"Hi, 

When you run the ./activemq create ../test, it only copies a subset of files:

{code}
protected String[][] fileCopyMap = {
        { ""conf/log4j.properties"", ""conf/log4j.properties"" },
        { ""conf/broker.ks"", ""conf/broker.ks"" },
        { ""conf/broker.ts"", ""conf/broker.ts"" },
        { ""conf/camel.xml"", ""conf/camel.xml"" },
        { ""conf/jetty.xml"", ""conf/jetty.xml"" },
        { ""conf/jetty-realm.properties"", ""conf/jetty-realm.properties"" },
        { ""conf/credentials.properties"", ""conf/credentials.properties"" }
    };
{code}

Some users have other files that should be copied as well, e.g. custom property files. Can we either copy everything in the conf directory or use an index file that the user can update to append extra files automatically?

Also once the create is completed, the two bin scripts created do not have executable rights. It'd be good to include that. 

Dejan already made this fix per [AMQ-3619|https://issues.apache.org/jira/browse/AMQ-3619]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3619,,,,0.0,1.0,,1|hzkgzj:,179720,,,,,,,,16/Dec/11 11:20 AM;garytully;fix on the 5.5.*-fuse branch,,,,,,,,,,,,,,,,,,,
NPE in LastImageSubscriptionRecoveryPolicy,MB-1032,12516445,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,stlewis,sjavurek,sjavurek,02/Dec/11 8:27 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,16/Dec/11 11:25 AM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"Hi, 

In the attached test case, I have a broker with a topic configured to use a lastImageSubscriptionRecoveryPolicy. When the broker is first started and a consumer subscribes to the queue and ends without receiving any messages (there are none there), the following Warning shows up which is ok, however, the NullPointer exception isn't so great:

{code}
2011-12-02 15:01:00,588 | WARN  | Failed to browse Topic: grid.config.metricOutput.EGEE.roc.DEV-3607 | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[activemq_gridmsg105.cern.ch] Scheduler
java.lang.NullPointerException
	at org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy.browse(LastImageSubscriptionRecoveryPolicy.java:63)
	at org.apache.activemq.broker.region.Topic.browse(Topic.java:564)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:659)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
2011-12-02 15:01:05,274 | DEBUG | Checkpoint started. | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
2011-12-02 15:01:05,318 | DEBUG | Checkpoint done. | org.apache.activemq.store.kahadb.MessageDatabase | ActiveMQ Journal Checkpoint Worker
.....
2011-12-02 15:01:30,584 | WARN  | Failed to browse Topic: grid.config.metricOutput.EGEE.roc.DEV-3607 | org.apache.activemq.broker.region.Topic | ActiveMQ Broker[activemq_gridmsg105.cern.ch] Scheduler
java.lang.NullPointerException
	at org.apache.activemq.broker.region.policy.LastImageSubscriptionRecoveryPolicy.browse(LastImageSubscriptionRecoveryPolicy.java:63)
	at org.apache.activemq.broker.region.Topic.browse(Topic.java:564)
	at org.apache.activemq.broker.region.Topic$6.run(Topic.java:659)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

{code}

It takes about 30 seconds after the consumer ends for these messages to start appearing and they continue to appear every 30 seconds until some messages are sent. Then they stop. 

To reproduce this, please download the attached zip file:

1.  Start the broker (script here to make it easy startBroker1.sh )
2.  run ant stomp-subscribe which is a variant of the demo we ship. It simply subscribes to the topic and exits.
3.  Wait about 30 seconds. Messages start showing up in the log/console
4.  Wait for a few of them to show up and then run stomp-send to drop a few messages out there. The messages subside. 

",,,,,,,,,,,,,,,02/Dec/11 8:29 PM;sjavurek;dev-3607.zip;https://issues.jboss.org/secure/attachment/12368933/dev-3607.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3622,,,,1.0,1.0,,1|hzkh0n:,179725,,,,,,,,16/Dec/11 11:25 AM;garytully;fix applied to 5.5.*-fuse branches,,,,,,,,,,,,,,,,,,,
"mKahaDB configuration causes ""activemq-data\mKahaDB\txStore"" directory to be created from where activemq scripte is invoked",MB-1030,12516443,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,joe.luo,joe.luo,02/Dec/11 12:46 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,02/Dec/11 5:53 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,,,,0,,"I configured mKahaDB for activemq broker like below:
{code}
...
     <persistenceAdapter>
        <mKahaDB directory=""/Users/jluo/esb/esb_test/kahadb"">
            <filteredPersistenceAdapters>

                <!-- match all DLQ queues -->
                <filteredKahaDB queue=""DLQ.>"">
                  <persistenceAdapter>
                    <kahaDB directory=""/Users/jluo/esb/esb_test/DLQ-kahadb"" journalMaxFileLength=""32mb""/>
                  </persistenceAdapter>
                </filteredKahaDB>

                <!-- match all queues -->
                <filteredKahaDB queue="">"">
                  <persistenceAdapter>
                    <kahaDB directory=""/Users/jluo/esb/esb_test/QUEUE-kahadb"" journalMaxFileLength=""128mb""/>
                  </persistenceAdapter>
                </filteredKahaDB>

                <!-- match all topic queues -->
                <filteredKahaDB>
                  <persistenceAdapter>
                    <kahaDB directory=""/Users/jluo/esb/esb_test/TOPIC-kahadb"" enableJournalDiskSyncs=""false""/>
                  </persistenceAdapter>
                </filteredKahaDB>

            </filteredPersistenceAdapters>
        </mKahaDB>   
      </persistenceAdapter>
...
{code}
However, the broker always creates a directory structure ""activemq-data\mKahaDB\txStore\"" from where the activemq scripts is invoked. 

I tested on 5.5.1-fuse-01-11 and the latest 5.5.1-fuse-SNAPSHOT, the problem still persists. I also tested on the latest Apache 5.6 SNAPSHOT build from here: https://repository.apache.org/content/groups/snapshots/org/apache/activemq/apache-activemq/5.6-SNAPSHOT/
It worked fine. The ""txStore"" will be created under ""/Users/jluo/esb/esb_test/kahadb/"" as configured. 

Curently, for 5.5.1-fuse-01-xx, you can workaround it by setting a system property ""org.apache.activemq.default.directory.prefix"". It will create a directory structure ${prefix}/activemq-data/mKahaDB/txStore"" instead. So you might need to change your ""bin/activemq"" scripts to:
{code}
--- a/apache-activemq-5.5.1-fuse-01-06/bin/activemq
+++ b/apache-activemq-5.5.1-fuse-01-06-modified/bin/activemq
@@ -374,6 +374,7 @@ invokeJar(){
               -Dactivemq.classpath=\""${ACTIVEMQ_CLASSPATH}\"" \
               -Dactivemq.home=\""${ACTIVEMQ_HOME}\"" \
               -Dactivemq.base=\""${ACTIVEMQ_BASE}\"" \
+              -Dorg.apache.activemq.default.directory.prefix=\""/Users/jluo/esb/esb_test/\"" \
               $ACTIVEMQ_CYGWIN \
               -jar \""${ACTIVEMQ_HOME}/bin/run.jar\"" $COMMANDLINE_ARGS >/dev/null 2>&1 &
               RET=\""\$?\""; APID=\""\$!\"";
{code}

It might relate to this Apache JIRA: https://issues.apache.org/jira/browse/AMQ-3533",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3515,,,,0.0,2.0,,1|hzkgvr:,179703,,,,,,,,02/Dec/11 5:47 PM;garytully;issue is https://issues.apache.org/jira/browse/AMQ-3515 needs to be merged to fuse branch,02/Dec/11 5:53 PM;garytully;Will be in tonight's snapshot.,,,,,,,,,,,,,,,,,,
Unable to generate unique id when range of ports are blocked - org.apache.activemq.util.IdGenerator,MB-1029,12516442,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,30/Nov/11 8:21 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,02/Dec/11 4:50 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,,,,broker,,,0,,"org.apache.activemq.util.IdGenerator is unable to generate a unique id if a range of ports have been block.  

Currently there is only one strategy to create this id if the canAccessSystemProps condition is true:

{code}
if (canAccessSystemProps) {
            try {
                hostName = InetAddressUtil.getLocalHostName();
                ServerSocket ss = new ServerSocket(0);
                stub = ""-"" + ss.getLocalPort() + ""-"" + System.currentTimeMillis() + ""-"";
                Thread.sleep(100);
                ss.close();
            } catch (Exception ioe) {
                LOG.warn(""could not generate unique stub"", ioe);
            }
        } else {
            hostName = ""localhost"";
            stub = ""-1-"" + System.currentTimeMillis() + ""-"";
        }
{code} 

In the block where the the ServerSocket is instantiated, a fallback strategy should occur if we are unable to bind to the port.

Fallback strategy
{code}
hostName = ""localhost"";
stub = ""-1-"" + System.currentTimeMillis() + ""-"";
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3614,,,,0.0,2.0,,1|hzkgvb:,179701,,,,,,,,30/Nov/11 8:22 PM;jsherman;BQ:High,02/Dec/11 4:50 PM;garytully;fix on the fuse branch,,,,,,,,,,,,,,,,,,
NullPointer Exceptions when networked broker sends certificate with an invalid user name,MB-1028,12516441,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,30/Nov/11 3:33 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,30/Dec/11 3:38 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-02,5.6.0-fuse-00-00,,,,,,0,,"Hi, 

When setting up a network of brokers using authentication against a certificate, NullPointerExceptions are thrown when the validation fails:

{quote}

 WARN | Failed to add Connection ID:Susan-Javureks-MacBook-Pro-3.local-53150-1322608354523-5:1, reason: java.lang.SecurityException: User name [null] or password is invalid. No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
 WARN | Async error occurred: java.lang.SecurityException: User name [null] or password is invalid. No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
java.lang.SecurityException: User name [null] or password is invalid. No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
	at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:102)
	at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:85)
	at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:91)
	at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:707)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:77)
	at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:139)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.security.auth.login.FailedLoginException: No user for client certificate: CN=Dave Stanley, OU=FuseSource, O=Progress, L=Unknown, ST=MA, C=US
	at org.apache.activemq.jaas.CertificateLoginModule.login(CertificateLoginModule.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at javax.security.auth.login.LoginContext.invoke(LoginContext.java:769)
	at javax.security.auth.login.LoginContext.access$000(LoginContext.java:186)
	at javax.security.auth.login.LoginContext$4.run(LoginContext.java:683)
	at java.security.AccessController.doPrivileged(Native Method)
	at javax.security.auth.login.LoginContext.invokePriv(LoginContext.java:680)
	at javax.security.auth.login.LoginContext.login(LoginContext.java:579)
	at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:87)
	... 15 more
 WARN | Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:512)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
	at java.lang.Thread.run(Thread.java:680)
 WARN | Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:551)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:91)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
	at java.lang.Thread.run(Thread.java:680)
{quote}

This does not happen with a test client in same circumstance, just a broker trying to connect.   Also, the crux of the error is that the CN in the users.properties does not match the certificate.  Bad certificates don't trigger the problem either.

I've attached a test case to reproduce this issue. The configuration and keys are all included in the zip file and you should only have to start the two brokers using startJaasBroker.sh and then startJaasBroker2.sh. 

Kindest regards, 
Susan

",,,,,,,,,,,,,,,30/Nov/11 3:34 PM;sjavurek;dev-3609.zip;https://issues.jboss.org/secure/attachment/12368935/dev-3609.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3625,,,,1.0,0.0,,1|hzkh67:,179750,,,,,,,,,,,,,,,,,,,,,,,,,,,
Few tweaks to Security Guide,MB-1027,12516440,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,fbolton,sjavurek,sjavurek,29/Nov/11 8:43 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,02/Dec/11 4:24 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,Documentation,,,0,,"Hi, 

1. It seems the configuration file on windows is a different name. I tried to google it but found nothing conclusive so I downloaded a new version of OpenSSL on Windows:

{code}
C:\sue\Tools\OpenSSL-Win32>dir .\bin\openssl.cfg
 Volume in drive C has no label.
 Volume Serial Number is 24D1-ACD4

 Directory of C:\sue\Tools\OpenSSL-Win32\bin

04/04/2009  11:09 AM            10,819 openssl.cfg
               1 File(s)         10,819 bytes
               0 Dir(s)   8,020,815,872 bytes free

C:\sue\Tools\OpenSSL-Win32>
{code}

We should include the Windows portion as page 22 implies the instructions work on Windows.

2.  Example 2.2 (page 48) states a 512 bit RSA private key is generated, however a 1024 bit RSA private key is actually generated, consistent with the config file.  It's noted in
config file here:

{code}
####################################################################
[ req ]
default_bits		= 1024
{code}

Thanks, 
Susan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkgv3:,179700,,,,,,,,"02/Dec/11 4:24 PM;fbolton;Actually, the reason why {{openssl.cnf}} appears as the file name is because the original draft of this doc was written a LONG time ago and, presumably, that is what the file was called in a very old version of OpenSSL. I've searched/replaced all instances of openssl.cnf by openssl.cfg. Also, updated 512 to 1024.

This is updated in the source code, but has not been published yet.",,,,,,,,,,,,,,,,,,,
broker commit threads hung waiting for waitPostCommitDone task,MB-1026,12516439,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,29/Nov/11 10:11 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,30/Nov/11 5:46 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,5.6.0-fuse-00-00,,broker,,,0,,"regression from https://issues.apache.org/jira/browse/AMQ-2868, an overlapping empty transaction and valid transaction can result in a skipped after completion call. The empty transactions can result from acks that results in exceptions, UnMatchedAck etc. so they are rare. In a highly concurrent system, the relevant commits can pass each other out and result in the problem. A hung thread is of the form:{code}ActiveMQ Transport: tcp:///xx:34724"" daemon prio=10 tid=0x00002aaab8187000 nid=0xfd9 waiting on condition [0x000000005a13d000]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x0000000794062330> (a java.util.concurrent.FutureTask$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:969)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1281)
	at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:218)
	at java.util.concurrent.FutureTask.get(FutureTask.java:83)
	at org.apache.activemq.transaction.Transaction.waitPostCommitDone(Transaction.java:146)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:73)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:252)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:432)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113){code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2868,,,,0.0,1.0,,1|hzkh47:,179741,,,,,,,,29/Nov/11 11:04 AM;garytully;Fix merged to 5.5.x and 5.5.1 - a new 5.5.1 snapshot with the fix is at : http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1-fuse-SNAPSHOT/apache-activemq-5.5.1-fuse-20111129.103105-25-bin.tar.gz,,,,,,,,,,,,,,,,,,,
Oracle ds persistence adapter using blob can cause nonatomic blob writes causing empty blob. ,MB-1025,12516438,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ubhole,ubhole,28/Nov/11 4:52 PM,02/Dec/11 4:17 PM,29/Nov/16 4:15 PM,,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,In Fuse MB/AMQ It is possible that oracle adapter might not be writing blob data in atomic fashion causing some empty blob in db causing failures later on. It needs to be investigated. ,,,,,,,,,,,MB-1024,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkguv:,179699,,,,,,,,,,,,,,,,,,,,,,,,,,,
"STOMP,  NullPointerException in ActiveMQ 5.5.1-fuse-01-06",MB-1021,12516437,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,21/Nov/11 11:59 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,16/Dec/11 11:53 AM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-02-02,,,,,,0,,"2011-11-20 23:37:02,076 [127.0.0.1:20287] WARN  Service                        - Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:269)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:77)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:477)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:229)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:82)
	at org.apache.activemq.transport.stomp.StompSubscription.onMessageDispatch(StompSubscription.java:79)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onActiveMQCommand(ProtocolConverter.java:598)
	at org.apache.activemq.transport.stomp.StompTransportFilter.oneway(StompTransportFilter.java:59)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1281)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:830)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:866)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)",,,,,,,,,,,DEV-3581,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3605,,,,0.0,1.0,,1|hzkh2n:,179734,,,,,,,,16/Dec/11 11:53 AM;garytully;fix merged to 5.5.*-fuse branches,,,,,,,,,,,,,,,,,,,
Fuse Message Broker Exploring JMS Version 5.5 Chapter 8 Changing Parameters and Modifying Source Code,MB-1020,12516434,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,fbolton,jsherman,jsherman,19/Nov/11 3:16 PM,17/Jan/12 5:33 PM,29/Nov/16 4:15 PM,17/Jan/12 5:33 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"In Chapter 8 of the Exploring JMS document the following updates should be made:

Page 59: text should be updated to include ""to provide...""
   Current text:

   While the exploration of the JMS samples ran the compiled applications, it
   used an Ant build file provide optimal cross-platform porting and to preset
   some parameter values to keep the samples on a defined track.

   Revised text:

   While the exploration of the JMS samples ran the compiled applications, it
   used an Ant build file to provide optimal cross-platform porting and to preset
   some parameter values to keep the samples on a defined track.

Page 61: Distributing the client and the broker

   Current text:

   The standalone broker system would typically by in a location where it can...

    Revised text:

    The standalone broker system would typically be in a location where it can...

Page 62

    Current text:

    Stop the broker on the remote host, then modify the build.xml file on the
    remote host to specify add the connection parameter and specify the host
    name where the broker is running.

    Revised text:

    Stop the broker on the remote host, then modify the build.xml file on the
    remote host to add the connection parameter and specify the host
    name where the broker is running.

Page 64

     Current Text:

     On line 82 of Chat.java, the message consumer is listed as:

     Revised Text:

     On line 81 of Chat.java, the message consumer is listed as:",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkhbb:,179773,,,,,,,,19/Nov/11 3:17 PM;jsherman;BQ:Low,,,,,,,,,,,,,,,,,,,
Fuse Message Broker Exploring JMS Version 5.5 Request and Reply (Pub/Sub) Application Documentation,MB-1019,12516432,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,fbolton,jsherman,jsherman,19/Nov/11 3:02 PM,17/Jan/12 5:19 PM,29/Nov/16 4:15 PM,17/Jan/12 5:19 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"In the Request and Reply (Pub/Sub) application sample the description text reads as follows:

In this example in the Pub/Sub domain, the replier application must be started
before the requestor so that the Pub/Sub replier's message listener can receive
the message and release the blocked requestor.

This leads the reader to believe that the replier needs to be started before the requestor however the instructions do indeed have the reader start the requestor in step 1 and the replier in step 2.

The description text should be updated as follows:

In this example in the Pub/Sub domain, the replier application must be started
before sending messages from the requestor so that the Pub/Sub replier's message listener can receive
the message and release the blocked requestor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkhan:,179770,,,,,,,,19/Nov/11 3:02 PM;jsherman;BQ:Low,,,,,,,,,,,,,,,,,,,
Fuse Message Broker Exploring JMS Version 5.5 QueueMonitor Application Documentation,MB-1018,12516433,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,fbolton,jsherman,jsherman,18/Nov/11 2:38 PM,17/Jan/12 5:12 PM,29/Nov/16 4:15 PM,17/Jan/12 5:12 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"The instructions for the QueueMonitor Application sample assumes there is an application running in terminal 1. This assumption is probably based on the expectation that the user ran the previous example, Talk Application, which does not instruct the user to shutdown the application running in terminal 1 when stopping the sample.

Instructions for each sample should be independent of other sample instructions and shouldn't rely on any prerequisite from a previous example. In the QueueMonitor Application instructions we should be explicit about which applications should be started in terminal 1, 2, and 3.

The Running the Sample section should be updated with the following text:

To run the QueueMonitor sample do the following:
1. In window 1, enter ant talk1.
2. In window 3, enter ant qmonitor.
    The QueueMonitor's console window lists the queues that have been specified for it to browse.
    The QueueMonitor Java window opens.
3. Click Browse Queues.
    The messages in the queue at the moment it is browsed are listed. If
    you are following along carefully, there should be no messages in any
    queue.
To put messages into a queue do the following:
4. In window 1 (where Talker1 is running), type 1 and then press Enter.
5. Repeat step 4 to create a few messages, such as 2 Enter, 3 Enter, 4 Enter.
6. In the QueueBrowser window, click Browse Queues.
    The messages are in the queue. They will continue to be there until a
    receiver receives them on that queue, or they expire (set to 30 minutes
    by the sender).
    The messages that are waiting on the queue will get delivered to the next
    receiver that chooses to receive from that queue.
To receive the queued messages do the following:
7. In window 2, enter ant talk2.
8. When the Talker_2 application starts, it shows that it consumes the messages in the queue in sequence.
9. In the QueueBrowser window, click Browse Queues.
    The queues are all empty. As long as you have receivers on the sample
    queues, no messages will display in the QueueMonitor window.

In addition, the user should be instructed to stop all applications in the previous example, Talk Application",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkha7:,179768,,,,,,,,,,,,,,,,,,,,,,,,,,,
Forge FUSE Message Broker Source Code instructions and the SVN Repository,MB-1017,12516431,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,davestanley,sjavurek,sjavurek,18/Nov/11 12:09 PM,25/Nov/11 4:16 PM,29/Nov/16 4:15 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Hi, 

The [instructions|http://fusesource.com/forge/projects/fusemq/source] still list SVN Repository. Per Tim this code appears to be 5.4 vintage and not the latest trunk.  We need to update these instructions accordingly to either remove the SVN Repository and use Git only or keep the SVN Repository up to date.

Kindest regards, 
Susan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkguf:,179697,,,,,,,,"23/Nov/11 12:51 PM;sjavurek;We have two pages in the forge:

http://fusesource.com/forge/projects/activemq/source
http://fusesource.com/forge/projects/fusemq/source

The activemq one is our source code at the moment is locked down. We should specify this or supply directions on how interested parties can get access. 
The fusemq one is our documentation. 

It's a bit confusing if you stumble onto the fusemq one first that it isn't actually the source code. Can we add a little info about what is in this repo and perhaps have them cross reference each other?

Thanks, 
Susan

",,,,,,,,,,,,,,,,,,,
Fuse Message Broker Exploring JMS Version 5.5 TransactedChat Application Documentation,MB-1016,12516430,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,fbolton,jsherman,jsherman,17/Nov/11 9:23 PM,17/Jan/12 4:59 PM,29/Nov/16 4:15 PM,17/Jan/12 4:59 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"The instructions for the TransactedChat Application sample assumes there is an application running in terminal 2. This assumption is probably based on the expectation that the user ran the previous example, SelectorChat Application, which does not instruct the user to shutdown the application running in terminal 3 when stopping the sample.

Instructions for each sample should be independent of other sample instructions and shouldn't rely on any prerequisite from a previous example. In the TransactedChat Application instructions we should be explicit about which applications should be started in terminal 1 and 2.

Running the Sample should be updated with the following text:

To run the Pub/Sub TransactedChat samples do the following:
1. In window 1, enter ant xnchat.
2. In window 2, enter ant chat1
3.  In the TransactedChatter window, enter some text and press Enter
3. Type COMMIT in the TransactedChatter window and press Enter.
          The message is delivered to the TransactedChatter window and the Chatter_1 window.
4. Type text in the TransactedChatter window and press Enter.
5. Repeat to produce a few messages.
6. Type COMMIT in the TransactedChat window and press Enter.
           The batch of messages is delivered as a series of individual messages to the TransactedChatter window and the Chatter_1 window.
7. Type text in the TransactedChatter window and press Enter.
8. Repeat to produce a few messages.
9. Type CANCEL in the TransactedChatter window and press Enter.
          The batch of messages is dropped.
Subsequent entries will form a new transaction to either commit or rollback.

Additionally we should have the user stop all applications in the previous example, SelectorChat Application.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkh9r:,179766,,,,,,,,,,,,,,,,,,,,,,,,,,,
Fuse Message Broker Exploring JMS Version 5.5 MessageMonitor Application Documentation,MB-1015,12516429,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,fbolton,jsherman,jsherman,17/Nov/11 4:05 PM,17/Jan/12 4:44 PM,29/Nov/16 4:15 PM,17/Jan/12 4:44 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"The instructions for the MessageMonitor Application sample assume there are applications running in terminals 1 and 2.  This assumption is probably based on the expectation that the user ran the previous example, HierarchicalChat Application, which does not instruct the user to shutdown the applications running in terminal 1 and 2 when stopping the sample.  

Instructions for each sample should be independent of other sample instructions and shouldn't rely on any prerequisite from a previous example.  In the MessageMonitor Application instructions we should be explicit about which applications should be started in terminal 1 and 2.

The steps 1 and 2 should read as follows for the MessageMonitor Application instructions:

1. In window 1, enter ant chat1, then type Hello, and press Enter.

The message displays in the MessageMonitor window, noting that the
message was received on the jms.samples.chat topic

2. In window 2, enter ant durable1, then type Hello, and press Enter.

The message displays in the MessageMonitor window, noting that the
message was received on the jms.samples.durablechat topic.

Because the MessageMonitor subscribes to the topic jms.samples.*,
messages are received from both publishers. The Chat and DurableChat
applications subscribe to only their respective topics.

In addition we should add the the following stop instructions to the HierarchicalChat Application

Stopping the sample To stop the applications, press Ctrl+C in each of the windows.","Fuse Message Broker Exploring JMS Version 5.5 Documentation
http://fusesource.com/docs/broker/5.5/explore_jms/explore_jms.pdf",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkh9b:,179764,,,,,,,,,,,,,,,,,,,,,,,,,,,
Please add a section on how to build our products at FuseSource,MB-1014,12516427,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,emjohnson,sjavurek,sjavurek,16/Nov/11 2:15 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,16/Nov/11 2:53 PM,,,,,,,,,,,,,,,,,,,,,,,,,Documentation,,,0,,"This JIRA arose out of a discussion about the ServiceMix Build instructions which are not up to date. The documentation lists profiles for building 4.X versions that are applicable in older versions. Based on this conversation we wanted to have a set of build instructions of our own for all our products which will also address this issue.

Kindest regards,
Susan",,,,,,,,,,,ESB-1595,ENH-2,MR-554,SF-390,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk587:,177828,,,,,,,,16/Nov/11 2:53 PM;emjohnson;see: http://fusesource.com/docs/broker/5.5/install_guide/FuseMBSrcInstall.html,,,,,,,,,,,,,,,,,,,
Tomcat 6 complains that ActiveMQ doesn't shutdown a thread,MB-1013,12516428,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,15/Nov/11 4:17 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,19/Dec/11 3:46 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,,,,,,,0,,"Attached is an Example War file. You can deploy it to the latest tomcat 6.0.33 let it run for few mins, then stop tomcat. You should see the following in catalina.out :

{quote}
Nov 15, 2011 4:08:30 PM org.apache.catalina.core.StandardService stop
INFO: Stopping service Catalina
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [ActiveMQConnection[ID:jluomac-51634-1321373233271-2:1] Scheduler] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [ActiveMQConnection[ID:jluomac-51634-1321373233271-2:2] Scheduler] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [InactivityMonitor ReadCheck] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [InactivityMonitor WriteCheck] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [ActiveMQ Session Task-1] but has failed to stop it. This is very likely to create a memory leak.
Nov 15, 2011 4:08:31 PM org.apache.catalina.loader.WebappClassLoader clearReferencesThreads
SEVERE: The web application [/testJms] appears to have started a thread named [ActiveMQConnection[ID:jluomac-51634-1321373233271-2:3] Scheduler] but has failed to stop it. This is very likely to create a memory leak.
{quote}

The version of ActiveMQ I used for the test was the latest Fuse MB 5.5.1-fuse-01-06.",,,,,,,,,,,,,,,19/Dec/11 3:46 PM;dbosanac;producer.xml;https://issues.jboss.org/secure/attachment/12368936/producer.xml,15/Nov/11 4:17 PM;joe.luo;testJms.war;https://issues.jboss.org/secure/attachment/12368929/testJms.war,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3451,,,,2.0,1.0,,1|hzkh1z:,179731,,,,,,,,"19/Dec/11 3:46 PM;dbosanac;This is a configuration issue as it seems in this case broker destroy methods on some object haven't been called. I added a few declarations of proper destroy methods like,

{code}        <!-- setup JMS connection factory -->
        <bean id=""poolConnectionFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"" destroy-method=""stop"">
                <property name=""maxConnections"" value=""8"" />
                <property name=""connectionFactory"" ref=""jmsConnectionFactory"" />
        </bean>{code}

Also, it seems that Tomcat doesn't like asynchronous closing of connections, so I also changed

{code}                <property name=""brokerURL"" value=""failover:(tcp://localhost:61616?closeAsync=false)""/>{code}

After these changes, everything closes with no warnings. Full producer.xml is attached",,,,,,,,,,,,,,,,,,,
Exploring-JMS examples are not working from the command line,MB-1010,12516425,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,jsherman,jsherman,jsherman,10/Nov/11 8:34 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,22/Nov/11 7:32 PM,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-11,,,,,,,0,,Running the examples in the exploring-jms directory are not working from the command line using Ant.  The ant task is configured to fork the processes which in turn causes the input for some of the examples to be directed to Ant and not the process running the example.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkijb:,179972,,,,,,,,"10/Nov/11 10:05 PM;jsherman;I have applied the fix for this issue in the 5.5.x branch.
I was also going to fix this in Trunk but noticed it was no loger there, is that expected?",22/Nov/11 7:32 PM;jsherman;Commited changes to the 5.5.x branch and will be available in the next release.,,,,,,,,,,,,,,,,,,
Exploring JMS examples contains a duplicate type when build all examples in an IDE,MB-1008,12516423,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Trivial,Done,garytully,jsherman,jsherman,08/Nov/11 8:33 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,14/Sep/12 11:51 AM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-09-16,5.6.0-fuse-00-00,,,,,,0,,When a java project is created from the exploring-jms directory in an IDE an issue occurs with the QueuePTPSamples/RequestReply and TopicPubSubSamples/RequestReply samples as the Replier and Requestor classes become duplicate types.  Possible resolution might be to include a package rather using a default package or renaming the classes to something more unique.  Building the projects separately is not an issue.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkjgn:,180121,,,,,,,,"14/Sep/12 11:51 AM;dbosanac;As per discussion, these examples are now removed from the distribution as they are old Progress Sonic examples.

Change made on 5.5.1-fuse and 5.6.x-fuse branches.",,,,,,,,,,,,,,,,,,,
Subsequent calls of BrokerService.stop() and  BrokerService.start() don't re-initialize the broker correctly,MB-1007,12516422,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,,mielket,mielket,07/Nov/11 11:24 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,14/Jun/12 1:06 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"When running JUnit tests with an embedded broker it may be necessary to stop and start the broker. 
Currently the broker is not re-initialized correctly after running BrokerService.stop() followed by BrokerService.start(). 
The persistence adapter seems to not be reloaded fully. 
This causes pending msgs to no be dispatched.

A call to BrokerService.start() should restart a fully functional broker instance.
",BrokerService.start()/stop() in JUnit test,,,,,,,,,,,,,,07/Nov/11 1:46 PM;mielket;BrokerRestartTest.tgz;https://issues.jboss.org/secure/attachment/12368928/BrokerRestartTest.tgz,10/Nov/11 8:19 AM;mielket;MB-1007.patch;https://issues.jboss.org/secure/attachment/12368927/MB-1007.patch,,,,,,,,,,,,,,,,,,,,,,,,,2.0,2.0,,1|hzkiqf:,180004,,,,,,,,"07/Nov/11 1:46 PM;mielket;Attaching JUnit test case.
",14/Jun/12 1:06 PM;mielket;Won't fix. Recommended way is to stop the broker and recreate a new Broker instance rather than calling start() again.,,,,,,,,,,,,,,,,,,
"Broker does not replay inflight messages as expected (when destinationPolicy replayWhenNoConsumers=""true"" is set)",MB-1005,12516421,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,04/Nov/11 2:49 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,29/Nov/11 4:02 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-11,,,,,,,0,,"Test has a scenario with:
+ 6 brokers (3 producer brokers & 3 consumer brokers). Each producer broker connects to each consumer broker via duplex NC's (so each producer
broker has 3 NC's)
+ 1 consumer (connects to 1 of the 3 consumer brokers)
+ 1 producer broker (connects to 1 of the 3 producer brokers)

Problem:
1) Send 1000 messages to a random producer broker. As there is no demand, messages are held on
the producer broker
2) Connect a consumer broker and start consuming messages. Ctrl-c the consumer when messages are inflight
3) Connect with jconsole to the consumer broker (e.g. c1) and verify there are some inflight messages awaiting consumption.
4) Connect to a separate consumer broker (e.g. c2). As the replayWhenNoConsumers policy is enabled, we
expect the messages to get replayed from the c1 consumer broker back to its originating broker and on
to the broker with a consumer attached (c2).

but in this test the inflight messages on c1 are not replayed.


Steps to reproduce:

1) Take attached configs and unzip in ./conf of latest broker release

2) Six consoles:

./bin/activemq console xbean:./conf/activemq-p1.xml 
./bin/activemq console xbean:./conf/activemq-p2.xml 
./bin/activemq console xbean:./conf/activemq-p3.xml
./bin/activemq console xbean:./conf/activemq-c1.xml 
./bin/activemq console xbean:./conf/activemq-c2.xml
./bin/activemq console xbean:./conf/activemq-c3.xml

3) Run producer

{code}
ant producer -Durl=tcp://localhost:61616 -Dsubject=TEST.Q -Dmax=10000 -Ddurable=false
{code}

4) Run consumer, ctrlc and then run consumer on separate broker.

{code}
$ ant consumer -Durl=tcp://localhost:62626 -Dsubject=TEST.Q -Dmax=10000 -DsleepTime=0

Buildfile: build.xml

init:

compile:

consumer:
     [echo] Running consumer against server at $url = tcp://localhost:62626 for subject $subject = TEST.Q
     [java] Connecting to URL: tcp://localhost:62626 (:)
     [java] Consuming queue: TEST.Q
     [java] Using a non-durable subscription
     [java] Running 1 parallel threads
     [java] [Thread-3] We are about to wait until we consume: 10000 message(s) then we will shutdown
     [java] [Thread-3] Received: 'Message: 0 sent at: Tue Nov 01 15:53:31 EDT 2011  ...' (length 1000)
...
     [java] [Thread-3] Received: 'Message: 464 sent at: Tue Nov 01 15:53:31 EDT 2011...' (length 1000)
     [java] [Thread-3] Received: 'Message: 465 sent at: Tue Nov 01 15:53:31 EDT 2011...' (length 1000)
     [java] [Thread-3] Received: 'Message: 466 sent at: Tue Nov 01 15:53:31 EDT 2011...' (length 1000)
dstanley-mbp:~/Work/fusesource/fusemb5510106/apache-activemq-5.5.1-fuse-01-06/example

{code}

*Ctrl-c* then connect to 62627


{code}

$ ant consumer -Durl=tcp://localhost:62627 -Dsubject=TEST.Q -Dmax=10000 -DsleepTime=0
Buildfile: build.xml

init:

compile:

consumer:
     [echo] Running consumer against server at $url = tcp://localhost:62627 for subject $subject = TEST.Q
     [java] Connecting to URL: tcp://localhost:62627 (:)
     [java] Consuming queue: TEST.Q
     [java] Using a non-durable subscription
     [java] Running 1 parallel threads
     [java] [Thread-3] We are about to wait until we consume: 10000 message(s) then we will shutdown
     [java] [Thread-3] Received: 'Message: 916 sent at: Tue Nov 01 15:53:31 EDT 2011...' (length 1000)
     [java] [Thread-3] Received: 'Message: 917 sent at: Tue Nov 01 15:53:31 EDT 2011...' (length 1000)
{code}

Note, previously dispatched messages are stuck on c1.

Have the following config in consumer brokers..

{code}
<policyEntries>
                   <!-- Tried with both optimizedDispatch enabled and disabled but doesn't affect behaviour -->
                    <policyEntry queue="">"" optimizedDispatch=""true"" />
					
					<!-- When broker memory is exhausted, start writing to disk (temp storage). Size is configured using tempUsage -->
					<policyEntry queue="">"">
						<networkBridgeFilterFactory>
							<conditionalNetworkBridgeFilterFactory replayWhenNoConsumers=""true"" replayDelay=""30000"" />
						</networkBridgeFilterFactory>
						<pendingQueuePolicy>
							<fileQueueCursor />
						</pendingQueuePolicy>
					</policyEntry>
					<policyEntry topic="">"">
						<pendingSubscriberPolicy>
							<fileCursor/>
						</pendingSubscriberPolicy>
					</policyEntry>
                </policyEntries>
{code}",5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkgun:,179698,,,,,,,,"14/Nov/11 6:46 PM;garytully;The problem here is that there is no connection between the consumer brokers.
With a ttl of 1, a demand on c1 gets as far as all the producers, p1 has messages and dispatches them, it only sees the demand on c1.
So c1 has messages that are stuck if they are not all consumed (this test case)
A consumer on c2 is only visible to all the producers, non of which have messages.

So the solution is A) configure a ttl of 2, so that the demand on c1 is visible to all the producers and all of the consumers. This has the down side of distribution the load on a destination across the consumer brokers but the up side that stuck messages can be replayed via p1 from c1.

or B) network the consumer brokers, so C1 to c2,3 and c2 to c1,2 etc... such that the consumer brokers can forward messages between them when there are no local consumers. ","23/Nov/11 5:34 PM;garytully;For the c1 -> cN network connectors, the networkTTL=""2"" is required b/c the message will have hopped once to get to the consumer broker.
In fact, for the configuration with N consumer brokers,  we want the networkTTL on the consumer brokers to be N, so that it can go p1->c1->c2->c3
If the message needs to go back, when there are no local consumers, the networkTTL is ignored.

When messages are blocked by the dispatch filters there are trace level log messages.
The relevant logging to display these is:{code}
log4j.logger.org.apache.activemq.network=TRACE
log4j.logger.org.apache.activemq.command=TRACE{code}","25/Nov/11 3:47 PM;garytully;One additional piece of configuration is necessary if we want to enable persistence messages to be replayed indefinitely.
We need to disable the cursor message audit ( enableAudit=""false""), because a message will be dispatched more than once when it is replayed.

{code}<policyEntry queue="">"" enableAudit=""false"">
		<networkBridgeFilterFactory>
			<conditionalNetworkBridgeFilterFactory replayWhenNoConsumers=""true"" replayDelay=""30000"" />
		</networkBridgeFilterFactory>
</policyEntry>{code}",,,,,,,,,,,,,,,,,
Producer/Consumer slow down when using a durable subscription,MB-1004,12516419,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,jsherman,jsherman,02/Nov/11 10:04 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,23/Nov/11 12:51 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,,,broker,,,0,,An issue seems to occur when using a durable subscription that can cause either the producer or the consumer to become extremely slow.  Attached is a test case that can be used to recreate this issue.  This issue appears to have started with activemq-5.5.0-fuse-00-35 as the test case runs fine on apache-activemq-5.5.0-fuse-00-27.  The test case also works fine with the apache-activemq-5.5.1 release.,activemq-5.5.0-fuse-00-35 - apache-activemq-5.5.1-fuse-01-06,,,,,,,,,,DEV-3544,,,,02/Nov/11 10:32 PM;jsherman;Testcase.zip;https://issues.jboss.org/secure/attachment/12368924/Testcase.zip,02/Nov/11 10:32 PM;jsherman;activemq-throughput-med.xml;https://issues.jboss.org/secure/attachment/12368925/activemq-throughput-med.xml,02/Nov/11 10:10 PM;jsherman;brokerTrace.log;https://issues.jboss.org/secure/attachment/12368923/brokerTrace.log,02/Nov/11 10:10 PM;jsherman;consumerTrace.log;https://issues.jboss.org/secure/attachment/12368922/consumerTrace.log,,,,,,,,,,,,,,,,,,,,,,,4.0,6.0,,1|hzkgtb:,179692,,,,,,,,02/Nov/11 10:10 PM;jsherman;Attached are the trace logs when the slow down occurred.,"02/Nov/11 10:32 PM;jsherman;Attached Test Case.

1) Start the fuse broker using the attached broker config (./bin/activemq console xbean:./conf/activemq-throughput-med.xml)
2) Execute testcase (mvn -Dactivemq-version=5.5.1-fuse-01-06 clean install)  the actvemq-version can just be used to override the pom when testing against different distributions, it is currently set to 5.5.1-fuse-01-06.","04/Nov/11 7:03 PM;jsherman;I have continued testing this issue with the latest SNAPSHOTS of the following builds:

apache-activemq-5.5.1-fuse-20111029.002752-14 - Testcase does not complete, in most cases it appears the consumer becomes extremely slow

apache-activemq-5.6-fuse-20111030.205201-21 - Testcase completes, producer and consumer operate as expected.

It appears apache-activemq-5.6-fuse-SNAPSHOT does resolve the behavior that is experienced when running the attached testcase against versions activemq-5.5.0-fuse-00-35 - apache-activemq-5.5.1-fuse-SNAPSHOT where the producer/consumer becomes extremely slow.","15/Nov/11 11:50 PM;jsherman;I have done some additional testing on this issue and believe I have a work around for apache-activemq-5.5.1-fuse-01-06 that will resolve the slow down issue that is experienced running the attached testcase. The root cause of the issue appears to be caused by a thread that is used to remove expired messages from the queue. This thread is scheduled to run every 30 secs and does a browse on the queue looking to discard expired messages. In this particular case, the queue may have up to 200,000 message on it when the browse occurs and it will iterate through each message. In the 5.6 code base the handling of this cleanup has been changed which is why the performance is better. To work around this issue in the apache-activemq-5.5.1-fuse-01-06 distribution, this cleanup can be disabled using the expireMessagesPeriod attribute on the policyEntry for the destinationPolicy.  When expireMessagesPeriod is set to 0, the test case runs without issue.

This appears to be the difference between apache-activemq-5.5.1-fuse-01-06 and trunk for activemq-core/src/main/java/org/apache/activemq/broker/region/Topic.java...

{code}
public class Topic extends BaseDestination implements Task {
 
     private final Runnable expireMessagesTask = new Runnable() {
         public void run() {
-            browse();
+            List<Message> browsedMessages = new InsertionCountList<Message>();
+            doBrowse(browsedMessages, getMaxExpirePageSize());
         }
     };
{code}

It also appears the default MAX_BROWSE_PAGE_SIZE has been set to 400 whereas in 5.5.1 I believe it browse the entire queue.","16/Nov/11 2:34 PM;garytully;As a workaround, setting the expireMessagesPeriod=0 via a policy entry is fine, the thread is only needed when there are no consumers and a build up of pending messages.

To avoid this, we need to back port this fix: 
http://svn.apache.org/viewvc?view=revision&revision=1159662","23/Nov/11 12:51 PM;garytully;Fix has been merged to 5.5.x and 5.5.1 - 5.5.1 snapshot with the changes is at:
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1-fuse-SNAPSHOT/apache-activemq-5.5.1-fuse-20111123.123801-21-bin.tar.gz",,,,,,,,,,,,,,
<destinationPathSeparatorPlugin/> is not recognized,MB-1002,12516417,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,dbosanac,dbosanac,01/Nov/11 1:06 PM,01/Nov/11 3:17 PM,29/Nov/16 4:15 PM,01/Nov/11 3:17 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,,,,,,0,,Seems like this plugin is not included into xbean schema,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3204,,,,0.0,1.0,,1|hzkgn3:,179664,,,,,,,,01/Nov/11 3:17 PM;dbosanac;http://svn.apache.org/viewvc?view=revision&revision=1145135 merged to 5.5.x-fuse and 5.5.1-fuse branches,,,,,,,,,,,,,,,,,,,
"AMQ Web console creates, but does not delete destinations with '#', '%', '&' and '+' characters.",MB-1001,12516416,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,01/Nov/11 10:12 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,08/Nov/11 3:18 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,,,,,,0,,"The AMQ web console (http://localhost:8161/admin/queues.jsp) allows for the creation of queues with the following names:

Name 1: ####
Name 2: %%%%
Name 3: &&&&
Name 4: ++++

The names are accepted and are shown in the AMQ's web consoles Queue table (http://localhost:8161/admin/queues.jsp) .

The web console does not allow for deletion of any of these destinations when pressing the associated ""Delete"" button.

When ""Delete"" is pressed associated with ""####"", a new web page is displayed with this information:

Error! Exception occurred while processing this request, check the log for more information!

When ""Delete"" is pressed associated with ""%%%%"", ""&&&&"", or ""++++"", the screen is refreshed with no apparent changes, that is, the destination queue is still there:

I imagine that there should be error handling at the page level and or middle-tier for these situatlions... and/or validation logic against the web components if the user shouldn't be using these characters.

Note that I don't think that the character set is defined for the destination identifier... couldn't find it in the spec: https://cds.sun.com/is-bin/INTERSHOP.enfinity/WFS/CDS-CDS_Developer-Site/en_US/-/USD/ViewFilteredProducts-SimpleBundleDownload. Perhaps it should be. Note the traditional Java identifiers are made up of Java Letters which includes characters where Character.isJavaIdentifierStart(int) returns true.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3113,,,,0.0,1.0,,1|hzkgq7:,179678,,,,,,,,"08/Nov/11 3:18 PM;dbosanac;Fixed and merged to 5.5.x-fuse and 5.5.1-fuse branches. A snapshot containing a fix (20111108.150230-17) could be found at

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5.1-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Spurious error messages printed by consumer when no messages available to consumer,MB-1000,12516415,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,rkieley,rkieley,28/Oct/11 6:45 PM,09/Nov/11 9:21 PM,29/Nov/16 4:15 PM,09/Nov/11 9:21 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Getting the following output for each null returned by consumer->receive(timeout):

{code:xml}
Pointer operator-> - Pointee is NULL.
        FILE: ./decaf/lang/Pointer.h, LINE: 257
        FILE: activemq/core/ActiveMQConsumer.cpp, LINE: 1165
        FILE: activemq/core/ActiveMQSessionExecutor.cpp, LINE: 141
{code}

When I connect the simple consumer to a broker with no messages available. Note simple consumer modified to use receive(long timeout) instead of setMessageListener(this) with a timeout of 6000.","osx 10.7.2, gcc 4.4, amq-cpp v3.4.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQCPP-382,,,,0.0,0.0,,1|hzkgqn:,179680,,,,,,,,,,,,,,,,,,,,,,,,,,,
InterruptedException in InactivityMonitor,MB-998,12516413,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,tabish121,ccorsi1,ccorsi1,26/Oct/11 4:26 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,26/Oct/11 9:55 PM,5.5.0-fuse-00-53,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,5.6.0-fuse-00-00,,java client,,,0,,"The Inactivity monitor generates an interrupt exception when the inactivity limit has been reached because the thread that is shutting down the transport is interrupting itself.

The solution is to replace the shutdownNow method call with shutrdown on the ASYNC_TASKS executor.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3567,,,,0.0,1.0,,1|hzkgjb:,179647,,,,,,,,26/Oct/11 9:55 PM;tabish121;Fix applied to the 5.5 branches.  ,,,,,,,,,,,,,,,,,,,
NullPointerException on websocket connection,MB-996,12516411,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,sjavurek,sjavurek,24/Oct/11 4:19 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,25/Nov/11 4:03 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"Tracking Apache issue:

https://issues.apache.org/jira/browse/AMQ-3504",,,,,,,,,,,,,,,28/Oct/11 4:43 PM;sjavurek;jmesnil-stomp-websocket-ace6be7.zip;https://issues.jboss.org/secure/attachment/12368920/jmesnil-stomp-websocket-ace6be7.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3504,,,,1.0,2.0,,1|hzkgu7:,179696,,,,,,,,"28/Oct/11 4:42 PM;sjavurek;To reproduce this error, please complete the following steps:

1.  Download the attached unix tarball (downloaded from: https://github.com/jmesnil/stomp-websocket)
2.  Add a web socket transport to your broker:

{code}
      <transportConnector name=""ws"" uri=""ws://localhost:61618/stomp""/>
{code}

3.  If you changed the IP in step 2, update config file:

jmesnil-stomp-websocket-ace6be7/test/unit/config.js

Accordingly.  I used default username and password as well. 

4.  This test runs loads of tests but alls you really need to see is the simple connection to cause the error.  As such, I commented most of them out in the attached tar file:

jmesnil-stomp-websocket-ace6be7/test/index.html

{code}
  <!-- check connection/disconnection -->
  <!-- FAILS -->
  <script src=""unit/connection.js""></script>

  <!-- check send/receive messages -->
  <!-- FAILS -->
  <!--script src=""unit/message.js""></script-->
  <script src=""unit/message.js""></script>

{code}

Rest of tests are commented out. 

5.  Using FireFox 7.0.1 or Google Chrome 15.0.874.106, open the file:

file:///Users/sjavurek/Fuse/SRs/cern/dev-3520/jmesnil-stomp-websocket-ace6be7/test/index.html

In the broker log, you will see the Null Pointer error. 

6.  Open the same file in Safari (Version 5.1 (6534.50)), no Null pointer. 

I also spotted this stomple client https://github.com/krukow/stomple which uses hornetq. It has the same problems in these browsers.  

Hope that helps. Please let me know if you need anything else. 

Kindest regards, 
Susan



","25/Nov/11 4:03 PM;davestanley;Fixed in 5.6, we cannot backport as change is too disruptive to codebase.",,,,,,,,,,,,,,,,,,
NullPointerException in KahaDB on stopping  during broker retstart with latest AMQ5.5 snapshot,MB-992,12516407,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,20/Oct/11 1:44 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,24/Oct/11 1:52 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-06,5.6.0-fuse-00-00,,,,,,0,,"Please see attached logs for further details.

2011-10-20 13:21:09,500 [erSimpleAppMain] INFO  KahaDBStore                    - Stopped KahaDB
2011-10-20 13:21:09,566 [erSimpleAppMain] ERROR KahaDBStore                    - Could not stop service: org.apache.activemq.store.kahadb.KahaDBStore@5454570a. Reason: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:850)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointProducerAudit(MessageDatabase.java:1419)
	at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1281)
	at org.apache.activemq.store.kahadb.MessageDatabase$4.execute(MessageDatabase.java:401)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:758)
	at org.apache.activemq.store.kahadb.MessageDatabase.close(MessageDatabase.java:399)
	at org.apache.activemq.store.kahadb.MessageDatabase.unload(MessageDatabase.java:436)
	at org.apache.activemq.store.kahadb.MessageDatabase.doStop(MessageDatabase.java:240)
	at org.apache.activemq.store.kahadb.KahaDBStore.doStop(KahaDBStore.java:242)
	at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:70)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.stop(KahaDBPersistenceAdapter.java:201)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:593)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:536)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:106)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:106)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:91)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:148)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:90)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:240)
	at java.lang.Thread.run(Thread.java:619)

",,,,,,,,,,,DEV-3350,,,,20/Oct/11 1:44 PM;socallag;activemq.log;https://issues.jboss.org/secure/attachment/12368915/activemq.log,20/Oct/11 1:44 PM;socallag;wrapper (2).log;https://issues.jboss.org/secure/attachment/12368916/wrapper+%282%29.log,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3559,,,,2.0,3.0,,1|hzkgif:,179643,,,,,,,,"21/Oct/11 9:04 PM;tabish121;Fix applied at apache, will merge to the 5.5.1 fuse branch.",24/Oct/11 1:38 PM;tabish121;Found one failing unit test that requires a small change.,24/Oct/11 1:52 PM;tabish121;Added fix to prevent checkpoint thread creation in store method if it was not created before.,,,,,,,,,,,,,,,,,
"When a producer from a network bridge is blocked by producer flow control, all producers from the network bridge get blocked.",MB-991,12516406,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,18/Oct/11 9:25 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,20/Oct/11 2:48 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,5.6.0-fuse-00-00,,,,,0,,"Opening local FuseSource issue to track Apache issue, https://issues.apache.org/jira/browse/AMQ-3331.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3331,,,,0.0,2.0,,1|hzkggf:,179634,,,,,,,,20/Oct/11 2:40 PM;tabish121;Think you just resolved this one at Apache.,"20/Oct/11 2:48 PM;garytully;fix for https://issues.apache.org/jira/browse/AMQ-3331 applied to fuse 5.5.x and 5.5.1 branches.

Additional boolean attribute on a networkConnector, alwaysSyncSend. When true, both persistent and non persistent messages are sent using request/response rather than oneway, to the remote broker.
The previous behavior only did this for messages sent with response required = true, as in sync sent by the original producer.
When false, only non-persistent messages are sent with a one way.

W.r.t producer flow control, when using {{alwaysSyncSend=true}}, there can be many outstanding requests, so one destination may block, but the network connector bridge will still be able to send to non blocked destinations.

Previously, for non persistent messages, the oneway would block all subsequent sends if the destination blocked on producer flow control.",,,,,,,,,,,,,,,,,,
TimeStampingBrokerPlugin causes messages to expire in DLQ queue,MB-985,12516401,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,joe.luo,joe.luo,14/Oct/11 8:54 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,14/Nov/11 11:32 AM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-11,5.6.0-fuse-00-00,,,,,,0,,"Here is steps to reproduce the issue:

1. Set the plugin to use a low value timeout like this:
{code}
<timeStampingBrokerPlugin ttlCeiling=""60000"" zeroExpirationOverride=""60000"" />
{code}
and individual deadLetterStrategy as following
{code}
<policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""5mb"">
    <deadLetterStrategy>
        <individualDeadLetterStrategy queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" />
    </deadLetterStrategy>
 </policyEntry>
{code}
2. Produce 10 messages either via or shipped ProducerTool example or the web console to TEST.IN queue (use persistent delivery mode);
3. Wait 1 minute for messages to expire and then propagate to DLQ.TEST.IN;
4. Confirm 10 messages arrived into DLQ.TEST.IN queue;
5. Open one message, and you'll see that the timeStampingBrokerPlugin has added a timestamp to the message. (Usually expired messages have expiration field cleared when going into the DLQ)
6. Wait one minute, and messages are expired from the DLQ.TEST.IN. The messages are not consumable or browsable any more (does not exist) although the webconsole still shows 10 messages pending.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3541,,,,0.0,4.0,,1|hzkgqv:,179681,,,,,,,,"14/Oct/11 9:06 AM;joe.luo;The key problem of this issue is that the TimeStampingBrokerPlugin will try to reset timestamp and expiration properties on the messages when they are moved to DLQ queue, thus causing these messages to expire which is not suppose to happen. 
",28/Oct/11 12:18 PM;garytully;fix on fuse trunk for 5.6 release,03/Nov/11 5:25 PM;davestanley;Reopen as want to see if we can get backported to 5.5.1.x,14/Nov/11 11:32 AM;garytully;fix on 5.5.x and 5.5.1 fuse branches.,,,,,,,,,,,,,,,,
Duplicate messages when using Virtual Destinations within a Network of Brokers,MB-983,12516398,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,13/Oct/11 11:04 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Oct/11 10:46 AM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-06,,,,broker,,,0,,"Incorrect number of messages are showing up on brokers within an NOB where virtualDestinations are bing applied to keep some messages local and allowing others to propogate throughout the network.

Please see testVirtualDestinationsDinamicallyIncludedBehavior3 of the modified TwoBrokerVirtualDestDinamicallyIncludedDestTest attached",,,,,,,,,,,,,,,13/Oct/11 11:18 AM;socallag;TwoBrokerVirtualDestDinamicallyIncludedDestTest.java;https://issues.jboss.org/secure/attachment/12368912/TwoBrokerVirtualDestDinamicallyIncludedDestTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkgav:,179609,,,,,,,,"17/Oct/11 10:46 AM;dbosanac;Hi,

this is also a matter of configuration.

The problem that test shows is the following:

- the message is being sent to the topic
- by the virtual topic interceptor it also being sent to the queue
- as a fix for DEV-2920, we send both of these messages over the network (which is not the best solution)
- on the remote broker, when the topic message arrives it's also sent to the queue, by virtual topic interceptor and that's why we have duplicates.

So the solution that is appropriate for this use case is to:

- statically include global.> topics
- and explicitly exclude Consumer.*.global.> queues

this will send topic messages over the network even when there are no consumers on the other brokers, and those messages will be sent to virtual topic consumers (which solves DEV-2920). But at the same time, messages will not be sent directly to virtual topic queues, so we won't have duplicates.

A bit modified test case is now in the trunk

http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/TwoBrokerVirtualDestDinamicallyIncludedDestTest.java?view=markup

and should guard this usecase.

I hope this is helpful.


Regards,
Dejan",,,,,,,,,,,,,,,,,,,
Failover issues in network connector ,MB-982,12516397,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,11/Oct/11 9:03 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,20/Oct/11 9:19 AM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-06,,,,broker,,,0,,"Using failover transport in network connector configuration allows to establish a network bridge to a master/slave broker pair. When doing so it is required to also set maxReconnectAttempts=1, so that the network bridge is reestablished correctly.
But even with maxReconnectAttempts=1 specified, the fail over is not always happening correctly.

Using the following NC configuration:

{code:title=activemq.xml}
 <networkConnector name=""test""
  uri=""static:(failover:(tcp://localhost:61616?soWriteTimeout=15000&amp;soTimeout=15000&amp;wireFormat.maxInactivityDuration=30000,
tcp://localhost:61618?soWriteTimeout=15000&amp;soTimeout=15000&amp;wireFormat.maxInactivityDuration=30000)?randomize=false&amp;maxReconnectAttempts=1)""
  dynamicOnly=""true"">
</networkConnector>
{code}

the broker initially connects to whoever is the master broker (out of the two urls). Failover happens about 3-4 times when shutting down the master broker (and having slave take over), but after a couple of times the failover starts to have problems. The bridge might not get reestablished at all or JMX reports two bridges or the bridge in JMX does not have a remote address anymore. 
Using the test supplied it typically only takes a few kills of the master broker to reproduce this problem.

",using NC setup with failover,,,,,,,,,,,,,,11/Oct/11 9:14 AM;mielket;BrokerConfig.tgz;https://issues.jboss.org/secure/attachment/12368904/BrokerConfig.tgz,17/Oct/11 2:45 PM;mielket;BrokerLogHungThread.txt;https://issues.jboss.org/secure/attachment/12368906/BrokerLogHungThread.txt,19/Oct/11 9:20 AM;mielket;BrokerLogNoReconnect-1.txt;https://issues.jboss.org/secure/attachment/12368910/BrokerLogNoReconnect-1.txt,19/Oct/11 9:06 AM;mielket;BrokerLogNoReconnect.txt;https://issues.jboss.org/secure/attachment/12368909/BrokerLogNoReconnect.txt,19/Oct/11 4:59 PM;mielket;BrokerThreadDump-3.txt;https://issues.jboss.org/secure/attachment/12368914/BrokerThreadDump-3.txt,19/Oct/11 9:20 AM;mielket;BrokerThreadDumpNoReconnect-1.txt;https://issues.jboss.org/secure/attachment/12368911/BrokerThreadDumpNoReconnect-1.txt,19/Oct/11 9:06 AM;mielket;BrokerThreadDumpNoReconnect.txt;https://issues.jboss.org/secure/attachment/12368907/BrokerThreadDumpNoReconnect.txt,17/Oct/11 11:29 AM;mielket;ReconnectLogging.txt;https://issues.jboss.org/secure/attachment/12368905/ReconnectLogging.txt,17/Oct/11 3:30 PM;mielket;threadDumpBroker.txt;https://issues.jboss.org/secure/attachment/12368908/threadDumpBroker.txt,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3542,,,,9.0,8.0,,1|hzkggv:,179636,,,,,,,,"11/Oct/11 9:14 AM;mielket;Attaching possible broker configuration that can be used to easily reproduce the problem.

- unzip files
- in three terminals start
  master broker: ./activemq console xbean:file:/path/to/activemq-master.xml
  slave broker: ./activemq console xbean:file:/path/to/activemq-slave.xml
  external broker: ./activemq console xbean:file:/path/to/activemq.xml

- external broker establishes bridge to master
- open http://localhost:8161/admin/network.jsp in browser to verify bridge is started
- kill master broker (CTRL+C in console window), wait for slave to startup, verify network bridge is re-established using browser
- restart master, who is now a slave
- continue last 3 steps a couple of times, refresh browser after each failover. Quickly the network bridge view in browser will not display expected results.

The problem is not just with the JMX view, I verified that the bridge is not getting reestablished correctly. 
","11/Oct/11 9:15 AM;mielket;Will also try to work out a JUnit test but this problem is likely easier to debug using standalone brokers.
",13/Oct/11 9:35 PM;garytully;managed to produce a junit test and found some problems: apache issue https://issues.apache.org/jira/browse/AMQ-3542,"13/Oct/11 9:42 PM;garytully;fix on 5.5.x and 5.5.1 branch, new snapshot on its way.
{{static:(failover:(a,b)?maxReconnectAttempts=0)}} now works reliably with networkconnectors. The network connector handles failures/restarts and the failover transport just chooses a url from the (a,b) list.

Note: users of {{failover:(a,b)?maxReconnectAttempts=0}} (which was the default) will need to use maxReconnectAttempts=-1 or remove that parameter. Because infinite retries was the default and is still the default, this change should have very little impact on the install base.
{{?maxReconnectAttempts=0}} is more intuitive for *no* reconnects/failover.",13/Oct/11 10:52 PM;garytully;snapshot http://ci.fusesource.com/hudson/view/%20Deploys/job/activemq-5.5.1-fuse-deploy/8/,17/Oct/11 11:29 AM;mielket;Attaching more logging from reconnect attempts.,"17/Oct/11 2:45 PM;mielket;Attaching thread dump of broker with Daemon Thread StartLocalBridge hanging plus the corresponding broker log output.
Regarding the log, the broker only tried to failover once. So the entire log output is from starting the broker to trying to failover once to hanging on the thread above. 
","20/Oct/11 9:19 AM;garytully;Two additional fixes were required, a race condition on bridge shutdown and over eager connection establishment before the bridge set its listener. Both of these are now on the 5.5.x and 5.5.1 branches and a new 5.5.1-fuse-SNAPSHOT is being deployed.
",,,,,,,,,,,,
Consumers left lingering on broker with Stomp SSL Client.,MB-981,12516396,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,10/Oct/11 10:35 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,12/Oct/11 5:49 PM,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,,,,,,0,,"In the attached script, the perl client subscribes to a queue, send a test message and expects it back. For some destination names, it works fine. For others,
the script does not receive the expected message and the broker becomes bizarre. Although the STOMP connection has ended, it reports one subscriber
to the queue. 

In JMX you can see that the consumer count stays at 1 (see attached jconsole.jpg). 

Here is the output from the script:

{code}
Susan-Javureks-MacBook-Pro-3:Stomp-0.02 sjavurek$ perl DEV-3485-ssl.pl 
DEBUG: .../IO/Socket/SSL.pm:179: set domain to 2
DEBUG: .../IO/Socket/SSL.pm:1429: new ctx 6469280
DEBUG: .../IO/Socket/SSL.pm:310: socket not yet connected
DEBUG: .../IO/Socket/SSL.pm:312: socket connected
DEBUG: .../IO/Socket/SSL.pm:325: ssl handshake not started
DEBUG: .../IO/Socket/SSL.pm:368: Net::SSLeay::connect -> 1
DEBUG: .../IO/Socket/SSL.pm:423: ssl handshake done
# Net::STOMP::Client->connect()
#  sending CONNECT frame
#   H host:127.0.0.1
#   H accept-version:1.0,1.1
#   sent 48 bytes
#   received 83 bytes
#  received CONNECTED frame
#   H session:ID:Susan-Javureks-MacBook-Pro-3.local-49176-1318284804479-5:3
# Net::STOMP::Client->subscribe()
#  sending SUBSCRIBE frame
#   H destination:/queue/test.DEV-3485
#   H id:87e7c0-4e936e50-ed9c-38ed-3
#   sent 76 bytes
#   received 0 bytes
#  sending SEND frame
#   H x-type:DEV-3485
#   H destination:/queue/test.DEV-3485
#   H x-uuid:87e7c0-4e936e50-ed9c-38ed-1
#   H receipt:87e7c0-4e936e50-ed9c-38ed-2
#   H persistent:true
#   B 0000 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0010 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0020 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0030 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0040 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0050 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0060 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0070 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0080 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 0090 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 00a0 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 00b0 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 00c0 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 00d0 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 00e0 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   B 00f0 41414141 41414141 41414141 41414141  AAAA AAAA AAAA AAAA
#   sent 1187 bytes
#   received 0 bytes
probe message not received!
# Net::STOMP::Client->disconnect()
#  sending DISCONNECT frame
#   sent 13 bytes
DEBUG: .../IO/Socket
{code}

In my broker configuration, I note that the consumer was added:

{code}

2011-10-10 18:14:40,988 | DEBUG | localhost adding consumer: ID:Susan-Javureks-MacBook-Pro-3.local-49176-1318284804479-5:3:-1:1 for destination: queue://test.DEV-3485 | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: ssl:///127.0.0.1:49188
...
2011-10-10 18:14:40,998 | DEBUG | localhost adding destination: queue://test.DEV-3485 | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: ssl:///127.0.0.1:49188
{code}

but never removed.


I also noticed a connection was left open:

tcp4      53      0  Susan-Javureks-M.61612 Susan-Javureks-M.49291 CLOSE_WAIT
tcp4       0      0  Susan-Javureks-M.61612 *.*                    LISTEN
tcp4       0      0  Susan-Javureks-M.49291 Susan-Javureks-M.61612 FIN_WAIT_2

Furthermore if I try to stop the broker, I get the slow shutdown messages:

{code}
INFO | The connection to '/127.0.0.1:65167' is taking a long time to shutdown.
 INFO | The connection to '/127.0.0.1:65167' is taking a long time to shutdown.
 INFO | The connection to '/127.0.0.1:65167' is taking a long time to shutdown.
{code}

The connection in CLOSE_WAIT is left open.  I have to kill -9 the broker. 

Backing up a step, subsequent executions of the script seem to behave normally in that I don't see any increase in the number of consumers, sockets left open and log looks good:

{code}
2011-10-10 18:23:42,989 | DEBUG | localhost removing consumer: ID:Susan-Javureks-MacBook-Pro-3.local-49176-1318284804479-5:4:-1:1 for destination: queue://test.DEV-3485 | org.apache.activemq.broker.region.AbstractRegion | ActiveMQ Transport: ssl:///127.0.0.1:49254
{code}

",,,,,,,,,,,,,,,10/Oct/11 10:43 PM;sjavurek;DEV-3485-ssl.pl;https://issues.jboss.org/secure/attachment/12368903/DEV-3485-ssl.pl,10/Oct/11 10:39 PM;sjavurek;DEV-3485-ssl.pl;https://issues.jboss.org/secure/attachment/12368899/DEV-3485-ssl.pl,10/Oct/11 10:39 PM;sjavurek;activemq.xml;https://issues.jboss.org/secure/attachment/12368898/activemq.xml,10/Oct/11 10:39 PM;sjavurek;my-ca.pem;https://issues.jboss.org/secure/attachment/12368901/my-ca.pem,,,,,,,,,,,,,,,,,,,,,,,4.0,3.0,,1|hzkga7:,179606,,,,,,,,"10/Oct/11 10:37 PM;sjavurek;To run the test case:

1. Download stomp perl library:

http://search.cpan.org/CPAN/authors/id/A/AS/ASH/Net-Stomp-0.42.tar.gz

2.  Download attached script. 
3.  Create a certs directory where the script will be run and save my-ca.pem to the directory. this is the PEM from the cert that we ship in the broker.ks. 
4.  Start broker (config attached). 
5.  Run perl script
6.  Check jconsole, logs, etc etc. 

","10/Oct/11 10:43 PM;sjavurek;A few other notes:

*  deleting the data directory clears the funky consumer issue.
*  a non-SSL client (also attached) does not cause same problem consistently

",12/Oct/11 5:49 PM;tabish121;Fix was applied in the 5.5.x and 5.5.1 branches.,,,,,,,,,,,,,,,,,
Display issue viewing queues in jmx and admin console when using Oracle DB as a backend,MB-980,12516394,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,06/Oct/11 6:58 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,07/Oct/11 11:41 AM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,5.6.0-fuse-00-00,,,,,0,,"We are using Oracle db as our backend. 

If we start with a fresh install and push some messages to the store, the queue TEST.FOO is visibile in the
webconsole and jmx.

>ant producer -Durl=tcp://localhost:61616 -Dpersistent=true -Dmax=10

Ctrl'C the broker and restart it. Note that the queue is no longer visible in jmx or the webconsole, despite there being
10 messages in the oracle store. 

Push another 10 messages and the queue is instantiated and populates the counters correctly with 20 messages enqueued.


","All platforms, admin console, Oracle 10g",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3526,,,,0.0,2.0,,1|hzkgnr:,179667,,,,,,,,"07/Oct/11 11:00 AM;garytully;issue in generic jdbc store, not oracle specific.",07/Oct/11 11:41 AM;garytully;fix on 5.5.x and 5.5.1 branch,,,,,,,,,,,,,,,,,,
NetworkConnector MBean unregistration can fail with a transport disconnect - leaving dangling mbean,MB-979,12516395,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,05/Oct/11 6:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Oct/11 1:27 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,5.6.0-fuse-00-00,,broker,,,0,,"MBeans for NetworkConnectors embed the target address, but on unregistraton due to shutdown from a transport failure, the remote address can be null, resulting in a failure to find the MBean. The mbean name should be remembered from registration rather than generated on the fly.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3523,,,,0.0,1.0,,1|hzkg8n:,179599,,,,,,,,06/Oct/11 1:27 PM;garytully;fix merged to 5.5,,,,,,,,,,,,,,,,,,,
NullPointerException in TraceBrokerPath plugin.,MB-978,12516391,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,05/Oct/11 2:27 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,05/Oct/11 11:18 PM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"Exception in thread ""BrokerService[GTIC01M01] Task-3"" java.lang.NullPointerException
at org.apache.activemq.broker.util.TraceBrokerPathPlugin.preProcessDispatch(TraceBrokerPathPlugin.java:53)
at org.apache.activemq.broker.MutableBrokerFilter.preProcessDispatch(MutableBrokerFilter.java:203)
at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:826)
at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:864)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:896)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:918)
at java.lang.Thread.run(Thread.java:735)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3524,,,,0.0,1.0,,1|hzkg7j:,179594,,,,,,,,05/Oct/11 11:18 PM;tabish121;fix applied at apache.  Will appear in a future 5.6 release,,,,,,,,,,,,,,,,,,,
 ORA-01465: invalid hex number when using Oracle backend in the latest releases,MB-977,12516393,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,04/Oct/11 9:36 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,05/Oct/11 3:10 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,,,,,,0,,"Finding the following on the VDC amq using an oracle backend for persistance.
011-10-04 13:25:00,885 | WARN | JDBC Failure: ORA-01465: invalid hex number
org.apache.activemq.store.jdbc.JDBCPersistenceAdapter 	ActiveMQ Transport: tcp:///10.102.178.24:51234
java.sql.SQLException: ORA-01465: invalid hex number

at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:439)
at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:395)
at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:802)
at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:436)
at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:186)
at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:521)
at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:205)
at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:1008)
at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1307)
at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3449)
at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3530)
at oracle.jdbc.driver.OraclePreparedStatementWrapper.executeUpdate(OraclePreparedStatementWrapper.java:1350)
at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
at org.apache.activemq.store.jdbc.adapter.BlobJDBCAdapter.doAddMessage(BlobJDBCAdapter.java:72)
at org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:104)
at org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:285)
at org.apache.activemq.store.memory.MemoryTransactionStore$1.asyncAddQueueMessage(MemoryTransactionStore.java:139)
at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:673)
at org.apache.activemq.broker.region.Queue.send(Queue.java:646)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:542)
at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:301)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
at org.apache.activemq.broker.util.TimeStampingBrokerPlugin.send(TimeStampingBrokerPlugin.java:126)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:470)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
at java.lang.Thread.run(Thread.java:619) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3289,,,,0.0,2.0,,1|hzkg7z:,179596,,,,,,,,"05/Oct/11 3:10 PM;garytully;merged mods from trunk and validated with a local oracle install. config:
{code}  <bean id=""ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""oracle.jdbc.driver.OracleDriver""/>
    <property name=""url"" value=""jdbc:oracle:thin:@localhost:1521:amq""/>
    <property name=""username"" value=""scott""/>
    <property name=""password"" value=""tiger""/>
    <property name=""maxActive"" value=""200""/>
    <property name=""poolPreparedStatements"" value=""true""/>
  </bean>
....
    <persistenceAdapter>
       <jdbcPersistenceAdapter dataSource=""#ds"">
       </jdbcPersistenceAdapter>
    </persistenceAdapter>{code}
","05/Oct/11 4:00 PM;smacey19601;We have found an issue when using Oracle that seems to have to do with mBeans:

Start 5.5.1-fuse-00-08 messages broker. 
send some messages to any queue. persistant/non-persistant. 
stop broker
start broker again. and go to localhost:8161//admin/queues.jsp or view through jconsole
now we do not see any queue that were created earlier. We haven't removed data directory. So we should see all the queues that were created earlier with persistent messages. 
This seems to be working with KahaDB. ",,,,,,,,,,,,,,,,,,
Need to backport bug fix of AMQ-2349 to Fuse ESB 5.5.x branch,MB-976,12516392,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,joe.luo,joe.luo,04/Oct/11 3:53 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,We need to backport the bug fix https://issues.apache.org/jira/browse/AMQ-2349 to Fuse MB 5.5.x branch. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2349,,,,0.0,0.0,,1|hzkg9z:,179605,,,,,,,,,,,,,,,,,,,,,,,,,,,
./activemq script cannot be started on Solaris OS 10,MB-974,12516389,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,cmoulliard,cmoulliard,29/Sep/11 7:23 PM,07/Oct/11 1:28 PM,29/Nov/16 4:15 PM,07/Oct/11 1:28 PM,5.5.1-fuse-00-06,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-02-00,5.5.0-fuse-00-xx,5.5.1-fuse-01-06,5.6.0-fuse-00-00,broker,,,0,,"Script must be changed regarding to the following remarks

1) bash does not support the following syntax ${....} but well back quotes `......`

2) whoami executable is not located in /usr/bin but in /usr/ucb directory

",,,,,,,,,,,,,,,07/Oct/11 12:45 PM;tabish121;activemq;https://issues.jboss.org/secure/attachment/12368902/activemq,06/Oct/11 9:58 PM;tabish121;activemq;https://issues.jboss.org/secure/attachment/12368900/activemq,29/Sep/11 7:25 PM;cmoulliard;activemq;https://issues.jboss.org/secure/attachment/12368897/activemq,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3527,,,,3.0,5.0,,1|hzkg9j:,179603,,,,,,,,"29/Sep/11 7:25 PM;cmoulliard;Here is an example of activemq file (coming from Fuse 5.5.1-fuse-00-06) that I modified and tested on Mac

(remark : my script has not been modified for /usr/ucb)",06/Oct/11 9:58 PM;tabish121;Here's an attempt at a fixed version,07/Oct/11 12:45 PM;tabish121;Removed some uneeded parends,07/Oct/11 1:24 PM;garytully;apache issue: https://issues.apache.org/jira/browse/AMQ-3527,07/Oct/11 1:28 PM;garytully;fix on the fuse branches,,,,,,,,,,,,,,,
Transport scheme NOT recognized: [http] in an osgi environment,MB-971,12516386,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,22/Sep/11 2:14 PM,04/Nov/11 3:39 PM,29/Nov/16 4:15 PM,04/Nov/11 3:39 PM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,broker,,,0,,"We have installed & started the activemq-optional .jar in Fuse ESB 4.4.x

{code}
[ 155] [Active     ] [            ] [       ] [   60] mvn:org.apache.activemq/activemq-optional/5.5.0-fuse-00-43
{code}

When trying to use the http transport get the following transport error:

{code}
08:56:29,125 | DEBUG | ActiveMQ Task-35 | FailoverTransport                | 160 - org.apache.activemq.activemq-core - 5.5.0.fuse-00-43 | urlList connectionList:[http://localhost:61616], from: [http://localhost:61616]
08:56:29,125 | DEBUG | ActiveMQ Task-34 | FailoverTransport                | 160 - org.apache.activemq.activemq-core - 5.5.0.fuse-00-43 | Connect fail to: http://localhost:61616, reason: java.io.IOException: Transport scheme NOT recognized: [http]
{code}
 

From Gary:

{quote}
The factory finder interface may need to be replaced in an osgi environment.

First step is to use pax-exam to have an osgi validation test in
activemq to validate simple bundle activation for activemq.
{quote}

",Fuse ESB 4.4.1.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3579,,,,0.0,3.0,,1|hzkgon:,179671,,,,,,,,"22/Sep/11 2:36 PM;garytully;There is a bundle activator[1] in activemq-core that does the right thing, it may be a case that this needs to be included in the optional bundle.
In any event, a pax-exam test is vital to validate and protect.

[1] org.apache.activemq.util.osgi.Activator",24/Oct/11 9:51 AM;garytully;this won't make 5.5.1-fuse-01-xx,"04/Nov/11 3:39 PM;dbosanac;Fixed and merged to fuse-trunk

To properly use http transport inside karaf you need to install one more feature  activemq-optional (that is now available). Here's the procedure you can use to test this, assuming you have local build of trunk-fuse branch

{code}features:addUrl mvn:org.apache.activemq/activemq-karaf/5.6-fuse-SNAPSHOT/xml/features
features:install activemq-blueprint
features:install activemq-optional
activemq:create-broker -t blueprint{code}

after this you can add 

{code}<transportConnector name=""http"" uri=""http://localhost:61614""/>{code}

to your 

{code}$KARAF_HOME/deploy/localhost-broker.xml{code}

and connect to it.

This needs to go to 5.6 as merging back would require upgrading jetty.",,,,,,,,,,,,,,,,,
Problem with static List ENDED_XA_TRANSACTION_CONTEXTS in org.apache.activemq.TransactionContext.,MB-970,12516385,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,tabish121,socallag,socallag,22/Sep/11 10:02 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,28/Sep/11 1:58 PM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-00-06,,,,,,,2,,"The user has a serious problem when deploying  in same ServiceMix bundle camel route that uses XA connection and a bundle camel route JMS connection.

The problem is due to the static List ENDED_XA_TRANSACTION_CONTEXTS in org.apache.activemq.TransactionContext.

This static list was introduce in version 5.3.0 with JIRA AMQ-2346
with the comment : I'm not thrilled with introducing a static, in an osgi environment it would be better to have a service, but it seems like the best solution in a non-osgi environment.

Now in OSGI like in ServiceMix 4, the problem is here.

Caught exception trying rollback() when putting session back into the pool, will invalidate. javax.jms.TransactionInProgressException: Cannot rollback() if an XA transaction is already in progress 
javax.jms.TransactionInProgressException: Cannot rollback() if an XA transaction is already in progress 
at org.apache.activemq.TransactionContext.rollback(TransactionContext.java:246)
at org.apache.activemq.ActiveMQSession.rollback(ActiveMQSession.java:580)
at org.apache.activemq.pool.PooledSession.close(PooledSession.java:111)
at org.springframework.jms.support.JmsUtils.closeSession(JmsUtils.java:108)
at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:477)
at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:175)
at org.apache.camel.component.jms.JmsProducer.doSend(JmsProducer.java:355)
at org.apache.camel.component.jms.JmsProducer.processInOnly(JmsProducer.java:309)
at org.apache.camel.component.jms.JmsProducer.process(JmsProducer.java:99)
at org.apache.camel.processor.UnitOfWorkProcessor.process(UnitOfWorkProcessor.java:102)
at org.apache.camel.util.AsyncProcessorHelper.process(AsyncProcessorHelper.java:91)
at org.apache.camel.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:85)
at org.apache.camel.processor.UnitOfWorkProducer.process(UnitOfWorkProducer.java:63)
at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:333)
at org.apache.camel.impl.ProducerCache$1.doInProducer(ProducerCache.java:303)
at org.apache.camel.impl.ProducerCache.doInProducer(ProducerCache.java:208)
at org.apache.camel.impl.ProducerCache.sendExchange(ProducerCache.java:303)
at org.apache.camel.impl.ProducerCache.send(ProducerCache.java:154)
at org.apache.camel.impl.DefaultProducerTemplate.send(DefaultProducerTemplate.java:110)
at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:123)
at org.apache.camel.impl.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:130)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3465,,,,0.0,2.0,,1|hzkhev:,179789,,,,,,,,27/Sep/11 2:32 PM;tabish121;Fix applied at apache with new test to validate.  ,24/Jan/12 11:41 PM;davestanley;Fix is available in 5.5.1-fuse-00-06 and later.,,,,,,,,,,,,,,,,,,
ActiveMQ's webapps based index.html file needs refinements.,MB-968,12516383,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,22/Sep/11 12:44 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Opening local jira to track issue at Apache.  The html needs a few little tweaks. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2936,,,,0.0,0.0,,1|hzkg3b:,179575,,,,,,,,,,,,,,,,,,,,,,,,,,,
DLQ from a durable subscriber filling with expired messages results in non-expired messages not being read,MB-966,12516382,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,20/Sep/11 12:37 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Nov/11 12:53 PM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,,,,,,1,,"1. connect durable subscription to  topic A
2. disconnect subscription from A
3. write a lot of messages to topic A (expiration 1 second)
4. write one message to topic A (expiration 1 day)
5. connect to topic A
6. the one message with expiration 1 day is not received

Please see attached testcase.",,,,,,,,,,,,,,,20/Sep/11 12:39 PM;socallag;DurableSubscriptionHangTestCase.java;https://issues.jboss.org/secure/attachment/12368896/DurableSubscriptionHangTestCase.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3532,,,,1.0,1.0,,1|hzkgp3:,179673,,,,,,,,"07/Nov/11 12:53 PM;dbosanac;This has already been fixed at apache trunk [https://issues.apache.org/jira/browse/AMQ-3532]. I've merged it to 5.5.x-fuse and 5.5.1-fuse branches. The snapshot to test is 20111107.123651-62 from

 http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Message counts not automatically refreshed on broker restart with persistence other than kahadb,MB-965,12516381,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,rkieley,rkieley,16/Sep/11 11:28 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Nov/11 5:52 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Originally reported via DEV-3386 as messages, topics, and queues disappearing in the web console after broker restart when using persistence but not kahadb, specifically jdbc. Further investigation showed that while the web console was incorrect immediately after restart with jdbc persistence and when the producers and consumers became active once more the topics/queues listed as well as the message counts returned to normal.

So while it appears all the topics/queues and messages have disappeared while viewing the web console after restart with jdbc persistence before the producer and consumer start again, this is actually not the case. The data is still persisted properly but the display is wrong.","OSX 10.7.1, jdk 1.6.0_26",,,,,,,,,,MB-980,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkgnj:,179666,,,,,,,,01/Nov/11 5:52 PM;davestanley;I think this issue can be closed as is a dup of MB-980.,,,,,,,,,,,,,,,,,,,
Large number of expiring messages causing QueueSize to grow.,MB-964,12516380,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,16/Sep/11 9:08 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,21/Sep/11 12:12 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-06,,,,broker,,,0,,"Using the prodicer/conmsumer test attached a short TTL is set on one group of messages, over a period of time the queueSize ( jconsole) slowly creeps up.
Similar behaviour is seen on 5.5

The broker issues sporadic WARN messages with an underlying NullPointerException.

{code}
 WARN | Failed to fire message consumed advisory null
java.lang.NullPointerException
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:497)
        at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:481)
        at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:412)
        at org.apache.activemq.advisory.AdvisoryBroker.fireAdvisory(AdvisoryBroker.java:407)
        at org.apache.activemq.advisory.AdvisoryBroker.sendToDeadLetterQueue(AdvisoryBroker.java
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:261)
        at org.apache.activemq.broker.BrokerFilter.sendToDeadLetterQueue(BrokerFilter.java:261)
        at org.apache.activemq.broker.MutableBrokerFilter.sendToDeadLetterQueue(MutableBrokerFil
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.discard(FilePendin

        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(
.java:231)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(Fil
va:192)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.addMessageLast(StoreQueueC
        at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1608)
        at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:714)
        at org.apache.activemq.broker.region.Queue.send(Queue.java:653)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:517)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.jav
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:1
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.jav
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
        at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:129)
        at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
        at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
        at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:9
        at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
        at java.lang.Thread.run(Thread.java:619)
{code}",,,,,,,,,,,,,,,16/Sep/11 9:10 AM;socallag;amqtest.zip;https://issues.jboss.org/secure/attachment/12368895/amqtest.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3507,,,,1.0,5.0,,1|hzkg4v:,179582,,,,,,,,"16/Sep/11 9:10 AM;socallag;To reproduce this behavior, start a 5.4.1-fuse-00-00 broker (with included activemq.xml) and use the amqtest..zip to start producer and consumer

mvn compile exec:java -Dexec.mainClass=com.user.test.ConsumerMain
mvn compile exec:java -Dexec.mainClass=com.user.test.ProducerMain
You also need to update the broker URL in the ConsumerMain.java file

public static final String BROKER_URL = ""failover://(tcp://localhost:61616)?randomize=false"";
Now, it should be fine running amqtest.tgz as is but when you start expiring lots of messages (like in their set up) you will eventually see the queue size start to rise. To expire lots of messages make the following change in ProducerMain.java

shortTtlTemplate.setTimeToLive(1);

It usually takes a few minutes for the WARN messages to start and the queue size to start increasing.
","19/Sep/11 3:49 PM;garytully;With the test case on trunk, I don't see any NPE, but I do see the queue count increase. So there is some problem here. ","21/Sep/11 12:11 PM;garytully;tracked down the issue and resolved via https://issues.apache.org/jira/browse/AMQ-3507
",21/Sep/11 12:12 PM;garytully;fix will be in 5.6.0-fuse,30/Sep/11 4:38 PM;garytully;merged to 5.5.1-fuse branch. Fix will make next release.,,,,,,,,,,,,,,,
Failover and SimpleDiscovery - query parameters getting dropped,MB-963,12516378,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,15/Sep/11 3:43 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,06/Oct/11 5:03 PM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-05-05,,,,broker,,,1,,"From AMQ-3222:

{quote}
Using failover with static discovery makes sense in a master slave scenario.
With simple static discovery with a pair of uri's,

<networkConnector uri=""static:(tcp://localhost:32258,tcp://localhost:32259)"" />

static discovery will continue to try and connect to both uris which leads to repeated logging of failed attempts to bridge to the slave that is not active yet.
Using failover

<networkConnector uri=""static:(failover:(tcp://localhost:32258,tcp://localhost:32259)?randomize=false&amp;maxReconnectAttempts=1)""/>

improves on this as the failover: transport will be content with just one uri, from the broker perspective there is a single network bridge, rather than two.
Currently query parameter are not correctly applied.
Query parameter parsing is problematic when options for a transport are duplicated by the discovery mechanism, e.g: maxReconnectAttempts. There have been some related efforts to resolve this, https://issues.apache.org/jira/browse/AMQ-2981 and https://issues.apache.org/jira/browse/AMQ-2598. Parameters are stripped from transport uris and applied to both the transport and the discovery mechanism.
The end result, and fix, is that additional transport options that need to be applied to discovered transport (which typically have all query parameters removed) need to be isolated from normal query parameters using a dot (prefixed with ""discovered."") notation. e.g:

discovery:(multicast://default)?initialReconnectDelay=100&discovered.closeAsync=false""

{quote}
",,,,,,,,,,,MB-723,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3222,,,,0.0,1.0,,1|hzkg93:,179601,,,,,,,,06/Oct/11 5:03 PM;garytully;release with the fix is available: http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/activemq/apache-activemq/5.4.2-fuse-05-05/,,,,,,,,,,,,,,,,,,,
Perfharness example no longer valid,MB-960,12516375,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,davestanley,davestanley,12/Sep/11 10:09 PM,29/Feb/16 4:39 AM,29/Nov/16 4:15 PM,,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,,,,,,,,0,demos,"In the perfharness-activemq.sh file within the <apache-activemq-5.5.0-fuse-00-27>\example\perfharness the following comment exists:

You can download the perfharness.jar file from:
http://www.alphaworks.ibm.com/tech/perfharness
======================================================

It looks like the perfharness.jar file is no longer available on the Alphaworks website.

(If we can locate the jar's we should create a windows .bat in addition to the existing .sh)",5.5.x branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkg2f:,179571,,,,,,,,,,,,,,,,,,,,,,,,,,,
ConduitBridge is over eager in removing conduitSubscriptions (5.3.x only),MB-958,12516374,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,09/Sep/11 1:18 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,20/Sep/11 2:35 PM,5.3.1-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-04-00,,,,,,,0,,"We have two networked brokers A and B. 

Connected to B we have two sets of 10 concurrent consumers in two separate processes connecting to the same destination on B.

On Broker A, we see a single consumer on the destination (so due to the conduitSubscription we see all 20 consumers on B represented as a single consumer on A)

If we shutdown one set of consumers, so concurrent consumers on B goes from 20 -> 10, there should still be demand on broker A. What happens in 5.3.x is that the consumer count on A goes to 0, all demand is removed.


",Occurs in the 5.3.x branch. Not reproducible in 5.4.x and 5.5.x,,,,,,,,,,,,,,09/Sep/11 1:20 AM;davestanley;conduit.patch;https://issues.jboss.org/secure/attachment/12368894/conduit.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkg2v:,179573,,,,,,,,"09/Sep/11 1:20 AM;davestanley;removeDemandSubscription() has been updated in later versions. Attaching patch that applies the same changes to the 5.3.x branch. 

In my tests it resolves the issue.",20/Sep/11 2:35 PM;garytully;release at: http://repo.fusesource.com/nexus/content/repositories/releases/org/apache/activemq/apache-activemq/5.3.1-fuse-04-00/,,,,,,,,,,,,,,,,,,
Stomp RECEIPT frame sent twice for the same msg causing error in STOMP consumer,MB-957,12516373,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,08/Sep/11 7:45 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,15/Sep/11 9:01 AM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-00-06,,,broker,,,0,,"Using a stomp client for sending/receiving msgs, the broker might send a RECEIPT frame twice to the consumer. 
This causes the stomp client to raise an error:

{noformat}
*** unexpected RECEIPT frame received: 1009345a0-4e6781c5-25c3-bae3-2
{noformat}

",Perl Stomp client ,,,,,,,,,,,,,,08/Sep/11 7:52 AM;mielket;DEV-3404.pl;https://issues.jboss.org/secure/attachment/12368893/DEV-3404.pl,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3497,,,,1.0,3.0,,1|hzkfzz:,179560,,,,,,,,"08/Sep/11 7:51 AM;mielket;In order to reproduce the problem, follow these steps:

- download and install http://search.cpan.org/~lcons/Net-STOMP-Client-1.1/
  (follow instructions in README.txt for installing)
- start AMQ using conf/activemq-stomp.xml
- run a sniffer such as tcpdump to capture all traffic to/from the stomp port
- run the script with: perl DEV-3404.pl
- wait until it reports a fatal error (might take something between a few mins and an hour)
- check what the sniffer reports

Client will raise
{noformat}
*** unexpected RECEIPT frame received: 92de750-4e6754c1-cd3-be2e-2
{noformat}

The sniffer report will show that there were two RECEIPT frames sent for the same msg id, e.g. see Description of DEV-3404. 
","14/Sep/11 10:51 AM;garytully;found issue with early delivery of a message, which precedes a receipt frame. this is broken and causes a similar client side error. Fix in https://issues.apache.org/jira/browse/AMQ-3497
This seems to be the crux of the problem, but I don't see how a receipt would be send twice, which is the original complaint. We need to validate if there is not another problem in there somewhere.",15/Sep/11 9:01 AM;garytully;fix merged.,,,,,,,,,,,,,,,,,
"ActiveMQ visualization plugin creates dot files that throw syntax errors in Windows version of Graphviz, causing them not to be able to be viewed",MB-955,12516372,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,07/Sep/11 9:30 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Hi, 

Per the [Visualization Guide | http://activemq.apache.org/visualisation.html]  [Graphviz|http://www.graphviz.org/] can be used to read the generated .dot files from ActiveMQ when using this plugin:

{code}
        <plugins>
                <connectionDotFilePlugin />
                <destinationDotFilePlugin />
        </plugins>

{code}

The .dot files generated by ActiveMQ can be opened on the Mac using Graphviz but not on Windows.  Opening the Connection file results in the following error:

{quote}
working on C:/sue/Fuse/activemq/5.5.0/apache-activemq-5.5.0-fuse-00-53/apache-activemq-5.5.0-fuse-00-53/bin/ActiveMQConnections.dot
Error: <gvedit>:3: syntax error near line 3
context: label=""ActiveMQ Broker: >>>  ID:VMSJAVUREK-1209-1315430177788-0:1""] <<< ;
Warning: <gvedit>:11: ambiguous ""-1_"" splits into two names: ""-1"" and ""_""
Warning: <gvedit>:12: ambiguous ""-1_"" splits into two names: ""-1"" and ""_""
Warning: <gvedit>:13: ambiguous ""-1_"" splits into two names: ""-1"" and ""_""
{quote}

I can work around this by editing the file and removing the ""="" in line 3, e.g.

{code}
label=""ActiveMQ Broker: ID:VMSJAVUREK-1209-1315430177788-0:1""];
{code}

The destination file out of the box works ok but not for the customer who actually has destinations configured. 

{quote}
working on Z:/VMShare/prod-895/ActiveMQDestinations.dot
Error: <gvedit>:21: syntax error near line 21
context:   queue_Root_queue_xpath -> >>>  queue_Root_queue_xpath_CM- <<< ASM-NOTF;
Warning: The use of ""subgraph temp"", line 61, without a body is deprecated.
This may cause unexpected behavior or crash the program.
Please use a single definition of the subgraph within the context of its parent graph ""ActiveMQ Destinations""
Warning: The use of ""subgraph temp"", line 101, without a body is deprecated.
This may cause unexpected behavior or crash the program.
{quote}

I'm afraid I don't see what's wrong with this one. 


Please use a single definition of the subgraph within the context of its parent graph ""ActiveMQ Destinations""

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkfun:,179536,,,,,,,,,,,,,,,,,,,,,,,,,,,
Incorrect JMX properties after consuming msgs using stomp (with TX and client ack),MB-954,12516371,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,mielket,mielket,06/Sep/11 7:55 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,15/Sep/11 9:02 AM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-00-06,,,broker,,,0,,"Attached is a little Perl stomp script that sends and receives 2 messages. When the receive is done transactional using client ack mode, the JMX properties of the broker are incorrect after the test:
EnqueueCount and DispatchCount are correct
Dequeue count is DispatchCount +1 (but should be DispatchCount)
InflightCount and QueueSize are -1 (but should be 0)

Messages get received correctly be the stomp consumer though. 
Disabling either client ack mode or transactions in the stomp consumer does not show the problem.



",Perl Stomp client,,,,,,,,,,,,,,06/Sep/11 8:01 AM;mielket;test.pl;https://issues.jboss.org/secure/attachment/12368892/test.pl,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3493,,,,1.0,3.0,,1|hzkg0f:,179562,,,,,,,,"06/Sep/11 8:01 AM;mielket;Attaching test.pl. 
To reproduce the problem follow these steps:

- Download stomp-client library from http://search.cpan.org/~lcons/Net-STOMP-Client-1.1/
- Follow README.txt of that library for installation instructions
- start AMQ broker externally using conf/activemq-stomp.xml as configuration
- connect jconsole to broker
- run the Perl script using ""perl test.pl""
- visit JMX properties of queue test.DEV-3392. It will show above property values.

The Perl script has three methods out of which only method test_TX() reproduces the problem. Running the methods test_noTX() and test_TX_autoAck() will not reproduce the problem, even though the logic is the very same. These methods only differ in the configuration of transactions and client ack mode.

",10/Sep/11 7:52 PM;tabish121;Fix committed at apache will appear in the 5.6 release,15/Sep/11 9:02 AM;garytully;fix merged.,,,,,,,,,,,,,,,,,
Stomp subscription with receipt on an existing queue hangs,MB-953,12516370,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,31/Aug/11 9:26 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Sep/11 12:10 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.6.0-fuse-00-00,,,,,,0,,"if you subscribe through stomp to an existing queue asking for receipt the connection hangs.
Instead if you subscribe to a non-existing queue asking for receipt everything work fine.

See attached file for the changes to our activemq-core/src/test/java/org/apache/activemq/transport/stomp/StompTest.java test. 

",,,,,,,,,,,,,,,31/Aug/11 9:27 PM;sjavurek;testReceiptNewQueue(1).diff;https://issues.jboss.org/secure/attachment/12368891/testReceiptNewQueue%281%29.diff,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3481,,,,1.0,2.0,,1|hzkfw7:,179543,,,,,,,,"31/Aug/11 9:27 PM;sjavurek;Dejan had a look at this already.  Here are his notes:

It looks to me that this is not related to 5.5-fuse release, but on the current trunk.

The test hangs on the trunk as there is a dead-lock introduced by stomp inactivity monitor. I'm still trying to figure it out, but that code doesn't exists on 5.5.x-fuse branch.

When run on the 5.5.x-fuse branch, the test will fail but it will not hang.

The problem is that on a subscription (when there's a message is already on the queue), the broker will in most cases send to the client message before subscription receipt. So without ""inactivity monitor"" in place that will cause the test to fail. But with inactivity monitor in place it will deadlock the broker.
","01/Sep/11 12:10 PM;dbosanac;This has been fixed now and merge to trunk-fuse branch (for 5.6.x fuse release). You can also test the latest (20110901.114116-9) snapshot from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,
Performance drop with durable subscriptions since 5.4.1,MB-951,12516368,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,26/Aug/11 2:15 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,30/Sep/11 2:15 PM,,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-11,,,,broker,,,0,,"We have a simple test case attached.  I've also created a maven file so we can run it independently against all the versions.  Basically in 5.4.1 the test case takes 4 minutes, 5.4.2 ~ 17 minutes and in latest 5.5 version well over a half hour. 

{quote}
 5.4.1-fuse-02-00
> ===================================
> Running org.apache.activemq.test.TopicWithManySelectorsTest2
> log4j:WARN No appenders could be found for logger (org.apache.activemq.transport.vm.VMTransportFactory).
> log4j:WARN Please initialize the log4j system properly.
> log4j:WARN See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.
> 00:00: main - Creating 301 clients.
> 00:08: main - Sending 20000 messages.
> 00:10: main - 20000 data items have been sent
> 04:07: cli - Received transaction size=20001 Client[id=0, matching=true]
> 04:07: cli - Ack done. Client[id=0, matching=true]
> 04:07: main - Sent data is commited
> 04:18: SIZE - max page: db-112.log, cache size: 7MB, elapsed: 03:59
> 
> 04:18: Done.
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 258.609 sec
> 
> 
> 5.4.2-fuse-04-05/
> ===================================
> 00:00: main - Creating 301 clients.
> 00:08: main - Sending 20000 messages.
> 00:10: main - 20000 data items have been sent
> 17:34: cli - Received transaction size=20001 Client[id=0, matching=true]
> 17:34: main - Sent data is commited
> 17:35: cli - Ack done. Client[id=0, matching=true]
> 17:57: SIZE - max page: db-116.log, cache size: 203MB, elapsed: 17:26
> 
> 17:57: Done.
> Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1,077.716 sec
> 
> 5.5.0-fuse-00-43/
> ===================================
> 00:00: main - Creating 301 clients.
> 00:08: main - Sending 20000 messages.
> 00:12: main - 20000 data items have been sent
> 31:33: cli - Received transaction size=20001 Client[id=0, matching=true]
> 31:33: cli - Ack done. Client[id=0, matching=true]
> 31:33: main - Sent data is commited
{quote}

Per Gary, this is a known issue already logged at Apache, AMQ-3467.",,,,,,,,,,,,,,,27/Aug/11 2:29 PM;sjavurek;TestCase.zip;https://issues.jboss.org/secure/attachment/12368890/TestCase.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3467,,,,1.0,3.0,,1|hzkgrz:,179686,,,,,,,,30/Sep/11 2:15 PM;tabish121;Merged to 5.5.1.fuse branch,"27/Oct/11 2:09 PM;tabish121;Fix from MB-875 was missing, should now be merged onto the 5.5 branches and appear in the next SNAPSHOT",28/Oct/11 3:18 PM;garytully;scheduling for next release,,,,,,,,,,,,,,,,,
The persistent Stomp header is not part of a received StompFrame message,MB-950,12516367,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,ccorsi1,ccorsi1,25/Aug/11 8:38 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,26/Aug/11 7:20 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.6.0-fuse-00-00,,,,,,0,,The persistent header is not included as part of the StompFrame message received by a consumer.,Activemq 5.5.0 and 5.4.2,,,,,,,,,,,,,,25/Aug/11 8:41 PM;ccorsi1;patch.diffs;https://issues.jboss.org/secure/attachment/12368889/patch.diffs,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3475,,,,1.0,4.0,,1|hzkfvr:,179541,,,,,,,,"25/Aug/11 8:41 PM;ccorsi1;The attach diffs contain tests and a fix that will resolve the issue of the missing persistent header from the received stomp message.

The fix was based off of 5.5.0-fuse-00-43 source code.","26/Aug/11 12:42 PM;tabish121;I think it would be sufficient to only set the persistent header if the message was indeed marked as persistent, otherwise the absence of the header should be enough to indicate that the message was not persistent and reduce the amount of headers needing to be transmitted on the wire.  ","26/Aug/11 2:18 PM;ccorsi1;Good point, I was not thinking about performance but more about completeness. ",26/Aug/11 7:20 PM;tabish121;Fix applied with small modification to not set the persistent header if the message wasn't persistent.,,,,,,,,,,,,,,,,
Numeric selectors do not work in STOMP,MB-945,12516364,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,socallag,socallag,19/Aug/11 10:41 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Aug/11 8:01 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-1942,,,,0.0,2.0,,1|hzkfrb:,179521,,,,,,,,"19/Aug/11 4:21 PM;garytully;needs a merge to 5.5.x, thx",21/Aug/11 8:01 PM;tabish121;Fix merged onto the 5.5-fuse branch,,,,,,,,,,,,,,,,,,
NullpointerException when trying to addMessage to FilePendingCursor,MB-944,12516363,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,socallag,socallag,17/Aug/11 10:50 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"This occurs in apache-activemq-5.5-fuse-20110805.150151-38, user can oonly provide execption


2011-08-15 11:08:11,529 [38.252.80:50770] ERROR FilePendingMessageCursor       - Caught an Exception adding a message: ActiveMQTextMessage {commandId = 107930, responseRequired = false, messageId = ID:gridmsg005.cern.ch-44319-1313138733399-2:4787:-1:1:107928, originalDestination = null, originalTransactionId = null, producerId = ID:gridmsg005.cern.ch-44319-1313138733399-2:4787:-1:1, destination = queue://test_gro2, transactionId = null, expiration = 1313658491526, timestamp = 1313399291526, arrival = 0, brokerInTime = 1313399291526, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = org.apache.activemq.util.ByteSequence@629ad55, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 3250, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = 
    {
    ""t_id"":""194029963xfc"",  
    ""afqn... 
    }
    } first to FilePendingMessageCursor 
java.lang.NullPointerException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.activemq.util.DataByteArrayOutputStream.write(DataByteArrayOutputStream.java:107)
	at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.looseMarshalByteSequence(BaseDataStreamMarshaller.java:631)
	at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:295)
	at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
	at org.apache.activemq.openwire.v6.ActiveMQTextMessageMarshaller.looseMarshal(ActiveMQTextMessageMarshaller.java:111)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getByteSequence(FilePendingMessageCursor.java:477)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:225)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:196)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1608)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:714)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:646)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:542)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:300)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.plugin.RestrictionBroker.send(RestrictionBroker.java:82)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
	at java.lang.Thread.run(Thread.java:619)
2011-08-15 11:08:11,539 [38.252.80:50770] WARN  Service                        - Async error occurred: java.lang.RuntimeException: java.lang.NullPointerException
java.lang.RuntimeException: java.lang.NullPointerException
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:233)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:196)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1608)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:714)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:646)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:542)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:300)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.plugin.RestrictionBroker.send(RestrictionBroker.java:82)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.NullPointerException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.activemq.util.DataByteArrayOutputStream.write(DataByteArrayOutputStream.java:107)
	at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.looseMarshalByteSequence(BaseDataStreamMarshaller.java:631)
	at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:295)
	at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
	at org.apache.activemq.openwire.v6.ActiveMQTextMessageMarshaller.looseMarshal(ActiveMQTextMessageMarshaller.java:111)
	at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:168)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getByteSequence(FilePendingMessageCursor.java:477)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:225)
	... 30 more
2011-08-15 11:08:11,548 [38.252.80:50770] WARN  ProtocolConverter              - Exception occurred processing: 
null: java.lang.RuntimeException: java.lang.NullPointerException
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkftz:,179533,,,,,,,,19/Aug/11 3:16 PM;garytully;lets see if we can get this resolved for the next 5.5.x release.,"26/Aug/11 3:13 PM;garytully;we need to get some more information on this one, I currently cannot find any code path that would lead to this (at least not on trunk).",02/Sep/11 1:44 PM;garytully;parking this one pending some new information,,,,,,,,,,,,,,,,,
Unable to create durable subscriber with JMS selector using admin console,MB-940,12516359,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,05/Aug/11 3:32 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,18/Aug/11 11:19 AM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,,,,0,,"1) Open ActiveMQ Admin Console.http://localhost:8161/admin/subscribers.jsp
3) Create durable subscriber with JMS Selector
4) Durable subscriber is created but without JMS Selector.

This works on apache-activemq-5.3.1-fuse-03-00 
but not 5.4.2 or 5.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3459,,,,0.0,1.0,,1|hzkfpb:,179512,,,,,,,,18/Aug/11 11:19 AM;dbosanac;Fixed and merged to 5.5.x-fuse branch,,,,,,,,,,,,,,,,,,,
In multiple producer / consumer scenario flow controlled consumers influence non-flow controlled consumers,MB-938,12516357,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,rkieley,rkieley,04/Aug/11 4:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,26/Aug/11 3:09 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"As per testcase located in DEV-3242;
- 3 producers, independent threads
- 3 consumers, independent threads
- 2 consumers flow controlled
===
- 3rd consumer slows, seemingly due to other 2 flow controlled consumers
","OSX 10.6.6, jdk 1.6.0_24",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkft3:,179529,,,,,,,,"11/Aug/11 10:03 AM;garytully;In the test case, all destinations eventually reach their memory limits and stop caching messages, so a dispatch needs to read from the store, which limits the rate of dispatch.
Also of note with the test case is the use of strictOrderDispatch, which means that only one of the consumers gets used. This is because it is a fast consumer, by the time we dispatch a batch of messages to it, it is ready for more and no other consumer gets a lookin. With round robin dispatch, we rotate the consumers after each message dispatch.

The memory limit of a queue is consumed by the storequeuecursor to cache message but also, as the messages are dispatched to consumers, they are still held in memory and so consume resources. This means that, for example, 5 slow consumers with a prefetch of 1k will consume 5*1*messageMarshalledSize bytes of memory usage.

The point being that the both the number of consumers and the consumer prefetch value are relevant when sizing a destination memory limit.","11/Aug/11 10:31 AM;garytully;*Some concrete advice*

For producer flow control to kick, the memory usage needs to reach 100% (be full).

Every destination memory usage shares a parent usage with all other destinations. This is the <systemUsage><memoryUsage/> entry in the broker xml.

So a destination can reach 100% through its parent by virtue of other destinations consuming memory.

By default, a destination cursor, will stop caching at 70% usage, so memory usage will stay at that level. In this way, flow control won't kick in and messages will just go to disk. 
If you increase that to 100% (destination policyEntry.cursorMemoryHighWaterMark=100), then flow control will kick in at the same time as caching stops, because the usage be full. Only when messages are consumed, will the usage drop again and new messages be enqueued.

When there are more than one destination, because of the shared parent usage and depending on the limits set, N destinations by 70% usage may fill the parent usage and cause flow control to kick in. 
(_This will effect all destinations; the sharing reflects the sharing of JVM memory and allows a broker wide systemUsage limit to reflect the JVM heap limit and avoid an OOM_)

The key point being that if you want to flow control just one destination, the systemUsage limit needs to be large enough to accommodate all memory usage such that the shared usage is not exhausted and the cursorMemoryHighWaterMark needs to be raised to 100% for just that destination.


",26/Aug/11 3:09 PM;garytully;reopen if more clarification is needed.,,,,,,,,,,,,,,,,,
Change way Broker MBean name  is generated so that port is not used.,MB-936,12516356,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,04/Aug/11 2:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,05/Aug/11 3:37 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"There have been issues with ports being recycled causing such exceptions:

DEBUG ManagedTransportConnection     - Failure reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=XXXXXX,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/X.X.X.X_52170

Recommended that we change the MBean id such that it does not include the client port number in the mbean name and instead holds it as an attribute. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3438,,,,0.0,2.0,,1|hzkflj:,179495,,,,,,,,"05/Aug/11 3:37 PM;garytully;fixed on trunk for 5.6 and 5.5 branch

new attribute on managementContext.allowRemoteAddressInMBeanNames set it to false for the stomp use case where ports cycle quite fast.",12/Aug/11 12:04 PM;garytully;reflect 5.5.x fix version,,,,,,,,,,,,,,,,,,
Cannot publish to a deleted temp-queue destination,MB-934,12516353,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,janstey,sjavurek,sjavurek,03/Aug/11 11:13 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,06/Oct/11 12:07 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-06,5.6.0-fuse-00-00,,,broker,,,0,,"Hi, 

I have a test case that demonstrates a problem with publishing to temporary queues. The test program creates a Requestor bean instance which has 2 threads - one thread publishes to a JMS topic using ProducerTemplate.sendBody. The other thread calls ProducerTemplate.requestBody to send a request over a JMS queue and wait for a response on a temp queue. A Server bean instance is created which uses an @Consume annotation to receive from the request topic and send back a response.  When this test case is run in the latest version of 4.4.0 (43), we receive errors:

{quote}
org.apache.camel.RuntimeCamelException: org.springframework.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1; 
nested exception is javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1
{quote}

This same test case works ok in 4.4.0-fuse-00-39  and 4.4.0-fuse-00-27 and also if ""testTopic.sendBody(""test"");"" in Requestor.java is commented out. (called from ""publishToTestTopic();)

Interestingly enough the customer receives slightly different message:

{code}
15:13:22,751 [Camel Thread 0 - JmsConsumer WARN {JmsMessageListenerContainer} Execution of JMS message listener failed, and no ErrorHandler has been set.
org.apache.camel.RuntimeCamelException: org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; 
nested exception is javax.jms.JMSException: The destination temp-queue://ID:mwgk-53969-1311970399608-4:1:1 does not exist.
{code}

Although the stack traces are the same.

He also noticed [AMQ-2349|https://issues.apache.org/jira/browse/AMQ-2349] has been fixed recently which added code to PooledConnection to destroy temp destinations with a PooledConnection is closed. He thinks what's happening in the test program is that both threads in the Requestor are sharing one PooledConnection. After publishToTestTopic calls sendBody, Camel calls close on the shared PooledConnection and this destroys the temp queue being used by the other thread calling requestBody.  Is this bug patched in the latest version of the broker? It looks scheduled for 5.6 and I don't see any local issue logged. 

I also noticed that I have trouble stopping the bundle when this publish to testTopic is used. Not sure if that is related or something with the test case. 

Susan

{quote}
org.apache.camel.RuntimeCamelException: org.springframework.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1; 
nested exception is javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1
	at org.apache.camel.util.ObjectHelper.wrapRuntimeCamelException(ObjectHelper.java:1139)[77:org.apache.camel.camel-core:2.7.1.fuse-00-43]
	at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:149)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:560)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:498)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:467)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:325)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:263)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1058)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1050)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:947)[92:org.springframework.jms:3.0.5.RELEASE]
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)[:1.6.0_26]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)[:1.6.0_26]
	at java.lang.Thread.run(Thread.java:680)[:1.6.0_26]
Caused by: org.springframework.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1; 
nested exception is javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1
	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:285)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:168)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:469)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.send(JmsConfiguration.java:180)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.apache.camel.component.jms.EndpointMessageListener.sendReply(EndpointMessageListener.java:287)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:141)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	... 11 more
Caused by: javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:Susan-Javureks-MacBook-Pro-3.local-53913-1312367409119-6:1:1
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1696)[49:org.apache.activemq.activemq-core:5.5.0.fuse-00-43]
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)[49:org.apache.activemq.activemq-core:5.5.0.fuse-00-43]
	at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:74)[45:org.apache.activemq.activemq-pool:5.5.0.fuse-00-43]
	at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:59)[45:org.apache.activemq.activemq-pool:5.5.0.fuse-00-43]
	at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:592)[92:org.springframework.jms:3.0.5.RELEASE]
	at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.doSend(JmsConfiguration.java:257)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.doSendToDestination(JmsConfiguration.java:197)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate.access$100(JmsConfiguration.java:139)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.apache.camel.component.jms.JmsConfiguration$CamelJmsTemplate$4.doInJms(JmsConfiguration.java:182)[91:org.apache.camel.camel-jms:2.7.1.fuse-00-43]
	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:466)[92:org.springframework.jms:3.0.5.RELEASE]
	... 14 more

{quote}",,,,,,,,,,,,,,,03/Aug/11 11:21 AM;sjavurek;camel.test.zip;https://issues.jboss.org/secure/attachment/12368887/camel.test.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3457,,,,1.0,8.0,,1|hzkjev:,180113,,,,,,,,"03/Aug/11 11:15 AM;sjavurek;Attaching test case.  To run:

1. mvn clean install
2. Have broker default broker running in servicemix
3.  osgi:install mvn:com.fusesource/camel.test/1.0-SNAPSHOT
4. start <bundle>","04/Oct/11 12:20 PM;mielket;Reopening this bug as it still shows up in FUSE ESB 4.4.1-fuse-00-08 which internally uses AMQ 5.5.1-fuse-00-08 using the test case attached to this JIRA.

","05/Oct/11 5:43 PM;janstey;Just committed another fix for this in AMQ-3457 at Apache. It is merged internally to:

http://fusesource.com/forge/git/activemq.git/?p=activemq.git;a=commit;h=1b2cb2d964e4428b50e97029fe721294ecc547d8
http://fusesource.com/forge/git/activemq.git/?p=activemq.git;a=commit;h=10b3fa9cefbb4e3779a1c9cd8eef3234d6ab941c
http://fusesource.com/forge/git/activemq.git/?p=activemq.git;a=commit;h=1971783fbbba572c0182a0419b46afb68e462b71

A SNAPSHOT build that includes this fix is scheduled here http://ci.fusesource.com/hudson/job/activemq-5.5.1-fuse-deploy/1/
","05/Oct/11 5:54 PM;janstey;Just double checked the test case attached to this JIRA in ESB 4.4.1-fuse-00-08 with latest MB 5.5.1 SNAPSHOT and it worked. Basically just overwrote the jar... wouldn't recommend doing this in production of course, it would be best to wait until next release.

{code}
wget http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/activemq-core/5.5.1-fuse-SNAPSHOT/activemq-core-5.5.1-fuse-20111005.174150-1.jar
cp activemq-core-5.5.1-fuse-20111005.174150-1.jar system/org/apache/activemq/activemq-core/5.5.1-fuse-00-08/activemq-core-5.5.1-fuse-00-08.jar
{code}","06/Oct/11 8:04 AM;mielket;I tested this latest snapshot build of activemq-core.jar and it did work initially (on existing SMX data/ folder).
However when 
- deleted the data folder, 
- started ServiceMix
- redeployed the demo
- started the bundle

I then notice the following ex in servicemix.log file:

{noformat}
Caused by: java.lang.NoSuchMethodError: org.apache.kahadb.index.ListIndex.<init>(Lorg/apache/kahadb/page/PageFile;Lorg/apache/kahadb/page/Page;)V
	at org.apache.activemq.store.kahadb.MessageDatabase.loadStoredDestination(MessageDatabase.java:1689)
	at org.apache.activemq.store.kahadb.MessageDatabase.getStoredDestination(MessageDatabase.java:1651)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore$1.execute(KahaDBStore.java:724)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:758)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.getAllSubscriptions(KahaDBStore.java:722)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.<init>(KahaDBStore.java:639)
	at org.apache.activemq.store.kahadb.KahaDBStore.createTopicMessageStore(KahaDBStore.java:887)
	at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.createTopicMessageStore(KahaDBPersistenceAdapter.java:98)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:97)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:487)
	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createDestination(ManagedTopicRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:125)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:304)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:145)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:145)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:520)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.send(ManagedRegionBroker.java:301)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:306)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:470)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:318)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)[49:org.apache.activemq.activemq-core:5.5.1.fuse-SNAPSHOT]
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:223)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:205)
	... 1 more

{noformat}

Looks like this new jar does not work well with the 5.5.1-fuse-00-08 kahadb jar.
For a test I 
- stopped ServiceMix
- downloaded http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/kahadb/5.5.1-fuse-SNAPSHOT/kahadb-5.5.1-fuse-20111005.174150-1.jar
- copied that jar into $KARAF_HOME/system/org/apache/activemq/kahadb/5.5.1-fuse-00-08/kahadb-5.5.1-fuse-00-08.jar
- deleted the data/ folder of ServiceMix
- restarted ServiceMix
- osgi:install mvn:com.fusesource/camel.test/1.0-SNAPSHOT
- start <bundle>

and the NoSuchMethodError was gone as well as the original ""Cannot publish to a deleted Destination: temp-queue"" error. 
Jon, can you please confirm that copying the kahadb jar file is necessary as well and serves as a solution?
Obviously not a solution for a production system.


","06/Oct/11 9:01 AM;mielket;Sorry, need to reopen this ticket until we have clarification on last comment.","06/Oct/11 10:15 AM;janstey;Yeah, sure copying the single jar was just for testing purposes. Since this is a new build of ActiveMQ with other changes too, ideally all of the ActiveMQ libs would be upgraded. It seems core + kahadb works for this particular instance but again, we should probably upgrade everything if this is going to be used as-is.

Cheers,
Jon","27/Aug/12 1:15 PM;garytully;watchTopicAdvisories on a connection has local effect. It means that a connection will not be aware of temp destinations created elsewhere.
According to jms there should be an exception ""cannot publish to a deleted destination"" if you try and use a temp that has been deleted.
Without listening/watching the advisory messages a connection cannot know without a round trip to the broker and getting back a broker exception.
So the down side is the exception is different and there is a round trip to the broker to get it. It cannot be caught early and reported in the client.",,,,,,,,,,,,
KahaDB  LOG_SLOW_ACCESS_TIME default has changed from 500ms to 0ms,MB-933,12516352,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,03/Aug/11 10:10 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,12/Aug/11 3:36 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"We need to either update the documentation or change the code to reflect the stated default of 500ms

http://activemq.apache.org/kahadb.html

We can set a property -Dorg.apache.activemq.store.kahadb.LOG_SLOW_ACCESS_TIME=1500 - if this is not set, a default is used (500ms). Since upgrading from 5.3, no warnings have been logged here.
inside org.apache.activemq.store.kahadb.MessageDatabase:
Line 90: public static final int LOG_SLOW_ACCESS_TIME = Integer.parseInt(System.getProperty(""org.apache.activemq.store.kahadb.LOG_SLOW_ACCESS_TIME"", ""0""));
0 being the default if the property is not set.

Lines 737 / 785 : if ((LOG_SLOW_ACCESS_TIME > 0) && (end - start > LOG_SLOW_ACCESS_TIME)).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkflr:,179496,,,,,,,,"12/Aug/11 3:36 PM;garytully;updated the documentation.

These log messages were really a developer aid, bit I guess they can help identify abnormal runtime behavior in the field.

https://cwiki.apache.org/confluence/display/ACTIVEMQ/KahaDB",,,,,,,,,,,,,,,,,,,
activemq-web: SessionPool.returnSession() should discard sessions that are closed. ,MB-932,12516350,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,01/Aug/11 10:45 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,24/Aug/11 9:50 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"In activemq.web project, SessionPool.returnSession() does not check if the session is still open. As long as the session isn't null, its returned back to the pool.
At least one customer reported a problem when using the web console for browsing a queue, where the session was already closed. 

{noformat}
javax.jms.IllegalStateException: The Session is closed
at org.apache.activemq.ActiveMQSession.checkClosed(ActiveMQSession.java:722)
at org.apache.activemq.ActiveMQSession.createQueue(ActiveMQSession.java:1141)
at org.apache.activemq.web.QueueBrowseQuery.getQueue(QueueBrowseQuery.java:65)
at org.apache.activemq.web.QueueBrowseQuery.createBrowser(QueueBrowseQuery.java:91)
at org.apache.activemq.web.QueueBrowseQuery.getBrowser(QueueBrowseQuery.java:54)
at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at javax.el.BeanELResolver.getValue(BeanELResolver.java:62)
...
{noformat}

Not sure what triggered the closure of the session, however once it is closed it should not be returned to the pool but be discarded. If its not discarded, then the pool will always return the closed session and any invocations on the session return an exception. Restarting the broker is the only remedy.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3430,,,,0.0,2.0,,1|hzkfsf:,179526,,,,,,,,04/Aug/11 10:27 AM;mielket;Fixed at Apache.,24/Aug/11 9:50 AM;dbosanac;This has already merged to 5.5.x-fuse branch (and will be available in the next release),,,,,,,,,,,,,,,,,,
Web console shows incorrect number of messages for topic,MB-931,12516351,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,rkieley,rkieley,29/Jul/11 5:42 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,09/Aug/11 5:29 PM,5.4.2-fuse-00-00,5.4.2-fuse-02-00,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"Creating a Topic, producing 100 messages to it, starting a consumer that consumes 50 then stops, then when started again and consumes the other 50, leaves the web console showing 100 messages still enqueued when in reality there are none. Original report of issue in DEV-3296, see there for modified example/build.xml file to reproduce the problem.","OSX 10.6.6, JDK 1.6.0_24, activemq 5.5.0-fuse-00-27, 5.4.2-fuse-02-00, and 5.4.2-fuse-00-00",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3442,,,,0.0,4.0,,1|hzkfpj:,179513,,,,,,,,05/Aug/11 3:15 PM;garytully;do you see the same behavior with jconsole?,"08/Aug/11 6:30 PM;garytully;This issue seems to be just related to the counters. 
The enqueueCount for a topic is the number of messages sent to that topic but it is not decremented by consumers, it is increment only. It should be 100. The dequeueCount is always 0 for a topic, because it will quickly exceed the enqueueCount when there are more than one topic subscription.

The inflight count is broken with durable subscriptions when keepDurableSubsActive (default true) is enabled. I will fix this, such that inflight count is decremented when the durable sub goes offline.

The visibility of an offline durable sub can also be improved, the current name ""false"" is not intuitive. I will fix that also and reuse the subscriptionKey. With keepDurableSubsActive, the subscription is still active so the enqueues/dequeues for that subscription MBean will be correct.","09/Aug/11 5:29 PM;garytully;have implemented some improvements on the inflight count and mbean name for an inactive durable sub. I found one case where a durable subscription could not retrieve all messages. It required the broker attribute: keepDurableSubsActive=false (which is not the default). Added a test and a fix in https://issues.apache.org/jira/browse/AMQ-3442

The dequeueCounter is still 0 for a topic and the enqueueCounter reflects messages sent to a topic. Inflight is now updated when a durable deactivates.",18/Aug/11 3:25 PM;garytully;merged to 5.5.x,,,,,,,,,,,,,,,,
Some brokers connections  cannot be killed (via JMX) results in a hang,MB-929,12516349,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,28/Jul/11 10:19 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Aug/11 3:35 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,,,,0,,"Notes from Gary:

{quote}
That is a bug, stop is being called from start and the stop is
returning in error as it thinks it is starting.

fix: org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:920)
needs to set starting=false
{quote}

Here is the relevant bit of the stack trace:
{code}

INFO   | jvm 1    | 2011/07/25 13:42:01 | ""ActiveMQ Task-19014"" daemon
prio=10 tid=0x0000000047916000 nid=0x5a48 waiting on condition
[0x000000004e32b000]
INFO   | jvm 1    | 2011/07/25 13:42:01 |    java.lang.Thread.State:
TIMED_WAITING (parking)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
sun.misc.Unsafe.park(Native Method)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	- parking to wait for
<0x00002aaab557eee8> (a java.util.concurrent.CountDownLatch$Sync)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:198)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(AbstractQueuedSynchronizer.java:947)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1239)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
java.util.concurrent.CountDownLatch.await(CountDownLatch.java:253)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:936)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:920)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:217)
INFO   | jvm 1    | 2011/07/25 13:42:01 | 	at
java.lang.Thread.run(Thread.java:619)
{code}

Additional comments:

{quote}
one other thought, seems like a connection that is just starting is
being killed and this causes a hang.

but maybe it is possible to be more selective via jmx and only kill
the ones that are zombie.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3435,,,,0.0,4.0,,1|hzki13:,179890,,,,,,,,"03/Aug/11 9:49 AM;garytully;saw this occur with the stomp test, so it is not just related to a stop call via jmx, it can happen through an immediate abortive close.",03/Aug/11 9:58 AM;garytully;linking to amq issue https://issues.apache.org/jira/browse/AMQ-3435,"03/Aug/11 3:35 PM;garytully;There is a 5.6-SNAPSHOT with the fix for this: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-fuse-SNAPSHOT/apache-activemq-5.6-fuse-20110803.145933-4-bin.tar.gz

",11/Aug/11 11:10 AM;garytully;merged to 5.5,,,,,,,,,,,,,,,,
"""Number of Pending Messages"" column will incorrectly show 1000",MB-928,12516346,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,dilyin,dilyin,27/Jul/11 4:01 PM,27/Jul/11 4:01 PM,29/Nov/16 4:15 PM,27/Jul/11 4:01 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Once in a while ""Number of Pending Messages"" column will incorrectly show 1000 and that number will not change unless we restart AcitiveMQ server.",T6320 running Solaris10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkfin:,179482,,,,,,,,27/Jul/11 4:01 PM;ccorsi1;Wrong clasification....,,,,,,,,,,,,,,,,,,,
Change Transport Failed message from INFO to WARN level,MB-927,12516347,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,garytully,socallag,socallag,27/Jul/11 9:44 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,15/Sep/11 9:00 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-00-06,,,,,,0,,"2011-07-13 11:46:00,340 [2.179.220:52512] INFO  Transport                      - Transport failed: javax.net.ssl.SSLHandshakeException: sun.security.validator.ValidatorException: PKIX path validation failed: java.security.cert.CertPathValidatorException: timestamp check failed",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3499,,,,0.0,1.0,,1|hzkfxb:,179548,,,,,,,,15/Sep/11 9:00 AM;garytully;fix merged to 5.5.x and 5.5.1,,,,,,,,,,,,,,,,,,,
Broker may deadlock when creating queues under load,MB-926,12516345,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,rkieley,rkieley,26/Jul/11 1:32 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Aug/11 3:00 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"Broker deadlocks during queue creation under load, possibly related to MB-925. See attached JConsole deadlock shots of the three ActiveMQ NIO threads deadlocked.
","activemq-5.5.0-fuse-00-43, OSX 10.6.6, jdk 1.6.0_24",,,,,,,,,,MB-925,,,,26/Jul/11 1:36 PM;rkieley;Screen shot 2011-07-26 at 10.36.49 AM.png;https://issues.jboss.org/secure/attachment/12368882/Screen+shot+2011-07-26+at+10.36.49+AM.png,26/Jul/11 1:36 PM;rkieley;Screen shot 2011-07-26 at 10.37.02 AM.png;https://issues.jboss.org/secure/attachment/12368883/Screen+shot+2011-07-26+at+10.37.02+AM.png,26/Jul/11 1:36 PM;rkieley;Screen shot 2011-07-26 at 10.37.13 AM.png;https://issues.jboss.org/secure/attachment/12368885/Screen+shot+2011-07-26+at+10.37.13+AM.png,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3197,,,,3.0,2.0,,1|hzkfpz:,179515,,,,,,,,26/Jul/11 1:36 PM;rkieley;Deadlock shots from JConsole.,17/Aug/11 3:00 PM;garytully;fixed and merged to fuse trunk and 5.5.x,,,,,,,,,,,,,,,,,,
Broker may deadlock when using subscriber with wildcard destinations.,MB-925,12516344,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,mielket,mielket,21/Jul/11 3:36 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,05/Sep/11 10:28 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,,,,broker,,,0,,"Provided is a JUnit testcase that makes the embedded broker deadlock. 
It creates a consumer thread that consumes from a number of destinations using wildcards. 
A producer thread tries to send to a couple of destinations that match the wildcard selection in the consumer. 

The test will cause a deadlock in the broker immediately. 

",5.5.0-fuse-00-43,,,,,,,,,,,,,,25/Jul/11 12:00 PM;mielket;dispatcher-consumer-test.tgz;https://issues.jboss.org/secure/attachment/12368880/dispatcher-consumer-test.tgz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkfuf:,179535,,,,,,,,"21/Jul/11 3:43 PM;mielket;Using jconsole to detect the dead lock and Eclipse to get a stack trace, these threads cause the deadlock:

Daemon Thread [ActiveMQ NIO Worker] (Suspended)	
	{color:red}owns: org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor  (id=188){color}
	owns: org.apache.activemq.transport.InactivityMonitor$1  (id=212)	
	{color:red}waiting for: java.lang.Object  (id=189){color}	
	org.apache.activemq.broker.jmx.ManagedQueueRegion(org.apache.activemq.broker.region.AbstractRegion).getDestinations(org.apache.activemq.command.ActiveMQDestination) line: 231	
	org.apache.activemq.broker.jmx.ManagedRegionBroker(org.apache.activemq.broker.region.RegionBroker).getDestinations(org.apache.activemq.command.ActiveMQDestination) line: 145	
	org.apache.activemq.broker.region.virtual.VirtualTopic.create(org.apache.activemq.broker.Broker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination) line: 56	
	org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.create(org.apache.activemq.broker.Broker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination) line: 68	
	org.apache.activemq.broker.region.CompositeDestinationInterceptor.create(org.apache.activemq.broker.Broker, org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination) line: 52	
	org.apache.activemq.broker.jmx.ManagedRegionBroker(org.apache.activemq.broker.region.RegionBroker).addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 450	
	org.apache.activemq.broker.jmx.ManagedRegionBroker.addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 247	
	org.apache.activemq.advisory.AdvisoryBroker(org.apache.activemq.broker.BrokerFilter).addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 89	
	org.apache.activemq.advisory.AdvisoryBroker.addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 79	
	org.apache.activemq.broker.CompositeDestinationBroker(org.apache.activemq.broker.BrokerFilter).addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 89	
	org.apache.activemq.broker.TransactionBroker(org.apache.activemq.broker.BrokerFilter).addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 89	
	org.apache.activemq.broker.BrokerService$3(org.apache.activemq.broker.MutableBrokerFilter).addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) line: 95	
	org.apache.activemq.broker.jmx.ManagedTransportConnection(org.apache.activemq.broker.TransportConnection).processAddConsumer(org.apache.activemq.command.ConsumerInfo) line: 556	
	org.apache.activemq.command.ConsumerInfo.visit(org.apache.activemq.state.CommandVisitor) line: 349	
	org.apache.activemq.broker.jmx.ManagedTransportConnection(org.apache.activemq.broker.TransportConnection).service(org.apache.activemq.command.Command) line: 316	
	org.apache.activemq.broker.TransportConnection$1.onCommand(java.lang.Object) line: 180	
	org.apache.activemq.transport.MutexTransport(org.apache.activemq.transport.TransportFilter).onCommand(java.lang.Object) line: 69	
	org.apache.activemq.transport.WireFormatNegotiator.onCommand(java.lang.Object) line: 113	
	org.apache.activemq.transport.InactivityMonitor.onCommand(java.lang.Object) line: 227	
	org.apache.activemq.transport.nio.NIOTransport(org.apache.activemq.transport.TransportSupport).doConsume(java.lang.Object) line: 83	
	org.apache.activemq.transport.nio.NIOTransport.serviceRead() line: 138	
	org.apache.activemq.transport.nio.NIOTransport.access$000(org.apache.activemq.transport.nio.NIOTransport) line: 45	
	org.apache.activemq.transport.nio.NIOTransport$1.onSelect(org.apache.activemq.transport.nio.SelectorSelection) line: 69	
	org.apache.activemq.transport.nio.SelectorSelection.onSelect() line: 94	
	org.apache.activemq.transport.nio.SelectorWorker$1.run() line: 119	
	java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) line: 886	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 908	
	java.lang.Thread.run() line: 680	


and

Daemon Thread [ActiveMQ NIO Worker] (Suspended)	
	{color:red}owns: java.lang.Object  (id=189){color}	
	owns: org.apache.activemq.transport.InactivityMonitor$1  (id=190)	
	{color:red}waiting for: org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor  (id=188){color}
	org.apache.activemq.broker.region.virtual.VirtualDestinationInterceptor.intercept(org.apache.activemq.broker.region.Destination) line: 47	
	org.apache.activemq.broker.region.CompositeDestinationInterceptor.intercept(org.apache.activemq.broker.region.Destination) line: 38	
	org.apache.activemq.broker.jmx.ManagedQueueRegion(org.apache.activemq.broker.region.AbstractRegion).addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 129	
	org.apache.activemq.broker.jmx.ManagedRegionBroker(org.apache.activemq.broker.region.RegionBroker).addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 301	
	org.apache.activemq.advisory.AdvisoryBroker(org.apache.activemq.broker.BrokerFilter).addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 145	
	org.apache.activemq.advisory.AdvisoryBroker.addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 145	
	org.apache.activemq.broker.CompositeDestinationBroker(org.apache.activemq.broker.BrokerFilter).addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 145	
	org.apache.activemq.broker.TransactionBroker(org.apache.activemq.broker.BrokerFilter).addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 145	
	org.apache.activemq.broker.BrokerService$3(org.apache.activemq.broker.MutableBrokerFilter).addDestination(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ActiveMQDestination, boolean) line: 151	
	org.apache.activemq.broker.jmx.ManagedRegionBroker(org.apache.activemq.broker.region.RegionBroker).send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) line: 520	
	org.apache.activemq.broker.jmx.ManagedRegionBroker.send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) line: 300	
	org.apache.activemq.advisory.AdvisoryBroker(org.apache.activemq.broker.BrokerFilter).send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) line: 129	
	org.apache.activemq.broker.CompositeDestinationBroker.send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) line: 96	
	org.apache.activemq.broker.TransactionBroker.send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) line: 304	
	org.apache.activemq.broker.BrokerService$3(org.apache.activemq.broker.MutableBrokerFilter).send(org.apache.activemq.broker.ProducerBrokerExchange, org.apache.activemq.command.Message) line: 135	
	org.apache.activemq.broker.jmx.ManagedTransportConnection(org.apache.activemq.broker.TransportConnection).processMessage(org.apache.activemq.command.Message) line: 468	
	org.apache.activemq.command.ActiveMQTextMessage(org.apache.activemq.command.ActiveMQMessage).visit(org.apache.activemq.state.CommandVisitor) line: 681	
	org.apache.activemq.broker.jmx.ManagedTransportConnection(org.apache.activemq.broker.TransportConnection).service(org.apache.activemq.command.Command) line: 316	
	org.apache.activemq.broker.TransportConnection$1.onCommand(java.lang.Object) line: 180	
	org.apache.activemq.transport.MutexTransport(org.apache.activemq.transport.TransportFilter).onCommand(java.lang.Object) line: 69	
	org.apache.activemq.transport.WireFormatNegotiator.onCommand(java.lang.Object) line: 113	
	org.apache.activemq.transport.InactivityMonitor.onCommand(java.lang.Object) line: 227	
	org.apache.activemq.transport.nio.NIOTransport(org.apache.activemq.transport.TransportSupport).doConsume(java.lang.Object) line: 83	
	org.apache.activemq.transport.nio.NIOTransport.serviceRead() line: 138	
	org.apache.activemq.transport.nio.NIOTransport.access$000(org.apache.activemq.transport.nio.NIOTransport) line: 45	
	org.apache.activemq.transport.nio.NIOTransport$1.onSelect(org.apache.activemq.transport.nio.SelectorSelection) line: 69	
	org.apache.activemq.transport.nio.SelectorSelection.onSelect() line: 94	
	org.apache.activemq.transport.nio.SelectorWorker$1.run() line: 119	
	java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) line: 886	
	java.util.concurrent.ThreadPoolExecutor$Worker.run() line: 908	
	java.lang.Thread.run() line: 680	

",21/Jul/11 3:54 PM;mielket;This is related to [AMQ-3197|https://issues.apache.org/jira/browse/AMQ-3197].,25/Jul/11 12:00 PM;mielket;Attaching public test case dispatcher-consumer-test.tgz with grant to be used by Apache. ,,,,,,,,,,,,,,,,,
Negative QueueSize  in jconsole after purging queue with active consumer,MB-924,12516343,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,socallag,socallag,20/Jul/11 11:41 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Tested against apache-activemq-5.5.0-fuse-00-43

>ant producer -Ddurable=true -Dmax=10000 -DsleepTime=100
>ant consumer -Ddurable=true -Dmax=10000 -DsleepTime=1000

Kill the produser.

From http://localhost:8161/console/admin/#org.apache.activemq:BrokerName=localhost,Type=Queue,Destination=TEST.FOO/3 Purge the queue.

Consumer will keep running and QueueSize will go negative

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-1940,,,,0.0,0.0,,1|hzkiiv:,179970,,,,,,,,,,,,,,,,,,,,,,,,,,,
Implement eviction strategy based on property value uniqueness,MB-923,12516342,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,18/Jul/11 11:17 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,11/Aug/11 11:30 AM,5.5.0-fuse-00-53,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,,,,,,,0,,"Fixed by Dejan, opened fro tracking and release purposes.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3379,,,,0.0,1.0,,1|hzkfl3:,179493,,,,,,,,11/Aug/11 11:30 AM;garytully;merged into 5.5 branch.,,,,,,,,,,,,,,,,,,,
Broker restart fails with java.io.OptionalDataException when trying to recover ProducerAudit LRUCache,MB-922,12516341,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,mielket,mielket,13/Jul/11 1:20 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,12/Aug/11 3:56 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"Using a JUnit test where the broker is restarted continuously (in a graceful manner), it may happen that while trying to restart KahaDB and recovering the producer audit a java.io.OptionalDataException is being raised while trying to load the LRUCache. 

This prevents the broker from starting up correctly. As part of dealing with this exception, the broker will shut down.
",5.5.0-fuse-00-35,,,,,,,,,,,,,,13/Jul/11 1:22 PM;mielket;stack_trace.txt;https://issues.jboss.org/secure/attachment/12368881/stack_trace.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3422,,,,1.0,3.0,,1|hzkfmv:,179501,,,,,,,,"13/Jul/11 1:22 PM;mielket;Full stack trace of the thread just before the exception is being thrown is attached in stack:trace.txt (thx to Eclipse). 

","13/Jul/11 1:24 PM;mielket;Stack trace of the exception as logged inside the broker:

{noformat}
Exception message: null
Trace: java.io.OptionalDataException
at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1348)
at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350)
at java.util.HashMap.readObject(HashMap.java:1029)
at sun.reflect.GeneratedMethodAccessor69.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at java.io.ObjectStreamClass.invokeReadObject(ObjectStreamClass.java:974)
at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1848)
at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
at java.io.ObjectInputStream.defaultReadFields(ObjectInputStream.java:1946)
at java.io.ObjectInputStream.readSerialData(ObjectInputStream.java:1870)
at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1752)
at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1328)
at java.io.ObjectInputStream.readObject(ObjectInputStream.java:350)
at org.apache.activemq.store.kahadb.MessageDatabase.recoverProducerAudit(MessageDatabase.java:521)
at org.apache.activemq.store.kahadb.MessageDatabase.recover(MessageDatabase.java:457)
at org.apache.activemq.store.kahadb.MessageDatabase.open(MessageDatabase.java:329)
at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:376)
at org.apache.activemq.store.kahadb.MessageDatabase.doStart(MessageDatabase.java:225)
at org.apache.activemq.store.kahadb.KahaDBStore.doStart(KahaDBStore.java:173)
at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:54)
at org.apache.activemq.store.kahadb.KahaDBPersistenceAdapter.start(KahaDBPersistenceAdapter.java:186)
at org.apache.activemq.broker.BrokerService.start(BrokerService.java:490)
...
{noformat}
",12/Aug/11 3:56 PM;garytully;fix on 5.5.x branch,,,,,,,,,,,,,,,,,
staticallyIncludedDestinations should always be forwarded,MB-919,12516338,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,04/Jul/11 1:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Jul/11 9:15 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"Even if the ""parent"" destination has been excluded",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3382,,,,0.0,1.0,,1|hzkffr:,179469,,,,,,,,"07/Jul/11 9:15 AM;dbosanac;Merged into the 5.5.x-fuse branch and available in the latest snapshot (20110705.164113-35) from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Connections web console page shows two rows per connection (one empty),MB-918,12516337,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,04/Jul/11 1:17 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Jul/11 9:14 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3381,,,,0.0,1.0,,1|hzkffb:,179467,,,,,,,,"07/Jul/11 9:14 AM;dbosanac;Merged into the 5.5.x-fuse branch and available in the latest snapshot (20110705.164113-35) from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Implement eviction strategy based on property value uniqueness,MB-917,12516336,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,04/Jul/11 1:16 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Jul/11 9:14 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"For a topic subscriber which is sensitive on a message property, we'd want to keep only the last message for every property value and discard the older ones.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3379,,,,0.0,1.0,,1|hzkff3:,179466,,,,,,,,"07/Jul/11 9:14 AM;dbosanac;Merged into the 5.5.x-fuse branch and available in the latest snapshot (20110705.164113-35) from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Expose isSlowConsumer for SubscriptionView,MB-916,12516335,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,04/Jul/11 1:14 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Jul/11 9:14 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3378,,,,0.0,1.0,,1|hzkfen:,179464,,,,,,,,"07/Jul/11 9:14 AM;dbosanac;Merged into the 5.5.x-fuse branch and available in the latest snapshot (20110705.164113-35) from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Investigate scalability of JDBC topic store w.r.t durable subs..,MB-915,12516334,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,01/Jul/11 2:08 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,22/Jul/11 3:34 PM,,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,broker,,,0,,"User is performance testing ActiveMQ as part of an evaluation. They need to be able to publish 3 10KB messages per second to 100 durable subscribers. In their environment, they can get 3 msg per sec with 10 durable subscribers, but throughput drops to under 1 msg per sec with 100 durable subscribers.

We need to do some profiling to determine the bottle neck and ensure that the scalability limits are pushed to the back end DB.",,,,,,,,,,DEV-3251,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3397,,,,0.0,2.0,,1|hzkfi7:,179480,,,,,,,,01/Jul/11 2:15 PM;garytully;link to original issue. this needs an MB issue.,"08/Jul/11 2:44 PM;garytully;https://issues.apache.org/jira/browse/AMQ-3397: Improve scalability of active durable subs with JDBC message store. Cache topic message sequence ids to avoid each ack going to the store twice, boost through put for active durable subs; 100 subs, 550->2200 for 2min test with mysql",,,,,,,,,,,,,,,,,,
Activemq not stopping via jmx on aix platform,MB-914,12516333,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,davestanley,davestanley,30/Jun/11 9:26 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Aug/11 10:12 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"When using the ""activemq stop"" command on AIX am seeing:

{code}
Connecting to pid: 1028206
Failed to execute main task. Reason: java.lang.UnsatisfiedLinkError: sun/misc/Perf.registerNatives()V
.............................
INFO: Regular shutdown not successful,  sending SIGKILL to process with pid '1028206'
{code}

The problem seems to be related to the stop() command having a dependency on ""sun.management.ConnectorAddressLink"". Its trying to determine the jmx url from the pid using the above class, but its not available on the aix jdk..

Regards
/Dave

",AIX,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2464,,,,0.0,1.0,,1|hzkfnr:,179505,,,,,,,,04/Aug/11 2:24 PM;garytully;This is on the fuse trunk for a 5.6 release,,,,,,,,,,,,,,,,,,,
Exceptions in KahaDB code when running the Stomp benchmark against ActiveMQ 5.5.0-fuse-00-27,MB-913,12516332,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,stanii,stanii,30/Jun/11 8:30 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,10/Aug/11 3:17 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"When running the Stomp benchmark from https://github.com/chirino/stomp-benchmark according to the instructions on that page, I start seeing exceptions in the broker's log about 5 minutes into the benchmark.
Please find my broker's configuration file attached. I am also attaching the broker's log file. Here are some of the stack traces from it:

{noformat} 

2011-06-30 16:02:09,903 [127.0.0.1:50524] ERROR FilePendingMessageCursor       - Caught an IO Exception getting the DiskList 98_PendingCursor:loadq-3
java.lang.NullPointerException
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:203)
	at org.apache.kahadb.index.ListIndex.load(ListIndex.java:75)
	at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:219)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:729)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:216)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:217)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:193)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1629)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:720)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:652)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:304)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
	at java.lang.Thread.run(Thread.java:662)
2011-06-30 16:02:09,912 [127.0.0.1:50524] ERROR FilePendingMessageCursor       - Caught an Exception adding a message: ActiveMQBytesMessage {commandId = 19796,
 responseRequired = false, messageId = ID:bigmacli-40948-1309463846336-2:105:-1:1:19794, originalDestination = null, originalTransactionId = null, producerId = ID:bigmacli-
40948-1309463846336-2:105:-1:1, destination = queue://loadq-3, transactionId = null, expiration = 0, timestamp = 1309464129898, arrival = 0, brokerInTime = 1309464129898, 
brokerOutTime = 0, correlationId = null, replyTo = null, persistent = false, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, 
userID = null, content = org.apache.activemq.util.ByteSequence@665e2517, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, 
readOnlyProperties = true, readOnlyBody = true, droppable = false} ActiveMQBytesMessage{ bytesOut = null, dataOut = null, dataIn = null } first to FilePendingMessageCursor 

java.lang.RuntimeException: java.lang.NullPointerException
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:457)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.flushToDisk(FilePendingMessageCursor.java:432)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.tryAddMessageLast(FilePendingMessageCursor.java:217)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:193)
	at org.apache.activemq.broker.region.Queue.sendMessage(Queue.java:1629)
	at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:720)
	at org.apache.activemq.broker.region.Queue.send(Queue.java:652)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:379)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:523)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:304)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
	at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:56)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:468)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:681)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:316)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
	at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:257)
	at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
	at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:203)
	at java.lang.Thread.run(Thread.java:662)
Caused by: java.lang.NullPointerException
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:203)
	at org.apache.kahadb.index.ListIndex.load(ListIndex.java:75)
	at org.apache.activemq.store.kahadb.plist.PListStore$1.execute(PListStore.java:219)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:729)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPList(PListStore.java:216)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:454)
	... 28 more

{noformat} 

{noformat} 

2011-06-30 16:02:44,121 [Queue:loadq-9  ] ERROR Queue                          - Failed to page in more queue messages 
java.util.NoSuchElementException: Chunk stream does not exist, page: 63122 is marked free
	at org.apache.kahadb.index.ListNode$ListIterator.nextFromNextListNode(ListNode.java:149)
	at org.apache.kahadb.index.ListNode$ListIterator.hasNext(ListNode.java:160)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.hasNext(PList.java:203)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.hasNext(FilePendingMessageCursor.java:496)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.hasNext(FilePendingMessageCursor.java:288)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1725)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1944)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1452)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.io.EOFException: Chunk stream does not exist, page: 63122 is marked free
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:456)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:433)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:430)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:406)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:363)
	at org.apache.kahadb.index.ListIndex.loadNode(ListIndex.java:201)
	at org.apache.kahadb.index.ListNode$ListIterator.nextFromNextListNode(ListNode.java:147)
	... 9 more

{noformat} 

{noformat} 

2011-06-30 16:02:49,401 [Queue:loadq-4  ] ERROR Queue                          - Failed to page in more queue messages 
java.util.NoSuchElementException: Could not locate data file /lab/activemq-5.5.0-fuse-00-27/data/broker/tmp_storage/db-3.log
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:213)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:192)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:501)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:485)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:296)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1726)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1944)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1452)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Caused by: java.io.IOException: Could not locate data file /lab/activemq-5.5.0-fuse-00-27/data/broker/tmp_storage/db-3.log
	at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
	at org.apache.kahadb.journal.Journal.read(Journal.java:597)
	at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:367)
	at org.apache.activemq.store.kahadb.plist.PList$PListIterator.next(PList.java:211)
	... 9 more

{noformat} ","ActiveMQ 5.5.0-fuse-00-27
Linux Ubuntu 11.04
Quad core x86_64",,,,,,,,,,DEV-3243,PROD-866,,,30/Jun/11 8:33 PM;stanii;activemq.log;https://issues.jboss.org/secure/attachment/12368874/activemq.log,30/Jun/11 8:33 PM;stanii;activemq.xml;https://issues.jboss.org/secure/attachment/12368873/activemq.xml,,,,,,,,,,,,,,,,,,,,,,,,,2.0,3.0,,1|hzkfkf:,179490,,,,,,,,25/Jul/11 5:31 PM;garytully;I am actively working on a resolution but the root cause is elusive b/c it is very time sensitive and has multiple failure modes. Once I have a fix we can determine an appropriate delivery route. ,"03/Aug/11 3:31 PM;garytully;There is a new 5.6-SNAPSHOT with the fix for this issue:
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-fuse-SNAPSHOT/apache-activemq-5.6-fuse-20110803.145933-4-bin.tar.gz
",11/Aug/11 11:01 AM;garytully;merged to 5.5 branch,,,,,,,,,,,,,,,,,
Unable to access Serializable class when receiving ObjectMessage in OSGi environment,MB-912,12516331,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,davestanley,davestanley,30/Jun/11 4:59 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,Placeholder bug to track merge/fix of https://issues.apache.org/jira/browse/AMQ-2488 into Fuse Message Broker.,Fuse ESB 4.4.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2488,,,,0.0,0.0,,1|hzkfdr:,179460,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX removeQueue command causes the newly sent message to the queue to be silently ignored.,MB-908,12516328,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,ccorsi1,ccorsi1,23/Jun/11 1:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Aug/11 8:45 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,,,,0,,If you have a queue that is removed using the JMX removeQueue command.  Then send a new message to that queue. The message is silently ignore and is not available in the queue.,any,,,,,,,,,,,,,,23/Jun/11 1:17 PM;ccorsi1;activemq-testcase.zip;https://issues.jboss.org/secure/attachment/12368876/activemq-testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkfon:,179509,,,,,,,,23/Jun/11 1:17 PM;ccorsi1;maven test case showing this issue.,,,,,,,,,,,,,,,,,,,
stomp consumer might not receive all msgs of a queue,MB-907,12516326,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,mielket,mielket,23/Jun/11 9:57 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Aug/11 3:32 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,broker,,,0,,"Have a testcase that connects a Java stomp consumer to a virtual destination queue and consumes a fixed amount of msgs.
During the test I noticed that the consumer does not always receive the full amount of msgs. 
Instead the receive times out although JMX QueueSize property is greater than 0. However when trying to browse the queue using JMX, it returns null, despite the fact that not all msgs got dequeued yet (dispatch and dequeue counter < enqueue counter).

So far I reproduced this with a stomp producer/consumer only. The producer writes msgs to a virtual topic VirtualTopic.Foo and the consumer takes msgs off the Consumer.A.VirtualTopic.Foo queue. Using JMX I noticed all msgs got moved from the virtual topic to the queue (reflected by JMX enqueue counter) but not all msgs got consumed. 

So it seems the broker lost some msgs on the way. ",stomp consumer on virtual destination,,,,,,,,,,,,,,02/Aug/11 9:01 PM;tabish121;StompVirtualTopicTest.java;https://issues.jboss.org/secure/attachment/12368884/StompVirtualTopicTest.java,13/Jul/11 4:27 PM;tabish121;StompVirtualTopicTest.java;https://issues.jboss.org/secure/attachment/12368879/StompVirtualTopicTest.java,08/Jul/11 3:48 PM;mielket;StompVirtualTopicTest.java;https://issues.jboss.org/secure/attachment/12368878/StompVirtualTopicTest.java,23/Jun/11 10:03 AM;mielket;stomp-testcase.tgz;https://issues.jboss.org/secure/attachment/12368875/stomp-testcase.tgz,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3375,,,,4.0,6.0,,1|hzkfkv:,179492,,,,,,,,"23/Jun/11 10:03 AM;mielket;Attaching a test case in JUnit format. It may take a number of test runs before this test case fails (10 < x < 20).
For a description of the test case, have a read over the class documentation in src/test/resources/org/apache/activemq/transport/stomp/StompVirtualTopicTest.java.

The test case uses an embedded broker but I have the feeling the problem is easier reproduced using an external broker with the config src/test/resources/StompVirtualTopicTest.xml. It also makes it easier to attach jconsole. 

To run the test case simply call mvn test.

","08/Jul/11 3:48 PM;mielket;Attaching an updated version of the Unit test class. 
The producer now requests a receipt for the last stomp msg being sent - as Tim suggested. 
Still I can reproduce the problem using this version.","13/Jul/11 4:27 PM;tabish121;Attaching a version of the test that can be run as a unit test in the activemq project.  Also made some changes to the test case so that the queue subscribe timing is more deterministic and added some more stats output at the end of the test.
",03/Aug/11 12:25 PM;garytully;The fix for http://fusesource.com/issues/browse/MB-913 sorts out Tim's latest test. The root problem was contention on the plist that underpins the file pending message cursor which is triggered by reaching a queue memory limit.,03/Aug/11 3:32 PM;garytully;There is a 5.6-SNAPSHOT with the fix: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.6-fuse-SNAPSHOT/apache-activemq-5.6-fuse-20110803.145933-4-bin.tar.gz,11/Aug/11 11:06 AM;garytully;merged to 5.5 branch,,,,,,,,,,,,,,
SslConnectionFactory is not used when using composite URL's,MB-906,12516325,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,20/Jun/11 2:59 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"Hi, 

The attached test case highlights a problem with the way detect SSL connections when composite URL's are used.  In  ""ActiveMQSslConnectionFactory.java"", we have the following section of code:

{code}

    protected Transport createTransport() throws JMSException {
        // If the given URI is non-ssl, let superclass handle it.
        if (!brokerURL.getScheme().equals(""ssl"")) {
            return super.createTransport();
        }

        try {
            if (keyManager == null || trustManager == null) {
                trustManager = createTrustManager();
                keyManager = createKeyManager();
                // secureRandom can be left as null
            }
            SslTransportFactory sslFactory = new SslTransportFactory();
            SslContext ctx = new SslContext(keyManager, tru

{code}

When using an SSL URL for failover, for example, brokerURL.getScheme=""failover"" and not ""ssl"" thus our special considerations for SSL are not picked up. 

The attached test case uses a custom Trust Manager. We can see that it works just fine with a URL of """"ssl://localhost:61618"", however, when failover is added, (""failover://(ssl://localhost:61618)"", it's not picked up.  I ran this through the debugger to track it down but essentially in the good case, you'll see my output from test case:

{code}
One works
============
 ** Hello ...  
 ** Setting Broker URL ...  
 ** Creating Queue Connection ...  
 ** Returning trust All certs
 ===> My manager: [Ljavax.net.ssl.TrustManager;
trigger seeding of SecureRandom
done seeding SecureRandom
Allow unsafe renegotiation: false
{code}

In the  failing case, ""My manager"" line is not printed as its never invoked.

I dropped the attached test case into org.apache.activemq. 
",,,,,,,,,,,,,,,20/Jun/11 3:01 PM;sjavurek;FailoverActiveMQTestCase.java;https://issues.jboss.org/secure/attachment/12368870/FailoverActiveMQTestCase.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,0.0,,1|hzkf93:,179439,,,,,,,,,,,,,,,,,,,,,,,,,,,
Kahadb will purge all of the messages from an unsubscribed durable subscription within a single kahadb transaction possibly causing an OOM exception.,MB-904,12516323,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ccorsi1,ccorsi1,15/Jun/11 4:29 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,22/Jun/11 1:34 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"If we have a case in which there is a long running durable subscription that is consuming less messages than a producer is creating. If the durable subscription then decides to unsubscribe the kahadb will perform a cleanup.  As part of the cleanup it will determine all messages that will no longer be consumed. During that process it will start a single transaction and process all of those messages at once.  If there are more messages than there is available memory then the broker will generate a oom exception.

The kahadb should process the purging process through one or more transactions depending on the size of messages that need to be purged.  
",any,,,,,,,,,,,,,,15/Jun/11 5:34 PM;ccorsi1;testcase.zip;https://issues.jboss.org/secure/attachment/12368869/testcase.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3374,,,,1.0,2.0,,1|hzkf9z:,179443,,,,,,,,"15/Jun/11 5:34 PM;ccorsi1;Attaching testcase that reproduces this issue.


You will need to start a broker in a separate termine since the test is decoupled from the broker

You will need to use the configuration file that is located within the src/test/resources directory.

You can run the test by using the ""mvn test"" command.","22/Jun/11 1:34 PM;dbosanac;This should be fixed now and available in the latest (20110622.131151-32) snapshot from

 http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT

Now we define max kahadb tx size and spool to temporary file if it gets larger.

I didn't test performance yet. To tune performance customer could experiment with max kahadb size. By default it's 10MB and it could be changed by setting {{maxKahaDBTxSize}} system property (in bytes - default 10485760)",,,,,,,,,,,,,,,,,,
STOMP Connection MBean fails to  register.,MB-903,12516322,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,15/Jun/11 2:27 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,08/Aug/11 10:11 AM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,5.6.0-fuse-00-00,,,,,,0,,"Tested against 5.5 release.  

{code}
2011-06-15 12:27:22,860 [eMQ Task-125034] WARN  ManagedTransportConnection     - Failed to register MBean: org.apache.activemq:BrokerName=gridmsg003.cern.ch,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/137.138.171.43_52170
2011-06-15 12:27:22,860 [eMQ Task-125034] DEBUG ManagedTransportConnection     - Failure reason: javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=gridmsg003.cern.ch,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/137.138.171.43_52170
javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=gridmsg003.cern.ch,Type=Connection,ConnectorName=stomp,ViewType=address,Name=/137.138.171.43_52170
	at com.sun.jmx.mbeanserver.Repository.addMBean(Repository.java:453)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.internal_addObject(DefaultMBeanServerInterceptor.java:1484)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerDynamicMBean(DefaultMBeanServerInterceptor.java:963)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerObject(DefaultMBeanServerInterceptor.java:917)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.registerMBean(DefaultMBeanServerInterceptor.java:312)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.registerMBean(JmxMBeanServer.java:482)
	at org.apache.activemq.broker.jmx.ManagementContext.registerMBean(ManagementContext.java:299)
	at org.apache.activemq.broker.jmx.AnnotatedMBean.registerMBean(AnnotatedMBean.java:65)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.registerMBean(ManagedTransportConnection.java:99)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.<init>(ManagedTransportConnection.java:57)
	at org.apache.activemq.broker.jmx.ManagedTransportConnector.createConnection(ManagedTransportConnector.java:52)
	at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:216)
	at java.lang.Thread.run(Thread
{code}

possibly leading to leaking threads as number of threads grow in broker many of them indicating the same connection port as was being used by the Connection when it attempted to register.
https://fusesource.com/issues/browse/DEV-3216?focusedCommentId=73113&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_73113

Ran against the shipped activemq-stomp.xml file and the attached StompExample",,,,,,,,,,,,,,,15/Jun/11 2:27 PM;socallag;StompExample.java;https://issues.jboss.org/secure/attachment/12368868/StompExample.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3393,,,,1.0,3.0,,1|hzkfnb:,179503,,,,,,,,"05/Jul/11 3:35 PM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-3393 - the other issue may be related, not 100% sure, but the test case demonstrates a clear problem with fast connect/disconnect and deferred close.","25/Jul/11 11:13 AM;garytully;This issue can be a consequence of https://fusesource.com/issues/browse/DEV-3098 and keepAlive.
The problem now only occurs when the client port number cycles and the server still has an active open connection that references that port.
Is it possible that even with keepAlive working as expected, the broker keeps sufficient inactive connections such that the clients ports cycle (the range is typically 4k) in normal operation?

Are the clients port range restricted in some way so that they cycle more quickly?

If the issue is not related to DEV-3098 (the failure to gc inactive sockets and number of connections growing), then we may have to change the MBean id such that it does not include the client port number in the mbean name
and instead holds it as an attribute. 
This is a relatively easy change, but we need to determine that it is really necessary by determining that regular ephemeral port range is exceeded by the brokers ability to close off inactive connections.
",16/Aug/11 3:14 PM;garytully;reflect 5.5.x merge,,,,,,,,,,,,,,,,,
Need to document that STOMP and ProducerFlowControl should not be used together.,MB-901,12516320,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,fbolton,socallag,socallag,07/Jun/11 9:10 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Jun/11 10:59 AM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,Documentation,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkf9b:,179440,,,,,,,,21/Jun/11 10:59 AM;fbolton;Fixed in Fuse MB 5.5 docs and published to external Web. Added a note to the Connectivity Guide and to the Tuning Guide.,,,,,,,,,,,,,,,,,,,
HTML contents in message property causes web console page that lists messages of a given queue to break,MB-900,12516319,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,joe.luo,joe.luo,03/Jun/11 5:15 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"If a message has a property whose value is HTML, such as
{code}
""<!DOCTYPE HTML PUBLIC \""-//IETF//DTD HTML 2.0//EN\""> <html><head> <title>ERROR</title> </head><body> <h1>ERROR</h1> ERROR : File not found <hr> <!-- 5 --> </body></html>""
{code}
Then the display in the web console page that lists the messages in a given queue is broken as the HTML is not escaped when being put into the title attribute of the link to the message view page.

To reproduce this problem, just adding following line when you are sending a message to a queue in your producer code:
{code}
message.setStringProperty(""ERROR_DESCRIPTION"", ""<!DOCTYPE HTML PUBLIC \""-//IETF//DTD HTML 2.0//EN\""> <html><head> <title>ERROR</title> </head><body> <h1>ERROR</h1> ERROR : File not found <hr> <!-- 5 --> </body></html>""); 
{code}
Then open the web console page to browse the given queue, you will see it is broken.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkf47:,179429,,,,,,,,,,,,,,,,,,,,,,,,,,,
"Broker hangs on restart,  recovery thread and checkpoint thread hang waiting on same lock.",MB-899,12516318,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,02/Jun/11 9:19 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,03/Jun/11 12:32 PM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"User has to delete data directory in order to restart correctly.

Locking threads:

""ActiveMQ Journal Checkpoint Worker"" daemon prio=10 tid=0x00002aaab7e7f800 nid=0x36a3 waiting on condition [0x0000000040c40000]
java.lang.Thread.State: WAITING (parking)
at sun.misc.Unsafe.park(Native Method)
parking to wait for <0x0000000794c78708> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)
at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:722)
at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:303)




""main"" prio=10 tid=0x0000000041200800 nid=0x3687 waiting on condition [0x0000000041782000]
java.lang.Thread.State: WAITING (parking)
at sun.misc.Unsafe.park(Native Method)
parking to wait for <0x0000000794c78708> (a java.util.concurrent.locks.ReentrantReadWriteLock$NonfairSync)
at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:811)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:842)
at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1178)
at java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock(ReentrantReadWriteLock.java:807)
at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:917)
at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:864)
at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:856)
at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:783)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeMessage(KahaDBStore.java:378)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.removeAsyncMessage(KahaDBStore.java:350)
at org.apache.activemq.store.kahadb.KahaDBTransactionStore.removeAsyncMessage(KahaDBTransactionStore.java:457)
at org.apache.activemq.store.kahadb.KahaDBTransactionStore$1.removeAsyncMessage(KahaDBTransactionStore.java:171)
at org.apache.activemq.broker.region.Queue.acknowledge(Queue.java:811)
at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1539)
at org.apache.activemq.broker.region.Queue.removeMessage(Queue.java:1531)
at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1596)
at org.apache.activemq.broker.region.Queue.messageExpired(Queue.java:1586)
at org.apache.activemq.broker.region.Queue$5.recoverMessage(Queue.java:283)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$4.execute(KahaDBStore.java:472)
at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recover(KahaDBStore.java:464)
at org.apache.activemq.store.ProxyMessageStore.recover(ProxyMessageStore.java:52)
at org.apache.activemq.broker.region.Queue.initialize(Queue.java:269)
at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:86)
at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:475)
at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:123)
locked <0x000000079465b4e8> (a java.lang.Object)
at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:298)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:146)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:146)
at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:146)
at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:151)
at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:95)
at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:198)
at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:106)
at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:158)
at org.apache.activemq.broker.scheduler.SchedulerBroker.start(SchedulerBroker.java:89)
at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:158)
at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:109)
at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1792)
at org.apache.activemq.broker.BrokerService.start(BrokerService.java:492)
at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
locked <0x000000079465b900> (a java.util.concurrent.ConcurrentHashMap)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
locked <0x000000079465b930> (a java.util.concurrent.ConcurrentHashMap)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
locked <0x000000079465b9f8> (a java.lang.Object)
at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:115)
at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
at org.apache.activemq.console.Main.main(Main.java:107)",,,,,,,,,,,,,,,03/Jun/11 11:06 AM;socallag;activemq.xml;https://issues.jboss.org/secure/attachment/12368865/activemq.xml,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3357,,,,1.0,2.0,,1|hzkf27:,179420,,,,,,,,03/Jun/11 12:25 PM;garytully;link to apache issue: https://issues.apache.org/jira/browse/AMQ-3357,"03/Jun/11 12:32 PM;garytully;fix on 5.5.x branch, will be in tonight's snapshot",,,,,,,,,,,,,,,,,,
Network Connection between brokers fails indeterminately,MB-898,12516317,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,ccorsi1,ccorsi1,31/May/11 2:51 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,31/Aug/12 3:19 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"The Network connection between brokers fail after a undetermined times that one of the other brokers is stopped and started up.

This causes the applications to hang will not be able to process messages that are contained within the other broker.

The network connection between the two broker was not established and the messages from the other broker were not forwarded to the other broker.
","Mac OS X 10.7, jdk 1.6",,,,,,,,,,,,,,31/May/11 3:02 AM;ccorsi1;nbtestcase.tar.gz;https://issues.jboss.org/secure/attachment/12368860/nbtestcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkjfr:,180117,,,,,,,,"31/May/11 3:02 AM;ccorsi1;The attached testcase will reproduce the issue of which the network connection were not being established after one of the brokers wwas restarted.

The testcase does not reproduce this issue deterministically and it is possible that it will require several iterations of the testcase to produce a hang of the consumer application.

The testcase will perform the following steps:

  1 - start broker 1 and broker 2
  2 - start a producer application in the background and wait until it has completed
  3 - start a consumer application in the background and wait until it has completed
  4 - stop/start on of the brokers, alternating between the two for each iteration
  5 - goto step 2

By default, the script will iterate through this 100 times unless the consumer process is waiting indefinitely.
At this point, you can perform a ctrl-c.
The script will then generate a stack trace for the running consumer application.
Stop the two brokers and exit.

The testcase just needs to be unarchived within a activemq distribution directory and run from that directory.

The script is bin/loop-test.sh

The script was only developed for a *nix system.  Sorry about not providing a batch file.","31/May/11 1:45 PM;ccorsi1;I was able to reproduce the issue using 5.4.2-fuse-03-15.

I have not tried this against a 5.5.0-fuse-SNAPSHOT build.
",31/Aug/12 3:19 PM;davestanley;No able to reproduce in latest versions. Closing for now.,,,,,,,,,,,,,,,,,
start/stop scripts overwrite pid file when using shared datastore with multiple broker hosts,MB-897,12516316,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,30/May/11 1:15 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,13/Jun/11 3:50 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,0,,"The ActiveMQ shell script creates a PID file to know what to stop on startup.

The script has this created as:
Active MQ configuration directory
if [ -z ""$ACTIVEMQ_DATA_DIR"" ]; then
ACTIVEMQ_DATA_DIR=""$ACTIVEMQ_BASE/data""
fi
Location of the pidfile
if [ -z ""$ACTIVEMQ_PIDFILE"" ]; then
ACTIVEMQ_PIDFILE=""$ACTIVEMQ_DATA_DIR/activemq.pid""
fi

As both instances need pointing to the same datastore, one starting up will overwrite the PID of the other, which will then fail to be stopped.

This will only occur when the brokers are on separate hosts. If they are on the same machine, the PID will not be overwritten. A simple solution would be to name the PID file with the hostname, rather than just activemq.pid.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3365,,,,0.0,1.0,,1|hzkf8f:,179436,,,,,,,,13/Jun/11 3:50 PM;dbosanac;Fixed and merged to 5.5.x-fuse branch,,,,,,,,,,,,,,,,,,,
KahaDB not cleaning up log files after stomp consumers have received all messages.,MB-895,12516314,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,27/May/11 11:36 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,02/Jun/11 11:29 PM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Tested against May17 5.5 snapshot.

Using Hirams stomp benchmark and attached sceanrio file

sbt run --scenario-file DEV-3186.xml  --port 61613  --sample-count 100 --sample-interval 10000 --display-errors DEV-3186.out

kahaDB maintains very large message log file.",,,,,,,,,,,,,,,27/May/11 11:36 AM;socallag;DEV-3186.xml;https://issues.jboss.org/secure/attachment/12368858/DEV-3186.xml,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3351,,,,1.0,1.0,,1|hzkf1r:,179418,,,,,,,,"02/Jun/11 11:29 PM;garytully;I was able to run this scenario with the latest snapshot
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/apache-activemq-5.5-fuse-20110602.230810-27-bin.tar.gz

The fix from https://issues.apache.org/jira/browse/AMQ-3351 sorts it.",,,,,,,,,,,,,,,,,,,
Invalid data sent to nio:// throws OutOfMemory  Exception and may crash the broker.,MB-894,12516313,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,25/May/11 11:03 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,13/Jun/11 3:53 PM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-11,,,,,,,0,,"configure nio

<transportConnector name=""openwire"" uri=""nio://0.0.0.0:61616""/>

connect using a browser to http://0.0.0.0:61616

Following exceptions in logs:

My testing apache-activemq-5.5.0-fuse-00-06 did not lead to broker crash, but users broker did fall over and tanuka wrapper was unable to recover it.

2011-05-25 11:54:46,125 | DEBUG | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.EOFException
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:97)
	at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
2011-05-25 11:54:46,125 | DEBUG | Transport failed: org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: /127.0.0.1:3564 | org.apache.activemq.broker.TransportConnection.Transport | Async Exception Handler
org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: /127.0.0.1:3564
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:246)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1270)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:815)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:851)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
2011-05-25 11:54:46,125 | DEBUG | Transport failed: org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: /127.0.0.1:3567 | org.apache.activemq.broker.TransportConnection.Transport | Async Exception Handler
org.apache.activemq.transport.InactivityIOException: Cannot send, channel has already failed: /127.0.0.1:3567
	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:246)
	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:85)
	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1270)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:815)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:851)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
2011-05-25 11:54:46,125 | DEBUG | Transport failed: java.io.IOException: Java heap space | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ NIO Worker
java.io.IOException: Java heap space
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:39)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:142)
	at org.apache.activemq.transport.nio.NIOTransport.access$000(NIOTransport.java:44)
	at org.apache.activemq.transport.nio.NIOTransport$1.onSelect(NIOTransport.java:68)
	at org.apache.activemq.transport.nio.SelectorSelection.onSelect(SelectorSelection.java:94)
	at org.apache.activemq.transport.nio.SelectorWorker$1.run(SelectorWorker.java:119)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.OutOfMemoryError: Java heap space
	at java.nio.HeapByteBuffer.<init>(HeapByteBuffer.java:39)
	at java.nio.ByteBuffer.allocate(ByteBuffer.java:312)
	at org.apache.activemq.transport.nio.NIOTransport.serviceRead(NIOTransport.java:119)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-498,,,,0.0,2.0,,1|hzkixz:,180036,,,,,,,,13/Jun/11 3:53 PM;dbosanac;Fixed and added some additional checks against DoS attacks against the broker. Check Apache issue for more details,02/Jul/12 8:08 PM;garytully;updating fix version to reflect back port to 5.5.1,,,,,,,,,,,,,,,,,,
Transport failed: java.io.EOFException,MB-889,12516308,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,19/May/11 11:11 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"I have a test case where a client is somewhat based on Spring-JMS.   After some more research, the customer determined that the the exception appears to be getting thrown right before the TransportConnection goes to stop the connection:

{code}
ActiveMQ Transport: tcp:///10.5.1.14:61798
2011-05-18 15:48:39,173 | DEBUG | Transport failed: java.io.EOFException | org.apache.activemq.broker.TransportConnection.Transport | ActiveMQ Transport: tcp:///10.5.1.14:61798
java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:375)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:229)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:221)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
	at java.lang.Thread.run(Thread.java:680)

{code}

There is an Apache Issue [AMQ-2730|https://issues.apache.org/jira/browse/AMQ-2730] that looks very similar. 
https://issues.apache.org/jira/browse/AMQ-2730

It's also worth noting this error occurs in Fuse 5.3.1-02-00, however the logging was turned down so it was just a one liner and missed. 
",,,,,,,,,,,,,,,19/May/11 11:22 AM;sjavurek;activemq.xml;https://issues.jboss.org/secure/attachment/12368855/activemq.xml,19/May/11 11:22 AM;sjavurek;my.properties;https://issues.jboss.org/secure/attachment/12368854/my.properties,,,,,,,,,,,,,,,,,,,,,,,,,2.0,0.0,,1|hzkfd3:,179457,,,,,,,,,,,,,,,,,,,,,,,,,,,
Avoid stuck messages in a network of brokers,MB-885,12516304,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,17/May/11 9:02 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,04/Jul/11 4:38 PM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,3,,Please see https://issues.apache.org/jira/browse/AMQ-2484 for details.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2484,,,,0.0,1.0,,1|hzkfrz:,179524,,,,,,,,"04/Jul/11 4:38 PM;garytully;Added new policy entry that supplies the network bridge filter factory for a destination. It is possible to plug in your own value via a spring bean that implements the org.apache.activemq.network.NetworkBridgeFilterFactory interface if you need richer conditionals.

Two implementations, the default and new variant that supports replay back to origin if there are no local consumers. It has an optional *replayDelay* based on the broker in time of a message. 
It also has an optional throttle option that can limit dispatch to a network subscription, *rateLimit*/*rateDuration*. ReplayDelay and rateDuration are milisecond values. The throttle options is handy in the case of a statically included destination where the network bridge is starving local consumers.

schema{code}<xs:element name='conditionalNetworkBridgeFilterFactory'>
    <xs:complexType>
      <xs:attribute name='rateDuration' type='xs:integer'/>
      <xs:attribute name='rateLimit' type='xs:integer'/>
      <xs:attribute name='replayDelay' type='xs:integer'/>
      <xs:attribute name='replayWhenNoConsumers' type='xs:boolean'/>{code}

applied via destination policy entry{code}  <destinationPolicy>
      <policyMap>
        <policyEntries>
          <policyEntry queue=""TEST.>"" >
            <conditionalNetworkBridgeFilterFactory replayWhenNoConsumers=""true"" />
          </policyEntry>
        </policyEntries>
      </policyMap>
    </destinationPolicy>{code}",,,,,,,,,,,,,,,,,,,
Forwarded message cannot be distributed to the original broker,MB-884,12516303,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,17/May/11 9:00 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,18/Aug/11 10:06 AM,5.4.2-fuse-03-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,,,,,,,3,,Please see external issue: https://issues.apache.org/jira/browse/AMQ-2324,,,,,,,,,,,,,,,18/May/11 2:23 PM;socallag;TestNetworkBroker.zip;https://issues.jboss.org/secure/attachment/12368853/TestNetworkBroker.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2324,,,,1.0,2.0,,1|hzkfp3:,179511,,,,,,,,"04/Jul/11 4:39 PM;garytully;see http://fusesource.com/issues/browse/MB-885?focusedCommentId=73985&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_73985

for details of new policy.",21/Jul/11 2:18 PM;socallag;Resolved,,,,,,,,,,,,,,,,,,
Kahadb Chunk stream does not exist  when broker under stress,MB-883,12516302,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,14/May/11 9:51 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/May/11 3:16 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"There appears to be a race condition in activemq.  We're still working on the test case, but this is what I can tell you:

{code}
2011-04-07 08:04:07,295 [Queue:loadq-4  ] ERROR FilePendingMessageCursor       - I/O error
java.io.EOFException: Chunk stream does not exist at page: 198
	at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
	at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
	at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.activemq.store.kahadb.plist.PList.loadEntry(PList.java:468)
	at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:483)
	at org.apache.activemq.store.kahadb.plist.PList$10.execute(PList.java:312)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:310)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:500)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.next(FilePendingMessageCursor.java:473)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.next(FilePendingMessageCursor.java:293)
	at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1714)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1932)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1440)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
{code}

This scenario occurs on a really fast machine, e.g. 8 CPU's when running Hiram's Stomp Benchmark protocol against the latest 5.5 release.  Unfortunately, the error does not always occur, only sometimes. 

Gary believes the error occurs as result of the file cursor is hitting the 1gb limit set in the config and starting to write to disk.  On Vader, I can come close: 

{code}
	
ERROR | Exception on periodic cleanup: java.io.EOFException: Chunk stream does not exist at page: 8490
java.io.EOFException: Chunk stream does not exist at page: 8490
  at org.apache.kahadb.page.Transaction$2.readPage(Transaction.java:454)
  at org.apache.kahadb.page.Transaction$2.<init>(Transaction.java:431)
  at org.apache.kahadb.page.Transaction.openInputStream(Transaction.java:428)
  at org.apache.kahadb.page.Transaction.load(Transaction.java:404)
  at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
  at org.apache.activemq.store.kahadb.plist.PList.loadEntry(PList.java:464)
  at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:479)
  at org.apache.activemq.store.kahadb.plist.PList$10.execute(PList.java:309)
  at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
  at org.apache.activemq.store.kahadb.plist.PList.getNext(PList.java:307)
  at org.apache.activemq.store.kahadb.plist.PListStore.run(PListStore.java:331)
  at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
  at java.util.TimerThread.mainLoop(Timer.java:512)
  at java.util.TimerThread.run(Timer.java:462)
Exception in thread ""ActiveMQ Broker[localhost] Scheduler"" java.util.ConcurrentModificationException
  at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
  at java.util.HashMap$ValueIterator.next(HashMap.java:822)
  at org.apache.activemq.store.kahadb.plist.PListStore.run(PListStore.java:327)
  at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
  at java.util.TimerThread.mainLoop(Timer.java:512)
  at java.util.TimerThread.run(Timer.java:462)
{code}

The java.utilConcurrentModificationException seems to happen somewhere in the topic fan test.  I can usually get it sort of consistent by starting with empty data file (rm -rf data) and restarting the broker.  I'm just not sure where in that test yet and it's not the kahadb error. If I find anything more, will let you know. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3325,,,,0.0,2.0,,1|hzkf0n:,179413,,,,,,,,17/May/11 9:24 AM;garytully;fixed at apache by https://issues.apache.org/jira/browse/AMQ-3325,20/May/11 3:16 PM;garytully;fix now on fuse branch.,,,,,,,,,,,,,,,,,,
"FilePendingMessageCursor isFull reports full in error when temp store is full, even if not needing the temp store",MB-881,12516300,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,11/May/11 7:25 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,13/Jun/11 12:01 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"From [AMQ-3314|https://issues.apache.org/jira/browse/AMQ-3314] description:

{quote}
With slow queue consumers of non persistent messages the temp store can be filled and producers blocked. The default cursor for non persistent is a fileCursor.
However topic subs with a pending message limit strategy also use a cursor for pending messages. If there is sufficient memory resources, the topic consumers should be able to operate without recourse to the temp store. At the moment this is not the case, as the check to isFull reports true in error (based on the status of the temp store)
It should only report full if its memory is exhausted || it is spooling to disk AND the temp store is exhausted.
{quote}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3314,,,,0.0,2.0,,1|hzkf7z:,179434,,,,,,,,11/May/11 11:24 AM;garytully;Fix committed to 5.5.x-fuse branch.,13/Jun/11 12:01 PM;dbosanac;This should be fixed with 5.5.0-fuse-00-00 release,,,,,,,,,,,,,,,,,,
"There are two directories in our repo for 5.5, please combine them to avoid confusion",MB-880,12516299,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,sjavurek,sjavurek,10/May/11 10:13 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,01/Jun/11 4:08 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Hi, 

Our fuse [repo|http://repo.fusesource.com/nexus/content/groups/public-snapshots/org/apache/activemq/apache-activemq/] has two directories for 5.5 which is causing confusion:

{code}
5.5-fuse-SNAPSHOT/ 	Sat Mar 26 03:25:40 UTC 2011 	  	 
5.5-fusesource-SNAPSHOT/ 	Tue Apr 19 02:39:12 UTC 2011 	
{code}

Could we please tidy this up?

Thanks, 
Susan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkf1j:,179417,,,,,,,,01/Jun/11 4:08 PM;garytully;the refs to the _fusesource_ alias are gone. _fuse_ is the one going forward.,,,,,,,,,,,,,,,,,,,
SloPrefetchSubscription.dispatched is filled with expired messages.,MB-879,12516298,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,socallag,socallag,06/May/11 3:36 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"From the user..

""PrefetchSubscription.dispatched full of expired messages. No OutOfMemory error reported.
Version 5.4.2-fuse-01-00.
I browsed through ActiveMQ source trying to understand what component is responsible for clearing up dispatched list and I couldn't find anything else than acknowledge handling and consumer removing.
Do I understand correctly that only acknowledge or consumer stop will clear expired messages?
So if for some reason subscriber's acknowledge did not find its way to server it will be forever in dispatch list until subscriber stops?

PS: When I manually cleared PrefetchSubscription.dispatched list using java expression evaluation within debug connection, then it started working again.""",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkhi7:,179804,,,,,,,,,,,,,,,,,,,,,,,,,,,
Broker throwing NullPointerExceptions on restart from BrokerService.getTransportConnectorURIsAsM ap,MB-878,12516297,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,06/May/11 12:38 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,04/Jul/11 10:44 AM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Exception thrown:

RMI TCP Connection(8)-128.1.254.111
java.lang.NullPointerException
at org.apache.activemq.broker.BrokerService.getTransportConnectorURIsAsMap(BrokerService.java:1095)
at org.apache.activemq.broker.jmx.BrokerView.getStompURL(BrokerView.java:323)
at sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at com.sun.jmx.mbeanserver.StandardMetaDataImpl.getAttribute(StandardMetaDataImpl.java:637)
at com.sun.jmx.mbeanserver.StandardMetaDataImpl.getAttributes(StandardMetaDataImpl.java:294)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkfe7:,179462,,,,,,,,15/Jun/11 4:12 PM;socallag;Fixed in 5.5,04/Jul/11 10:43 AM;garytully;fix fix version,,,,,,,,,,,,,,,,,,
NetworkConnector reconnect logic updated on TransportDisposedIOException,MB-876,12516295,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,davestanley,davestanley,05/May/11 5:35 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Placeholder bug to ensure this change gets merged into 5.4.x and 5.5 branches..

http://svn.apache.org/viewvc?view=revision&revision=1094618

",All platforms.,,,,,,,,,,DEV-2456,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2774,,,,0.0,0.0,,1|hzkexr:,179401,,,,,,,,,,,,,,,,,,,,,,,,,,,
IndexOutOfBounds in kahadb with large number of subscriptions,MB-875,12516294,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,tabish121,sjavurek,sjavurek,03/May/11 10:28 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,27/Oct/11 2:06 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-01-11,5.6.0-fuse-00-00,,broker,,,0,,"Hi, 

The attached test creates 700 subscriptions on a topic with selector 'FILTER=false' then produces 20k messages on the topic with prop FILTER=true. When increasing the number of non-selecting subscriptions to 700, the broker can not be reached and the following exception occurs:

{code}
javax.jms.JMSException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1287)
	at org.apache.activemq.TransactionContext.syncSendPacketWithInterruptionHandling(TransactionContext.java:704)
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:299)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
	at org.apache.activemq.process.TopicWithManySelectorsTest.sendNotification(TopicWithManySelectorsTest.java:126)
	at org.apache.activemq.process.TopicWithManySelectorsTest.test(TopicWithManySelectorsTest.java:85)
	at org.apache.activemq.process.TopicWithManySelectorsTest.testMass(TopicWithManySelectorsTest.java:42)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at junit.framework.TestCase.runTest(TestCase.java:168)
	at junit.framework.TestCase.runBare(TestCase.java:134)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:96)
	at junit.framework.TestResult$1.protect(TestResult.java:110)
	at junit.framework.TestResult.runProtected(TestResult.java:128)
	at junit.framework.TestResult.run(TestResult.java:113)
	at junit.framework.TestCase.run(TestCase.java:124)
	at junit.framework.TestSuite.runTest(TestSuite.java:232)
	at junit.framework.TestSuite.run(TestSuite.java:227)
	at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:79)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:94)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:196)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:65)
Caused by: javax.transaction.xa.XAException: STORE COMMIT FAILED: Transaction rolled back.
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:77)
	at org.apache.activemq.broker.TransactionBroker.commitTransaction(TransactionBroker.java:173)
	at org.apache.activemq.broker.MutableBrokerFilter.commitTransaction(MutableBrokerFilter.java:103)
	at org.apache.activemq.broker.TransportConnection.processCommitTransactionOnePhase(TransportConnection.java:424)
	at org.apache.activemq.command.TransactionInfo.visit(TransactionInfo.java:100)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:219)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: javax.transaction.xa.XAException: POST COMMIT FAILED
	at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:182)
	at org.apache.activemq.transaction.Transaction$2.call(Transaction.java:54)
	at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
	at java.util.concurrent.FutureTask.run(FutureTask.java:138)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:768)
	at org.apache.activemq.store.kahadb.KahaDBTransactionStore.commit(KahaDBTransactionStore.java:264)
	at org.apache.activemq.transaction.LocalTransaction.commit(LocalTransaction.java:72)
	... 14 more
Caused by: java.lang.ArrayIndexOutOfBoundsException
	at java.lang.System.arraycopy(Native Method)
	at org.apache.kahadb.page.Transaction$2.read(Transaction.java:494)
	at java.io.DataInputStream.readFully(DataInputStream.java:178)
	at java.io.DataInputStream.readFully(DataInputStream.java:152)
	at org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2352)
	at org.apache.activemq.store.kahadb.MessageDatabase$HashSetStringMarshaller.readPayload(MessageDatabase.java:2335)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:201)
	at org.apache.kahadb.index.BTreeNode$Marshaller.readPayload(BTreeNode.java:147)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:406)
	at org.apache.kahadb.page.Transaction.load(Transaction.java:361)
	at org.apache.kahadb.index.BTreeIndex.loadNode(BTreeIndex.java:262)
	at org.apache.kahadb.index.BTreeNode.getChild(BTreeNode.java:225)
	at org.apache.kahadb.index.BTreeNode.getLeafNode(BTreeNode.java:672)
	at org.apache.kahadb.index.BTreeNode.get(BTreeNode.java:558)
	at org.apache.kahadb.index.BTreeIndex.get(BTreeIndex.java:184)
	at org.apache.activemq.store.kahadb.MessageDatabase.removeAckLocation(MessageDatabase.java:1642)
	at org.apache.activemq.store.kahadb.MessageDatabase.updateIndex(MessageDatabase.java:1051)
	at org.apache.activemq.store.kahadb.MessageDatabase$15.execute(MessageDatabase.java:890)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:888)
	at org.apache.activemq.store.kahadb.MessageDatabase$13.visit(MessageDatabase.java:833)
	at org.apache.activemq.store.kahadb.data.KahaRemoveMessageCommand.visit(KahaRemoveMessageCommand.java:220)
	at org.apache.activemq.store.kahadb.MessageDatabase.process(MessageDatabase.java:825)
	at org.apache.activemq.store.kahadb.MessageDatabase.store(MessageDatabase.java:751)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.doAcknowledge(KahaDBStore.java:650)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBTopicMessageStore.acknowledge(KahaDBStore.java:637)
	at org.apache.activemq.store.ProxyTopicMessageStore.acknowledge(ProxyTopicMessageStore.java:78)
	at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:505)
	at org.apache.activemq.broker.region.DurableTopicSubscription.unmatched(DurableTopicSubscription.java:85)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:44)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:628)
	at org.apache.activemq.broker.region.Topic$4.afterCommit(Topic.java:466)
	at org.apache.activemq.transaction.Transaction.fireAfterCommit(Transaction.java:109)
	at org.apache.activemq.transaction.Transaction.doPostCommit(Transaction.java:177)
	... 20 more
{code}

*Test Case Procedure*

1.  Add the the attached test to our org.apache.activemq.broker test package in eclipse.
2.  Add additional memory to the test, -Xms2024m -Xmx2024m worked for me
3.  Run the test as junit test. It does run a while but eventually gets these errors. 

 


",,,,,,,,,,,,,,,03/May/11 10:31 AM;sjavurek;TopicWithManySelectorsTest.java;https://issues.jboss.org/secure/attachment/12368852/TopicWithManySelectorsTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,7.0,,1|hzkgjr:,179649,,,,,,,,"19/Aug/11 5:24 PM;garytully;committed a simpler test case that should be easier to debug
http://svn.apache.org/viewvc?view=revision&revision=1159697",23/Aug/11 2:32 PM;tabish121;Fix for this went into Apache under issue: https://issues.apache.org/jira/browse/AMQ-3466,25/Aug/11 12:43 PM;tabish121;Fix merged to 5.5.x branch,27/Oct/11 1:00 PM;tabish121;Merge seems to have failed and needs to be reapplied to 5.5.x-fuse and 5.5.1-fuse,27/Oct/11 2:06 PM;tabish121;Merged properly into 5.5.x-fuse and 5.5.1-fuse,27/Oct/11 3:05 PM;sjavurek;Thanks Tim.  Can we expect a snapshot tomorrow?,27/Oct/11 3:15 PM;tabish121;Barring any build issues there should be a new SNAPSHOT tomorrow.,,,,,,,,,,,,,
"KahaDB error: ""Could not locate data file""",MB-873,12516292,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,27/Apr/11 4:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,10/May/11 9:34 AM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"Hi, 

This bug is related to [AMQ-3120|https://issues.apache.org/jira/browse/AMQ-3120].  That bug dealt with the KahaDB store itself, however, there seems to be a companion issue when processing non-persistent messages:

{code}
2011-04-11 13:18:00,914 [Queue:loadq-3  ] ERROR Journal                        - Looking for key 332 but not found in fileMap: {275=db-275.log number = 275 ,
 length = 33589360, 274=db-274.log number = 274 , [...]
length = 33590116, 241=db-241.log number = 241 , length = 33590228}
2011-04-11 13:18:00,916 [Queue:loadq-3  ] ERROR Queue                          - Failed to page in more queue messages 
java.lang.RuntimeException: java.io.IOException: Could not locate data file /var/cache/activemq/data/lxbra2107.cern.ch/tmp_storage/db-332.log
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.<init>(FilePendingMessageCursor.java:486)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.reset(FilePendingMessageCursor.java:129)
        at org.apache.activemq.broker.region.Queue.doPageInForDispatch(Queue.java:1712)
        at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1932)
        at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1440)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:104)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:42)
Caused by: java.io.IOException: Could not locate data file /var/cache/activemq/data/lxbra2107.cern.ch/tmp_storage/db-332.log
        at org.apache.kahadb.journal.Journal.getDataFile(Journal.java:350)
        at org.apache.kahadb.journal.Journal.read(Journal.java:597)
        at org.apache.activemq.store.kahadb.plist.PListStore.getPayload(PListStore.java:337)
        at org.apache.activemq.store.kahadb.plist.PList.getFirst(PList.java:280)
        at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor$DiskIterator.<init>(FilePendingMessageCursor.java:482)
        ... 6 more
{code}

I haven't been able to reproduce this issue, however, I spoke to Gary who fixed the other issue and thinks there is more work to do in this area. He also saw a very similar issue in one of the unit tests yesterday so we're logging a jira.  Will continue to try to come up with a test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3310,,,,0.0,3.0,,1|hzkeyf:,179404,,,,,,,,"09/May/11 4:15 PM;garytully;resolved on trunk, https://issues.apache.org/jira/browse/AMQ-3310 issue is unique to the temp store, the PListStore. data file cleanup needed to be re-implemented to deal with async journal location allocation, reference counts were getting lost with the old schema.","10/May/11 8:44 AM;sjavurek;Thanks Gary, that's great.  Do you know when it might be in a SNAPSHOT that we can test with from fusesource? I looked at the latest 
5.5 versions still seems to be from april 21st, although some files are from the 10th. 

All the best, 
Susan",10/May/11 9:34 AM;garytully;new snapshot available with this fix. http://ci.fusesource.com/hudson/job/activemq-5.5.x-fuse-deploy/25/,,,,,,,,,,,,,,,,,
Enable messages sent to Virtual Topic Subscribers be handled using individual dead letter queues.,MB-872,12516291,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,smacey19601,socallag,socallag,27/Apr/11 2:27 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,2,,"At the moment all undelivered messages on virtual topics cannot be sent to individual dead letter queues.

From chatting to Gary a  solution to this would be to extend 
http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/broker/region/policy/IndividualDeadLetterStrategy.java?revision=1084023&view=markup
and in the createDestination method use: 
message.getRegionDestination() in stead of message.getDestination(), 
This will get the queue rather than the virtual topic
Then configure the new policy implementation via spring xml for the dead letter policy.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3536,,,,0.0,2.0,,1|hzkgaf:,179607,,,,,,,,"30/Sep/11 8:05 PM;smacey19601;I've attached patch.txt that includes unit test fixing issue.  Note that for the fix to work properly the 'enableAudit' flag should be set to false on the IndividualDeadLetterStrategy.  This allow duplicate messages sent to different consumers to be forwarded to DLQ.


 <deadLetterStrategy>
          <bean xmlns=""http://www.springframework.org/schema/beans""                 class=""org.apache.activemq.broker.region.policy.IndividualDeadLetterStrategy"">
                  <property name=""enableAudit"" value=""false""></property>    
            </bean>
 </deadLetterStrategy>","11/Oct/11 4:53 PM;smacey19601;A patch has been submited to Apache, see

https://issues.apache.org/jira/browse/AMQ-3536",,,,,,,,,,,,,,,,,,
Un-Authorized queue error from an Ldap server is not propogated back to the consumer ,MB-871,12516289,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,27/Apr/11 12:44 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"Hi, 

As I was testing MB-851, I ran across a scneario where my queue was not defined in Open LDAP.  I received an error in my log:

{code}
 WARN | Failed to add Connection ID:Susan-Javureks-MacBook-Pro-2.local-53766-1303906709971-0:1, reason: java.lang.SecurityException: User name or password is invalid.
ERROR | javax.naming.NameNotFoundException: [LDAP: error code 32 - NO_SUCH_OBJECT: failed for     SearchRequest
        baseDn : 'cn=TEST.FOO,ou=Queue,ou=Destination,ou=ActiveMQ,ou=dmn,dc=dex'
        filter : '(2.5.4.3=write)'
        scope : whole subtree
        typesOnly : false
        Size Limit : no limit
        Time Limit : no limit
        Deref Aliases : deref Always
        attributes : 'member'
: ERR_259 Attempt to search under non-existant entry:  cn=TEST.FOO,ou=Queue,ou=Destination,ou=ActiveMQ,ou=dmn,dc=dex]; remaining name 'cn=TEST.FOO,ou=Queue,ou=Destination,ou=ActiveMQ,ou=dmn,dc=dex'
 WARN | Async error occurred: java.lang.SecurityException: User jdoe is not authorized to write to: queue://TEST.FOO
java.lang.SecurityException: User jdoe is not authorized to write to: queue://TEST.FOO
	at org.apache.activemq.security.AuthorizationBroker.addProducer(AuthorizationBroker.java:163)
	at org.apache.activemq.broker.MutableBrokerFilter.addProducer(MutableBrokerFilter.java:99)
	at org.apache.activemq.broker.TransportConnection.processAddProducer(TransportConnection.java:510)
	at org.apache.activemq.command.ProducerInfo.visit(ProducerInfo.java:105)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:310)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:227)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:222)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:204)
	at java.lang.Thread.run(Thread.java:680)

{code}

That's fine and helpful! Unfortunately, my consumer looks like it worked:

{code}
Producer Tool snippet ...
     [java]     producers {
     [java]       producer queue://TEST.FOO {
     [java]         messageCount{ count: 0 unit: count startTime: 1303906833869 lastSampleTime: 1303906833869 description: Number of messages processed }
     [java]         messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1303906833869 lastSampleTime: 1303906833869 description: Time taken to process a message (thoughtput rate) }
     [java]         pendingMessageCount{ count: 0 unit: count startTime: 1303906833869 lastSampleTime: 1303906833869 description: Number of pending messages }
     [java]         messageRateTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1303906833869 lastSampleTime: 1303906833869 description: Time taken to process a message (thoughtput rate) }
     [java]         expiredMessageCount{ count: 0 unit: count startTime: 1303906833869 lastSampleTime: 1303906833869 description: Number of expired messages }
     [java]         messageWaitTime{ count: 0 maxTime: 0 minTime: 0 totalTime: 0 averageTime: 0.0 averageTimeExMinMax: 0.0 averagePerSecond: 0.0 averagePerSecondExMinMax: 0.0 unit: millis startTime: 1303906833869 lastSampleTime: 1303906833869 description: Time spent by a message before being delivered }
     [java]       }
     [java]     }
     [java]     consumers {
     [java]     }
     [java]   }
     [java] }
     [java] All threads completed their work

BUILD SUCCESSFUL
{code}

I think an error needs to be returned here. 

*Test Case*:

Same test case as MB-851. 
Rename the TEST.FOO entry to TEST.FOO2 or delete it.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkew7:,179394,,,,,,,,"28/Apr/11 12:48 PM;sjavurek;Hi,  I also noticed this happens with  org.apache.activemq.jaas.PropertiesLoginModule too.  A bit easier to set up. :-)",,,,,,,,,,,,,,,,,,,
FileLock.tryLock() doesn't work well in all environments,MB-866,12516285,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Duplicate Issue,,socallag,socallag,21/Apr/11 7:22 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Apr/11 7:29 AM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Due to JRE issue http://bugs.sun.com/view_bug.do?bug_id=6628575 FileLock.tryLock() doesn't work correctly on all file systems.

It's recommended to use

FileLock lock = fc.tryLock(0, fc.size(), false);

instead",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3237,,,,0.0,1.0,,1|hzkeuv:,179388,,,,,,,,21/Apr/11 7:29 AM;socallag;Duplicate of MB-839,,,,,,,,,,,,,,,,,,,
"JDBC persistence adapter, intermittent performance degradation when a durable subscriber of priority messages falls behind",MB-864,12516283,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,20/Apr/11 1:52 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,22/Apr/11 3:25 PM,5.5.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,Description at https://issues.apache.org/jira/browse/AMQ-3288,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3288,,,,0.0,1.0,,1|hzkewn:,179396,,,,,,,,"22/Apr/11 3:25 PM;garytully;Fix merged to trunk for 5.5-fuse-00-xx release. A snapshot is available at:
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
STOMP WebSockets and truncated body,MB-862,12516281,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,18/Apr/11 11:43 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,18/Apr/11 3:08 PM,,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,Fixed on trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3284,,,,0.0,1.0,,1|hzket3:,179380,,,,,,,,"18/Apr/11 3:08 PM;dbosanac;Fixed and merged to 5.5.x-fuse trunk. The snapshot (20110418.134143-13) is available from

 http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
"Remote Durable Sub not reactivating after network connector reconnect with conduitSubscriptions=""false""",MB-860,12516280,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,14/Apr/11 8:29 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,18/Jan/12 8:23 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-01-11,,,,broker,,,0,,"We have run into a problem with durable subscriptions across a network of brokers when using conduitSubscriptions=""false"". It appears that the remote subscription isn't reactivated after a network connector reconnects.

Steps to reproduce:

1) Configure and start up two brokers using attached testcase 

{code}
>mvn -Pbroker1
>mvn -Pbroker2
{code}

broker1 - has two tcp transportConnectors available (so you can sever the remote broker connection without disconnecting the client, I used 62626 for the broker and 61616 for client)
broker2 - has a networkConnector connecting to broker1's 62626 port, with conduitSubscriptions=""false""


2) Establish a durable subscription on the first broker to port 61616 using the example utility.

{code}
>ant consumer -Durl=tcp://localhost:61616 -Ddurable=true -Dtopic=true -DclientId=test
{code}

3) Observe that the the durable sub has been created on both brokers - either using web admin or JMX

4) Using the JMX transportConnector bean, shut down the 62626 transport connector used for broker connections.

5) Observe that the subscription is still active on the hub, and now inactive on the spoke; which is expected.

6) Start the stopped transportConnector up again through JMX.

7) Observe that the subscription is still active on the hub, but also still inactive on the spoke.

Note: When I remove the conduitSubscriptions=""false"" config, it appears to reestablish the subscription as expected.","5.4.2-fuse-02-00, Mac OS X",,,,,,,,,,,,,,14/Apr/11 8:31 PM;davestanley;testcase.zip;https://issues.jboss.org/secure/attachment/12368850/testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkhbr:,179775,,,,,,,,14/Apr/11 8:31 PM;davestanley;Testcase attached..,"18/Jan/12 8:23 PM;garytully;I tried a few unit tests and did not reproduce on trunk so went back to the test case. The test case works fine with 5.5.1-fuse-01-20 and 5.5.1-fuse-01-11

The durable sub on broker2 moves to the inactive state, active=false when the connector is stopped, and back to active when it is again started. It remains visible via jmx throughout.",,,,,,,,,,,,,,,,,,
maven-activemq-perf-plugin cannot consume or produce any messages when using transactions,MB-858,12516278,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,11/Apr/11 3:45 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,29/Apr/11 3:22 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,Patch for fixing the consumer side of this issue is attached to DEV-3108. Producer side work needs to be done.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3283,,,,0.0,2.0,,1|hzkex3:,179398,,,,,,,,29/Apr/11 3:22 PM;garytully;fix now on 5.5 fuse branch.,29/Apr/11 3:22 PM;garytully;merge complete,,,,,,,,,,,,,,,,,,
Number of established STOMP connections constantly increasing,MB-855,12516275,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,07/Apr/11 10:56 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,22/Jul/11 3:14 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Over time we are seeing an increase in the number of ESTABLISHED connections to the broker even when the clients are long gone.  I've reproduced this issue using Hiram's STOMP benchmarking test:

1.  Benchmark test is located [here|https://github.com/chirino/stomp-benchmark] if you need it.
2.  Attached the activemq configuration I'm using and script to start the broker (startDualBroker.sh)
3.  If the test is run locally on the same machine, I do not see a problem, however, if I run between machines (broker on one machine and consumers on another), I start seeing problems. 
4.  I used a subset of the tests provided by entering the console:
      A. sbt console
      B. val scenario = new com.github.stomp.benchmark.NonBlockingScenario
      C. scenario.host = ""192.168.1.3"" (broker host)
      D. scenario.producers = 10
      E. scenario.consumers = 10
      F.  scenario.login = ""system""
      G. scenario.passcode = ""manager""
      H. scenario.run - to run the test.  Pressing enter stops it. 
5.  In another window on the broker machine run ""netstat -la |grep 61613"".  When a few come up ok, press enter on the performance test.  You'll see a lot of the connections go away, but not all of them.  I added tcpKeepAlive, however, to no avail. If you re-run the test, you'll see another few are left so over time these things grow which is what our customer is seeing.  I also noticed when I stop my broker I get a very confusing message *in the broker log*:

{code}
WARN | Failed to remove connection ConnectionInfo {commandId = 0, responseRequired = true, connectionId = ID:susan-javureks-
macbook-pro.local-51712-1302105605717-2:1, clientId = ID:susan-javureks-macbook-pro.local-51712-1302105605717-2:1, userName = 
system, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = false, clientMaster = true, faultTolerant = 
false}, reason: java.io.IOException: Failed to bind to server socket: stomp://0.0.0.0:61613?keepAlive=true due to: java.net.BindException: 
Address already in use
{code}

I see this for each connection that was left open. 

I also noticed that if I run the performance test with a script and kill the script even more are left hanging around. The customer reports they've seen this problem for several releases now. 






",,,,,,,,,,,,,,,07/Apr/11 2:18 PM;sjavurek;DualStompSSLBroker.xml;https://issues.jboss.org/secure/attachment/12368848/DualStompSSLBroker.xml,07/Apr/11 2:18 PM;sjavurek;dualLogin.config;https://issues.jboss.org/secure/attachment/12368847/dualLogin.config,06/Jul/11 4:12 PM;sjavurek;netstat_stopbroker.rtf;https://issues.jboss.org/secure/attachment/12368872/netstat_stopbroker.rtf,07/Apr/11 2:18 PM;sjavurek;startDualBroker.sh;https://issues.jboss.org/secure/attachment/12368846/startDualBroker.sh,06/Jul/11 4:12 PM;sjavurek;thread_dump.rtf;https://issues.jboss.org/secure/attachment/12368871/thread_dump.rtf,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3315,,,,5.0,5.0,,1|hzkfh3:,179475,,,,,,,,11/May/11 4:19 PM;garytully;comment on the dev issue: http://fusesource.com/issues/browse/DEV-3098?focusedCommentId=71382&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_71382,06/Jul/11 4:04 PM;garytully;seems to still reproduce with two machines. needs more investigation,"06/Jul/11 4:12 PM;sjavurek;Hi Gary, 

I re-ran the test as we discussed.  You can see the following results in the attached files:

netstat_stopbroker, shows output of netstat while the test is still running, output of netstat after I stop the test and the warnings upon shutdown.

thread_dump - is a dump of the broker after the test was stopped. 

Hope it helps. Please let me know if you need anything else.  It's easy enough for me to run. 

Kindest regards, 
Susan","07/Jul/11 10:34 AM;garytully;I was able to reproduce and see some threads in blocking read with established connections. They hang about till the os sees the tcp outage.
The crux here is that keepAlive on the transport option does not set the parameters. The parameters are set on the OS.

Using{code}<transportConnectors>
        <transportConnector name=""stomp"" uri=""stomp://0.0.0.0:61613?transport.keepAlive=true""/>
    </transportConnectors>{code}

For my osx laptop, where the broker was running, the defaults for idle timeout are very high... so it looks like the connection stays for ever.

By changing the defaults at the OS level before starting the broker, the connections don't hang about for more than a few seconds.
{code}gtmbp:~ gtully$ sudo sysctl -w net.inet.tcp.keepidle=10000
Password:
net.inet.tcp.keepidle: 7200000 -> 10000
gtmbp:~ gtully$ sudo sysctl -w net.inet.tcp.keepintvl=5000
net.inet.tcp.keepintvl: 75000 -> 5000{code}

The max idle is supposed to be a multiple (TCP_KEEPCNT) of net.inet.tcp.keepintvl but seems to be 1 for osx. Some good pointers at
http://www.gnugk.org/keepalive.html",22/Jul/11 3:14 PM;garytully;The broker is doing the correct thing w.r.t. keepAlive,,,,,,,,,,,,,,,
ActiveMQ has problems storing >4K messages in Oracle,MB-854,12516274,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,07/Apr/11 10:43 AM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,22/Apr/11 3:08 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"I've discovered that the DefaultJDBCAdapter was changed to facilitate the use of JMS message priorities - of particular note, the signature of the method doAddMessage() has changed. This has the effect that the method doAddMessage() in BlobJDBCAdapter NO LONGER OVERRIDES the default doAddMessage(). So, specifying the the OracleJDBCAdapter, which inherits from BlobJDBCAdapter, has NO EFFECT. As a result, instead of doing nice blob work to get the message into the database, we use the setBinaryData() method in DefaultJDBCAdapter. I believe this is why we're seeing the problem when we breach the 4K limit - by naively doing setBytes() on the prepared statement, we're trying to insert a greater number of bytes into the BLOB than Oracle will allow.
To fix this, we've got to re-implement BlobJDBCAdapter so that it correctly overrides the doAddMessage and performs the right Blob insertion code.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3289,,,,0.0,3.0,,1|hzkev3:,179389,,,,,,,,"20/Apr/11 12:00 PM;garytully;Implemented a fix via https://issues.apache.org/jira/browse/AMQ-3289 and kicked off a new snapshot at apache[1]. The BlobAdapter lagged behind quite a bit.
The fix needs verification with an oracle install. send receive message > 4k

[1] https://builds.apache.org/hudson/job/ActiveMQ-Trunk-Deploy/286/",20/Apr/11 12:16 PM;garytully;The persistence adapter used can be specified via config or found based on a lookup using the name of the jdbc driver. There is a redirection to the oracle_jdbc_adapter. Otherwise the default adapter is used. There are some info log messages to this effect on startup. ,22/Apr/11 3:08 PM;garytully;will be in the next release,,,,,,,,,,,,,,,,,
Authorization failing with Open LDAP,MB-851,12516271,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,04/Apr/11 11:58 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,14/Apr/11 11:33 AM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-03-00,5.5.0-fuse-00-00,,,,,,0,,"Hi, 

We seem to have a problem with when using Open LDAP as the member field in the groupOfNames requires a distinguished name syntax which ultimately points to another entry in the directory.  When I try to use authorization, I get a creation error for an Advisory topic:

{code}
     [java] Caused by: java.lang.SecurityException: User jdoe is not authorized to create: topic://ActiveMQ.Advisory.Connection
     [java]     at org.apache.activemq.security.AuthorizationBroker.addDestination(AuthorizationBroker.java:76)
{code}

I've added an entry for this topic to my LDAP server (please see attached screen shot for complete details).   I can see that the entry is being accessed correctly but we have a mismatch in our comparison logic inside SecurityContext.java which is called from AuthorizationBroker.java (~ line 75):

code..

    public boolean isInOneOf(Set<?> allowedPrincipals) {
        Iterator allowedIter = allowedPrincipals.iterator();
        HashSet<?> userPrincipals = new HashSet<Object>(getPrincipals());
        while (allowedIter.hasNext()) {
            Iterator userIter = userPrincipals.iterator();
            Object allowedPrincipal = allowedIter.next();
            while (userIter.hasNext()) {
                if (allowedPrincipal.equals(userIter.next()))
                    return true;
            }
        }
        return false;
            }
end code ...

The userIter  has ""jdoe"" (id I authenticated with), however my allowedPrincipal is ""uid=jdoe"" which comes from my Open LDAP directory. I attached a screenshot of my definition for this Topic.  The member field must be in distinguished name format so I don't see a way to specify a member without using the ""uid"" format. Based on AMQauth.ldif in  ./activemq-core/src/test/resources/org/apache/activemq/security/,  I also tried groupOfUniqueNames in various ways.  Some of that attributes don't seem to exist or I get syntax errors particularly when using uniqueMember =jdoe. Using ""uid=jdoe"" is fine.

It's possible there is some alternative configuration in LDAP that I simply do not know, however, at the very least I think we can make this easier to use by allowing some flexibility in how these LDAP servers are configured. There seems to be some ambiguity between implementations. In addition, we need to document these steps -- I will open a separate request for that. 

",,,,,,,,,,,MB-852,,,,04/Apr/11 12:16 PM;sjavurek;LDAP-jdoe.tiff;https://issues.jboss.org/secure/attachment/12368842/LDAP-jdoe.tiff,04/Apr/11 12:29 PM;sjavurek;LdapBroker.xml;https://issues.jboss.org/secure/attachment/12368843/LdapBroker.xml,04/Apr/11 12:09 PM;sjavurek;ProducerTool.java;https://issues.jboss.org/secure/attachment/12368840/ProducerTool.java,04/Apr/11 12:29 PM;sjavurek;login.config;https://issues.jboss.org/secure/attachment/12368844/login.config,04/Apr/11 12:29 PM;sjavurek;startLdapAuthBroker.sh;https://issues.jboss.org/secure/attachment/12368841/startLdapAuthBroker.sh,04/Apr/11 12:31 PM;sjavurek;testSample.ldif;https://issues.jboss.org/secure/attachment/12368845/testSample.ldif,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-826,,,,6.0,5.0,,1|hzkezz:,179410,,,,,,,,"04/Apr/11 12:08 PM;sjavurek;Test Case Details:

1.  Open LDAP  comes pre-installed on MAC:
	A.  As root user copy, /private/var/db/openldap/openldap-data/DB_CONFIG.example to /private/var/db/openldap/openldap-data/DB_CONFIG.  I didn't make any changes. 
            B.  Put attached slapd.conf based on slapd.conf.default in /private/etc/openldap
            C.  Start the server:
		  /usr/libexec/slapd -d 255
	D.  Add entries: 
		ldapadd -x -D""cn=admin,dc=fusesource,dc=com"" -W  -f testSample.ldif
                   The password is ""sunflower""

2.  Import the attached LDIF configuration file
3.  Edit activemq.xml file to use LDAP Authentication and Authorization (activemq.xml and login.config attached).
4.  Modify the ProducerTool demo to use jdoe as a user (see attached ProducerTool.java). 
5.  Start broker ( shell script startLDAPBroker.sh)
6.  run the demo ""ant producer -Durl=tcp://0.0.0.0:61666 -Dmax=1""

",04/Apr/11 1:54 PM;sjavurek;Adding link for documentation request,"04/Apr/11 2:21 PM;sjavurek;Hi, 

I found a way to force the broker to create this topic on startup by adding the following:

{code}

    <destinations>
      <topic physicalName=""ActiveMQ.Advisory.Connection"" />
    </destinations>

{code}

I can get past the above error but then run into additional problems.  This time this does look like a bug aswe seem to be trying to query two topics at one time:

{code}

ERROR - LDAPLoginModule                - javax.naming.InvalidNameException: uid=ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic,ou=Topic,
ou=Destination,ou=ActiveMQ,ou=systems,dc=fusesource,dc=com: [LDAP: error code 34 - invalid DN]; remaining name 'uid=ActiveMQ.Advisory.TempQueue,ActiveMQ.Advisory.TempTopic,ou=Topic,ou=Destination,ou=ActiveMQ,
ou=systems,dc=fusesource,dc=com'

{code}

I don't think TempQueue and TempTopic should be combined and looks like AMQ-826 covers this towards the bottom.

","14/Apr/11 11:33 AM;dbosanac;Hi,

I worked past few days on LDAP authorization improvements and implemented the following:

- support for composite destinations
- support to set authorization for all advisory messages (as I think many will opt for that)
- support for authorizing temporary destinations, which was lacking in the original implementation

This is all available now in trunk and can be tested using the latest (20110414.104908-11) snapshot from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/

Some more info (for now) can be found in the added test

https://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/security/LDAPSecurityTest.java
https://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/test/resources/org/apache/activemq/security/activemq.ldif
https://svn.apache.org/repos/asf/activemq/trunk/activemq-core/src/test/resources/org/apache/activemq/security/activemq-ldap.xml

I'll see to make a proper documentation with Fintan next (MB-852)","18/Apr/11 10:58 AM;dbosanac;Now available in latest 5.4.2-fuse (20110418.103715-4) snapshot available from:

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-03-00-SNAPSHOT",,,,,,,,,,,,,,,
viewing message in web console changes message delivery order,MB-850,12516270,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,janstey,janstey,01/Apr/11 1:35 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,06/Apr/11 8:47 AM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Here are the steps to reproduce on a vanilla 5.4.2-fuse-02-00 install:

1. Run the example producer - only a few messages are needed
{code}
ant producer -Dmax=5
{code}
2. Use the web admin to browse the TEST.FOO queue and click on any message to view the contents
3. Run the example consumer.
{code}
ant consumer -Dmax=5
{code}
4. Observe the order in which the messages are received.

Without the web admin browse the messages are received in order. It doesn't appear to matter if the messages are persistent or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3262,,,,0.0,1.0,,1|hzkepr:,179365,,,,,,,,"06/Apr/11 8:47 AM;dbosanac;The problem was when you close the queue browser before you iterated through all messages, it will mark those unbrowsed messages as not consumed and they will be dispatched first to the next consumer.

This is now fixed and available for testing in the latest (20110406.001706-9) snapshot from here:

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/
",,,,,,,,,,,,,,,,,,,
ActiveMQ stops if connection to JDBC store is terminated,MB-846,12516266,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ade1,ade1,24/Mar/11 3:42 PM,25/Mar/11 2:47 PM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,1,,"Was playing with using ActiveMQ with Postgres JDBC store. I find that if I shut down the database, then my master ends abruptly. 

I run: 

{code}
samwise:~ postgres$ /Library/PostgreSQL/9.0/bin/pg_ctl -D /Library/PostgreSQL/9.0/data/ stop -m immediate
waiting for server to shut down.... done
server stopped
{code} 

Then, I see that my master (the ActiveMQ instance that previously held the lock) does the following: 

{code}  
INFO | ActiveMQ JMS Message Broker (ebay, ID:samwise.local-65412-1300980458451-0:1) started
ERROR | Failed to update database lock: org.postgresql.util.PSQLException: An I/O error occured while sending to the backend.
org.postgresql.util.PSQLException: An I/O error occured while sending to the backend.
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:283)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.execute(AbstractJdbc2Statement.java:500)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeWithFlags(AbstractJdbc2Statement.java:388)
	at org.postgresql.jdbc2.AbstractJdbc2Statement.executeUpdate(AbstractJdbc2Statement.java:334)
	at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.postgresql.ds.jdbc23.AbstractJdbc23PooledConnection$StatementHandler.invoke(AbstractJdbc23PooledConnection.java:455)
	at $Proxy6.executeUpdate(Unknown Source)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.keepAlive(DefaultDatabaseLocker.java:161)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:604)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:290)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
Caused by: java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:168)
	at org.postgresql.core.VisibleBufferedInputStream.readMore(VisibleBufferedInputStream.java:145)
	at org.postgresql.core.VisibleBufferedInputStream.ensureBytes(VisibleBufferedInputStream.java:114)
	at org.postgresql.core.VisibleBufferedInputStream.read(VisibleBufferedInputStream.java:73)
	at org.postgresql.core.PGStream.ReceiveChar(PGStream.java:274)
	at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1660)
	at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:257)
	... 20 more
 INFO | No longer able to keep the exclusive lock so giving up being a master
 INFO | ActiveMQ Message Broker (ebay, ID:samwise.local-65412-1300980458451-0:1) is shutting down
 INFO | Connector openwire Stopped
 INFO | PListStore:/opt/apache-activemq-5.4.2-fuse-03-09/data/ebay/tmp_storage stopped
 WARN | Exception while rollbacking the connection on shutdown
org.postgresql.util.PSQLException: This connection has been closed.
	at org.postgresql.jdbc2.AbstractJdbc2Connection.checkClosed(AbstractJdbc2Connection.java:714)
	at org.postgresql.jdbc2.AbstractJdbc2Connection.rollback(AbstractJdbc2Connection.java:731)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.postgresql.ds.jdbc23.AbstractJdbc23PooledConnection$ConnectionHandler.invoke(AbstractJdbc23PooledConnection.java:352)
	at $Proxy4.rollback(Unknown Source)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.stop(DefaultDatabaseLocker.java:139)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stop(JDBCPersistenceAdapter.java:327)
	at org.apache.activemq.util.ServiceStopper.stop(ServiceStopper.java:41)
	at org.apache.activemq.broker.BrokerService.stop(BrokerService.java:586)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.stopBroker(JDBCPersistenceAdapter.java:620)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.databaseLockKeepAlive(JDBCPersistenceAdapter.java:612)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter$3.run(JDBCPersistenceAdapter.java:290)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:441)
	at java.util.concurrent.FutureTask$Sync.innerRunAndReset(FutureTask.java:317)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:150)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:98)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:204)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:680)
 INFO | ActiveMQ JMS Message Broker (ebay, ID:samwise.local-65412-1300980458451-0:1) stopped

{code} 

My slave keeps on happily trying to connect to the server until it comes up again; however, the master does not restart. Surely it would be better if the master entered a polling loop to try to reconnect to the database and acquire the lock? 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkekn:,179342,,,,,,,,,,,,,,,,,,,,,,,,,,,
warnOnProducerFlowControl is never reset to 'true' after the first INFO message is logged.,MB-843,12516263,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ade1,ade1,22/Mar/11 8:33 AM,25/Mar/11 2:45 PM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,See issue https://issues.apache.org/jira/browse/AMQ-3233,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3233,,,,0.0,0.0,,1|hzkejz:,179339,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory usage limits may be reported incorrectly.,MB-842,12516262,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ade1,ade1,22/Mar/11 8:31 AM,25/Mar/11 2:50 PM,29/Nov/16 4:15 PM,,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,See issue AMQ-3234 at Apache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3234,,,,0.0,0.0,,1|hzkel3:,179344,,,,,,,,,,,,,,,,,,,,,,,,,,,
Stomp message frames are logged by default containing the username and password,MB-840,12516260,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,18/Mar/11 12:59 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,21/Mar/11 12:24 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"Hi,

There's been a bit of work in this area as of late MB-824 and MB-833.  All is good with these bugs, however, when a bad password is sent the activemq log prints the following warning messages:

{code}
22011-03-18 09:38:30,634 [38.171.43:40701] WARN TransportConnection - Failed to add Connection ID:gridmsg006.cern.ch-38456-1300437460886-2:3, reason: java.lang.SecurityException: User name or password is invalid.
2011-03-18 09:38:30,634 [38.171.43:40701] WARN ProtocolConverter - Exception occurred processing:
CONNECT
host:gridmsg006
accept-version:1.0,1.1
passcode:bar
login:foo

: java.lang.SecurityException: User name or password is invalid.
2011-03-18 09:38:30,636 [38.171.43:40701] INFO Transport - Transport failed: java.io.IOException: User name or password is invalid.

{code}

I was able to see this here starting a secure broker (same as MB-824)  and using the STOMP example we ship with bum password. 
Is it possible to star that out or make it configurable if it is printed.  I tinkered around with the settings for:

{code}
log4j.logger.org.apache.activemq.transport.stomp=TRACE, stomp
{code}

But even on INFO this gets printed. 

Thanks, 

Susan",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3231,,,,0.0,1.0,,1|hzkei7:,179331,,,,,,,,"21/Mar/11 12:24 PM;garytully;passcode now masked on trunk, will be in 5.5",,,,,,,,,,,,,,,,,,,
Shared KahaDB doesn't lock on HP-UX exported NFS share,MB-839,12516259,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,17/Mar/11 1:05 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,25/Mar/11 1:46 PM,5.4.2-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"From DEV-3043, when a HP-UX NFS share is used for KahaDB in a master-slave broker scheme the locking doesn't work. You get the following in the logs:

INFO | Database /nfs_share/data/kahadb/lock is locked... waiting 10 seconds for the database to be unlocked. Reason: java.io.IOException: Unknown error 524

This is a bug in the JRE as described here:

http://bugs.sun.com/view_bug.do?bug_id=6628575

You can work around this by using trylock(0,0, false) instead of trylock() in LockFile.java. 

Replace
lock = readFile.getChannel().tryLock();
With
lock = readFile.getChannel().tryLock(0,0,false);

User has this patched version of ActiveMQ in production and is working. Will need to determine if this change would affect other platforms though.","ubuntu 10.10
java version ""1.6.0_24""
nfs share on hp unix",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3237,,,,0.0,2.0,,1|hzkeu7:,179385,,,,,,,,"25/Mar/11 1:46 PM;dbosanac;The similar fix has been applied 

{code}FileLock lock = fc.tryLock(0, fc.size(), false);{code}

as suggested in evaluation of the JRE bug.

It will be available in next 5.5.0-fuse-00-00 release

You can test the latest (20110325.131320-6) snapshot from here 

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/","11/Apr/11 8:45 AM;dbosanac;Hi,

there's a follow up on this issue, as user reported that the new fix doesn't work on win. So the new modified version of the fix is now available in the latest (20110408.180305-10) snapshot from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.5-fuse-SNAPSHOT/

It'd be good if customer could verify it.",,,,,,,,,,,,,,,,,,
Wildcards do not work with included destinations for network connectors.,MB-837,12516257,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ccorsi1,ccorsi1,09/Mar/11 5:47 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,17/Mar/11 10:57 AM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Messages are not being received whenever wildcard subscriptions are used by a network connector for statically or dynamically included destinations.

This is also a problem when using virtual destinations but it looks like this is the same symptom and the two should be related.",,,,,,,,,,,,,,,11/Mar/11 3:21 PM;ccorsi1;AbstractTwoBrokerNetworkConnectorWildcardIncludedDestinationTestSupport.java;https://issues.jboss.org/secure/attachment/12368839/AbstractTwoBrokerNetworkConnectorWildcardIncludedDestinationTestSupport.java,11/Mar/11 3:21 PM;ccorsi1;TwoBrokerNetworkConnectorWildcardDynamicallyIncludedDestinationTest.java;https://issues.jboss.org/secure/attachment/12368838/TwoBrokerNetworkConnectorWildcardDynamicallyIncludedDestinationTest.java,11/Mar/11 3:21 PM;ccorsi1;TwoBrokerNetworkConnectorWildcardStaticallyIncludedDestinationTest.java;https://issues.jboss.org/secure/attachment/12368837/TwoBrokerNetworkConnectorWildcardStaticallyIncludedDestinationTest.java,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3220,,,,3.0,2.0,,1|hzkehr:,179329,,,,,,,,"11/Mar/11 3:21 PM;ccorsi1;These testcases shows the issue with the dynamically and statically included destinations issue using wildcard. 

They also include tests that do not use wildcards that are run successfully.","17/Mar/11 10:57 AM;dbosanac;This should be fixed and available in the latest snapshot (20110317.100112-3) available from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-03-00-SNAPSHOT/

Both test cases are included. Note that ""static"" case works correctly, and that the only thing missing was the configuration for the local destinations",,,,,,,,,,,,,,,,,,
Advisory Messages not being cleaned up when queue removed,MB-836,12516256,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,socallag,socallag,07/Mar/11 3:51 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,02/Mar/12 2:15 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,see test attached,,,,,,,,,,,,,,,07/Mar/11 3:51 PM;socallag;AdvisoryTopicTest.java;https://issues.jboss.org/secure/attachment/12368836/AdvisoryTopicTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,0.0,,1|hzkhxz:,179876,,,,,,,,,,,,,,,,,,,,,,,,,,,
using durable subs messages stay in KahaDB indefinitely if broker is restarted,MB-834,12516253,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,janstey,janstey,04/Mar/11 5:45 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Mar/11 3:19 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,0,,"Test case from DEV-2707 comment http://fusesource.com/issues/browse/DEV-2707?focusedCommentId=64476&page=com.atlassian.jira.plugin.system.issuetabpanels%3Acomment-tabpanel#action_64476 demonstrates that after running for a while, with restarts every 3 minutes, KahaDB log files build up and seem to never be reclaimed. For instance, log files look like:

{code}
drwxr-xr-x  23 user  staff      782 Mar  3 14:23 .
drwxr-xr-x   4 user  staff      136 Mar  3 13:22 ..
-rw-r--r--   1 user  staff  5243078 Mar  3 13:25 db-4.log
-rw-r--r--   1 user  staff  5243010 Mar  3 13:26 db-5.log
-rw-r--r--   1 user  staff  5243644 Mar  3 13:50 db-38.log
-rw-r--r--   1 user  staff  5243478 Mar  3 13:51 db-39.log
-rw-r--r--   1 user  staff  5243003 Mar  3 13:57 db-48.log
-rw-r--r--   1 user  staff  5242976 Mar  3 13:59 db-51.log
-rw-r--r--   1 user  staff  5243047 Mar  3 14:12 db-74.log
-rw-r--r--   1 user  staff  5242897 Mar  3 14:13 db-75.log
-rw-r--r--   1 user  staff  5242950 Mar  3 14:15 db-78.log
-rw-r--r--   1 user  staff  5242998 Mar  3 14:15 db-79.log
-rw-r--r--   1 user  staff  5242924 Mar  3 14:16 db-80.log
-rw-r--r--   1 user  staff  5242965 Mar  3 14:18 db-83.log
-rw-r--r--   1 user  staff  5243749 Mar  3 14:18 db-84.log
-rw-r--r--   1 user  staff  5243027 Mar  3 14:19 db-85.log
-rw-r--r--   1 user  staff  5242999 Mar  3 14:20 db-86.log
-rw-r--r--   1 user  staff  5242904 Mar  3 14:22 db-89.log
-rw-r--r--   1 user  staff  5243047 Mar  3 14:23 db-90.log
-rw-r--r--   1 user  staff  4718592 Mar  3 14:23 db-91.log
-rw-r--r--   1 user  staff  6303744 Mar  3 14:23 db.data
-rw-r--r--   1 user  staff      553 Mar  3 14:23 db.free
-rw-r--r--   1 user  staff  3299608 Mar  3 14:23 db.redo
{code}

whereas when there are no restarts, the log files eventually do get deleted:

{code}
drwxr-xr-x  9 user  staff      306 Mar  3 15:30 .
drwxr-xr-x  4 user  staff      136 Mar  3 15:04 ..
-rw-r--r--  1 user  staff  5243016 Mar  3 15:29 db-74.log
-rw-r--r--  1 user  staff  5243353 Mar  3 15:29 db-75.log
-rw-r--r--  1 user  staff  5243785 Mar  3 15:30 db-76.log
-rw-r--r--  1 user  staff  4718592 Mar  3 15:30 db-77.log
-rw-r--r--  1 user  staff  8957952 Mar  3 15:30 db.data
-rw-r--r--  1 user  staff  3303712 Mar  3 15:30 db.redo
-rw-r--r--  1 user  staff        0 Mar  3 15:04 lock
{code}",http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/apache-activemq-5.4.2-fuse-20110225.134226-7-bin.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkefz:,179321,,,,,,,,"07/Mar/11 3:00 PM;garytully;again, thanks for the test. I found the culprit, the durable unsubscribe processing was not correctly persisted so after a restart, stale state was in use which blocked journal data file cleanup.
Issue: https://issues.apache.org/jira/browse/AMQ-3206","07/Mar/11 3:19 PM;garytully;fix on 5.4.x-fuse, will be in the next release and in tonights snapshot.",,,,,,,,,,,,,,,,,,
Allow JAAS GuestLoginModule to fail if users specify a password,MB-833,12516254,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,04/Mar/11 4:03 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,04/Mar/11 5:21 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,broker,,,0,,"The GuestLoginModule currently always allows login so it is a handy default. In the case where two login modules are configured, it is nice to have the guest login module only succeed if there are no password credentials such that the second module gets a chance to authenticate. This ensures that only anonymous users (or users that do not supply a password, map to guest, where as any user that supplies a password will have to pass authorization or fail.

Without this option, and using GuestLoginModule sufficient, a failed authentication attempt will map you to the guest user.
This enhancement will implement the credentialsInvalidate attribute.
With the following config, if you don't specify a password you are guest. If you do specify a valid username/password pair you will authenticate, else you are rejected.

{code}
activemq-guest-when-no-creds-only-domain {
    org.apache.activemq.jaas.GuestLoginModule sufficient
       debug=true
       credentialsInvalidate=true
       org.apache.activemq.jaas.guest.user=""guest""
       org.apache.activemq.jaas.guest.group=""guests"";

    org.apache.activemq.jaas.PropertiesLoginModule requisite
        debug=true
        org.apache.activemq.jaas.properties.user=""org/apache/activemq/security/users.properties""
        org.apache.activemq.jaas.properties.group=""org/apache/activemq/security/groups.properties"";
};
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3198,,,,0.0,1.0,,1|hzkefj:,179319,,,,,,,,04/Mar/11 5:21 PM;garytully;fix on 5.4.x-fuse branch. ,,,,,,,,,,,,,,,,,,,
> Wildcard does not seem to match for all trailing elements,MB-831,12516250,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,03/Mar/11 12:04 AM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,07/Mar/11 4:08 PM,,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,0,,"I have the following policy configured..

{code}
        <policyEntry topic=""topic>"" memoryLimit=""1mb"">
			<deadLetterStrategy>
			   <sharedDeadLetterStrategy processExpired=""false"" processNonPersistent=""false""/>
			</deadLetterStrategy>
			<dispatchPolicy>
			   <simpleDispatchPolicy />
			</dispatchPolicy>
			<pendingMessageLimitStrategy>
			  <constantPendingMessageLimitStrategy limit=""10""/>
			</pendingMessageLimitStrategy>
			<subscriptionRecoveryPolicy>
			  <noSubscriptionRecoveryPolicy/>
			</subscriptionRecoveryPolicy>  
          </policyEntry>
{code}

When I try and get a destination policy for my topic ""topic/requests""

{code}
  ActiveMQDestination destination = (ActiveMQDestination) createDestination(""topic/requests"");
  PolicyEntry entry = broker.getDestinationPolicy().getEntryFor(destination);
{code}

In this case entry is null. 

If I change the policy entry to be:

{code}
<policyEntry topic="">"" memoryLimit=""1mb"">

OR

<policyEntry topic=""topic.>"" memoryLimit=""1mb""> with destination ""topic.replies""

{code}

I get the destination policy..

",5.4.2-fuse-SNAPSHOT,,,,,,,,,,,,,,03/Mar/11 12:05 AM;davestanley;testcase.zip;https://issues.jboss.org/secure/attachment/12368835/testcase.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3204,,,,1.0,2.0,,1|hzkegv:,179325,,,,,,,,"03/Mar/11 12:05 AM;davestanley;Testcase attached. Unzip in 5.4.2-fuse-SNAPSHOT from root directory and run from IDE.
","07/Mar/11 4:08 PM;dbosanac;I implemented plugin that converts any non-standard path separator to a default one used inside the broker. So with this, all configuration in broker should use default {{FOO.BAR.>}} syntax, but clients can connect and use path syntax of their own (like {{FOO/BAR/>}}). 

https://cwiki.apache.org/confluence/display/ACTIVEMQ/Wildcards#Wildcards-Custompathseparator

Note that plugin should be last in the list, if it should work with other plugins (security for example).

It can be also set without using xbean syntax, like

{code}
<plugins>
   ...
   <bean xmlns=""http://www.springframework.org/schema/beans"" class=""org.apache.activemq.broker.util.DestinationPathSeparatorBroker""/>
</plugins>
{code}",,,,,,,,,,,,,,,,,,
Connecting to broker using discovery protocol fails,MB-830,12516251,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,28/Feb/11 4:22 PM,07/Nov/13 5:43 AM,29/Nov/16 4:15 PM,21/Mar/11 6:11 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-02-00,,,,broker,,,0,,"We are configuring the JmsFactory using Tomcat's JNDI with a  factory using Spring JMS. Start a producer with a broker down, the application will hang. Start the broker and a bind error occurs: 

{code}
The stack trace error we obtain is :
javax.jms.JMSException: Uncategorized exception occured during JMS processing; 
nested exception is javax.jms.JMSException: 
Invalid connect parameters: {initialReconnectDelay=500, maxReconnectAttempts=10, useExponentialBackOff=false}
at com.vsct.vsc.component.jms.SpringJmsProducer.sendMessage_aroundBody0(SpringJmsProducer.java:42) ~[jms-tec-1.0.4-3.jar:na]
at com.vsct.vsc.component.jms.SpringJmsProducer$AjcClosure1.run(SpringJmsProducer.java:1) ~[jms-tec-1.0.4-3.jar:na]
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2981,,,,0.0,4.0,,1|hzkein:,179333,,,,,,,,"28/Feb/11 5:03 PM;dbosanac;Using the following URI

discovery:(multicast://default?group=test&reconnectDelay=1000&maxReconnectAttempts=30&useExponentialBackOff=false

with reconnection params in the inner URI works. We need to change the docs for this.","02/Mar/11 11:46 AM;sjavurek;Although, the change in format works, it seems the parameters are ignored.  I modified the discovery test as follows:

{code}
...
		//connector.setDiscoveryUri(new URI(""multicast://default?group=test""));  <=== comment out so multicast isn't set up
...
public void testConnect() throws Exception {
		ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(
		""discovery:(multicast://default?group=test&reconnectDelay=1000&maxReconnectAttempts=5&useExponentialBackOff=false)"");
        //""failover://(tcp://localhost:61616)?reconnectDelay=1000&maxReconnectAttempts=5"");
{code}

As you can see the maxAttempts is set to 5, however, with the logging turned up I can see it just keeps trying and trying long past a count of 5. 
{code}
   ] DEBUG FailoverTransport              - Waking up reconnect task
2011-03-02 11:40:42,720 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:42,720 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 10 ms before attempting connection. 
2011-03-02 11:40:42,730 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:42,730 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 20 ms before attempting connection. 
2011-03-02 11:40:42,751 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:42,751 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 40 ms before attempting connection. 
2011-03-02 11:40:42,792 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:42,792 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 80 ms before attempting connection. 
2011-03-02 11:40:42,873 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:42,873 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 160 ms before attempting connection. 
2011-03-02 11:40:43,033 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:43,033 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 320 ms before attempting connection. 
2011-03-02 11:40:43,354 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:43,354 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 640 ms before attempting connection. 
2011-03-02 11:40:43,995 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
2011-03-02 11:40:43,995 [ActiveMQ Task  ] DEBUG FailoverTransport              - Waiting 1280 ms before attempting connection. 
2011-03-02 11:40:45,276 [ActiveMQ Task  ] DEBUG FailoverTransport              - urlList connectionList:[]
{code}

If I use the failover approach as commented out above, I can see the appropriate failure after 5 times. Anytime, I change the uri format for the discovery, I end up with errors. 
","02/Mar/11 4:56 PM;dbosanac;The fix is available in the latest snapshot (20110302.142144-13) from the following URL

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/","21/Mar/11 6:11 PM;dbosanac;5.4.1-fuse-02-00 has been released. Artifacts can be found at 

http://repo.fusesource.com/nexus/content/groups/public/org/apache/activemq/apache-activemq/5.4.1-fuse-02-00/

and release notes are here

http://fusesource.com/wiki/display/ProdInfo/FUSE+Message+Broker+v5.4.1-fuse+Release+Notes",,,,,,,,,,,,,,,,
Consumers won't get msgs after JMX operation removeMatchingMessages() was called on a queue.,MB-829,12516249,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,mielket,mielket,24/Feb/11 3:48 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,02/Mar/11 5:00 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,broker,,,0,,"Follow these steps to reproduce the problem:
- start broker
- start a producer and send two or more messages to a queue
- start jconsole
- click on the queue and select Operations.
- click browse and copy the JMSMessageID of the first message into clipboard
- invoke JMX operation removeMatchingMessages() with argument JMSMessageID='<message id>' , where <message id> is the copied JMSMessageID.
- verify that >= 1 message are still on the queue
- now start a consumer that connects to this queue. It won't get any messages.
",5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3193,,,,0.0,1.0,,1|hzkeen:,179315,,,,,,,,"02/Mar/11 5:00 PM;dbosanac;The fix is available in the latest snapshot (20110302.142144-13) from the following URL

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
TimeSpan.MaxValue is invalid with ActiveMQ NMS 1.5.0,MB-828,12516248,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,sjavurek,sjavurek,24/Feb/11 3:30 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,15/Mar/12 2:29 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Hi, 

When using TimeSpan.MaxValue an error is thrown that the value is out of range and not a valid Win32 File Time.

{code}

Apache.NMS.ActiveMQ.Test.MessageConsumerTest.TestReceiveIgnoreExpirationMessage(AutoAcknowledge,NonPersistent,DEFAULT):
System.ArgumentOutOfRangeException : Not a valid Win32 FileTime.
Parameter name: fileTime

With call stack :

at System.DateTime.FromFileTimeUtc(Int64 fileTime)
at Apache.NMS.Util.DateUtils.ToDateTimeUtc(Int64 javaTime)
at Apache.NMS.ActiveMQ.Commands.Message.IsExpired()
at Apache.NMS.ActiveMQ.MessageConsumer.Dequeue(TimeSpan timeout)
at Apache.NMS.ActiveMQ.MessageConsumer.ReceiveNoWait()
at Apache.NMS.ActiveMQ.Test.MessageConsumerTest.TestReceiveIgnoreExpirationMessage(AcknowledgementMode ackMode, MsgDeliveryMode deliveryMode, ExpirationOptions expirationOption) in C:\sue\Fuse\activemqNMS\Apache.NMS.ActiveMQ-1.5.0-src\src\test\csharp\MessageConsumerTest.cs:line 95

{code}

+Test Case+
To reproduce this problem, modify MessageConsumerTest.TestReceiveIgnoreExpirationMessage by replacing line

msg.NMSTimeToLive = TimeSpan.FromMilliseconds(2000);

With

msg.NMSTimeToLive = TimeSpan.MaxValue;

Run the first nunit test:

Apache.NMS.ActiveMQ.Test.MessageConsumerTest.TestReceiveIgnoreExpirationMessage(AutoAcknowledge,NonPersistent,DEFAULT):

As a side note, [AMQNET-64|https://issues.apache.org/jira/browse/AMQNET-64] *may* be related.  Per the [MSDN | http://msdn.microsoft.com/en-us/library/system.timespan.maxvalue.aspx] the TimeSpan.MaxValue field ""is equivalent to Int64.MaxValue"" which is bigger than the Int32.MaxValue. 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzki0v:,179889,,,,,,,,15/Mar/12 2:29 PM;tabish121;Fix in latest NMS Release v1.5.4,,,,,,,,,,,,,,,,,,,
Message broker won't come back when the databse goes offline and comes back online,MB-827,12516247,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,cmoulliard,cmoulliard,20/Feb/11 4:01 PM,07/Nov/13 5:17 AM,29/Nov/16 4:15 PM,20/Jun/12 3:12 PM,5.3.1-fuse-02-01,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-07-11,,,,,,,1,,See jira ticket of ActiveMQ --> https://issues.apache.org/jira/browse/AMQ-2497,,,,,,,,,,,MB-1037,MB-1038,MB-1156,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkisn:,180014,,,,,,,,"04/Apr/11 5:53 PM;garytully;There has been a fix for this issue in the standalone case. See the commit attached to AMQ-2497
Charles, is your use case focused on jdbc master/slave with locking?",20/Jun/12 3:12 PM;garytully;Resolved via http://fusesource.com/issues/browse/MB-1156,,,,,,,,,,,,,,,,,,
Flooding Temp Usage results in broker not being able to deal with further consumers or producers.,MB-826,12516246,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,18/Feb/11 5:23 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,20/Jun/11 12:56 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-53,,,,,,,0,,"A user has an issue where when using a jdbcPersistenceAdapter and low tempUsage they can flood the broker with lots of messages and even though a consumer can read the messages off subsequent connections to the broker do not allow messages to be sent or received. The broker will continually spit out messages like:
 Usage Manager Temp Store is Full. Stopping producer (ID:XXXX) to prevent flooding queue://MyQueue. See http://activemq.apache.org/producer-flow-control.html for more info (blocking for: 7971s) | org.apache.activemq.broker.region.Queue | ActiveMQ Transport: tcp:///xxx.xxx.xxx.xxx:50646

Interestingly the (blocking for XXXXs) does reset when a producer/consumer connects to the broker but no messages are consumed and only a small number produced.

I have reproduced this using the embedded Derby DB and the examples ant producer/consumer.

The interesting thing is if we use the kahaDB as the persistenceAdapter with the same low tempUsage all works fine and the messages not being consumed will be spooled out to disk as expected, the Usage manager temp store doesn't fill up.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3034,,,,0.0,2.0,,1|hzkijz:,179975,,,,,,,,"20/Jun/11 12:50 PM;socallag;Fixed as a result of work done by Gary.

https://issues.apache.org/jira/browse/AMQ-3288
https://issues.apache.org/jira/browse/AMQ-2063",20/Jun/11 12:56 PM;dbosanac;This issue should be fixed in 5.5.0 release,,,,,,,,,,,,,,,,,,
Loss of messages when deleting the entire activemq-data/kr-store/,MB-825,12516245,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,sjavurek,sjavurek,18/Feb/11 3:55 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,,5.3.1-fuse-01-00,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"There is a message loss of persisted messages in latest ActiveMQ, using AMQ Persistent Store. The following test case for both 5.3.0.1-fuse and 5.4.2-fuse-01-00 exemplifies the problem. Here's the broker configuration:

{code}
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""
  http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core 
    http://activemq.apache.org/schema/core/activemq-core.xsd"">

  
    <broker xmlns=""http://activemq.apache.org/schema/core"" 
		brokerName=""localhost"" 
		dataDirectory=""${activemq.base}/data"" 
		destroyApplicationContextOnStop=""true"">
 
        <managementContext>
            <managementContext createConnector=""true"" connectorPort=""2010""/>
        </managementContext>

        <persistenceAdapter>
            <amqPersistenceAdapter directory=""activemq-data"" maxFileLength=""1mb""
				directoryArchive=""activemq-data-archive"" archiveDataLogs=""true"" 
				recoverReferenceStore=""true""/>
        </persistenceAdapter>
        
        <transportConnectors>
            <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61616""/>
        </transportConnectors>

    </broker>
</beans>
{code}

Then, run the following script to populate the AMQ Store data logs. This script has been carefully thought out to leave a message in data-1, the first log file. Note that the script should be run in the ActiveMQ examples/ directory.

{code}

call ant -Dsubject=Store1 -Ddurable=true -Dmax=1 producer
call ant -Dsubject=Store2 -Ddurable=true -Dmax=1 producer
call ant -Dsubject=Store3 -Ddurable=true -Dmax=200 -DmessageSize=5000 producer
call ant -Dsubject=Store2 -Ddurable=true -Dmax=1 consumer
call ant -Dsubject=Store3 -Ddurable=true -Dmax=200 -DmessageSize=5000 producer
call ant -Dsubject=Store3 -Ddurable=true -Dmax=400 consumer
{code}

After running this script, you should see 3 data files in the AMQ Store journal directory.

Now, shutdown the broker, and delete the KR indices (activemq-data/kr-store/*).

On restart, the AsyncDataManager thread will go through the data files, and errantly determine that data-1 has no references. It moves data-1 to the archive directory. As a result, we see that the message we sent to queue 'Store1' is missing.

Only deleting the  ""state"" folder in activemq-data/kr-store/  resolves this issue, however, the customer would like to see the use case work when deleting the entire kr-store file.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkedb:,179309,,,,,,,,,,,,,,,,,,,,,,,,,,,
"When two loging modules configured, one succeeds, one fails but both are adding their principals",MB-824,12516243,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,16/Feb/11 6:13 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,18/Feb/11 4:17 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,0,,"When using the jaasDualAuthentication plug-in there are problems with the userid's. The properties files contain:

    * one ""system"" account in the ""admins"" group
    * one ""user"" account in the ""consumers"" group

What we would like to define as ACLs:

    * ""admins"" can do anything
    * only ""consumers"" can consume
    * anybody can send messages to any destination

The main problem with the login.config file above is that, if you supply ""system"" as login and anything as password (even an invalid password), the broker lets you in and treat you as the ""system"" user.",,,,,,,,,,,,,,,16/Feb/11 6:18 PM;sjavurek;XBeanSecurityWithGuestTest.java;https://issues.jboss.org/secure/attachment/12368830/XBeanSecurityWithGuestTest.java,16/Feb/11 6:18 PM;sjavurek;jaas-broker-guest.xml;https://issues.jboss.org/secure/attachment/12368831/jaas-broker-guest.xml,16/Feb/11 6:18 PM;sjavurek;loginWithGuest.config;https://issues.jboss.org/secure/attachment/12368832/loginWithGuest.config,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3182,,,,3.0,2.0,,1|hzkedj:,179310,,,,,,,,"16/Feb/11 6:53 PM;garytully;corresponding issues at apache:
https://issues.apache.org/jira/browse/AMQ-3182 - JAAS PropertiesLoginModule does not maintain internal validity state, so will commit in error after an invalid login attempt
https://issues.apache.org/jira/browse/AMQ-3183 - Set JMSXUserID value based on authenticated principal",18/Feb/11 4:17 PM;garytully;fix committed to 5.4-fusesource branch. Will be in tonight's snapshot.,,,,,,,,,,,,,,,,,,
topics are removed on restart of broker,MB-820,12516240,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,garytully,janstey,janstey,07/Feb/11 8:18 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,25/Feb/11 4:25 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"1. Start new broker instance
2. In admin console, create a new topic
3. Shut down broker cleanly
4. On the next startup the topic is gone

In further testing, even if I produce/consume messages to this new topic, it is also gone on a restart. The only way I could get the topic to stay was to create a durable subscriber on that topic.

I checked back through several versions and this was working in MB 5.3.0-fuse-01-00 (no 5.4 version seemed to work).",MB 5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkedz:,179312,,,,,,,,"11/Feb/11 4:43 PM;garytully;all destinations are created on demand by activemq. without durable subs there are not messages persisted so no need to recreate the topic, but it will be created on demand on the next send or next consumer.

you can configure a destination in the xml  configuration if you want it to always appear, but this is typically only needed when security disables dynamic auto creation.
","11/Feb/11 4:44 PM;garytully;if this worked in the past, it should not have.",,,,,,,,,,,,,,,,,,
Virtual destinations and wildcards,MB-819,12516241,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,07/Feb/11 2:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,04/Mar/11 11:27 AM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,0,,"If we would like to subscribe through a virtual queue to the topic topic://test.> in theory we should subscribe to the queue queue://Consumer.a.test.>

Unfortunately this doesn't work because the queue queue://Consumer.a.test.> *is not created* at the subscription step.

However, if we create the queue queue://Consumer.a.test.> , for instance sending a message to it, we will have the expected virtual destination behavior.

Looking at the virtual destinations semantic, subscribing to queue://Consumer.a.test.> should create the queue queue://Consumer.a.test.>
",Fuse MB 5.4.x,,,,,,,,,,,,,,07/Feb/11 2:18 PM;davestanley;SingleBrokerVirtualDestinationsWithWildcardTest.java;https://issues.jboss.org/secure/attachment/12368826/SingleBrokerVirtualDestinationsWithWildcardTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3197,,,,1.0,3.0,,1|hzkef3:,179317,,,,,,,,07/Feb/11 2:18 PM;davestanley;Attaching testcase,"08/Feb/11 10:16 AM;davestanley;Tracking, comment from Dejan

{quote}
It will not work at the moment. The ""problem"" is that when you subscribe with the wildcard consumer, no destinations will be created. And the filter that implements virtual topics only send messages to pre-existing destinations. 
{quote}","04/Mar/11 11:27 AM;dbosanac;The issue is fixed and merged to fuse branch. You can test the latest (20110304.104603-14) snapshot

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,
Network of Brokers not forwarding all of pending Messages after failover,MB-815,12516235,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,joe.luo,joe.luo,31/Jan/11 10:49 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Feb/11 7:11 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"We have an ActiveMQ cluster of 2 network of brokers. What we see is that when everything starts up all client nodes are distributed evenly to each broker. Then when one of the network of brokers stops the clients properly failover to the active broker. When the stopped broker restarts only partial of the pending messages on that broker are forwarded to the active broker through bridge for delivery to active clients. The rest of pending message won't be consumed unless I start a new client to directly connect to the restarted broker.

Here is a detailed recipe for the ticket.

   1. Start two network of broker nodes: broker1 and broker2;
   2. Connect a consumer to using the failover protocol with ""randomizer=false"" to the broker1 and the broker2, so it will connect to the broker1 first;
   3. Start two producers and connect them to the broker1 and broker2 respectively.
   4. Continuously post messages onto the broker1 and the broker2. The consumer should receive messages sent to both brokers.
   4. Let the broker1 to build up a number of pending messages (as the messages received by the broker2 will be forwarded to the broker1 through  bridge). Say at least 3 or 4 thousands messages;
   5. Stop the broker1.
   6. Note that the consumer will fail over to the broker2 and continuously receive messages that are sent to the broker2.
   7. Restart the stopped broker1.
   8. Note that the messages in the restarted broker1 now only get delivered to the consumer partially (about two hundreds) and the rest of the pending messages will not get forwarded UNLESS I start a new consumer to connect to the broker1.
",,,,,,,,,,,,,,,31/Jan/11 10:57 AM;joe.luo;testcase.zip;https://issues.jboss.org/secure/attachment/12368825/testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkecv:,179307,,,,,,,,"31/Jan/11 10:57 AM;joe.luo;Instruction to start the test case:
1. start the two brokers (see broker configuration files);
2. start the consumer by ""ant consumer"";
3. start the two producers by ""ant producer1"" and ""ant producer2"";
4. wait till the two producers to produce over 3000 messages each, then stop the broker1 (note, the producer1 will exit too due to connection down);
5. now you can stop the producer2.
6. then restart the broker1.","10/Feb/11 3:55 PM;garytully;joe, this looks like a case of stuck messages because they cannot be forwarded back to the broker from where they came.

Messages flow from 1 to 2, are consumed from 2. Most of the messages get forwarded to 2. When 1 starts again, it cannot get the messages back from 2.

TRACE level logging for org.apache.activemq.command.NetworkBridgeFilter will help validate this. Note that you will see ignored dispatch attempts.

The way to work around this is to have the consumers alternate across available brokers.
Either using the failover cluster update options, enabled  on a broker TransportConnector via updateClusterClients and rebalanceClusterClients
or using a connection pool for consumers with org.apache.activemq.pool.ConnectionPool.setExpiryTimeout(long) such that they get a chance to rebalance periodically.  

The alternative strategy is to have the broker periodically allow looping messages in the network using some heuristic. There is an outstanding apache jjia for this feature. https://issues.apache.org/jira/browse/AMQ-2484",17/Feb/11 7:11 PM;garytully;marking resolved based on Dave's comment.,,,,,,,,,,,,,,,,,
The wrapper.conf shipped in the linux-x86-32 and linux-x86-64 incorrectly specifies libwrapper.so,MB-814,12516236,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,28/Jan/11 6:49 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,14/Apr/11 12:16 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,,,,0,,"Hi, 

The wrapper.conf in the ./bin/linux-x86-32 and ./bin/linux-x86-64 directories incorrectly specifies libwrapper.so:


{code}
# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=%ACTIVEMQ_HOME%/bin/linux/
{code}

There is no linux directory, just the ones for 32 and 64 bit versions specifically. 

Thanks, 
Susan",,,,,,,,,,,,,,,14/Apr/11 10:15 AM;fbolton;MB-814-Patch.diff;https://issues.jboss.org/secure/attachment/12368849/MB-814-Patch.diff,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3282,,,,1.0,1.0,,1|hzkerr:,179374,,,,,,,,14/Apr/11 12:16 PM;dbosanac;Fixed and merged to 5.5.x-fuse branch. Thanks for the patch,,,,,,,,,,,,,,,,,,,
Duplex http network connector not reliably reestablished in an unstable network,MB-813,12516234,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,27/Jan/11 10:47 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,31/Jan/12 9:17 AM,,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-05-05,,,,,,,1,,"The following usecase tests a http network connector going through a
http proxy (simulated via a socket proxy) in an unstable network.

This is a modified version of an existing http test in the activemq-optional package.

Scenario is:

Broker A (NC initiator)
 (loop) {
 A establishes duplex http connection (via socket proxy) to broker B.
 A sends a block of 100 msgs. 
 A at a random point during its send will simulate a stalled or disconnected network by invoking
 on the socket proxy to disrupt the network.
 Broker should reconnect to B after network disruption completes ..
 A waits for a single completed msg from Broker B to indicate all msgs consumed.
 }
 
Broker B (accepts duplex NC)
 (loop) {
 B waits for 100 msgs.
 B will send a single completed msg to A once it has received all msgs
 }
 
We expect the brokers to loop continuosly and survive disruptions to the network
connection without loosing msgs.

After a number of iterations, broker A can no longer connect to broker B. 

",Fuse MB 5.4.x,,,,,,,,,,,,,,27/Jan/11 10:48 PM;davestanley;testcase.zip;https://issues.jboss.org/secure/attachment/12368823/testcase.zip,11/Feb/11 11:25 PM;scranton;testcase_02_11_11.zip;https://issues.jboss.org/secure/attachment/12368827/testcase_02_11_11.zip,,,,,,,,,,,,,,,,,,,,,,,,,2.0,3.0,,1|hzkhfz:,179794,,,,,,,,"27/Jan/11 10:52 PM;davestanley;
Running the testcase:
=====================
 
Two consoles:


Console 1: Broker A - opens a duplex network connector (via socket proxy) to broker B:
This broker also simulates stalled network ..

{code}
> mvn -Dtest=BrokerAQueueHttpNetworkWithDisconnectTest test
{code}

Console 2: Broker B - waits for incoming NC, checks all msgs arrive, sends END msg to tell A to shutdown.

{code}
> mvn -Dtest=BrokerAQueueHttpNetworkWithDisconnectTest test
{code}

Notes: To set this up in a remote network, should just
need to change the targetBindLocation in BrokerAQueueHttpNetworkWithDisconnectTest.java

This is the URI that the socket proxy will forward data on to...

{code}

protected String getTargetBindLocation() {
    return ""http://localhost:61617"";
}
{code} 

Unrelated: We are overriding waitForBridgeFormation(). I think there might be a bug in default impl in JmsMultipleBrokersTestSupport","11/Feb/11 11:25 PM;scranton;Cleaned up testcase and added soTimeout test

In the BrokerQueueHttpNetworkWithDisconnectTest, I've got it to test 4 variations: stall or close network connection and soTimeout  = 1000 or 30000 ms. When the soTimeout = 30000 (and readCheck is 20000), you can see an InactivityIOException thrown during network stalls. When soTimeout = 1000, then is a socket timeout --- seems like it working.

Dejan: please review the testcase (again) to make sure there isn't anything silly in it (i.e. its testing what I think its testing).

Thanks,
Scott",31/Jan/12 9:17 AM;dbosanac;This issue seems to be closed for long time just not marked that way. I resolving it now as setting the latest 5.4.x release as a fix version,,,,,,,,,,,,,,,,,
Can only have one duplex networkConnection per transportConnection,MB-812,12516233,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,27/Jan/11 11:15 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,11/Feb/11 4:59 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,0,,"AMQ-2774 introduced an unintended restriction on the number of duplex networkConnections that can be made to the same port on a remote broker. 
You now need a transportConnector per networkConnector.",,,,,,,,,,,PROD-564,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3129,,,,0.0,1.0,,1|hzkebj:,179301,,,,,,,,11/Feb/11 4:59 PM;garytully;merged to 5.4-fusesource,,,,,,,,,,,,,,,,,,,
virtual destination subscriptions are not propagated in a network of brokers with DynamicallyIncludedDestination if topic is not previously created from a consumer,MB-809,12516230,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,dbosanac,janstey,janstey,25/Jan/11 6:33 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Feb/11 10:39 AM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"See DEV-2920 for test case. To reproduce I copied TwoBrokerVirtualDestDinamicallyIncludedDestTest.java to activemq-core/src/test/java/org/apache/activemq/usecases/ and ran

mvn clean test -Dtest=TwoBrokerVirtualDestDinamicallyIncludedDestTest

The testVirtualDestinationsDinamicallyIncludedBehavior2 test will fail. Also I did this on http://fusesource.com/forge/svn/fusemq/tags/activemq-5.4.0-fuse-00-00 and will try the latest version shortly.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkeav:,179298,,,,,,,,25/Jan/11 6:40 PM;janstey;Test fails on 5.4-fusesource branch too.,"02/Feb/11 10:39 AM;dbosanac;This is just a configuration problem.

The network connector on brokerA have dynamically included destinations and only allows subscriptions on ""global.>"" destinations. In the second case, the test that fails, we only have a consumer for ""Consumer.foo-bar.global.test"" queue (virtual destination) and that's why nothing going to be sent over the network.

If we add ""Consumer.>"" to the list of dynamically included destination, like

{code}nc1.addDynamicallyIncludedDestination(ActiveMQDestination.createDestination(""Consumer.>"", ActiveMQDestination.QUEUE_TYPE));{code}

everything will work.

I committed this test to the trunk, so we can protect this use case in the future.",,,,,,,,,,,,,,,,,,
ActiveMQ reports wrong number of messages with browseAsTable and browse operation in jconsole,MB-807,12516228,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,ubhole,ubhole,25/Jan/11 4:36 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,5.4.1-fuse-00-00,5.4.1-fuse-01-00,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"In a simple test which pushes 300 messages Activemq only shows 180 messages when tried to look from JConsole using browse or browseAsTable method invocation. Same it true with using Camel route that uses BrowsableEndpoint to see browse the messages as camel exchange. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkeb3:,179299,,,,,,,,"31/Jan/11 4:37 PM;dbosanac;Hi,

there two interesting things going on in this example:

1. The the producer will hit memory limit used by cursor and will keep only part (181) of the messages in the memory. Only these messages, that are in the memory will be sent to the browser. The reason we can't send more messages is there's no space in memory to get them from the store.

2. Even if the memory limit is not hit, there's a limit of how much messages will be paged at once (and sent to the browser). And that number is 200 by default.


So, in order to have this test working, you have to have a setting like this:

<policyEntry queue="">"" producerFlowControl=""true"" memoryLimit=""2mb"" maxPageSize=""1000"">

the first one ensures that all 300 messages sent can fit the memory and the page size to ensure that they can all be sent to the browser.
",,,,,,,,,,,,,,,,,,,
Web-console does not function with root logging set to debug,MB-805,12516226,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,sjavurek,sjavurek,24/Jan/11 10:20 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,20/Apr/11 12:48 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"Hi, 

When setting the logging to debug:

log4j.rootLogger=DEBUG, logfile, console

The Web Console is unreachable.  The log file shows java.lang.ClassCircularityErrors:

{code}
INFO   | jvm 1    | 2011/01/21 13:34:15 | Exception in thread ""ActiveMQ Journal Checkpoint Worker"" java.lang.ClassCircularityError: org/apache/log4j/spi/LoggingEvent
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.fusesource.web.console.server.logging.BrowserAppender.toLogEvent(BrowserAppender.java:106)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.fusesource.web.console.server.logging.BrowserAppender.append(BrowserAppender.java:68)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.log4j.helpers.AppenderAttachableImpl.appendLoopOnAppenders(AppenderAttachableImpl.java:65)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.log4j.Category.callAppenders(Category.java:203)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.log4j.Category.forcedLog(Category.java:388)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.log4j.Category.log(Category.java:853)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.commons.logging.impl.Log4JLogger.debug(Log4JLogger.java:171)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.activemq.store.kahadb.MessageDatabase.checkpointUpdate(MessageDatabase.java:1131)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.activemq.store.kahadb.MessageDatabase$10.execute(MessageDatabase.java:698)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.activemq.store.kahadb.MessageDatabase.checkpointCleanup(MessageDatabase.java:696)
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.apache.activemq.store.kahadb.MessageDatabase$3.run(MessageDatabase.java:293)
...
INFO   | jvm 1    | 2011/01/21 13:34:15 |  WARN | Error for /console/admin/agent
INFO   | jvm 1    | 2011/01/21 13:34:15 | java.lang.ClassCircularityError: org/apache/log4j/spi/LoggingEvent
INFO   | jvm 1    | 2011/01/21 13:34:15 |       at org.fusesource.web.console.server.logging.BrowserAppender.toLogEvent(BrowserAppender.java:106)
....
INFO   | jvm 1    | 2011/01/21 13:56:18 |  WARN | /console/admin/agent: java.lang.ClassCircularityError: org/apache/log4j/spi/LoggingEvent
INFO   | jvm 1    | 2011/01/21 13:56:18 |  WARN | handle failed
INFO   | jvm 1    | 2011/01/21 13:56:18 | java.lang.ClassCircularityError: org/apache/log4j/spi/LoggingEvent
INFO   | jvm 1    | 2011/01/21 13:56:18 |       at org.fusesource.web.console.server.logging.BrowserAppender.toLogEvent(BrowserAppender.java:106)
INFO   | jvm 1    | 2011/01/21 13:56:18 |       at org.fusesource.web.console.server.logging.BrowserAppender.append(BrowserAppender.java:68)
INFO   | jvm 1    | 2011/01/21 13:56:18 |       at org.apache.log4j.AppenderSkeleton.doAppend(AppenderSkeleton.java:230)

{code}

Complete log file attached. 

Workaround
====================
The customer has been instructed to leave root logger on INFO and set activemq to DEBUG:

log4j.logger.org.apache.activemq=DEBUG

Susan",,,,,,,,,,,,,,,24/Jan/11 10:21 AM;sjavurek;error-active-mq.log;https://issues.jboss.org/secure/attachment/12368824/error-active-mq.log,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzketr:,179383,,,,,,,,14/Apr/11 1:02 PM;sjavurek;BQ:Medium,"20/Apr/11 12:48 PM;dbosanac;So the problem is that fuse web console have a log appender to enable log preview in the web. With debug logging turned on Jetty (web container we're using) starts logging events of loading classes and that's where circular exception happens.

The only possible solution is to prevent jetty logger doing this. It will be done by default in 5.5.0 release and in older versions you can do it by simply adding

log4j.logger.org.eclipse.jetty.util.log=INFO

to log4j.properties",,,,,,,,,,,,,,,,,,
Change StoreLimit value via JMX Console is not take into account when throwing exception on store full condition. ,MB-802,12516223,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ubhole,ubhole,18/Jan/11 3:48 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,25/Jan/11 3:31 PM,5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,,,,0,,"After fixing MB-795 which allows the storeLimit values to be changed via JMX it is working fine except when the storeLimit is exhausted it throws exception which mentions original limit and not the one that was changed via JMX. 

",,,,,,,,,,,MB-795,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3143,,,,0.0,1.0,,1|hzke9z:,179294,,,,,,,,25/Jan/11 3:31 PM;dbosanac;Fixed and merged to 5.4-fusesource,,,,,,,,,,,,,,,,,,,
Durable subscriptions are created incorrectly when created from either WebConsole or jconsole,MB-801,12516222,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Cannot Reproduce Bug,dbosanac,ade1,ade1,17/Jan/11 6:09 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,15/Jun/11 3:36 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"If you create a durable subscriber from one of the administration tools like the ActiveMQ web console or jconsole, then it doesn't work correctly: persistent messages sent to the topic are not forwarded to the subscription. You can reproduce this problem by using the web console to create the durable subscriber. Additionally, I note that the bad subscription is registered in JMX under 'Subscription/false' rather than 'Subscription/Durable'.

I have found though that if the subscription is created dynamically, when a client connects to the broker, then it works fine. For example, the following Camel route creates the subscription correctly. 

{code:xml}
<?xml version=""1.0"" encoding=""UTF-8"" standalone=""no""?>
<beans xmlns=""http://www.springframework.org/schema/beans""
	xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
	xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd"">

	<camelContext xmlns=""http://camel.apache.org/schema/spring""
		trace=""false"">
		<route>
			<from
				uri=""activemq:topic:ProjectInfo?clientId=ade&amp;durableSubscriptionName=adeds"" />
			<to uri=""file:///tmp/blah""/>
		</route>
	</camelContext>
	
	<bean id=""activemq"" class=""org.apache.camel.component.jms.JmsComponent"">
	  <property name=""connectionFactory"">
	    <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
	      <property name=""brokerURL"" value=""tcp://localhost:61616""/>
	    </bean>
	  </property>
	</bean>

</beans>
{code} 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkf8n:,179437,,,,,,,,"25/Jan/11 1:24 PM;dbosanac;I cannot reproduce this.

* If I create a durable subscriber using web console (Client ID=test, Subscriber Name=test, Topic Name=test), it will create an offline subscriber
* Then do

{code}ant producer -Dtopic=true -Ddurable=true -Dsubject=test{code}

to send some durable messages to the topic

* And finally use this small Java example

{code}        ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""tcp://localhost:61616"");
        Connection conn = factory.createConnection();
        conn.setClientID(""test"");
        conn.start();
        Session sess = conn.createSession(false, Session.AUTO_ACKNOWLEDGE);
        TopicSubscriber sub = sess.createDurableSubscriber(sess.createTopic(""test""), ""test"");
        sub.setMessageListener(new MessageListener() {
            @Override
            public void onMessage(Message message) {
                System.out.println(""message = "" + message);
            }
        });
{code}

to consume the messages.

Everything looks ok and the consumer gets all messages.",,,,,,,,,,,,,,,,,,,
"concurrentStoreAndDispatchQueues  when cache disabled can lead to skipped message dispatch, leaving message pending for some time",MB-800,12516221,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,14/Jan/11 12:33 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,24/Jan/11 2:59 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,broker,,,0,,"Logs from intermittent dispatch skip, points to logic error in cursor:
{code}
14:01:00,078 | Queue 1620 | Message ID:T00643329-1120-1294932174609-2:273:1:1:1 sent to queue://ServiceRegistry.default.ServiceRegistry
14:01:00,078 | Queue 1653 | ServiceRegistry.default.ServiceRegistry toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueCount: 358, dequeueCount: 364
14:01:00,078 | AbstractStoreCursor  252 |  fillBatch - batchResetNeeded=false, hasMessages=false, size=1
14:01:00,078 | AbstractStoreCursor  252 |  fillBatch - batchResetNeeded=false, hasMessages=true, size=0

14:02:00,018 | Queue 1620 |  Message ID:T00643329-1120-1294932174609-2:274:1:1:1 sent to queue://ServiceRegistry.default.ServiceRegistry
14:02:00,018 | Queue 1653 |  ServiceRegistry.default.ServiceRegistry toPageIn: 1, Inflight: 0, pagedInMessages.size 0, enqueueCount: 359, dequeueCount: 365
14:02:00,018 | AbstractStoreCursor  252 | fillBatch - batchResetNeeded=false, hasMessages=false, size=1
14:02:00,018 | AbstractStoreCursor  252 | fillBatch - batchResetNeeded=false, hasMessages=false, size=1{code}

Full log at: http://fusesource.com/issues/secure/attachment/18222/AMQ_TRACE_servicemix.log",,,,,,,,,,,,,,,17/Jan/11 11:46 AM;mielket;1MinuteLogNoProblem.txt;https://issues.jboss.org/secure/attachment/12368819/1MinuteLogNoProblem.txt,17/Jan/11 11:46 AM;mielket;1MinuteLogProblemReproducted.txt;https://issues.jboss.org/secure/attachment/12368821/1MinuteLogProblemReproducted.txt,17/Jan/11 11:46 AM;mielket;thread_dump.txt;https://issues.jboss.org/secure/attachment/12368822/thread_dump.txt,,,,,,,,,,,,,,,,,,,,,,,,3.0,5.0,,1|hzke9j:,179292,,,,,,,,"14/Jan/11 1:54 PM;garytully;Think this problem me be related to concurrentStoreAndDispatchQueues which is enabled by default. If the cache is disabled, via restarts with some pendingmessages, then going to the store may not find a message on the first dispatch. Using {code}<kahaDB .... concurrentStoreAndDispatchQueues=""false"" />{code} should help.","18/Jan/11 6:22 PM;garytully;This is a bug, Test case committed to trunk: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/ExpiryHogTest.java?rev=1059063&view=auto

fails when ad.setConcurrentStoreAndDispatchQueues(false); is commented out, as default is true.

The issue is dispatch missing the cache and going to the store, but the store not yet being updated, so the dispatch does not see a message and it is left on the queue. The next pageIn comes from the expiry message processing, which eventually expires the message.",20/Jan/11 2:18 PM;garytully;updated the title to better reflect the problem,"21/Jan/11 4:41 PM;garytully;tracked at apache via: https://issues.apache.org/jira/browse/AMQ-3149, https://issues.apache.org/jira/browse/AMQ-3145",24/Jan/11 2:59 PM;garytully;fixes committed to 5.4-fusesource branch,,,,,,,,,,,,,,,
Problem with distributed XA Camel/ActiveMQ recovery ,MB-798,12516219,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,13/Jan/11 5:09 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,10/May/11 11:28 AM,5.3.1-fuse-02-01,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"We are testing a distributed XA transaction. Activemq.xml defines a
transacted camel route that consumes from a jms resource and then stores the message in
a mysql database.

A failure in the pre 2PC/prepare phase appears to work fine. This test
illustrates a problem we are having when there is a catastrophic
failure of the broker during the 2PC phase. Specifically
this is after the commit() has been made to remove the message
from the jms queue but before the message has been written/commited
to mysql.

We are killing the broker by connecting via a remote debug session and breakpointing 
on this line.

{code}

Killing the broker here:

""DefaultMessageListenerContainer-1"" prio=5 tid=12fa7a800 nid=0x136e10000 runnable [136e0f000]
   java.lang.Thread.State: RUNNABLE
	at org.apache.activemq.TransactionContext.commit(TransactionContext.java:311)
	at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:558)
	at org.jencks.amqpool.PooledSession.commit(PooledSession.java:131)
	at org.springframework.jms.support.JmsUtils.commitIfNecessary(JmsUtils.java:217)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.commitIfNecessary(AbstractMessageListenerContainer.java:558)
	at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:465)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:323)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
	at java.lang.Thread.run(Thread.java:680)

basically step over afterCommit() and then kill -9 the broker

       afterCommit();
            } catch (JMSException cause) {
                LOG.info(""commit failed for transaction "" + info.getTransactionId(), cause);
                if (localTransactionEventListener != null) {
                    localTransactionEventListener.rollbackEvent();
                }
                afterRollback();
                throw cause;
            } <--- step to this point in debugger

{code}

The problem is that on restart, the transaction manager appears to be detecting
that there are in doubt transactions:

{code}

DEBUG | Initiating transaction manager recovery
DEBUG | In doubt transactions recovered from log
DEBUG | Initiating transaction manager recovery
DEBUG | In doubt transactions recovered from log
DEBUG | StandardXADataSource is created
DEBUG | StandardXADataSource:setTransactionManager - tmp = org.jencks.GeronimoPlatformTransactionManager@2e7aacc1
DEBUG | StandardXADataSource:resetCache
DEBUG | StandardXADataSource:resetCache
DEBUG | onApplicationEvent: org.springframework.context.event.ContextRefreshedEvent[source=org.apache.xbean.spring.context.ResourceXmlApplicationContext@584a5c78: display name [org.apache.xbean.spring.context.ResourceXmlApplicationContext@584a5c78]; startup date [Wed Jan 12 14:23:14 EST 2011]; root of context hierarchy]
{code}

However I am not seeing any further recovery. We need assistance to answer the following
questions:

1) Is the broker doing an optimized commit. It appears to be calling TransactionContext.commit().
   Does this correspond to a single phase commit? Should TransactionContext.prepare(Xid,boolean) and TransactionContext.commit(Xid,boolean)
   be called instead.

2) Do we need a transactional camel error handler. Would that help?

3) The message is lost in this usecase. How can we get full recovery in this usecase.


Setup:


1. Unzip the overlay zip on top of an ActiveMQ install.

   I tested with fusemb531-02-01 (and MySQL)

2. Setup a MySQL database with the following schema.

Database Name: ScpBuffer

{code}
--
-- Table structure for table `SCP_INPUT_MESSAGES`
--

CREATE TABLE IF NOT EXISTS `SCP_INPUT_MESSAGES` (
  `id` int(12) NOT NULL AUTO_INCREMENT,
  `messageId` varchar(96) NOT NULL,
  `messageCorrelationId` varchar(96) NOT NULL,
  `messageContent` varchar(2048) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=8 ;
{code}


3. Ensure you have the correct jars in your <broker>/lib directory.
  
{code}
-rw-r--r--@  1 dstanley  staff    62983 Jul 16  2009 activation-1.1.jar
-rw-r--r--@  1 dstanley  staff    43761 Jun 30  2010 activemq-camel-5.3.1-fuse-02-01.jar
-rw-r--r--@  1 dstanley  staff   112066 Jun 30  2010 activemq-console-5.3.1-fuse-02-01.jar
-rw-r--r--@  1 dstanley  staff  2983810 Jun 30  2010 activemq-core-5.3.1-fuse-02-01.jar
-rw-r--r--@  1 dstanley  staff    26459 Jun 30  2010 activemq-jaas-5.3.1-fuse-02-01.jar
-rw-r--r--@  1 dstanley  staff   147574 Jul 16  2009 activemq-protobuf-1.0.0.0-fuse.jar
-rw-r--r--@  1 dstanley  staff  3002095 Jun 30  2010 activemq-web-5.3.1-fuse-02-01.jar
-rw-r--r--@  1 dstanley  staff  1282573 Jun 30  2010 camel-core-2.2.0-fuse-02-00.jar
-rw-r--r--@  1 dstanley  staff    20021 Jan 10 14:53 camel-jdbc-2.2.0-fuse-02-00.jar
-rw-r--r--@  1 dstanley  staff    34285 Jun 30  2010 camel-jetty-2.2.0-fuse-02-00.jar
-rw-r--r--@  1 dstanley  staff   120155 Jun 30  2010 camel-jms-2.2.0-fuse-02-00.jar
-rw-r--r--@  1 dstanley  staff   120549 Jun 30  2010 camel-spring-2.2.0-fuse-02-00.jar
-rw-r--r--@  1 dstanley  staff    52915 Jun 30  2010 commons-logging-1.1.jar
-rw-r--r--@  1 dstanley  staff    16017 Jun 30  2010 commons-management-1.0.jar
-rw-r--r--   1 dstanley  staff    99321 Dec 17 12:21 geronimo-connector-2.1.2.jar
-rw-r--r--   1 dstanley  staff    16030 Nov  4  2009 geronimo-j2ee-management_1.0_spec-1.0.jar
-rw-r--r--   1 dstanley  staff    32359 Nov  4  2009 geronimo-jms_1.1_spec-1.1.1.jar
-rw-r--r--   1 dstanley  staff    14637 Nov  4  2009 geronimo-jta_1.0.1B_spec-1.0.1.jar
-rw-r--r--   1 dstanley  staff    51278 Dec 17 12:21 geronimo-transaction-2.1.jar
-rw-r--r--   1 dstanley  staff    77326 Dec 17 12:26 howl-1.0.2.jar
-rw-r--r--@  1 dstanley  staff    89967 Jul 16  2009 jaxb-api-2.1.jar
-rw-r--r--@  1 dstanley  staff   849481 Jul 16  2009 jaxb-impl-2.1.6.jar
-rw-r--r--@  1 dstanley  staff   251546 Jan 10 14:41 jencks-2.2-all.jar
-rw-r--r--   1 dstanley  staff    29305 Dec 17 12:28 jencks-amqpool-2.2.jar
-rw-r--r--   1 dstanley  staff    15071 Dec 19 14:53 jta-1.1.jar
-rw-r--r--@  1 dstanley  staff   154088 Jun 30  2010 kahadb-5.3.1-fuse-02-01.jar
-rw-r--r--   1 dstanley  staff   767492 Jun 23  2010 mysql-connector-java-5.1.13-bin.jar
drwxr-xr-t  35 dstanley  staff     1190 Jan 10 14:25 optional
-rw-r--r--@  1 dstanley  staff   179346 Jun 30  2010 stax-1.2.0.jar
-rw-r--r--@  1 dstanley  staff    26514 Jul 16  2009 stax-api-1.0.1.jar
{code}

4. Start jconsole
5. Navigate to org.apache.activemq/localhost/Queue/scp_transacted/operations

6. Send a text message to the scp_transacted queue using the ""sendTextMessage"" button.
7. Operation should succeed. 

8. Attach debugger and repeat. Kill broker at specified location. Restart broker.

9. Note the message is not rolled back (which makes sense) but is not recovered by the transaction Mananger.

Note: If you are using Oracle will need to change the SQL string to use the DB
      and reconfigure the datasource..
",All platforms,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3305,,,,0.0,4.0,,1|hzkg47:,179579,,,,,,,,13/Jan/11 5:15 PM;davestanley;Testcase is available [here|http://fusesource.com/issues/secure/attachment/18217/overlay_01_13_2011.zip],"28/Jan/11 8:26 PM;garytully;Added test case to camel trunk. route definition http://svn.apache.org/viewvc/activemq/trunk/activemq-camel/src/test/resources/org/apache/activemq/camel/jmsXajdbc.xml?view=markup

there is a test case that uses derby and amq in 2pc using the same transaction, so both amq and derby get a prepare.. http://svn.apache.org/viewvc?view=revision&revision=1064858

The test verifies that after a broker stop in commit, the db is updated via commit and the broker does a presumed abort . After a broker restart, the message is replayed. 
So there is a duplicate message in the store.","06/May/11 3:22 PM;garytully;linking to https://issues.apache.org/jira/browse/AMQ-3305 - some updates to the broker were needed to get exactly once delivery semantics.

example route, with xa wrappers from openejb (for jdbc) and from activemq pool on trunk: http://svn.apache.org/viewvc/activemq/trunk/activemq-camel/src/test/resources/org/apache/activemq/camel/jmsXajdbc.xml?view=markup",10/May/11 11:28 AM;garytully;Relevant fixes now on the fuse 5.5.x branch for 5.5.0-fuse release. A new 5.5-fuse-SNAPSHOT is available,,,,,,,,,,,,,,,,
Change StoreLimit value via JMX Console is not take in count.,MB-795,12516216,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,ubhole,ubhole,13/Jan/11 12:21 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,17/Jan/11 5:39 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,,,,1,,"storeLimit value set from JMX console doesn't get reflected into running broker. 

This attribute on org.apache.activemq Broker in JConsole is shown as writable=true so one expects the changes to take effect. It should either be marked as writable=false if there is no underlying support for chaning it on the fly or it's a bug in the broker that doesn't apply new value for storeLimit.

To reproduce:

1. set storeLimit in configuration file to some lower value (I used 100 mb). 
2. Start Broker.
3. Start JConsole and inspect initial value.
4. Start example producer which should block somwhere down the line (for me it blocked at 487 messages)
5. Change storeLimit value in JConsole and click refresh. (Nothing happens)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3143,,,,0.0,1.0,,1|hzke8v:,179289,,,,,,,,"17/Jan/11 5:39 PM;dbosanac;The issue has been fixed and merged to 5.4-fusesource branch. 

The latest snapshot (20110117.171443-11) that can be downloaded from 

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/

can be used for testing purposes.",,,,,,,,,,,,,,,,,,,
timeStampingBrokerPlugin cannot expire messages on topics,MB-794,12516215,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,12/Jan/11 3:56 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,11/May/11 2:07 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Setting the TTL using the timeStampingBrokerPlugin works great for queues but not at all for topics. I have it enabled as follows:

{code}
<broker ...>
        <plugins>
            <timeStampingBrokerPlugin zeroExpirationOverride=""1""/>
        </plugins>
..
{code}

So it sets a 1 millisecond expiry essentially. This should ensure some messages expire even on a very fast machine. I was testing this using the standard producer/consumer example:

ant producer -Dtopic=true -Dmax=100000
ant consumer -Dtopic=true -DsleepTime=3000

No messages in this case are expired (was checking the ExpiredCount on the topic in jconsole). If I disable the timeStampingBrokerPlugin and instead set the same TTL on the producer:

ant producer -Dtopic=true -Dmax=100000 -DtimeToLive=1

Many messages get expired before being consumed. So TTL is working for topics but just not when set with the timeStampingBrokerPlugin.",Customer is using Apache ActiveMQ 5.3.2 but I tested this on MB 5.4.1-fuse-01-00 as well and had the same behavior.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,4.0,,1|hzkezb:,179408,,,,,,,,"12/Jan/11 3:12 PM;garytully;is the consumer started  before the producer? If not the topic messages will very quickly get discarded as there is no consumer, before they have a chance to expire.","12/Jan/11 3:17 PM;janstey;Yeah, the consumer is started first. My understanding is that if a producer sends messages to a topic with no consumers on it, the messages will be discarded but will not technically be expired (i.e. ExpiredCount will not increase in this case). But yeah, were looking at the case where the topic does have a consumer on it.","12/Jan/11 4:10 PM;garytully;k, then it may just be too fast, maybe set the prefetch to 0 for the topic so it pulls messages.","14/Jan/11 12:22 PM;dbosanac;Hi,

just played with this a bit. The difference between setting ttl with the plugin and producer is that plugin will reset message's timestamp. This means that message will be less likely to be expired when it can be dispatched right away. As Gary said, try setting lower prefetch for the consumer, like

{code} ant consumer -Dtopic=true -DsleepTime=3000 -Durl=tcp://localhost:61616?jms.prefetchPolicy.all=50{code}

and you'll see much more messages being expired.

I'm not sure if there's anything more we can do about this at the moment
",,,,,,,,,,,,,,,,
"Persistent file based database, Kahadb, is corrupt when an out of disk space situation occurs",MB-792,12516214,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,sjavurek,sjavurek,03/Jan/11 2:47 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,10/Jan/11 12:18 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,broker,,,0,,"When the persistent store runs out of space the broker starts receiving  exceptions (""java.io.IOException: No space left on device"").  Unless configured to shutdown, these errors continue to occur halting the system as both clients and servers receive these Exceptions. After a restart, the store is corrupted. Re-building the index does not correct the problem.  


*Test Case Procedure*:

1. Create a partition with small amount of space, I used 50mb one on an external hard drive.
2. Update / add the following lines to activemq.xml:

<broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""localhost"" dataDirectory=""/Volumes/Stuff2/data"" destroyApplicationContextOnStop=""true"">

....
       <persistenceAdapter>
            <!--kahaDB directory="" ${activemq.base} /Volumes/Stuff2/data/kahadb""/-->
            <kahaDB directory=""/Volumes/Stuff2/data/kahadb"" journalMaxFileLength=""30mb"" ignoreMissingJournalfiles=""true"" checksumJournalFiles=""true"" checkForCorruptJournalFiles=""true""  /> **

        </persistenceAdapter>

    *
          o These extra items were added to help correct the database corruption after the failure.

3. Update the log4j file to point to your external hard drive. Just takes up more space faster.

4. Start activemq
5. Using the shipped examples, run a producer:

{code}
  ant -Ddurable=true -Dmax=100000 producer
{code}

6. Wait, eventually you run out of space or if you are impatient like me, I started copying junk files to my hard drive to speed up the process.

7. The broker will start printing out of space messages:

{code}
INFO | Slow KahaDB access: Journal append took: 1208 ms, Index update took 1 ms
ERROR | KahaDB failed to store to Journal
java.io.IOException: No space left on device
	at java.io.RandomAccessFile.setLength(Native Method)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:342)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:227)
 INFO | Ignoring no space left exception, java.io.IOException: No space left on device
java.io.IOException: No space left on device
	at java.io.RandomAccessFile.setLength(Native Method)
	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:342)
	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:227)
 INFO | Slow KahaDB access: cleanup took 1159
{code}

8. The client will eventually fail as well:

{code}
 [java] Sending message: Message: 23874 sent at: Wed Dec 29 15:40:43 GMT 20...
     [java] javax.jms.JMSException: No space left on device
     [java] 	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
     [java] 	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1273)
     [java] 	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1755)
     [java] 	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
     [java] 	at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:241)
     [java] 	at ProducerTool.sendLoop(Unknown Source)
     [java] 	at ProducerTool.run(Unknown Source)
     [java] 	at ProducerTool.main(Unknown Source)
     [java] Caused by: java.io.IOException: No space left on device
     [java] 	at java.io.RandomAccessFile.setLength(Native Method)
     [java] 	at org.apache.kahadb.journal.DataFileAppender.processQueue(DataFileAppender.java:342)
     [java] 	at org.apache.kahadb.journal.DataFileAppender$2.run(DataFileAppender.java:227)
     [java] Caught: javax.jms.JMSException: No space left on device

{code}

I then tried to read the 23874 message but could not:

{code}
./bin/activemq-admin browse --amqurl tcp://localhost:61616 --msgsel JMSMessageID=""'*:23874'"" TEST.FOO

{code}

9. To reproduce the reported error, delete localhost/tmp_storage file in attempt to free up space.

10. Shutdown the broker and try to restart it. I receive the same error as the customer, however, if you don't delete tmp_storage or run in the later versions where the tmp_storage is not used, you still have startup issues. Please see attached file ""SJ_BrokerRestartFailureLog"".

*Other notes*:

    * Before shutting down the broker, clients can consume messages but often fails with out of space messages. Once the broker is stopped, it is unable to restart. 
    * Rebuilding the index files fails with the error in noted in the attached log even if additional space is freed up. 
    * It seems one of the journals is always 0: 

{code}
-rw-r--r--   1 sjavurek  staff  31458423 Dec 30 18:39 db-1.log
-rw-r--r--   1 sjavurek  staff         0 Dec 30 18:39 db-2.log
-rw-r--r--   1 sjavurek  staff   1789952 Dec 30 19:18 db.data
-rw-r--r--   1 sjavurek  staff   2376208 Dec 30 19:18 db.redo

{code}


To recover from this error, stop the broker and delete the index files (db.data and db.redo) as well as the zero sized journal file (db-2.log in the example above).  Before restarting the broker, ensure that additional space has been added or freed equal to the size of the next journal file.  The broker will need this space when it tries to allocated db-2.log. Setting journalMaxFileLength will help determine the additional space required. 

","Tested using customer version, 5.3.1 as well as latest release, 5.4.2.",,,,,,,,,,,,,,03/Jan/11 3:47 PM;sjavurek;SJ_BrokerRestartFailureLog;https://issues.jboss.org/secure/attachment/12368818/SJ_BrokerRestartFailureLog,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzke4f:,179269,,,,,,,,07/Jan/11 3:03 PM;garytully;tracked at apache via https://issues.apache.org/jira/browse/AMQ-3122,"07/Jan/11 3:06 PM;garytully;With the fix to https://issues.apache.org/jira/browse/AMQ-3122 - the broker will recover automatically when space is reclaimed. On shutdown the metadata will be out of date (due to an non sync write at shutdown, the metadata was out of sync with the journal before) which will force recovery. Any zero length data files will be ignored and the broker will continue after recovery.","10/Jan/11 12:18 PM;garytully;fix merged to fuse 5.4 branch, available in snapshot http://ci.fusesource.com/hudson/job/activemq-5.4-fusesource-deploy/31/

A running broker can now recover from the journal running out of space if the space is made available.

If the broker is restart, it can now correctly recover its index and continue without manual intervention once space is made available.

",,,,,,,,,,,,,,,,,
Producer Flow Control Does Not Seem to Work with Topics,MB-791,12516212,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,23/Dec/10 9:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,04/Jan/11 5:14 PM,5.4.2-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,broker,,,0,,"Tracking issue for [AMQ-2683|https://issues.apache.org/jira/browse/AMQ-2683]

We are adding statistical information to a topic. I have one consumer of that topic subscribing and taking those messages and monitors for problems. The consumer is slower than publishing to the topic. I have flow control enabled and I expected that once the memory limit of the Consumers dispatch queue was reached it would throttle the publishers to the topic, but instead it seems to lock everything up.

Basically, symptoms are that producer flow control kicks in but the producer does not restart once topic has been drained ..
","AMQ 5.4.2, 5.5-SNAPSHOT",,,,,,,,,,DEV-2861,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2683,,,,0.0,2.0,,1|hzkeqn:,179369,,,,,,,,23/Dec/10 9:41 PM;davestanley;Testcase is attached to the Apache issue.,"04/Jan/11 5:14 PM;dbosanac;Fixed and merged to 5.4-fusesource branch.

The fix is available in the latest snapshot (20110104.165328-4) at 

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,
NullPointerException when using Stomp and KahaDB under heavy load,MB-785,12516206,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,janstey,janstey,13/Dec/10 8:20 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,29/Jul/11 3:12 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,0,,"As reported in DEV-2774 by a customer, when executing a stress test against ActiveMQ 5.4.1-fuse-01-00 with Stomp and KahaDB, the following NullPointerException occurs sporadically:

{code}
java.util.concurrent.ExecutionException: java.lang.NullPointerException
at java.util.concurrent.FutureTask$Sync.innerGet(FutureTask.java:252)
at java.util.concurrent.FutureTask.get(FutureTask.java:111)
at org.apache.activemq.broker.region.Queue.doMessageSend(Queue.java:718)
at org.apache.activemq.broker.region.Queue.send(Queue.java:644)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:365)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:518)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:96)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:230)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
at org.apache.activemq.broker.UserIDBroker.send(UserIDBroker.java:39)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:129)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:462)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:140)
at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSend(ProtocolConverter.java:253)
at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:178)
at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:70)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
at java.lang.Thread.run(Thread.java:636)
Caused by: java.lang.NullPointerException
at java.lang.System.arraycopy(Native Method)
at org.apache.activemq.util.DataByteArrayOutputStream.write(DataByteArrayOutputStream.java:107)
at org.apache.activemq.openwire.v6.BaseDataStreamMarshaller.looseMarshalByteSequence(BaseDataStreamMarshaller.java:631)
at org.apache.activemq.openwire.v6.MessageMarshaller.looseMarshal(MessageMarshaller.java:295)
at org.apache.activemq.openwire.v6.ActiveMQMessageMarshaller.looseMarshal(ActiveMQMessageMarshaller.java:111)
at org.apache.activemq.openwire.v6.ActiveMQTextMessageMarshaller.looseMarshal(ActiveMQTextMessageMarshaller.java:111)
at org.apache.activemq.openwire.OpenWireFormat.marshal(OpenWireFormat.java:166)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.addMessage(KahaDBStore.java:364)
at org.apache.activemq.store.kahadb.KahaDBStore$StoreQueueTask.run(KahaDBStore.java:1155)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
... 1 more
{code}

I couldn't reproduce this unfortunately with a standard ActiveMQ set up. The only way to get the same stack was to tamper with the message before it was added to the KahaDB store. I basically made this change:

{code}
janstey@mojo:/x1/asf/activemq/trunk/activemq-core$ svn di src/main/java/org/apache/activemq/store/kahadb/KahaDBStore.java
Index: src/main/java/org/apache/activemq/store/kahadb/KahaDBStore.java
===================================================================
--- src/main/java/org/apache/activemq/store/kahadb/KahaDBStore.java	(revision 1039163)
+++ src/main/java/org/apache/activemq/store/kahadb/KahaDBStore.java	(working copy)
@@ -75,6 +75,7 @@
 import org.apache.activemq.store.kahadb.data.KahaDestination.DestinationType;
 import org.apache.activemq.usage.MemoryUsage;
 import org.apache.activemq.usage.SystemUsage;
+import org.apache.activemq.util.ByteSequence;
 import org.apache.activemq.util.IOExceptionSupport;
 import org.apache.activemq.util.ServiceStopper;
 import org.apache.activemq.wireformat.WireFormat;
@@ -361,6 +362,7 @@
             command.setTransactionInfo(createTransactionInfo(message.getTransactionId()));
             command.setPriority(message.getPriority());
             command.setPrioritySupported(isPrioritizedMessages());
+           message.setContent(new ByteSequence(null, 0, 1));
             org.apache.activemq.util.ByteSequence packet = wireFormat.marshal(message);
             command.setMessage(new Buffer(packet.getData(), packet.getOffset(), packet.getLength()));
             store(command, isEnableJournalDiskSyncs() && message.isResponseRequired(), null, null);
{code}

which set the message content to a null bytesequence with length one. This produces the same stack when you run ""mvn clean test -Dtest=KahaDBTest"" so it seems that the byte[] in ByteSequence gets nulled at some point during load. Not sure if this can be handled better or if the root cause can be determined from the stack/this test.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkfjj:,179486,,,,,,,,29/Jul/11 3:12 PM;janstey;Resolved as of 5.4.2 line.,,,,,,,,,,,,,,,,,,,
java.lang.IndexOutOfBoundsException in FailoverTransport.updateURIs,MB-784,12516205,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,13/Dec/10 5:17 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,13/Jan/11 5:18 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,java client,,,0,,"Saw the following stack in a client log when troubleshooting a failover issue. This issue
is a tracking issue to audit the code and verify if we need additional synchronization/logic to prevent the IOOBE.


{code}
2010-12-10 07:48:16,574 [ActiveMQ Transport: tcp://hostname/10.4.250.51:61616] DEBUG  o.a.a.t.failover.FailoverTransport:228 - Transport failed with the following exception:
java.io.IOException: Unexpected error occured
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:208) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at java.lang.Thread.run(Thread.java:619) [na:1.6.0_12]
Caused by: java.lang.IndexOutOfBoundsException: Index: 12, Size: 11
	at java.util.concurrent.CopyOnWriteArrayList.add(CopyOnWriteArrayList.java:409) ~[na:1.6.0_12]
	at org.apache.activemq.transport.failover.FailoverTransport.add(FailoverTransport.java:613) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.updateURIs(FailoverTransport.java:1046) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.processNewTransports(FailoverTransport.java:285) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport.handleConnectionControl(FailoverTransport.java:265) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.failover.FailoverTransport$3.onCommand(FailoverTransport.java:177) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201) ~[activemq-core-5.4.1.jar:5.4.1-fuse-01-00]
	... 1 common frames omitted

{code}",[activemq-core-5.4.1.jar:5.4.1-fuse-01-00],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,5.0,,1|hzke8f:,179287,,,,,,,,13/Dec/10 5:32 PM;garytully;related to https://issues.apache.org/jira/browse/AMQ-2632 - disabling this feature will help via updateURIsSupported=false property to the failover transport.,15/Dec/10 12:48 PM;garytully;tracked and resolved at apache via https://issues.apache.org/jira/browse/AMQ-3085,"15/Dec/10 12:50 PM;garytully;We may also want to allow the updates to be controlled via broker config, so that a transport connector can be configured not to send them on.","13/Jan/11 2:47 PM;garytully;The fix for https://issues.apache.org/jira/browse/AMQ-3077 is also relevant to this issue, makes cluster update dependent on Transportconnector config, setRebalanceClusterClients, setUpdateClusterClients which default to false.",13/Jan/11 5:18 PM;garytully;all fixes committed to 5.4 branch,,,,,,,,,,,,,,,
Configureing JMX to use JAAS in ActiveMQ leads to 'unable to find LoginModule class' exception,MB-782,12516203,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ubhole,ubhole,09/Dec/10 5:34 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,14/Dec/10 3:02 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"attempt to configure a JAAS login module for ActiveMQ that could be used for JMX, openwire and Jetty connections, using documentation provided by FuseSource at http://fusesource.com/docs/broker/5.3/security/Auth-JAAS-AuthentPlugin.html doesn't work for JMX. The configuration was successful for the openwire connection; however, it was not successful for JMX connections.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkdzb:,179246,,,,,,,,14/Dec/10 3:02 PM;dbosanac;This should be now configurable using the steps described in PROD-522,,,,,,,,,,,,,,,,,,,
ActiveMQ's <managementContext> does not allow configuration of SSL or JAAS,MB-781,12516202,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ubhole,ubhole,09/Dec/10 5:31 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,13/Dec/10 3:51 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,broker,,,0,,ActiveMQ <managementContext>  configuration file doesn't allow specifying SSL and JAAS settings to use it for JMX Connector. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3044,,,,0.0,1.0,,1|hzkdyn:,179243,,,,,,,,13/Dec/10 3:51 PM;dbosanac;It's already implemented on the trunk and will be available in the next fuse release. See comments to the PROD-523 for more details,,,,,,,,,,,,,,,,,,,
Error creating tables on Oracle jdbc store,MB-780,12516201,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,09/Dec/10 9:46 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,13/Jan/11 5:20 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,0,,"Hi

There seems to be an error when using Oracle 10.3. as jdbc store with fuse messagebroker version 5.4.1

I have confirmed that it works with messagebroker version 5.3.1

Stacktrace:
2010-11-30 09:48:44,108 | WARN | Old message cleanup failed due to: java.sql.SQLException: ORA-00904: ""ACTIVEMQ_ACKS"".""PRIORITY"": invalid identifier
| org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main
2010-11-30 09:48:44,108 | WARN | Failure Details: ORA-00904: ""ACTIVEMQ_ACKS"".""PRIORITY"": invalid identifier
| org.apache.activemq.store.jdbc.JDBCPersistenceAdapter | main
java.sql.SQLException: ORA-00904: ""ACTIVEMQ_ACKS"".""PRIORITY"": invalid identifier

at oracle.jdbc.driver.DatabaseError.throwSqlException(DatabaseError.java:112)
at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:331)
at oracle.jdbc.driver.T4CTTIoer.processError(T4CTTIoer.java:288)
at oracle.jdbc.driver.T4C8Oall.receive(T4C8Oall.java:745)
at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:219)
at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:970)
at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1190)
at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3370)
at oracle.jdbc.driver.OraclePreparedStatement.executeUpdate(OraclePreparedStatement.java:3454)
at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
at org.apache.commons.dbcp.DelegatingPreparedStatement.executeUpdate(DelegatingPreparedStatement.java:102)
at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doDeleteOldMessages(DefaultJDBCAdapter.java:757)
at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.cleanup(JDBCPersistenceAdapter.java:338)
at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:301)
at org.apache.activemq.broker.BrokerService.start(BrokerService.java:485)
at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:60)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
at org.apache.activemq.xbean.XBeanBrokerFactory$1.<init>(XBeanBrokerFactory.java:117)
at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:115)
at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:71)
at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:91)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
at org.apache.activemq.console.Main.main(Main.java:107)


It appears the sql generated for oracle is faulty:
Generated sql = ALTER TABLE ACTIVEMQ_ACKS ADD PRIORITY NUMBER NOT NULL DEFAULT 5

should have been:
ALTER TABLE ACTIVEMQ_ACKS ADD PRIORITY NUMBER DEFAULT 5 NOT NULL
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3068,,,,0.0,3.0,,1|hzke6n:,179279,,,,,,,,10/Dec/10 4:15 PM;garytully;fixed at apache via http://svn.apache.org/viewvc?rev=1038758&view=rev,10/Dec/10 4:16 PM;garytully;will make the next release.,"13/Jan/11 5:20 PM;garytully;fixing fix version, this made the last release.",,,,,,,,,,,,,,,,,
ConcurrentModificationException thrown in PriorityNetworkDispatchPolicy,MB-779,12516200,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,07/Dec/10 2:07 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,13/Jan/11 5:22 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,0,,"gtully:it is a case of removing while in an iterator, should be using iterator.remove... or doing the remove outside the loop... 

Caused by: java.util.ConcurrentModificationException
	at java.util.AbstractList$Itr.checkForComodification(Unknown Source)
	at java.util.AbstractList$Itr.next(Unknown Source)
	at org.apache.activemq.broker.region.policy.PriorityNetworkDispatchPolicy.dispatch(PriorityNetworkDispatchPolicy.java:50)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:588)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:446)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:387)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.security.AuthorizationBroker.send(AuthorizationBroker.java:187)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:453)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:631)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:303)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:216)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:205)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:187)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzke6v:,179280,,,,,,,,07/Dec/10 3:01 PM;garytully;tracked at apache  by https://issues.apache.org/jira/browse/AMQ-3071,"07/Dec/10 3:03 PM;garytully;schedule for next release as it is now fixed at apache, just needs to be merged to fuse.",,,,,,,,,,,,,,,,,,
Deleting a Queue from the console results in lost messages.,MB-778,12516199,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ubhole,ubhole,01/Dec/10 6:40 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Dec/10 4:38 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,0,," If QueueSender send message a particular queue, and that queue is deleted, the sender will continue to accept messages and act as though these messages are sent.
However the queue is not recreated.
Therefore these messages are lost forever.

{code:java}
        QueueConnection connection = new ActiveMQConnectionFactory(getBrokerUrl()).createQueueConnection();
        connection.start();
        QueueSession session = connection.createQueueSession(false, Session.AUTO_ACKNOWLEDGE);
        Queue queue = session.createQueue(""TestQueue"");
        MessageConsumer consumer = session.createConsumer(queue);
        QueueSender sender = session.createSender(queue);
        
        
        sender.send(session.createTextMessage(""hello""));
        Message message = consumer.receive(100L);
        assertThat(message, notNullValue());

        System.out.println(""Now, delete the queue via the console...."");
        Thread.sleep(10000);

        sender.send(session.createTextMessage(""hello again""));
        Message message2 = consumer.receive(100L);
        assertThat(message2, notNullValue());
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3092,,,,0.0,1.0,,1|hzke0v:,179253,,,,,,,,17/Dec/10 4:38 PM;dbosanac;This should now be fixed and available in 5.4-fusesource branch,,,,,,,,,,,,,,,,,,,
Memory leak in SimpleAuthenticationBroker,MB-777,12516198,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,23/Nov/10 7:45 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,24/Nov/10 4:57 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,1,,"1. Grab the test case in PROD-468. 
2. Modify the connection factory in the Spring beans file to point to a local broker (say localhost:61616). 
3. Load up MB 5.4.1-fuse-01-00 with the attached activemq.xml
4. Run the PROD-468 test case with
{code}
mvn clean compile exec:java -Dexec.mainClass=Main
{code}
5. Watch as the SimpleAuthenticationBroker accumulates memory. In the test case it does this very slowly, but in production scenarios it can grow much faster (800+MB in PROD-468). jmap shows 8448 instances after a few dozen minutes:
{code}
janstey@mojo:~$ jmap -histo <amq-pid> | grep SimpleAuthenticationBroker
  80:           264           8448  org.apache.activemq.security.SimpleAuthenticationBroker$2
 608:             1             40  org.apache.activemq.security.SimpleAuthenticationBroker
{code}",,,,,,,,,,,,,,,23/Nov/10 7:45 PM;janstey;activemq.xml;https://issues.jboss.org/secure/attachment/12368815/activemq.xml,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-3052,,,,1.0,1.0,,1|hzkdwn:,179234,,,,,,,,"24/Nov/10 4:57 PM;dbosanac;This should be fixed and available in the latest snapshot (20101124.161449-35) available at 

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
initialReconnectDelay on failover transport is not being honoured,MB-776,12516197,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,22/Nov/10 4:07 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,24/Nov/10 4:58 PM,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,3,,"testing on snapshot of Nov 21st 2010.

using URL ""failover:(tcp://localhost:61616,tcp://localhost:61618)?initialReconnectDelay=10000&randomize=false&updateURIsSupported=false"" to connect to network of two brokers, on failover there is no delay in reconnecting to the alternate broker.


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-3049,,,,0.0,2.0,,1|hzkdxr:,179239,,,,,,,,"24/Nov/10 4:58 PM;dbosanac;This should be fixed and available in the latest snapshot (20101124.161449-35) available at

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/","25/Nov/10 4:53 PM;socallag;Hi Dejan,

I don't see any debug output:

Running without any brokers

{code}

C:\progress\apache-activemq-5.4.1-fuse-SNAPSHOT\example>ant consumer  -Durl=""failover:(tcp://localhost:61616,tcp://local
host:61618)?initialReconnectDelay=10000&randomize=false&updateURIsSupported=false""
Buildfile: build.xml

init:

compile:

consumer:
     [echo] Running consumer against server at $url = failover:(tcp://localhost:61616,tcp://localhost:61618)?initialReco
nnectDelay=10000&randomize=false&updateURIsSupported=false for subject $subject = TEST.FOO
     [java] Connecting to URL: failover:(tcp://localhost:61616,tcp://localhost:61618)?initialReconnectDelay=10000&random
ize=false&updateURIsSupported=false
     [java] Consuming queue: TEST.FOO
     [java] Using a non-durable subscription
     [java] Running 1 parallel threads


{code}

just seems to hang...

Running a producer against two brokers, killing one, restarting it, killing the other, I see fail over and back without any delays.

{code}
    [java] [Thread-1] Sending message: 'Message: 14 sent at: Thu Nov 25 16:43:03 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 15 sent at: Thu Nov 25 16:43:04 GMT 2010 ...'
    [java]  WARN | Transport (localhost/127.0.0.1:61616) failed to tcp://localhost:61616 , attempting to automatically
econnect due to: java.io.EOFException
    [java]  INFO | Successfully reconnected to tcp://localhost:61618
    [java] [Thread-1] Sending message: 'Message: 16 sent at: Thu Nov 25 16:43:05 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 17 sent at: Thu Nov 25 16:43:06 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 18 sent at: Thu Nov 25 16:43:07 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 19 sent at: Thu Nov 25 16:43:08 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 20 sent at: Thu Nov 25 16:43:09 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 21 sent at: Thu Nov 25 16:43:10 GMT 2010 ...'
    [java] [Thread-1] Sending message: 'Message: 22 sent at: Thu Nov 25 16:43:11 GMT 2010 ...'
    [java]  WARN | Transport (localhost/127.0.0.1:61618) failed to tcp://localhost:61618 , attempting to automatically
econnect due to: java.io.EOFException
    [java] [Thread-1] Sending message: 'Message: 23 sent at: Thu Nov 25 16:43:12 GMT 2010 ...'
    [java]  INFO | Successfully reconnected to tcp://localhost:61616

{code}

Thanks,

Seán",,,,,,,,,,,,,,,,,,
Durable subscriptions fill up non-persistent broker,MB-775,12516195,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,socallag,socallag,22/Nov/10 2:02 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,5.4.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Using the latest 5.4.1 Snapshot 21st Nov 2010.

The testcase shows the memoryUsagePercent value climb all the way to 100%, also looking at the heap on jconsole (attached) it looks as if the heap grows constantly too.",,,,,,,,,,,,,,,22/Nov/10 2:09 PM;socallag;ProcessTest.java;https://issues.jboss.org/secure/attachment/12368816/ProcessTest.java,22/Nov/10 2:09 PM;socallag;jconsole_memory.bmp;https://issues.jboss.org/secure/attachment/12368814/jconsole_memory.bmp,,,,,,,,,,,,,,,,,,,,,,,,,2.0,0.0,,1|hzke9r:,179293,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition caused thread to stuck in an infinite loop within LinkedHashMap.transfer,MB-774,12516196,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,joe.luo,joe.luo,17/Nov/10 12:02 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,13/Jan/11 5:27 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,0,,"It appears as if we have found a thread deadlock in activemq as can be seen in the stacktrace below.

{quote}
""ActiveMQ Session Task"" prio=3 tid=0x09366400 nid=0xcf waiting for monitor entry [0x98c58000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xbcfe4a70> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x08414400 nid=0xce waiting for monitor entry [0x974ee000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xbd006d70> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalMessageListenerContainer-7"" prio=3 tid=0x08ba3400 nid=0xcd waiting for monitor entry [0x97818000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer$3.afterCommit(ActiveMQMessageConsumer.java:643)
      at org.apache.activemq.TransactionContext.afterCommit(TransactionContext.java:160)
      at org.apache.activemq.TransactionContext.commit(TransactionContext.java:303)
      at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
      at org.springframework.jms.connection.JmsResourceHolder.commitAll(JmsResourceHolder.java:182)
      at org.springframework.jms.connection.ConnectionFactoryUtils$JmsResourceSynchronization.processResourceAfterCommit(ConnectionFactoryUtils.java:405)
      at org.springframework.transaction.support.ResourceHolderSynchronization.afterCommit(ResourceHolderSynchronization.java:74)
      at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCommit(TransactionSynchronizationUtils.java:114)
      at org.springframework.transaction.support.TransactionSynchronizationUtils.triggerAfterCommit(TransactionSynchronizationUtils.java:100)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCommit(AbstractPlatformTransactionManager.java:931)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:774)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:701)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x096a1800 nid=0xcc waiting for monitor entry [0x97683000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xbd0fe978> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x090f4000 nid=0xcb waiting for monitor entry [0x9749d000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xbd0ed7f0> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x0aa40000 nid=0xca waiting for monitor entry [0x98cfa000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xf7a29c50> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x08737800 nid=0xc9 waiting for monitor entry [0x98d4b000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xf7a882f8> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-57"" prio=3 tid=0x08859800 nid=0xc8 waiting for monitor entry [0x979ad000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-56"" prio=3 tid=0x08a73800 nid=0xc7 waiting for monitor entry [0x98c07000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x08738400 nid=0xc6 runnable [0x97725000]
java.lang.Thread.State: RUNNABLE
at java.util.LinkedHashMap.transfer(LinkedHashMap.java:234)
at java.util.HashMap.resize(HashMap.java:463)
at java.util.LinkedHashMap.addEntry(LinkedHashMap.java:414)
at java.util.HashMap.put(HashMap.java:385)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:50)

    * locked <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xbcfbcf08> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-55"" prio=3 tid=0x08737400 nid=0xc2 waiting for monitor entry [0x97632000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-54"" prio=3 tid=0x08736c00 nid=0xc1 waiting for monitor entry [0x9795c000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-53"" prio=3 tid=0x0a463400 nid=0xc0 waiting for monitor entry [0x9790b000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-50"" prio=3 tid=0x09319400 nid=0xbd waiting for monitor entry [0x976d4000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""nimMessageListenerContainer-48"" prio=3 tid=0x09319c00 nid=0xbb waiting for monitor entry [0x97776000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalMessageListenerContainer-6"" prio=3 tid=0x0ae34800 nid=0x9e waiting for monitor entry [0x977c7000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalMessageListenerContainer-5"" prio=3 tid=0x084c9800 nid=0x94 waiting for monitor entry [0x9753f000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer$3.afterCommit(ActiveMQMessageConsumer.java:643)
      at org.apache.activemq.TransactionContext.afterCommit(TransactionContext.java:160)
      at org.apache.activemq.TransactionContext.commit(TransactionContext.java:303)
      at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
      at org.springframework.jms.connection.JmsResourceHolder.commitAll(JmsResourceHolder.java:182)
      at org.springframework.jms.connection.ConnectionFactoryUtils$JmsResourceSynchronization.processResourceAfterCommit(ConnectionFactoryUtils.java:405)
      at org.springframework.transaction.support.ResourceHolderSynchronization.afterCommit(ResourceHolderSynchronization.java:74)
      at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCommit(TransactionSynchronizationUtils.java:114)
      at org.springframework.transaction.support.TransactionSynchronizationUtils.triggerAfterCommit(TransactionSynchronizationUtils.java:100)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCommit(AbstractPlatformTransactionManager.java:931)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:774)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:701)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalMessageListenerContainer-3"" prio=3 tid=0x09b20400 nid=0x92 waiting for monitor entry [0x975e1000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer$3.afterCommit(ActiveMQMessageConsumer.java:643)
      at org.apache.activemq.TransactionContext.afterCommit(TransactionContext.java:160)
      at org.apache.activemq.TransactionContext.commit(TransactionContext.java:303)
      at org.apache.activemq.ActiveMQSession.commit(ActiveMQSession.java:560)
      at org.springframework.jms.connection.JmsResourceHolder.commitAll(JmsResourceHolder.java:182)
      at org.springframework.jms.connection.ConnectionFactoryUtils$JmsResourceSynchronization.processResourceAfterCommit(ConnectionFactoryUtils.java:405)
      at org.springframework.transaction.support.ResourceHolderSynchronization.afterCommit(ResourceHolderSynchronization.java:74)
      at org.springframework.transaction.support.TransactionSynchronizationUtils.invokeAfterCommit(TransactionSynchronizationUtils.java:114)
      at org.springframework.transaction.support.TransactionSynchronizationUtils.triggerAfterCommit(TransactionSynchronizationUtils.java:100)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.triggerAfterCommit(AbstractPlatformTransactionManager.java:931)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:774)
      at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:701)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:255)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""ActiveMQ Session Task"" prio=3 tid=0x0ae35400 nid=0x85 waiting for monitor entry [0x979fe000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:43)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2271)
      at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
    * locked <0xbd0f7be0> (a java.lang.Object)
      at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
      at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
      at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
      at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
      at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
      at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalAvailabilityCheckMessageListenerContainer-5"" prio=3 tid=0x0ae43800 nid=0x82 waiting for monitor entry [0x992fd000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalAvailabilityCheckMessageListenerContainer-4"" prio=3 tid=0x08462400 nid=0x81 waiting for monitor entry [0x99168000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalAvailabilityCheckMessageListenerContainer-3"" prio=3 tid=0x0b1fc400 nid=0x80 waiting for monitor entry [0x98d9c000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)

""haloInternalAvailabilityCheckMessageListenerContainer-2"" prio=3 tid=0x0b223400 nid=0x7f waiting for monitor entry [0x98ca9000]
java.lang.Thread.State: BLOCKED (on object monitor)
at org.apache.activemq.ConnectionAudit.removeDispatcher(ConnectionAudit.java:39)

    * waiting to lock <0xbd257038> (a org.apache.activemq.ConnectionAudit)
      at org.apache.activemq.ActiveMQConnection.removeDispatcher(ActiveMQConnection.java:2267)
      at org.apache.activemq.ActiveMQSession.removeConsumer(ActiveMQSession.java:1601)
      at org.apache.activemq.ActiveMQMessageConsumer.dispose(ActiveMQMessageConsumer.java:775)
      at org.apache.activemq.ActiveMQMessageConsumer.doClose(ActiveMQMessageConsumer.java:658)
      at org.apache.activemq.ActiveMQMessageConsumer.close(ActiveMQMessageConsumer.java:652)
      at org.springframework.jms.support.JmsUtils.closeMessageConsumer(JmsUtils.java:151)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:356)
      at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:241)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:982)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:974)
      at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:876)
      at java.lang.Thread.run(Thread.java:619)
{quote}

""jstack"" tool output at 30 second intervals shows the race condition. One of the threads gets stuck in an infinite loop when resizing a LinkedHashMap. We also successfully attached a debugger to this process and observed the infinite loop inside LinkedHashMap.transfer. The thread never gets out of the for loop due to corruption of the linked list.

{code}
void transfer(HashMap.Entry[] newTable) {
    int newCapacity = newTable.length;
    for (Entry<K,V> e = header.after; e != header; e = e.after) { 
        int index = indexFor(e.hash, newCapacity); 
        e.next = newTable[index]; newTable[index] = e; 
    }
}
{code}

{quote}
ActiveMQ Session Task@15, prio=7, in group 'main', status: 'runnable'
java.lang.Thread.State: RUNNABLE
blocks ActiveMQ Session Task@5
blocks nimMessageListenerContainer-10@6
blocks nimMessageListenerContainer-9@7
blocks nimMessageListenerContainer-8@8
blocks nimMessageListenerContainer-3@13
blocks nimMessageListenerContainer-2@14
blocks ActiveMQ Session Task@16
blocks ActiveMQ Session Task@17
blocks ActiveMQ Session Task@18
blocks ActiveMQ Session Task@19
blocks ActiveMQ Session Task@20
blocks haloInternalAvailabilityCheckMessageListenerContainer-5@21
blocks haloInternalAvailabilityCheckMessageListenerContainer-3@23
blocks haloInternalAvailabilityCheckMessageListenerContainer-2@24
blocks penfoldMessageListenerContainer-1@92
blocks llustreamMessageListenerContainer-1@93
blocks hectorSequencedMessageListenerContainer-1@94
blocks sideshowMessageListenerContainer-1@95
blocks knitwareMessageListenerContainer-1@96
blocks nimMessageListenerContainer-1@97
blocks nedMessageListenerContainer-1@98
blocks hectorMessageListenerContainer-1@99
blocks haloInternalAvailabilityCheckMessageListenerContainer-1@100
blocks haloInternalMessageListenerContainer-1@101
at java.util.LinkedHashMap.transfer(LinkedHashMap.java:234)
at java.util.HashMap.resize(HashMap.java:463)
at java.util.LinkedHashMap.addEntry(LinkedHashMap.java:414)
at java.util.HashMap.put(HashMap.java:385)
at org.apache.activemq.ConnectionAudit.isDuplicate(ConnectionAudit.java:50)
at org.apache.activemq.ActiveMQConnection.isDuplicate(ActiveMQConnection.java:2269)
at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:1222)
at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:134)
at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:205)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
at java.lang.Thread.run(Thread.java:680)
{quote}

One area of code that might have caused this problem is located in ConnectionAudit class and method 'protected void rollbackDuplicate(ActiveMQDispatcher dispatcher, Message message)'. As this one is not synchronized. However, it does call 'get' on the maps which can cause structural changes as the maps are instantiated to sort based on access-order (see LRUCache.java). The Javadoc says:
{quote}
In access-ordered linked hash maps, merely querying the map with get is a structural modification.
{quote}
and
{quote}
Note that this implementation is not synchronized. If multiple threads access a linked hash map concurrently, and at least one of the threads modifies the map structurally, it must be synchronized externally.
{quote}

So synchronize the ConnectionAudit.rollbackDuplicate(...) might rectify this problem.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzke7b:,179282,,,,,,,,"19/Nov/10 4:54 PM;garytully;There is a new snapshot with the additional synchronization that should resolve this issue at http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/apache-activemq-5.4.1-fuse-20101118.201957-32-bin.tar.gz

Can you verify this in the customer test environment.",,,,,,,,,,,,,,,,,,,
Cannot import broker config using entities anymore,MB-773,12516194,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,janstey,janstey,15/Nov/10 6:18 PM,15/Nov/10 6:46 PM,29/Nov/16 4:16 PM,15/Nov/10 6:46 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"We used to be able to import broker config using entities as follows:

{code}
<!DOCTYPE activemq [
<!ENTITY network-connectors SYSTEM ""/etc/activemq/network-connectors.xml""> 
]>
<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd
http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd""> 
  
  <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""${activemq.brokername}"" useJmx=""true"" populateJMSXUserID=""true"" dataDirectory=""${activemq.base}/data""> 
 
    <managementContext> 
        <managementContext createConnector=""false""/> 
    </managementContext> 

    &network-connectors;

...
{code}

Now, since the Spring 3 upgrade, you get something like this error:

{code}
Caused by: org.xml.sax.SAXParseException: Element type ""beans"" must be declared.
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:195)
        at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.error(ErrorHandlerWrapper.java:131)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:384)
        at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:318)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.handleStartElement(XMLDTDValidator.java:1929)
        at com.sun.org.apache.xerces.internal.impl.dtd.XMLDTDValidator.startElement(XMLDTDValidator.java:764)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanStartElement(XMLDocumentFragmentScannerImpl.java:1363)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$ContentDriver.scanRootElementHook(XMLDocumentScannerImpl.java:1318)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3103)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:922)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:648)
        at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:511)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:808)
        at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:737)
        at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:119)
        at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:235)
        at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:284)
        at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
        at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:388)
        ... 42 more
{code}

This is caused by validation being turned on by default in Spring 3 (it was off in Spring 2.x). Have test case coming soon.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkdw7:,179232,,,,,,,,"15/Nov/10 6:38 PM;janstey;Also in Spring 2.x AbstractXmlApplicationContext included this method:

{code}
	protected void initBeanDefinitionReader(XmlBeanDefinitionReader reader) {
	}
{code}

In Spring 3 this now sets validation to true by default

{code}
	protected void initBeanDefinitionReader(XmlBeanDefinitionReader reader) {
		reader.setValidating(this.validating);
	}
{code}",,,,,,,,,,,,,,,,,,,
WARN Service - Failed to remove connection ConnectionInfo (java.util.ConcurrentModificationException),MB-772,12516193,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,ubhole,ubhole,12/Nov/10 4:04 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,22/Nov/10 1:19 PM,,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,broker,,,2,,"With the last SNAPSHOT, I receive a lot of warning like this one after a restart

2010-11-08 12:22:53,829 [0.140.203:62976] WARN Service - Failed to remove connection ConnectionInfo {commandId = 2478160, responseRequired = true, connectionId = ID:ssv0309v-48823-1288937515067-0:13, clientId = ID:ssv0309v-48823-1288937515067-14:0, userName = smx, password = *****, brokerPath = null, brokerMasterConnector = false, manageable = true, clientMaster = true, faultTolerant = true}
java.util.ConcurrentModificationException
at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:373)
at java.util.LinkedHashMap$ValueIterator.next(LinkedHashMap.java:388)
at org.apache.activemq.broker.TransactionBroker.removeConnection(TransactionBroker.java:256)
at org.apache.activemq.broker.BrokerFilter.removeConnection(BrokerFilter.java:113)
at org.apache.activemq.security.SimpleAuthenticationBroker.removeConnection(SimpleAuthenticationBroker.java:100)
at org.apache.activemq.broker.MutableBrokerFilter.removeConnection(MutableBrokerFilter.java:119)
at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:740)
at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:72)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:311)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:220)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:202)
at java.lang.Thread.run(Thread.java:619)",fuseMB 5.4.1-fuse-SNAPSHOT ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2950,,,,0.0,1.0,,1|hzke5j:,179274,,,,,,,,"22/Nov/10 1:19 PM;dbosanac;This should be now fixed and merged to 5.4-fusesource branch. You can use the latest snapshot (20101122.124949-33) from

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/

to test it out.",,,,,,,,,,,,,,,,,,,
Accessing webconsole 'scheduler' page gives javax.el.ELException: java.lang.IllegalArgumentException: Null object name and fails.,MB-770,12516192,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ade1,ade1,11/Nov/10 11:11 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,31/Jan/11 12:42 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,,,,0,,"When we use the scheduled jobs page in webconsole, we see an error, and then get the following in the ActiveMQ log file. 

{code}
 WARN | /admin/scheduled.jsp
javax.el.ELException: java.lang.IllegalArgumentException: Null object name
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.scheduled_jsp._jspx_meth_c_forEach_0(org.apache.jsp.scheduled_jsp:118)
        at org.apache.jsp.scheduled_jsp._jspService(org.apache.jsp.scheduled_jsp:90)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:527)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1216)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:45)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
        at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1187)
        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:421)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:119)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:493)
        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:225)
        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:930)
        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:358)
        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)
        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:866)
        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:117)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
        at org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:456)
        at org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)
        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:113)
        at org.eclipse.jetty.server.Server.handle(Server.java:351)
        at org.eclipse.jetty.server.HttpConnection.handleRequest(HttpConnection.java:594)
        at org.eclipse.jetty.server.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:1042)
        at org.eclipse.jetty.http.HttpParser.parseNext(HttpParser.java:549)
        at org.eclipse.jetty.http.HttpParser.parseAvailable(HttpParser.java:211)
        at org.eclipse.jetty.server.HttpConnection.handle(HttpConnection.java:424)
        at org.eclipse.jetty.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:506)
        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:436)
        at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.IllegalArgumentException: Null object name
        at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:128)
        at javax.management.MBeanServerInvocationHandler.<init>(MBeanServerInvocationHandler.java:97)
        at javax.management.MBeanServerInvocationHandler.newProxyInstance(MBeanServerInvocationHandler.java:217)
        at org.apache.activemq.broker.jmx.ManagementContext.newProxyInstance(ManagementContext.java:298)
        at org.apache.activemq.web.LocalBrokerFacade.newProxyInstance(LocalBrokerFacade.java:88)
        at org.apache.activemq.web.BrokerFacadeSupport.getJobScheduler(BrokerFacadeSupport.java:206)
        at org.apache.activemq.web.BrokerFacadeSupport.getScheduledJobs(BrokerFacadeSupport.java:210)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
        ... 46 more

{code} ","Linux, using apache-activemq-5.4.1-fuse-SNAPSHOT",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkean:,179297,,,,,,,,19/Nov/10 4:10 PM;garytully;What is the relative priority of this for you?,"26/Nov/10 3:53 PM;dbosanac;Just a note, as I was doing something in this area. The exception is thrown because the scheduler is off by default. If you turn it on, by adding something like

{code}<broker  .. schedulerSupport=""true"" .. >{code}

it will work.

I'll see to add isSchedulerSupport to broker MBean and display nice message instead of the exception.",31/Jan/11 12:42 PM;garytully;Dejan fixed this at apache: https://issues.apache.org/jira/browse/AMQ-3088  and it is in 5.4.2-fuse-01-00,,,,,,,,,,,,,,,,,
"Get error 'NATURAL JSON notation configured, but JAXB RI 2.1.10 not found' when starting ActiveMQ",MB-769,12516189,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,ade1,ade1,11/Nov/10 11:07 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,29/Mar/11 1:57 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"The error seems to be caused by the Camel component of ActiveMQ's web console. To get rid of the error, you have to comment out the Camel webapp from the jetty.xml file: 

{code:xml}
                        <!--
                        <bean class=""org.eclipse.jetty.webapp.WebAppContext"">
                            <property name=""contextPath"" value=""/camel"" />
                            <property name=""resourceBase"" value=""${activemq.home}/webapps/camel"" />
                            <property name=""logUrlOnStart"" value=""true"" />
                        </bean>
                        -->
{code} 

The error & stack trace: 

{code} 
SEVERE: NATURAL JSON notation configured, but JAXB RI 2.1.10 not found. For the recent builds to get this working correctly, you need even at least JAXB version 2.1.12. Please add it to your classpath!
11-Nov-2010 11:03:05 com.sun.jersey.core.spi.component.ProviderFactory __getComponentProvider
SEVERE: The provider class, class org.apache.camel.web.util.JAXBContextResolverOSGI, could not be instantiated. Processing will continue but the class will not be utilized
java.lang.RuntimeException: NATURAL JSON notation configured, but JAXB RI 2.1.10 not found. For the recent builds to get this working correctly, you need even at least JAXB version 2.1.12. Please add it to your classpath!
        at com.sun.jersey.api.json.JSONConfiguration.natural(JSONConfiguration.java:378)
        at org.apache.camel.web.util.JAXBContextResolverOSGI.<init>(JAXBContextResolverOSGI.java:39)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
        at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)
        at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)
        at java.lang.reflect.Constructor.newInstance(Constructor.java:513)
        at java.lang.Class.newInstance0(Class.java:355)
        at java.lang.Class.newInstance(Class.java:308)
        at com.sun.jersey.core.spi.component.ComponentConstructor._getInstance(ComponentConstructor.java:153)
        at com.sun.jersey.core.spi.component.ComponentConstructor.getInstance(ComponentConstructor.java:141)
        at com.sun.jersey.core.spi.component.ProviderFactory.__getComponentProvider(ProviderFactory.java:163)
        at com.sun.jersey.core.spi.component.ProviderFactory._getComponentProvider(ProviderFactory.java:156)
        at com.sun.jersey.core.spi.component.ioc.IoCProviderFactory._getComponentProvider(IoCProviderFactory.java:90)
        at com.sun.jersey.core.spi.component.ProviderFactory.getComponentProvider(ProviderFactory.java:150)
        at com.sun.jersey.core.spi.component.ProviderServices.getComponent(ProviderServices.java:227)
        at com.sun.jersey.core.spi.component.ProviderServices.getProviders(ProviderServices.java:124)
        at com.sun.jersey.core.spi.factory.ContextResolverFactory.<init>(ContextResolverFactory.java:78)
        at com.sun.jersey.server.impl.application.WebApplicationImpl.initiate(WebApplicationImpl.java:804)
        at com.sun.jersey.spi.spring.container.servlet.SpringServlet.initiate(SpringServlet.java:99)
        at com.sun.jersey.spi.container.servlet.ServletContainer$InternalWebComponent.initiate(ServletContainer.java:252)
        at com.sun.jersey.spi.container.servlet.WebComponent.load(WebComponent.java:550)
        at com.sun.jersey.spi.container.servlet.WebComponent.init(WebComponent.java:201)
        at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:307)
        at com.sun.jersey.spi.container.servlet.ServletContainer.init(ServletContainer.java:641)
        at org.eclipse.jetty.servlet.FilterHolder.doStart(FilterHolder.java:74)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.servlet.ServletHandler.initialize(ServletHandler.java:668)
        at org.eclipse.jetty.servlet.ServletContextHandler.startContext(ServletContextHandler.java:204)
        at org.eclipse.jetty.webapp.WebAppContext.startContext(WebAppContext.java:994)
        at org.eclipse.jetty.server.handler.ContextHandler.doStart(ContextHandler.java:588)
        at org.eclipse.jetty.webapp.WebAppContext.doStart(WebAppContext.java:380)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.security.SecurityHandler.doStart(SecurityHandler.java:338)
        at org.eclipse.jetty.security.ConstraintSecurityHandler.doStart(ConstraintSecurityHandler.java:229)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerCollection.doStart(HandlerCollection.java:165)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at org.eclipse.jetty.server.handler.HandlerWrapper.doStart(HandlerWrapper.java:92)
        at org.eclipse.jetty.server.Server.doStart(Server.java:242)
        at org.eclipse.jetty.util.component.AbstractLifeCycle.start(AbstractLifeCycle.java:55)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1536)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1477)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1409)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:519)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:456)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:291)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:288)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:190)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:574)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:895)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:425)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:143)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:85)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:597)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
11-Nov-2010 11:03:05 com.sun.jersey.api.wadl.config.WadlGeneratorLoader loadWadlGenerator

{code} ",Linux (but probably all environments!),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3249,,,,0.0,2.0,,1|hzkelb:,179345,,,,,,,,"22/Mar/11 5:28 PM;davestanley;Upgrading to jaxb r1 2.1.10 resolves the error, however there are some residual warnings (due to use of deprecated
classes) that would be nice to cleanup.

{code}
Mar 22, 2011 11:20:30 AM com.sun.jersey.server.impl.application.DeferredResourceConfig getApplication
INFO: Instantiating the Application class, named org.apache.camel.web.util.CamelResourceConfig
Mar 22, 2011 11:20:31 AM com.sun.jersey.api.wadl.config.WadlGeneratorLoader loadWadlGenerator
INFO: Loading wadlGenerator com.sun.jersey.server.wadl.generators.WadlGeneratorApplicationDoc
Mar 22, 2011 11:20:31 AM com.sun.jersey.api.wadl.config.WadlGeneratorLoader setProperty
WARNING: Configuring the WadlGeneratorApplicationDoc with the file based property applicationDocsFile is deprecated and will be removed in future versions of jersey! You should use the InputStream based property instead.
Mar 22, 2011 11:20:31 AM com.sun.jersey.api.wadl.config.WadlGeneratorLoader loadWadlGenerator
INFO: Loading wadlGenerator com.sun.jersey.server.wadl.generators.WadlGeneratorGrammarsSupport
Mar 22, 2011 11:20:31 AM com.sun.jersey.api.wadl.config.WadlGeneratorLoader setProperty
WARNING: Configuring the WadlGeneratorGrammarsSupport with the file based property grammarsFile is deprecated and will be removed in future versions of jersey! You should use the InputStream based property instead.
Mar 22, 2011 11:20:31 AM com.sun.jersey.api.wadl.config.WadlGeneratorLoader loadWadlGenerator
INFO: Loading wadlGenerator com.sun.jersey.server.wadl.generators.resourcedoc.WadlGeneratorResourceDocSupport
Mar 22, 2011 11:20:31 AM com.sun.jersey.api.wadl.config.WadlGeneratorLoader setProperty
WARNING: Configuring the WadlGeneratorResourceDocSupport with the file based property resourceDocFile is deprecated and will be removed in future versions of jersey! You should use the InputStream based property instead.
{code}

Regards
/Dave
","29/Mar/11 1:57 PM;dbosanac;While inspecting this issue, I noted that for the upcoming 5.5.0-fuse release we can remove jaxb as we now request JDK 6 and jaxb is included.

I'll resolve the issue for now, if anyone need any more work on it, please reopen it.

BTW. I didn't manage to reproduce it, as it probably environmentally specific",,,,,,,,,,,,,,,,,,
activemq stop script always returns 1,MB-767,12516188,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,04/Nov/10 6:35 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,24/Nov/10 5:01 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,,,,0,,"The activemq script when stopping the broker always returns a status of ""1"" even when the stopping is successful.  I start it like

{code}
janstey@mojo:/opt/fuse/apache-activemq-5.4.1-fuse-00-00$ ./bin/activemq start
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/janstey/.activemqrc)

INFO: Invoke the following command to create a configuration file
./bin/activemq setup [ /etc/default/activemq | /home/janstey/.activemqrc ]

INFO: Using java '/opt/jdk1.6.0_20/bin/java'
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details
INFO: pidfile created : '/opt/fuse/apache-activemq-5.4.1-fuse-00-00/data/activemq.pid' (pid '8764')
{code}

and tail the log file until it is actually started up. I then issue a stop command like:

{code}
janstey@mojo:/opt/fuse/apache-activemq-5.4.1-fuse-00-00$ ./bin/activemq stop
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /home/janstey/.activemqrc)

INFO: Invoke the following command to create a configuration file
./bin/activemq setup [ /etc/default/activemq | /home/janstey/.activemqrc ]

INFO: Using java '/opt/jdk1.6.0_20/bin/java'
RET=1
INFO: Waiting at least 30 seconds for regular process termination of pid '8764' : Java Runtime: Sun Microsystems Inc. 1.6.0_20 /opt/jdk1.6.0_20/jre
  Heap sizes: current=61696k  free=61372k  max=915712k
    JVM args: -Dactivemq.classpath=/opt/fuse/apache-activemq-5.4.1-fuse-00-00/conf; -Dactivemq.home=/opt/fuse/apache-activemq-5.4.1-fuse-00-00 -Dactivemq.base=/opt/fuse/apache-activemq-5.4.1-fuse-00-00
ACTIVEMQ_HOME: /opt/fuse/apache-activemq-5.4.1-fuse-00-00
ACTIVEMQ_BASE: /opt/fuse/apache-activemq-5.4.1-fuse-00-00
Connecting to pid: 8764
Stopping broker: localhost
.. FINISHED
{code}

Which looks successful but then I get the status:

{code}
janstey@mojo:/opt/fuse/apache-activemq-5.4.1-fuse-00-00$ echo $?
1
{code}

If I stop the broker using a direct call (like the script is actually doing) I get the correct result:

{code}
janstey@mojo:/opt/fuse/apache-activemq-5.4.1-fuse-00-00$ sh -c ""/opt/jdk1.6.0_20/bin/java -Dactivemq.classpath=\""/opt/fuse/apache-activemq-5.4.1-fuse-00-00/conf;\"" -Dactivemq.home=\""/opt/fuse/apache-activemq-5.4.1-fuse-00-00\"" -Dactivemq.base=\""/opt/fuse/apache-activemq-5.4.1-fuse-00-00\"" -jar \""/opt/fuse/apache-activemq-5.4.1-fuse-00-00/bin/run.jar\"" stop;""
Java Runtime: Sun Microsystems Inc. 1.6.0_20 /opt/jdk1.6.0_20/jre
  Heap sizes: current=61696k  free=61372k  max=915712k
    JVM args: -Dactivemq.classpath=/opt/fuse/apache-activemq-5.4.1-fuse-00-00/conf; -Dactivemq.home=/opt/fuse/apache-activemq-5.4.1-fuse-00-00 -Dactivemq.base=/opt/fuse/apache-activemq-5.4.1-fuse-00-00
ACTIVEMQ_HOME: /opt/fuse/apache-activemq-5.4.1-fuse-00-00
ACTIVEMQ_BASE: /opt/fuse/apache-activemq-5.4.1-fuse-00-00
Connecting to pid: 9117
Stopping broker: localhost
janstey@mojo:/opt/fuse/apache-activemq-5.4.1-fuse-00-00$ echo $?
0
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-3050,,,,0.0,1.0,,1|hzkdxb:,179237,,,,,,,,"24/Nov/10 5:01 PM;dbosanac;This should be fixed and available in the latest snapshot (20101124.161449-35) available at


http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Failover transport blocking when uri sets watchTopicAdvisories=false,MB-766,12516187,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,davestanley,davestanley,04/Nov/10 5:48 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,04/Nov/10 6:31 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"When using the failover transport with watchTopicAdvisories = false, both 
producer and consumer block with the following trace:

{code}
""http-1"" daemon prio=6 tid=0x000000000892f800 nid=0x1b58 in Object.wait() [0x000000000f93d000]
   java.lang.Thread.State: TIMED_WAITING (on object monitor)
        at java.lang.Object.wait(Native Method)
        - waiting on <0x00000000d4c61808> (a java.lang.Object)
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:436)
        - locked <0x00000000d4c61808> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
        - locked <0x00000000d4c62728> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:74)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:79)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1244)
        at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1350)
        - locked <0x00000000d4c64ca0> (a java.lang.Object)
{code}

If I use a non failover uri with the same settings test passes.

Failover uri I'm testing with is:

{code}
failover://(tcp://localhost:61616?wireFormat.maxInactivityDuration=0)?randomize=false&maxReconnectDelay=10000&timeout=10000&jms.watchTopicAdvisories=false
{code}
",Tested on Mac OS X,,,,,,,,,,PROD-444,,,,04/Nov/10 5:49 PM;davestanley;testcase.zip;https://issues.jboss.org/secure/attachment/12368813/testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkdu7:,179223,,,,,,,,"04/Nov/10 5:49 PM;davestanley;Testcase attached, three consoles:

mvn -Pbroker
mvn -Pcaller
mvn -Presponder","04/Nov/10 6:31 PM;davestanley;Correct uri is:

{code}
failover:(tcp://localhost:61616?wireFormat.maxInactivityDuration=0)?randomize=false&maxReconnectDelay=10000&timeout=10000&jms.watchTopicAdvisories=false
{code}


Uri's of the form ""failover://"" are only for simple uri's. Use failover: for composites ..",,,,,,,,,,,,,,,,,,
"Instance PID is placed in $ACTIVEMQ_HOME/data, not $ACTIVEMQ_BASE/data",MB-765,12516186,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ade1,ade1,02/Nov/10 10:45 PM,03/Jan/11 9:34 PM,29/Nov/16 4:16 PM,,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"If you create an instance, say 'activemq-instance-01', then when you run it with the 'start' parameter, the PID is placed in the wrong directory:

{code}
ade@localhost:/opt/apache-activemq-5.4.1-fuse-00-00/activemq-instance-01> ./bin/activemq-instance-01 start
INFO: Using default configuration
(you can configure options in one of these file: /etc/default/activemq /Users/ade/.activemqrc)

INFO: Invoke the following command to create a configuration file
/opt/apache-activemq-5.4.1-fuse-00-00/bin/activemq setup [ /etc/default/activemq | /Users/ade/.activemqrc ]

INFO: Using java '/System/Library/Frameworks/JavaVM.framework/Home/bin/java'
INFO: Starting - inspect logfiles specified in logging.properties and log4j.properties to get details
INFO: pidfile created : '/opt/apache-activemq-5.4.1-fuse-00-00/data/activemq.pid' (pid '7558')
{code}

As you can see, the PID is placed in the $ACTIVEMQ_HOME directory, *not* the $ACTIVEMQ_BASE directory.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzke1z:,179258,,,,,,,,03/Jan/11 9:34 PM;davestanley;BQ:Low,,,,,,,,,,,,,,,,,,,
'activemq' script should complain if an instance name does not begin with 'activemq-instance-',MB-764,12516183,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,ade1,ade1,02/Nov/10 10:43 PM,03/Jan/11 9:34 PM,29/Nov/16 4:16 PM,,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"When you create a new instance using 'activemq create <instance-name>', but *don't* begin the <instance-name> with 'activemq-instance-', then the script will create the instance anyway BUT WILL READ THE WRONG ACTIVEMQ.XML file on startup! It will read $ACTIVEMQ_HOME/conf/activemq.xml, *not* $ACTIVEMQ_BASE/conf/activemq.xml. 

If the intent is that all instances should be prefixed with 'activemq-instance-', then we should not allow users to accidentally create incorrect instances. Alternatively, if we are going to allow users to create instances using their own naming schemes, then we should ensure that we read the correct configuration file.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzke1j:,179256,,,,,,,,12/Nov/10 10:13 AM;ade1;Not directly - but this whole new instance thing with ActiveMQ is going to start causing us pain. The concept is GREAT - the problem is that there have been a load of bugs in the scripts and non-obvious things (like this) that make it really difficult to use!,,,,,,,,,,,,,,,,,,,
Problem of removing durableSubscribers from BrokerView,MB-763,12516184,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,01/Nov/10 10:54 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,10/Dec/10 8:21 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"Please have a look at attached unit test case. There are two issues here:
1. it looks like we never delete a durableSubscriber completely from BrokerView. When a durableSubscriber is created, we put it in a map of ManagedRegionBroker called ""durableTopicSubscribers"". When the durableSubscriber gets deleted, we remove it from the ""durableTopicSubscribers"" map and it is fine. However we also put it into another map of ManagedRegionBroker called ""inactiveDurableTopicSubscribers"". That is why, the validation code in the test case after deleting/destroying a durableSubscriber:
{code}
subscriptions = broker.getAdminView().getInactiveDurableTopicSubscribers();
assertEquals(0, subscriptions.length);
{code}
will always fail. 

I am not sure whether it makes sense to put a durableSubscriber into the ""inactiveDurableTopicSubscribers"" map to maintain it even after it gets destroyed.

2. after broker restart, a durableSubscriber can not be removed any more from the ""durableTopicSubscribers"" map of ManagedRegionBroker when it gets deleted/destroyed. ",5.4.1-fuse-SNAPSHOT-22 ,,,,,,,,,,,,,,09/Dec/10 3:09 PM;joe.luo;DurableSubscriptionUnsubscribeTest.java;https://issues.jboss.org/secure/attachment/12368817/DurableSubscriptionUnsubscribeTest.java,01/Nov/10 10:55 AM;joe.luo;DurableSubscriptionUnsubscribeTest.java;https://issues.jboss.org/secure/attachment/12368811/DurableSubscriptionUnsubscribeTest.java,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-3013,,,,2.0,3.0,,1|hzkdy7:,179241,,,,,,,,"04/Nov/10 12:53 PM;dbosanac;This should be fixed now and available in the latest snapshot (20101104.121950-26) at

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/

Note that behavior is somewhat changed, so when you disconnect the subscriber it will not be available anymore using getDurableTopicSubscribers(), but only through getInactiveDurableTopicSubscribers()

Also, there's a new section in the web console that shows offline subscribers. See Apache issue for more details.

","09/Dec/10 3:09 PM;joe.luo;I noticed some hanging MBeans in the broker that belong to deleted subscriptions. They also have strange object name, like: active=false. It is created in ManagedRegionBroker.addInactiveSubscription(). Please take a look at extended test case.","10/Dec/10 8:21 PM;dbosanac;This should be fixed now on the trunk and merged to 5.4-fusesource branch. You can test it with the latest snapshot (20101210.192051-38) located here

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/

btw. the related Apache issue is https://issues.apache.org/jira/browse/AMQ-3081",,,,,,,,,,,,,,,,,
Dispatch counter incrementing with queue browser poll but no consumers/producers attached to broker.,MB-762,12516185,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,28/Oct/10 3:13 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,09/Nov/10 1:59 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,broker,,,0,,"We have a mesh of 6 brokers. Am attaching a queue browser to brokers 5 and 6. I send 10 messages
through the mesh and consume all but one of them.

It all looks good up to this point. The queue browser responds as expected.

I connect via jconsole to brokers 5 and 6. It noted on the queue ""PROD.FUSESOURCE.TY.B"" on broker 6 dispatch counter
is continually incrementing .. 

",5.4.1-SNAPSHOT,,,,,,,,,,PROD-381,,,,28/Oct/10 3:15 PM;davestanley;testcase_10_28_10.zip;https://issues.jboss.org/secure/attachment/12368812/testcase_10_28_10.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-3020,,,,1.0,2.0,,1|hzketj:,179382,,,,,,,,"28/Oct/10 3:15 PM;davestanley;Attaching testcase.. see README.txt in root of zip.
",09/Nov/10 1:59 PM;dbosanac;Fixed and merged to 5.3.1-fuse branch.,,,,,,,,,,,,,,,,,,
"Message getting stuck on queue, leading to KahaDB log files not being deleted and disk running out of space",MB-759,12516179,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,,janstey,janstey,26/Oct/10 12:42 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,01/Nov/10 12:41 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,1,,"Customer is encountering messages that are stuck on a queue (saved in kahaDB). After restarting the broker the message can be consumed again. Seems to be reported in the Apache community as well in https://issues.apache.org/activemq/browse/AMQ-2955

In PROD-403 the workaround of useCache=""false"" is being used and no message is pending at the moment.",latest 5.4.1 snapshot - apache-activemq-5.4.1-fuse-20101025.000715-20-bin.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2955,,,,0.0,2.0,,1|hzkdt3:,179218,,,,,,,,"29/Oct/10 11:44 PM;janstey;FYI the fix for MB-757 did not resolve this issue. The test provided in AMQ-2955 was run against SNAPSHOT 20101029.144225-23 and a stuck message was observed with useCache=""true"".",01/Nov/10 12:41 PM;janstey;Customer reported that issue is in fact resolved in 20101029.144225-23,,,,,,,,,,,,,,,,,,
Virtual topic interceptor process advisory messages,MB-758,12516178,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,22/Oct/10 2:28 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,22/Oct/10 12:21 PM,,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,Placeholder to track merge into Fuse MB branch.,5.4.1-SNAPSHOT,,,,,,,,,,PROD-381,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2993,,,,0.0,1.0,,1|hzkdsn:,179216,,,,,,,,22/Oct/10 12:21 PM;dbosanac;This should be fixed in the 5.4-fusesource branch,,,,,,,,,,,,,,,,,,,
KahaDB doesn't clean up old log files,MB-757,12516180,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,19/Oct/10 12:42 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,18/Feb/11 12:47 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,2,,"Tested against 18th Oct apache-activemq-5.4.1-fuse-SNAPSHOT 

Testcase attached.",,,,,,,,,,,,,,,19/Oct/10 12:42 PM;socallag;PROD-426.zip;https://issues.jboss.org/secure/attachment/12368810/PROD-426.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2736,,,,1.0,3.0,,1|hzked3:,179308,,,,,,,,"27/Oct/10 1:32 PM;dbosanac;This should be fixed now and merged to 5.4-fusesource branch

The latest snapshot (20101027.125324-21)

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/

should work fine with the test.

Just note that you need to let the test (PROD-426) to finish, as messages will not be acked (removed from the store) until then. After messages are removed, the files should be cleaned.

",16/Feb/11 8:45 PM;davestanley;This issue was reopened due to https://issues.apache.org/jira/browse/AMQ-2736 being reopened.,"18/Feb/11 12:47 PM;garytully;updated for kill -9 (or abortive) broker shutdown with outstanding local transactions. merged to 5.4-fusesource, new snapshot in the making.",,,,,,,,,,,,,,,,,
Missing messages in durable subscription with selector and KahaDB,MB-755,12516176,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,janstey,janstey,15/Oct/10 3:17 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,25/Feb/11 2:03 PM,5.4.0-fuse-00-00,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,,,,0,,"Problem with durable subscriptions with selector when using KahaDB. Messages are not delivered. The test is passed if the broker is not persistent.

Maven-based test case is in DEV-2707. Run with:

{code}
mvn clean test
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3190,,,,0.0,12.0,,1|hzkedr:,179311,,,,,,,,18/Oct/10 12:21 PM;garytully;tracked at apache via https://issues.apache.org/activemq/browse/AMQ-2985,"19/Oct/10 12:16 PM;garytully;issue resolved at apache and fix merged to 5.4.1 branch. Available to validate via snapshot:
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/",22/Oct/10 11:54 AM;janstey;There is still an issue here that the user demonstrated in a new test case (durablesub-test-2.zip on DEV-2707).,22/Oct/10 12:37 PM;janstey;There has been another test added to this issue. Please find all in durablesub-test-3.zip on DEV-2707. ,"22/Oct/10 4:17 PM;garytully;thanks for the tests, have got to the bottom of variant2 but there is still a problem with variant3 of the test.","22/Oct/10 7:55 PM;garytully;fixes merged and new snapshot deployed, additional testing started in parallel. If all is good, this should be sorted.",22/Oct/10 7:59 PM;garytully;relevant ci build: http://ci.fusesource.com/hudson/job/activemq-5.4-fusesource-checkin/44/,27/Oct/10 3:37 PM;garytully;The last piece of the puzzle is complete. This is all set for the next release. 5.4.1-fuse-01-00,19/Nov/10 4:16 PM;janstey;Reopening as there are additional issues discussed in DEV-2707,"25/Feb/11 12:50 PM;garytully;opened https://issues.apache.org/jira/browse/AMQ-3190 at apache, found the problem and reduced it to a simple test. Will complete the fix to day and build a snapshot.","25/Feb/11 2:03 PM;garytully;new snapshot with fix: https://issues.apache.org/jira/browse/AMQ-3190

see snap from Fri 25th or later.
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/",25/Feb/11 2:49 PM;garytully;fix up fix version.,,,,,,,,
StorePercentUsage value never decreases,MB-754,12516175,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,15/Oct/10 9:31 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,18/Oct/10 3:51 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,2,,"Tested against 14th October 5.4.1 SNAPSHOT 

start broker using attached activemq.xml and run mvn test.
",,,,,,,,,,,,,,,15/Oct/10 9:32 AM;socallag;PROD-426.zip;https://issues.jboss.org/secure/attachment/12368806/PROD-426.zip,15/Oct/10 9:32 AM;socallag;activemq-prod426.xml;https://issues.jboss.org/secure/attachment/12368807/activemq-prod426.xml,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2986,,,,2.0,1.0,,1|hzkdq7:,179205,,,,,,,,"18/Oct/10 3:51 PM;dbosanac;It is fixed now and merged to 5.4.1-fuse branch. You can test it in the latest snapshot 

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/

20101018.153424-11

",,,,,,,,,,,,,,,,,,,
Proxy connector with failover does not work for durable subscribers,MB-753,12516174,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,13/Oct/10 1:59 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,10/Jan/11 3:16 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-01-00,,,,,,,0,,"Start proxy connector activemq-dev2698.xml
Start two HA brokers, master activemq-ha1.xml, slave activemq-ha2.xml.

Connect subscriber to proxy and producer to master.

C:\progress\apache-activemq-5.4.0-fuse-00-00\example>start ant consumer -Dtopic=true -Ddurable=true -Durl=tcp://localhost:51618

C:\progress\apache-activemq-5.4.0-fuse-00-00\example>start ant producer -DsleepTime=100 -Dtopic=true -Ddurable=true -Durl=""failover:(tcp://localhost:61616,tcp://localhost:61626)?randomize=false""

Messages are delivered.

Kill the master.
Producer fails over to slave but subscriber no longer receives messages.

Looking at proxy log files(attached), it looks like the proxy failsover to a local vm:// transport:

2010-10-13 14:38:35,097 | DEBUG | Stopping transport tcp://localhost/127.0.0.1:61616 | org.apache.activemq.transport.tcp.TcpTransport | ActiveMQ Transport: tcp://localhost/127.0.0.1:61616
2010-10-13 14:38:35,097 | WARN  | Transport (localhost/127.0.0.1:61616) failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.io.EOFException | org.apache.activemq.transport.failover.FailoverTransport | ActiveMQ Transport: tcp://localhost/127.0.0.1:61616
2010-10-13 14:38:35,128 | DEBUG | Transport failed with the following exception: | org.apache.activemq.transport.failover.FailoverTransport | ActiveMQ Transport: tcp://localhost/127.0.0.1:61616
java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:375)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:226)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:218)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
	at java.lang.Thread.run(Thread.java:619)
2010-10-13 14:38:35,128 | DEBUG | urlList connectionList:[vm://proxy, tcp://nbdubseanoc1:61616, tcp://localhost:61626, tcp://localhost:61616] | org.apache.activemq.transport.failover.FailoverTransport | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,128 | DEBUG | Attempting connect to: vm://proxy | org.apache.activemq.transport.failover.FailoverTransport | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | binding to broker: proxy | org.apache.activemq.transport.vm.VMTransportFactory | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | INFO  | Connector vm://proxy Started | org.apache.activemq.broker.TransportConnector | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | conn: ID:nbdubseanoc1-1201-1286977080347-0:0 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | session: ID:nbdubseanoc1-1201-1286977080347-0:0:1 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | producer: ID:nbdubseanoc1-1201-1286977080347-0:0:1:1 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | restore consumer: ID:nbdubseanoc1-1201-1286977080347-0:0:1:1 in pull mode pending recovery, overriding prefetch: 1000 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | restore consumer: ID:nbdubseanoc1-1201-1286977080347-0:0:1:1 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | session: ID:nbdubseanoc1-1201-1286977080347-0:0:-1 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | restore consumer: ID:nbdubseanoc1-1201-1286977080347-0:0:-1:1 in pull mode pending recovery, overriding prefetch: 1000 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,206 | DEBUG | restore consumer: ID:nbdubseanoc1-1201-1286977080347-0:0:-1:1 | org.apache.activemq.state.ConnectionStateTracker | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,237 | DEBUG | Connection established | org.apache.activemq.transport.failover.FailoverTransport | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,237 | INFO  | Successfully reconnected to vm://proxy | org.apache.activemq.transport.failover.FailoverTransport | ActiveMQ Failover Worker: 17645325
2010-10-13 14:38:35,253 | DEBUG | Setting up new connection id: ID:nbdubseanoc1-1201-1286977080347-0:0, address: vm://proxy#0 | org.apache.activemq.broker.TransportConnection | VMTransport: vm://proxy#1
2010-10-13 14:38:35,253 | DEBUG | proxy adding destination: topic://ActiveMQ.Advisory.Connection | org.apache.activemq.broker.region.AbstractRegion | VMTransport: vm://proxy#1
2010-10-13 14:38:35,503 | DEBUG | proxy adding destination: topic://TEST.FOO | org.apache.activemq.broker.region.AbstractRegion | VMTransport: vm://proxy#1






",,,,,,,,,,,,,,,13/Oct/10 2:00 PM;socallag;activemq-dev2698.xml;https://issues.jboss.org/secure/attachment/12368804/activemq-dev2698.xml,20/Oct/10 3:07 PM;socallag;activemq-ha1.xml;https://issues.jboss.org/secure/attachment/12368808/activemq-ha1.xml,20/Oct/10 3:07 PM;socallag;activemq-ha2.xml;https://issues.jboss.org/secure/attachment/12368809/activemq-ha2.xml,13/Oct/10 2:01 PM;socallag;activemq-proxy.log;https://issues.jboss.org/secure/attachment/12368805/activemq-proxy.log,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3119,,,,4.0,8.0,,1|hzke4v:,179271,,,,,,,,13/Oct/10 2:03 PM;socallag;DEV-2698,"15/Oct/10 3:33 PM;garytully;what does ""proxy"" do for their use case, this is the first reference I have seen to this transport.","15/Oct/10 3:40 PM;socallag;HI Gary,

It sits between their subscriber and their HA brokers, see the config file activemq-dev2698.xml

{code}
<proxyConnectors>
      
          <proxyConnector bind=""tcp://localhost:51618"" remote=""failover:(tcp://localhost:61616,tcp://localhost:61626)?randomize=false"" 
                proxyToLocalBroker=""true""        
          />

         </proxyConnectors>
{code}

","18/Oct/10 1:04 PM;socallag;Hi Dejan,

Yeah the customer seems to be seeing the issue ( as in the client not receiving anymore messages) even when they use proxyToLocalBroker=""false"".
Revisiting my testcase to see if I can reproduce this here.

Thanks,

Seán.","20/Oct/10 3:06 PM;socallag;Hi Dejan,

I also see the problem when the proxyToLocalBroker is set to false. 
Using an oracle DB on killing the master broker I see the slave acquiring the lock and the proxy connector and message producer fail over to the slave, but the consumer connected to the proxy stops receiving the messages.

Regards,

Seán","20/Oct/10 3:07 PM;socallag;using oracle jdbc, tested using 5.4.1 SNAPSHOT from Oct 19th","22/Oct/10 4:39 PM;dbosanac;Hi,

after a bit of investigation I discovered that problem is not in the reconnection logic at the proxy broker, but in the unmarshalling of messages at the consumer after the reconnect.

It turns out that turning off the wireformat caching on consumer side, by using an url like

tcp://localhost:51618?wireFormat.cacheEnabled=false

resolves the problem.

Can you test it out on your side and see if customer is satisfied with this workaround?

Cheers,
Dejan","10/Jan/11 3:16 PM;dbosanac;This issue is fixed and merged to 5.4-fusesource branch.

The problem was that wire format info was transferred through the proxy, so when the failover reconnect happened the wire format is renegotiated at the consumer, leading to it's wireformat cache being flushed. That lead to exceptions in unmarshalling messages on the consumer side.

This is fixed now and the use case should be supported without disabling cache workaround. The test is also available (org.apache.activemq.proxy.ProxyFailoverTest) that will guard this in the future.

The snapshot (20110110.142429-7) with the included fix can be found at: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.2-fuse-SNAPSHOT/

",,,,,,,,,,,,
"bin/activemq depends on /bin/bash, and that is not present by default on AIX 5.3 systems",MB-751,12516172,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,dbosanac,scranton,scranton,12/Oct/10 12:38 PM,15/Nov/10 12:09 PM,29/Nov/16 4:16 PM,15/Nov/10 12:09 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"On AIX 5.3, /bin/bash does not exist by default. Attempting to run <activemq-5.4.1-fuse-00-00>/bin/activemq results in a cryptic ""Command Not Found"" error that is the result of /bin/bash not being found. Changing the shell script to {code}#!/bin/sh{code} does not fix the issue either as then there is an error later about a looping construct that is /bin/bash specific.

This issue prevents the running of ActiveMQ on AIX!!!",AIX 5.3,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2453,,,,0.0,1.0,,1|hzkdvj:,179229,,,,,,,,15/Nov/10 12:09 PM;dbosanac;Fixed and merged to 5.4-fusesource branch,,,,,,,,,,,,,,,,,,,
Cannot initialize a JAAS PropertiesLoginModule instance using the Karaf/OSGi login configuration mechanism,MB-749,12516170,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,fbolton,fbolton,08/Oct/10 11:16 AM,01/Feb/13 4:55 PM,29/Nov/16 4:16 PM,08/Apr/11 10:21 AM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"Couldn't initialize a JAAS {{PropertiesLoginModule}} instance using the Karaf login configuration mechanism:  Karaf has its own mechanism for
defining JAAS login configuration which _must_ be used instead of the usual JAAS login configuration file, when you are deploying into the OSGi container (see http://karaf.apache.org/45-security-framework.html). 

The trouble is, I couldn't get this to work for ActiveMQ's {{PropertiesLoginModule}}, because I kept getting a 'File not found' error for {{users.properties}}. No matter how hard I tried, I couldn't figure out a way to specify the file location that would work.","Windows O/S, deploying into ESB 4.3 OSGi container",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,5.0,,1|hzkjrj:,180170,,,,,,,,09/Nov/10 9:42 AM;garytully;pushing this out past pending critical issues with kahaDB,"05/Apr/11 4:26 PM;fbolton;Since raising this bug, I have realized that this is not a terribly important issue. If you are deploying ActiveMQ in OSGi, you can (and probably should) use one of the JAAS modules provided by OSGi. OSGi has much better support for JAAS now, including a JAAS LDAP login module and a JAAS JDBC login module, so it is really not likely that you would need to use login modules from ActiveMQ any more.","05/Apr/11 6:04 PM;garytully;thanks for the heads up, will still work through this to see what is the problem is, it should be more configurable such that it can work.","08/Apr/11 10:21 AM;garytully;I am not sure that there will be an easy mix and match betwen login modules provided by karaf et al. and the auth plugin of the broker. 
The tokens generated by the authentication part are often targeted to an particular authorization plugin.
In any event, it is possible to configure the activemq jaas login module via a karaf descriptor, eg xy.xml {code}<blueprint xmlns:ext=""http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.0.0"" xmlns:jaas=""http://karaf.apache.org/xmlns/jaas/v1.0.0"" xmlns=""http://www.osgi.org/xmlns/blueprint/v1.0.0"">
    <!-- Bean to allow the $[karaf.base] property to be correctly resolved -->
    <ext:property-placeholder placeholder-prefix=""$["" placeholder-suffix=""]""/>

    <jaas:config name=""activemq-domain"">
        <jaas:module className=""org.apache.activemq.jaas.PropertiesLoginModule"" flags=""required"" >
            debug = true
            org.apache.activemq.jaas.properties.user = amq_users.properties
            org.apache.activemq.jaas.properties.group = amq_groups.properties
            baseDir = /tmp/apache-karaf-2.1.4-fuse-00-09
            reload = true
        </jaas:module>
    </jaas:config>

</blueprint>{code} and have it used by the simple jaasAuthenticationPlugin plugin in a broker:{code}...      <plugins>
      <jaasAuthenticationPlugin configuration=""activemq-domain"" discoverLoginConfig=""false"" />
...{code}
The baseDir attribute above is new, it makes it a little easier to specify the directory location of the properties files,in the absesne of that they need to be relative to the installdir or need to be absolute paths. Or the old way of setting system property java.security.auth.login.config to a file in the dir wil work. But I think it is best to not set that property when in karaf. discoverLoginConfig ensures that the jaasAuthenticationPlugin will not try and set that property either.",01/Feb/13 4:55 PM;garytully;some relevant info in https://issues.apache.org/jira/browse/AMQ-908,,,,,,,,,,,,,,,
Cannot use <SslContext> tag in blueprint configuration,MB-748,12516169,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,fbolton,fbolton,08/Oct/10 11:10 AM,05/Apr/11 11:22 AM,29/Nov/16 4:16 PM,05/Apr/11 11:04 AM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,"Couldn't use the {{<SslContext>}} tag in blueprint configuration: setting a string attribute of the {{SslContext}} element resulted in the error ""Cannot convert String to Spring Resource type"" when I tried to use it in a blueprint file. It turns out that the Java source defines the property to be of Spring {{Resource}} type, not {{String}}. I assume that the Spring container does an automatic type conversion of String to Resource, so that this is not a problem in Spring. But it is a problem in blueprint, obviously, because blueprint does not perform such a conversion.

In fact, I saw the Spring Resource types used elsewhere in the Java source, so I suspect there might be other properties in ActiveMQ's schema that are incompatible with blueprint.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3268,,,,0.0,3.0,,1|hzkeov:,179361,,,,,,,,"01/Apr/11 3:47 PM;mielket;I think I found a workaround. The following configuration seems to work:

{code:xml}
<blueprint>
  <broker>
    ...
    <sslContext>
        <sslContext 
          keyStore=""#keystore"" 
          keyStorePassword=""password""
          trustStore=""#truststore""
          trustStorePassword=""password"">
        </sslContext>
    </sslContext>
    ...
  </broker>

  <bean id=""keystore"" class=""org.springframework.core.io.FileSystemResource"">
    <argument value=""${karaf.home}/etc/service.jks"" type=""java.lang.String"" />
  </bean>

  <bean id=""truststore"" class=""org.springframework.core.io.FileSystemResource"">
    <argument value=""${karaf.home}/etc/service.ts"" type=""java.lang.String"" />
  </bean>

</blueprint>
{code}",05/Apr/11 11:04 AM;garytully;resolved with https://issues.apache.org/jira/browse/AMQ-3268 - sslContext Resource attributed replaced with Strings such that schema and java api are consistent. A Resource is still used under the covers so paths and urls are valid strings.,05/Apr/11 11:04 AM;garytully;on the 5.5.x fuse branch ready for release,,,,,,,,,,,,,,,,,
Seeing inflight messages that are not consumed when jmsPriority is enabled and have intermittent durable consumer,MB-747,12516168,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,07/Oct/10 3:21 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,22/Dec/10 9:46 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.2-fuse-00-00,,,,broker,,,0,,"We have a publisher sending messages with priority ranging from 0-9.  Start a durable subscriber to establish a subscription. Messages are read from the topic in the order in which they are published. The subscriber is caught up. Client then periodically disrupts the durable subscription by closing the connection and session and reconnects. In this case all messages are not being consumed. If I check the counters for the Topic in jconsole, there are still inflight messages and consumer is blocked in a receive() ..

",5.4.1-fuse SNAPSHOT,,,,,,,,,,,,,,07/Oct/10 3:23 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368801/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,20.0,,1|hzke33:,179263,,,,,,,,"07/Oct/10 3:23 PM;davestanley;Testcase attached:

 Build:
     mvn clean install
     
 Setup:
  Edit <broker>/conf/activemq.xml, enabled support for prioritizedMessages and jmx connector.
        
{code}
        <policyEntry topic="">"" producerFlowControl=""true"" memoryLimit=""1mb"" prioritizedMessages=""true""/>
{code}        

  Start an instance of a broker 

  Two console windows 
   >mvn -Pconsumer
   >mvn -Pproducer

  Consumer is periodically closing its durable subscription and reconnecting to the topic..

  Symptoms:

   Testcase passes without prioritized message enabled in conf/activemq.xml
   With priorityMessages, not all messages are consumed. Looking in jconsole I see inflight messages that are not delivered.   ",14/Oct/10 12:06 PM;garytully;schedule for next release,"14/Oct/10 5:37 PM;garytully;The recovery and removal of messages from with priority for the kahaDB topic store has issues, I have a good test case so the fix is in the works. the jdbc store has some issues in this regard also.",14/Oct/10 7:12 PM;davestanley;Thanks for the update Gary. Sounds good.,15/Oct/10 12:28 PM;garytully;Tracking this with https://issues.apache.org/activemq/browse/AMQ-2980,"21/Oct/10 11:13 AM;garytully;fix for JDBC variant of https://issues.apache.org/activemq/browse/AMQ-2980 will be in todays fuse 5.4.1 snapshot, apache issue resolved just now.","01/Nov/10 9:46 PM;garytully;Matt, is there a test case for the priority 1 scenario?","01/Nov/10 10:39 PM;davestanley;I am seeing the problem with the latest snapshot and jdbc.
","01/Nov/10 10:47 PM;davestanley;Additional notes:

1) Downloaded snapshot, install drivers for mysql in the lib directory.

2) Add the following config to activemq.xml, setup empty mysql db.

{code}

  <persistenceAdapter>
		    <jdbcPersistenceAdapter dataDirectory=""${activemq.base}/data"" dataSource=""#mysql-ds""/>

        </persistenceAdapter>

 ....
	 <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
		    <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
		    <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/>
		    <property name=""username"" value=""activemq""/>
		    <property name=""password"" value=""activemq""/>
		    <property name=""maxActive"" value=""200""/>
		    <property name=""poolPreparedStatements"" value=""true""/>
		</bean>

{code}

3) Run the testcase as before (i.e. setup priority in policy, run consumer/producer)

4) Will see that after the session is reset, messages continue to be delivered in priority order but they stop after 50-100 messages. Its almost as though the session reset prevents additional messages (w/priority > 0) from being paged in..

","02/Nov/10 4:26 PM;garytully;thanks for the detail. I have been able to reproduce is a simple junit test case, a variant of the original. The problem is that we don't track the last ack sequence id per priority so concurrent additions cause some trouble as we need to hop about the message table but need to recall where were last w.r.t priority to get it right.
Am working on the fix.","04/Nov/10 4:57 PM;garytully;Found the problem, additional detail in the updates to https://issues.apache.org/activemq/browse/AMQ-2980 

There is a new SNAPSHOT with the fix:
http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/apache-activemq-5.4.1-fuse-20101104.161322-27-bin.tar.gz

Dave, would it be possible to validate with mysql?","04/Nov/10 5:53 PM;davestanley;Hi Gary,
Yes I'll test out the snapshot. Thanks!

/Dave","11/Nov/10 9:32 AM;garytully;found the source of the duplicates, test works well now. new snapshot available with the final fix.",11/Nov/10 9:53 PM;davestanley;Latest snapshot looks good with my tests.,"12/Nov/10 8:33 AM;garytully;with large numbers of pending messages, two pieces of configuration are relevant.

1) increase the destination maxAuditDepth from the default 2048 to 100,0000
2) decrease the cleanup period for the JDBC persistence adapter - from the default  5 minutes to say 30 seconds.

Messages for durable subscriptions are deleted by the cleanup task, and the duplicate suppression limit (maxAuditDepth) can be exceeded if loads of ack messages remain in the store,

Need to  investigate the 'stuck in loop' theory.","15/Nov/10 5:40 PM;garytully;while investigating the test case with large numbers of messages I found an issue related to a mix of priority and non priority destinations. In addition I came across an issue that caused the cursors to be refilled a single message at a time which really slowed down consumption. Both of these are resolved in the release. I was not able to reproduce the 'stuck in loop' behavior.

The trace, cursor got duplicate is expected, and many of these are expected as all of the messages in the store are replayed when a batch is refilled, this is because with priority ordering the index of the last message replayed has no bearing on the next message in priority order.

With the current code base I was able to produce 500,000 messages and consumer all in proper order. The only issue is that there is a delay when we go back to the store for the next batch.",16/Nov/10 11:32 PM;garytully;The release.,"26/Nov/10 4:12 PM;garytully;pending:
get to the bottom of looping when there is large backlog and restart.
have high priority messages dispatch immediately",07/Dec/10 3:05 PM;garytully;schedule for next release. next release is all about this issue atm.,22/Dec/10 9:46 PM;dbosanac;Think should be fixed now in the latest release. The performance issue will be tracked in the separate issue
javax.transaction.xa.XAException when invoking broker from parallel XA and JMS transactions,MB-746,12516165,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,davestanley,davestanley,04/Oct/10 8:26 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,08/Oct/10 4:08 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,1,,"Testing with a build that contains a fix for MB-736. Seeing the following warnings:

{code}
WARN | Async error occurred: javax.transaction.xa.XAException: Transaction 'XID:1197822575:0600000000000000f1f954705c9cac1e1aad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000:0100000000000000f1f954705c9cac1e1aad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' has not been started.
javax.transaction.xa.XAException: Transaction 'XID:1197822575:0600000000000000f1f954705c9cac1e1aad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000:0100000000000000f1f954705c9cac1e1aad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000' has not been started.
	at org.apache.activemq.broker.TransactionBroker.getTransaction(TransactionBroker.java:282)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:214)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:135)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:460)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:677)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:309)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:185)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:69)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:228)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:219)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:201)
	at java.lang.Thread.run(Thread.java:637)
{code}

If I run the *exact same test against a 5.4.0 version* of the broker, test pases without issues. It looks to be a regression in the latest snapshots.

",Fuse Message Broker 5.4.1 snapshot (with MB-736 fix). ,,,,,,,,,,,,,,04/Oct/10 8:28 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368802/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2950,,,,1.0,2.0,,1|hzkdon:,179198,,,,,,,,"04/Oct/10 8:28 PM;davestanley;Testcase attached.

{code}
mvn -Dtest=TestParalellXaTx test
{code}","08/Oct/10 4:08 PM;dbosanac;This should be fixed now and available in the latest snapshot 

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/apache-activemq-5.4.1-fuse-20101008.153926-8-bin.tar.gz",,,,,,,,,,,,,,,,,,
java.io.EOFException: Chunk stream does not exist at page on broker start,MB-745,12516167,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,stlewis,stlewis,04/Oct/10 7:41 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,06/Oct/10 3:54 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2935,,,,0.0,2.0,,1|hzke67:,179277,,,,,,,,04/Oct/10 8:02 PM;stlewis;Just creating this to track [AMQ-2935|https://issues.apache.org/activemq/browse/AMQ-2935] which Gary is already working on.,06/Oct/10 3:54 PM;garytully;A snapshot with the fix is available: http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/,,,,,,,,,,,,,,,,,,
Hang when load testing duplex network connector,MB-744,12516166,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,davestanley,davestanley,01/Oct/10 10:15 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,12/Mar/12 9:43 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.1-fuse-02-05,,,,broker,,,0,,"Have the following setup

Broker 1 - 
  Duplex network connector to Broker2
  Produce to Broker 1 @DESTINATION-0
  Consume from Broker 1 @DESTINATION-1

Broker 2 -
  There is a camel route sitting on Broker2
  Camel consumes from @DESTINATION-0
  Camel pushes to DESTINATION-1
  Broker1 establishes connection..

So messages are just going accross the network connector and camel is bouncing them right back. Testcase works fine under low load.

If we ramp up to a pool of consumers and producers on each destination on Broker1, duplex network connector seems to deadlock after a couple of 1000 msgs on my machine.

 
 Build:
     mvn clean install
     
 To Run Test: 

4 console windows:
   
{code}
    mvn -Pbroker1
    mvn -Pbroker2

    mvn -Pconsumer
    mvn -Pproducer

{code}

Notes:

You don't see the same problems with two one-way network connectors.

You can use the pom.xml to configure the arg's for the producer and consumer.



","5.4.1-01-00, 5.3.1-00, Mac OSX",,,,,,,,,,,,,,01/Oct/10 10:18 PM;davestanley;duplex_network_connector_test.zip;https://issues.jboss.org/secure/attachment/12368799/duplex_network_connector_test.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzki0f:,179887,,,,,,,,01/Oct/10 10:18 PM;davestanley;Testcase attached.,12/Mar/12 9:43 PM;davestanley;Retested with latest 5.5.x release. Problem was no longer reproducible.,,,,,,,,,,,,,,,,,,
MessagePriority not respected if MessageConsumer started before all messages are sent,MB-743,12516164,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,scranton,scranton,01/Oct/10 3:49 PM,01/Oct/10 3:51 PM,29/Nov/16 4:16 PM,,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Using attached modified MessagePriority test, if the MessageConsumer is started before the MessageProducer then message priorities are not always respected even with prefetch set to 0.

to run

activemq-5.4.0-fuse-00-00/activemq-core > mvn -Dtest=KahaDBMessagePriorityTest test",,,,,,,,,,,,,,,01/Oct/10 3:50 PM;scranton;MessagePriorityTest.java;https://issues.jboss.org/secure/attachment/12368800/MessagePriorityTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkdnb:,179192,,,,,,,,01/Oct/10 3:50 PM;scranton;activemq-core/src/test/java/org/apache/activemq/store/MessagePriorityTest.java,,,,,,,,,,,,,,,,,,,
ActiveMQ.Advisory.Queue won't receive events on queue creation/destruction,MB-742,12516161,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,01/Oct/10 2:50 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,11/Oct/10 5:35 PM,5.4.0-fuse-00-00,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"I'm seeing some weird behavior with the ActiveMQ.Advisory.Queue. Seems I only get an advisory for queue creation once a message is sent to that queue. And I never seem to get one for queue deletion.

This is easy to reproduce using the web console to create/delete queues and use the consumer example like ""ant -Dtopic=true -Dsubject=ActiveMQ.Advisory.Queue consumer"" to get the advisories.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2970,,,,0.0,3.0,,1|hzkdpb:,179201,,,,,,,,"04/Oct/10 1:52 PM;janstey;FYI this appears to only happen when creating queues through JMX (i.e. the webconsole). When queues get created programmatically by normal use of ActiveMQ, consumers of the ActiveMQ.Advisory.Queue topic get notified fine.","07/Oct/10 5:01 PM;janstey;Additional feedback from user:

1. A queue creation generates advisory messages to ActiveMQ.Advisory.Queue only upon its first creation during the broker lifetime and only as far as there is at least one consumer on the ActiveMQ.Advisory.Queue.
2. A queue destruction operation doesn't generate any advisory message.","11/Oct/10 5:35 PM;dbosanac;Fixed and merged in the 5.4 fuse branch. You can test the latest snapshot

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/

20101011.171427-9",,,,,,,,,,,,,,,,,
Extraneous port created for management context specification,MB-741,12516162,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,rbonneau1,rbonneau1,30/Sep/10 7:24 PM,01/Oct/10 2:27 PM,29/Nov/16 4:16 PM,,5.3.1-fuse-02-01,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"If connector port is set in managementContext element, it is allocated but also port 1099 is always allocated.

            <managementContext createConnector=""true"" connectorPort=""11099"" rmiServerPort=""11119""/>

Log shows:

C:\apache-activemq-5.3.2\example>netstat -ao | grep 4020
  TCP    nbrbonnea:1099         nbrbonnea.americas.progress.com:0  LISTENING       4020 <<<<<<<<<
  TCP    nbrbonnea:8161         nbrbonnea.americas.progress.com:0  LISTENING       4020
  TCP    nbrbonnea:11099        nbrbonnea.americas.progress.com:0  LISTENING       4020
  TCP    nbrbonnea:11119        nbrbonnea.americas.progress.com:0  LISTENING       4020
  TCP    nbrbonnea:61613        nbrbonnea.americas.progress.com:0  LISTENING       4020
  TCP    nbrbonnea:61616        nbrbonnea.americas.progress.com:0  LISTENING       4020

NOTE: This behavior is observed IF/WHEN you disable the setting of any value for SUNJMX in the
startup script on either LINUX or Windows.  If you leave SUNJMX as in the unaltered startup script,
get errors in startup, 1099 is allocated as well as two random ports while the specified JMX and RMI ports
are allocated as specified.  See log below in that case:

C:\apache-activemq-5.3.2\example>netstat -ao | grep 7300
  TCP    nbrbonnea:1099         nbrbonnea.americas.progress.com:0  LISTENING       7300 <<<<<<<
  TCP    nbrbonnea:4635         nbrbonnea.americas.progress.com:0  LISTENING       7300 <<<<<<<
  TCP    nbrbonnea:4636         nbrbonnea.americas.progress.com:0  LISTENING       7300 <<<<<<<
  TCP    nbrbonnea:8161         nbrbonnea.americas.progress.com:0  LISTENING       7300
  TCP    nbrbonnea:11099        nbrbonnea.americas.progress.com:0  LISTENING       7300
  TCP    nbrbonnea:11119        nbrbonnea.americas.progress.com:0  LISTENING       7300
  TCP    nbrbonnea:61613        nbrbonnea.americas.progress.com:0  LISTENING       7300
  TCP    nbrbonnea:61616        nbrbonnea.americas.progress.com:0  LISTENING       7300

I am attaching the configuration file used as well as the modified startup script.
",Running either windows or linux,,,,,,,,,,,,,,30/Sep/10 7:26 PM;rbonneau1;activemq_1.xml;https://issues.jboss.org/secure/attachment/12368796/activemq_1.xml,01/Oct/10 2:27 PM;rbonneau1;activemq_2.xml;https://issues.jboss.org/secure/attachment/12368798/activemq_2.xml,30/Sep/10 7:26 PM;rbonneau1;activemq_no_JMX.bat;https://issues.jboss.org/secure/attachment/12368797/activemq_no_JMX.bat,,,,,,,,,,,,,,,,,,,,,,,,3.0,2.0,,1|hzkdkf:,179179,,,,,,,,"01/Oct/10 1:19 AM;rbonneau1;Log file displays updated to show observed behaviors of port 1099 and the random
ports.
",01/Oct/10 2:27 PM;rbonneau1;Additional attached config file activemq_2.xml does NOT exhibit the observed behavior.  It differs only in the absence of a network connector element!,,,,,,,,,,,,,,,,,,
Composite destination on listener is not reading all messages.,MB-739,12516160,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,29/Sep/10 4:12 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,15/Apr/11 2:58 PM,5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,Please see attached testcase,,,,,,,,,,,,,,,29/Sep/10 4:12 PM;socallag;PROD-410.zip;https://issues.jboss.org/secure/attachment/12368795/PROD-410.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkesn:,179378,,,,,,,,29/Sep/10 4:19 PM;janstey;This will potentially fix PROD-403 as well.,"05/Oct/10 1:47 PM;dbosanac;Hi,

the test provided with PROD-410 issue is passing when using 

<property name=""sessionTransacted"" value=""true""/>

instead of 

<property name=""transactionManager"" ref=""transactionManager""/>

for default message listener container. It works without setting any prefetch as well.

There seems to be a bug on a spring side with the later scenario. It'd be good if others could confirm this and see if this configuration change supports requested use case.

I also committed a simplified version of the test to the trunk

https://fisheye6.atlassian.com/changelog/activemq?cs=1004616",,,,,,,,,,,,,,,,,,
"Corrupt kahaDB , NullPointerException, broker will not start up",MB-738,12516159,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,chirino,socallag,socallag,29/Sep/10 10:36 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,29/Sep/10 3:29 PM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,broker,,,0,,"2010-09-28 19:40:38,760 [main] ERROR org.apache.activemq.broker.BrokerService:510 - Failed to start ActiveMQ JMS Message Broker. Reason: java.lang.NullPointerException
java.lang.NullPointerException: null
        at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109) ~[activemq-all-5.3.1-fuse-01-00.jar:5.3.1-fuse-01-00]
        at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120) ~[activemq-all-5.3.1-fuse-01-00.jar:5.3.1-fuse-01-00]
        at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$2.execute(KahaDBStore.java:195)

Similar to AMQ-2687",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2687,,,,0.0,2.0,,1|hzkdjz:,179177,,,,,,,,"29/Sep/10 3:17 PM;chirino;This issue was resolved in the 5.3.1-fuse-02-01 release.

Binary distribution can be downloaded from:
http://repo.fusesource.com/maven2/org/apache/activemq/apache-activemq/5.3.1-fuse-02-01/

After updating to the fixed release, user will need to delete the KahaDB index file so that it gets rebuilt when the broker is started up.  The index file is typically located at:
{code}${ACTIVEMQ_HOME}/data/kahadb/db.data{code}",29/Sep/10 3:29 PM;chirino;marking as resolved.,,,,,,,,,,,,,,,,,,
Incoherent documentation / strange property names for advisory messages,MB-737,12516158,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,socallag,socallag,28/Sep/10 9:00 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,AS per the AMQ issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2170,,,,0.0,0.0,,1|hzkdin:,179171,,,,,,,,,,,,,,,,,,,,,,,,,,,
XA Transaction not cleaned up in broker on ungraceful exit of XA producer. ,MB-736,12516157,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,27/Sep/10 3:51 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,29/Sep/10 2:37 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,2,,"We are sending messages in a batch within an XA transaction. If we kill the our producer in the middle of the transaction before the final commit, then
memory in CursorMemoryUsage for the Queue is not released until the server is restarted. 

Note: XA only problem - when messages are sent in a batch using a JMS local transactions, CursorMemoryUsage are correcty released when the client side application is killed.

To reproduce:

1) Start an instance of the 5.4 broker
2) Open a jconsole instance. We are going to look at the queue ""TEST.junit.xa""

3) Build and run the testcase:

>mvn install
>mvn -Dtest=ch.vd.esb.test.TestLongXaTx test

4) Wait to see the Kill now trace:

{code}
2824 [main] DEBUG org.apache.activemq.ActiveMQSession  - ID:dstanley-laptop.local-51111-1285600063250-0:0:1 sending message: ActiveMQTextMessage {commandId = 0, responseRequired = false, messageId = ID:dstanley-laptop.local-51111-1285600063250-0:0:1:1:100, originalDestination = null, originalTransactionId = null, producerId = ID:dstanley-laptop.local-51111-1285600063250-0:0:1:1, destination = queue://TEST.junit.xa, transactionId = XID:1197822575:01000000000000005573f03e5743ac1e1aad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000:01000000000000005573f03e5743ac1e1aad00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000, expiration = 0, timestamp = 1285600064118, arrival = 0, brokerInTime = 0, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,... 0, 0, 0, 0]}
12215 [InactivityMonitor WriteCheck] DEBUG org.apache.activemq.transport.InactivityMonitor  - Message sent since last write check, resetting flag
12215 [InactivityMonitor ReadCheck] DEBUG org.apache.activemq.transport.InactivityMonitor  - A receive is in progress
KILL NOW !
{code}


Then ctrl-c the testcase. You should see the CursorMemoryUsage is not released. Running the testcase a second time will max out the cursor usage.","All platforms, 5.4.0-fuse",,,,,,,,,,,,,,27/Sep/10 3:51 PM;davestanley;jconsole_xa_cursor_memory_usage.jpg;https://issues.jboss.org/secure/attachment/12368790/jconsole_xa_cursor_memory_usage.jpg,27/Sep/10 3:53 PM;davestanley;xa_transaction_testcase.zip;https://issues.jboss.org/secure/attachment/12368791/xa_transaction_testcase.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2950,,,,2.0,5.0,,1|hzkdkn:,179180,,,,,,,,27/Sep/10 3:51 PM;davestanley;Example of CursorMemoryUsage,27/Sep/10 3:53 PM;davestanley;Testcase attached.,"29/Sep/10 2:37 PM;dbosanac;This had been fixed and merged to appropriate branch.

You can find a snapshot with this change included here:

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/",29/Sep/10 2:43 PM;davestanley;Great stuff Dejan. Thanks very much!,"01/Oct/10 2:29 PM;dbosanac;Hi Dave,

I just double checked and it seems to me that 20100929.135913-4 build should contain the fix. Anyhow I just built a new snapshot 20101001.135442-6. I don't think memory leak is related to this fix, but it might be introduced by some of the other fixes that merged these days. More info on that would be certainly helpful. Please let me know if I can help further with anything regarding this issue.
",,,,,,,,,,,,,,,
Message groups not honored or balanced on reconnected consumers,MB-735,12516156,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,24/Sep/10 3:26 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,07/Oct/10 11:33 AM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.3.0.8-fuse,,,,,,,0,,See the DEV issue and attached testcase,,,,,,,,,,,,,,,27/Sep/10 9:35 PM;scranton;CombinationTestSupport.patch;https://issues.jboss.org/secure/attachment/12368792/CombinationTestSupport.patch,24/Sep/10 3:26 PM;socallag;MessageGroupNewConsumerTest2.java;https://issues.jboss.org/secure/attachment/12368788/MessageGroupNewConsumerTest2.java,27/Sep/10 9:35 PM;scranton;MessageGroupTestsRefactoring.patch;https://issues.jboss.org/secure/attachment/12368793/MessageGroupTestsRefactoring.patch,27/Sep/10 9:35 PM;scranton;QueueDispatchSelector.patch;https://issues.jboss.org/secure/attachment/12368794/QueueDispatchSelector.patch,24/Sep/10 3:26 PM;socallag;org.apache.activemq.usecases.MessageGroupNewConsumerTest2-output.txt;https://issues.jboss.org/secure/attachment/12368787/org.apache.activemq.usecases.MessageGroupNewConsumerTest2-output.txt,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2952,,,,5.0,2.0,,1|hzkdnr:,179194,,,,,,,,"27/Sep/10 9:35 PM;scranton;Attached refactoring of MessageGroupTest and MessageGroupDelayedTest that highlight MessageGroup issues when prefetch=0

CombinationTestSupport includes a fix such that combination tests will work correctly even if a {code}public static Test suite(){code} method is not provided

QueueDispatchSelector includes a fix where the code assumes that a message group sequence == 1 is the first message in a Message Group. The problem is that there is no requirement that the user use 1 as the first message in the group; the only constraint is that JMSXGroupSeq=-1 will close the group. This fix makes {code}MessageGroupTest.testGroupedMessagesDeliveredToOnlyOneConsumer{code} work correctly with a prefetch=0",07/Oct/10 11:33 AM;dbosanac;this issue is fixed and is available in 5.3.0.8-fuse release.,,,,,,,,,,,,,,,,,,
Inactivity monitor for http/https transport reverts back to default 30 second readCheckTime,MB-734,12516155,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,23/Sep/10 7:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Nov/10 12:49 AM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"After creating a potential fix for MB-733 I noticed that the first time I kill the ""client"" broker it only takes at most 4 seconds for the ""remote"" broker to notice that the connection has been closed.  However subsequent times I do this I noticed that it was taking at most 30 seconds, and sure enough from the logging I can see that for some reason the inactivity time period has gotten reset to the default:

 WARN | Network connection between vm://remote#0 and org.apache.activemq.transport.http.BlockingQueueTransport@679b2faf shutdown due to a remote error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>*4000*) long: blockingQueue_532399993
 INFO | Connector vm://remote Stopped
 INFO | remote bridge to client stopped
 INFO | Connector vm://remote Started
 INFO | Created Duplex Bridge back to client
 INFO | Network connection between vm://remote#2 and org.apache.activemq.transport.http.BlockingQueueTransport@b708593(client) has been established.
 INFO | Created Duplex Bridge back to client
 INFO | Network connection between vm://remote#4 and org.apache.activemq.transport.http.BlockingQueueTransport@a3cad7c(client) has been established.
 INFO | Stopping network bridge on shutdown of remote broker
 WARN | Network connection between vm://remote#4 and org.apache.activemq.transport.http.BlockingQueueTransport@a3cad7c shutdown due to a remote error: java.io.IOException: ShutdownInfo {commandId = 7, responseRequired = false}
 INFO | remote bridge to client stopped
 WARN | Network connection between vm://remote#2 and org.apache.activemq.transport.http.BlockingQueueTransport@b708593 shutdown due to a remote error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too (>*30000*) long: blockingQueue_1391417336
 INFO | Connector vm://remote Stopped
 INFO | remote bridge to client stopped
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkdtj:,179220,,,,,,,,"06/Oct/10 3:32 PM;dbosanac;The issue should be fixed and merged to 5.4.1-fuse branch ... You can test it in the latest snapshot (20101006.150949-7)

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.4.1-fuse-SNAPSHOT/",,,,,,,,,,,,,,,,,,,
Implement inactivity monitor for https as well,MB-733,12516154,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,stlewis,stlewis,stlewis,23/Sep/10 6:09 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,28/Sep/10 5:40 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"This is a follow on to MB-711, basically subscriptions created by a duplex network connector using https are not cleaned up, it appears that in the case of https we're not detecting that the connection has gone away if the originator of the network connector is terminated ungracefully.

To reproduce this, first edit bin/activemq and set ACTIVEMQ_SSL_OPTS like:

ACTIVEMQ_SSL_OPTS=""-Djavax.net.ssl.trustStore=conf/broker.ts -Djavax.net.ssl.trustStorePassword=password -Djavax.net.ssl.trustStoreType=jks -Djavax.net.ssl.keyStore=conf/broker.ks -Djavax.net.ssl.keyStorePassword=password -Djavax.net.ssl.keyStoreType=jks""

then run the ""remote"" broker:

./bin/activemq console xbean:remote-activemq.xml

now run the ""client"" broker:

./bin/activemq console xbean:client-activemq.xml

Point jconsole at the ""remote"" broker and look under remote/Subscription/Non-Durable/Queue/TEST.RECONNECT/NC_client_inbound_remote, you should see 1 subscription.

Now ungracefully kill off the ""client"" broker (kill -9, force quit it from Activity Monitor, etc).  The subscription will still show up, the expected behavior being that the subscription should go away when the connection failure is detected.  Start up a new ""client"" broker and you'll see there are now two subscriptions.",,,,,,,,,,,,,,,23/Sep/10 6:10 PM;stlewis;client-activemq.xml;https://issues.jboss.org/secure/attachment/12368785/client-activemq.xml,23/Sep/10 6:10 PM;stlewis;remote-activemq.xml;https://issues.jboss.org/secure/attachment/12368786/remote-activemq.xml,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2942,,,,2.0,1.0,,1|hzkdj3:,179173,,,,,,,,28/Sep/10 5:40 PM;stlewis;Fixed in 5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,
Need code and docs to agree on how to close out Message Groups,MB-731,12516152,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,scranton,scranton,20/Sep/10 10:26 PM,27/Sep/10 2:09 AM,29/Nov/16 4:16 PM,,5.3.0-fuse-01-00,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,broker,Documentation,,0,,"If you run the original MessageGroupNewConsumerTest (https://issues.apache.org/activemq/secure/attachment/17536/MessageGroupNewConsumerTest.java) which passes a 0 in for the Group Sequence number you'll see unexpected behavior with message group consumers (generally all groups processed by a single consumer).

There is a discrepancy / bug in the code where a JMSXGroupSeq of 0 will get the Message Group assigned to one consumer, and then a JMSXGroupSeq of 1 will reassign the Group.

The doc states that a JMSXGroupSeq of −1 or less will close the group

The doc and code should agree that a JMSXGroupSeq of 0 or less will close the group...",,,,,,,,,,,,,,,27/Sep/10 2:09 AM;scranton;MessageGroup2Test.java;https://issues.jboss.org/secure/attachment/12368789/MessageGroup2Test.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkdhr:,179167,,,,,,,,"27/Sep/10 2:09 AM;scranton;This test shows that if you set the JMSXGroupSeq to zero (0) then the Message Group will be bound to another consumer for the next message in the group.

The activemq.apache.org documentation is unclear about valid ranges for JMSXGroupSeq. The only guidance is that a value of −1 will close the group.

Further confusing things is that if the user does not explicitly set the JMSXGroupSeq then every received message returns a value of 0 (i.e. message.getIntProperty(""JMSXGroupSeq"") == 0).",,,,,,,,,,,,,,,,,,,
"Null messages occurring when using VM transport, topics and multiple consumers",MB-730,12516151,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,janstey,janstey,20/Sep/10 5:22 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,18/Oct/10 12:18 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"User has been encountering null messages in topic subscribers when using the VM transport to connect to the broker. Full details are in PROD-392.

I will attach an example demonstrating this issue shortly.",,,,,,,,,,,,,,,22/Sep/10 4:02 PM;tabish121;CamelVMTransportRoutingTest.java;https://issues.jboss.org/secure/attachment/12368784/CamelVMTransportRoutingTest.java,20/Sep/10 5:27 PM;janstey;PROD-392.zip;https://issues.jboss.org/secure/attachment/12368783/PROD-392.zip,,,,,,,,,,,,,,,,,,,,,,,,,2.0,9.0,,1|hzkdpz:,179204,,,,,,,,"20/Sep/10 5:27 PM;janstey;Attached is a modified ActiveMQ 5.4.0-fuse-00-00 install. I deleted lib, webapp, and activemq-all to shrink the zip so you will have to restore those.

The broker config includes a simple Camel route that connects to the broker ala:

{code}
<camelContext id=""camel"" trace=""false"" xmlns=""http://camel.apache.org/schema/spring""> 
  <route>
    <from uri=""activemq:topic:a"" />
    <to uri=""activemq:topic:b"" />
  </route>
</camelContext>

<bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"">
  <property name=""brokerURL"" value=""vm://localhost?create=false&amp;waitForStart=10000""/> 
</bean>
{code}

To reproduce the null message, in the 1st console

{code}
./bin/activemq console
{code}

2nd console

{code}
ant producer -Dtopic=true -Dsubject=a -Dmax=1000
{code}

3rd console

{code}
ant consumer -Dtopic=true -Dsubject=b -Dmax=1000
{code}

4th console

{code}
ant consumer -Dtopic=true -Dsubject=b -Dmax=1000
{code}

In 3rd OR 4th console window I got this (null message body):

     [java] [Thread-2] We are about to wait until we consume: 1000 message(s) then we will shutdown
     [java] ActiveMQTextMessage {commandId = 257, responseRequired = true, messageId = ID:mojo-34800-1285002902127-3:2:1:1:253, originalDestination = null, originalTransactionId = null, producerId = ID:mojo-34800-1285002902127-3:2:1:1, destination = topic://b, transactionId = null, expiration = 0, timestamp = 1285002929803, arrival = 0, brokerInTime = 1285002929803, brokerOutTime = 1285002929803, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = org.apache.activemq.util.ByteSequence@f4f44a, dataStructure = null, redeliveryCounter = 0, size = 0, properties = {CamelJmsDeliveryMode=1}, readOnlyProperties = true, readOnlyBody = true, droppable = false, text = null}
     [java] GOT NULL!!
     [java] Java Result: 255

You may need to run this a few times to get the null. It only happens sometimes (probably like 70% of the time). Also, it only occurs when multiple consumers are used.","20/Sep/10 5:28 PM;janstey;Also, the workaround in use until this is fixed is to switch from the VM transport to TCP
{code}
<bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"">
  <property name=""brokerURL"" value=""tcp://localhost:61616""/> 
</bean>
{code}",07/Oct/10 2:56 PM;garytully;schedule for 5.4.1-fuse-01-00,08/Oct/10 11:02 AM;garytully;opened and resolved at apache via https://issues.apache.org/activemq/browse/AMQ-2966,"08/Oct/10 12:56 PM;garytully;resolved and merged, will be in next 5.4.1-fuse-SNAPSHOT",11/Oct/10 1:55 PM;garytully;fix is not complete... there is still a small window where there can be contention. need to revisit the original fix that caused this problem. https://issues.apache.org/activemq/browse/AMQ-2103,"14/Oct/10 11:08 AM;socallag;Another user has raised this issue http://fusesource.com/issues/browse/DEV-2703.
I have reproduced it with their testcase attached to DEV-2703, (I did need to attach jconsole to the producer)
NOTE this is using the TCP transport.","14/Oct/10 11:22 AM;garytully;Sean,
The latest fix from AMQ-2103 reworking is in the latest 5.4.1-fuse-SNAPSHOT, does the test case work with that?","18/Oct/10 12:18 PM;garytully;DEV-2730 seems to be a different issue as it related to queues. In any event, the test case for that issues does not reproduce the reported issue with the current fix level.",,,,,,,,,,,
NPE within MessageGroupDelayedTest,MB-729,12516150,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,scranton,scranton,17/Sep/10 9:15 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,,5.3.0.5-fuse,5.3.0.6-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"in ActiveMQ fuse source distribution

activemq-5.3.0.5-fuse/activemq-core > mvn -Dtest=MessageGroupDelayedTest clean test

Results in an NPE that does NOT fail the test. NPE happens sporadically; may be result of race condition within test starting and stopping embedded broker.

{code}
2010-09-17 17:09:09,699 [main           ] INFO  MessageGroupDelayedTest        - testing with consumersBeforeDispatchStarts=0 and timeBeforeDispatchStarts=0
2010-09-17 17:09:09,866 [main           ] INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2010-09-17 17:09:09,868 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2010-09-17 17:09:09,868 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2010-09-17 17:09:10,120 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://localhost:57556
2010-09-17 17:09:10,121 [main           ] INFO  TransportConnector             - Connector tcp://localhost:57556 Started
2010-09-17 17:09:10,128 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:0) started
2010-09-17 17:09:11,022 [main           ] INFO  MessageGroupDelayedTest        - 30 messages sent to group A/B/C
2010-09-17 17:09:11,023 [Thread-5       ] INFO  MessageGroupDelayedTest        - worker1
2010-09-17 17:09:11,023 [Thread-6       ] INFO  MessageGroupDelayedTest        - worker2
2010-09-17 17:09:11,024 [Thread-7       ] INFO  MessageGroupDelayedTest        - worker3
2010-09-17 17:09:15,595 [main           ] INFO  MessageGroupDelayedTest        - Ignoring results because both parameters are 0
2010-09-17 17:09:15,595 [Thread-5       ] INFO  MessageGroupDelayedTest        - worker1 done...
2010-09-17 17:09:15,597 [Thread-6       ] INFO  MessageGroupDelayedTest        - worker2 done...
2010-09-17 17:09:15,653 [127.0.0.1:57558] WARN  Service                        - Async error occurred: java.lang.NullPointerException
java.lang.NullPointerException
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:564)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:637)
2010-09-17 17:09:15,676 [main           ] INFO  MessageGroupDelayedTest        - testing with consumersBeforeDispatchStarts=3 and timeBeforeDispatchStarts=0
2010-09-17 17:09:15,676 [main           ] INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2010-09-17 17:09:15,676 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2010-09-17 17:09:15,676 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2010-09-17 17:09:15,677 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://localhost:57559
2010-09-17 17:09:15,678 [main           ] INFO  TransportConnector             - Connector tcp://localhost:57559 Started
2010-09-17 17:09:15,678 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:1) started
2010-09-17 17:09:15,698 [main           ] INFO  MessageGroupDelayedTest        - 30 messages sent to group A/B/C
2010-09-17 17:09:15,698 [Thread-11      ] INFO  MessageGroupDelayedTest        - worker1
2010-09-17 17:09:15,698 [Thread-12      ] INFO  MessageGroupDelayedTest        - worker2
2010-09-17 17:09:15,701 [Thread-13      ] INFO  MessageGroupDelayedTest        - worker3
2010-09-17 17:09:16,094 [Thread-7       ] INFO  MessageGroupDelayedTest        - worker3 done...
2010-09-17 17:09:20,223 [Thread-11      ] INFO  MessageGroupDelayedTest        - worker1 done...
2010-09-17 17:09:20,224 [main           ] INFO  MessageGroupDelayedTest        - worker worker2 received 10 messages from groups [A]
2010-09-17 17:09:20,225 [main           ] INFO  MessageGroupDelayedTest        - worker worker3 received 10 messages from groups [C]
2010-09-17 17:09:20,226 [main           ] INFO  MessageGroupDelayedTest        - worker worker1 received 10 messages from groups [B]
2010-09-17 17:09:20,228 [Thread-13      ] INFO  MessageGroupDelayedTest        - worker3 done...
2010-09-17 17:09:20,236 [main           ] INFO  MessageGroupDelayedTest        - testing with consumersBeforeDispatchStarts=5 and timeBeforeDispatchStarts=0
2010-09-17 17:09:20,236 [main           ] INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2010-09-17 17:09:20,236 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2010-09-17 17:09:20,236 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2010-09-17 17:09:20,237 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://localhost:57561
2010-09-17 17:09:20,237 [main           ] INFO  TransportConnector             - Connector tcp://localhost:57561 Started
2010-09-17 17:09:20,238 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:2) started
2010-09-17 17:09:20,259 [main           ] INFO  MessageGroupDelayedTest        - 30 messages sent to group A/B/C
2010-09-17 17:09:20,259 [Thread-17      ] INFO  MessageGroupDelayedTest        - worker1
2010-09-17 17:09:20,259 [Thread-18      ] INFO  MessageGroupDelayedTest        - worker2
2010-09-17 17:09:20,261 [Thread-19      ] INFO  MessageGroupDelayedTest        - worker3
2010-09-17 17:09:20,721 [Thread-12      ] INFO  MessageGroupDelayedTest        - worker2 done...
2010-09-17 17:09:25,776 [Thread-18      ] INFO  MessageGroupDelayedTest        - worker2 done...
2010-09-17 17:09:25,776 [main           ] INFO  MessageGroupDelayedTest        - worker worker2 received 10 messages from groups [B]
2010-09-17 17:09:25,777 [main           ] INFO  MessageGroupDelayedTest        - worker worker3 received 10 messages from groups [A]
2010-09-17 17:09:25,778 [main           ] INFO  MessageGroupDelayedTest        - worker worker1 received 10 messages from groups [C]
2010-09-17 17:09:25,779 [Thread-17      ] INFO  MessageGroupDelayedTest        - worker1 done...
2010-09-17 17:09:25,789 [main           ] INFO  MessageGroupDelayedTest        - testing with consumersBeforeDispatchStarts=0 and timeBeforeDispatchStarts=100
2010-09-17 17:09:25,790 [main           ] INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2010-09-17 17:09:25,790 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2010-09-17 17:09:25,790 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2010-09-17 17:09:25,791 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://localhost:57563
2010-09-17 17:09:25,791 [main           ] INFO  TransportConnector             - Connector tcp://localhost:57563 Started
2010-09-17 17:09:25,791 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:3) started
2010-09-17 17:09:25,828 [main           ] INFO  MessageGroupDelayedTest        - 30 messages sent to group A/B/C
2010-09-17 17:09:25,828 [Thread-23      ] INFO  MessageGroupDelayedTest        - worker1
2010-09-17 17:09:25,828 [Thread-24      ] INFO  MessageGroupDelayedTest        - worker2
2010-09-17 17:09:25,828 [Thread-25      ] INFO  MessageGroupDelayedTest        - worker3
2010-09-17 17:09:26,274 [Thread-19      ] INFO  MessageGroupDelayedTest        - worker3 done...
2010-09-17 17:09:30,444 [Thread-25      ] INFO  MessageGroupDelayedTest        - worker3 done...
2010-09-17 17:09:30,444 [main           ] INFO  MessageGroupDelayedTest        - worker worker2 received 10 messages from groups [C]
2010-09-17 17:09:30,446 [main           ] INFO  MessageGroupDelayedTest        - worker worker3 received 10 messages from groups [B]
2010-09-17 17:09:30,446 [main           ] INFO  MessageGroupDelayedTest        - worker worker1 received 10 messages from groups [A]
2010-09-17 17:09:30,448 [Thread-24      ] INFO  MessageGroupDelayedTest        - worker2 done...
2010-09-17 17:09:30,457 [main           ] INFO  MessageGroupDelayedTest        - testing with consumersBeforeDispatchStarts=3 and timeBeforeDispatchStarts=100
2010-09-17 17:09:30,457 [main           ] INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2010-09-17 17:09:30,458 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2010-09-17 17:09:30,458 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2010-09-17 17:09:30,458 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://localhost:57565
2010-09-17 17:09:30,459 [main           ] INFO  TransportConnector             - Connector tcp://localhost:57565 Started
2010-09-17 17:09:30,459 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:4) started
2010-09-17 17:09:30,477 [main           ] INFO  MessageGroupDelayedTest        - 30 messages sent to group A/B/C
2010-09-17 17:09:30,478 [Thread-29      ] INFO  MessageGroupDelayedTest        - worker1
2010-09-17 17:09:30,478 [Thread-30      ] INFO  MessageGroupDelayedTest        - worker2
2010-09-17 17:09:30,478 [Thread-31      ] INFO  MessageGroupDelayedTest        - worker3
2010-09-17 17:09:30,941 [Thread-23      ] INFO  MessageGroupDelayedTest        - worker1 done...
2010-09-17 17:09:34,993 [Thread-29      ] INFO  MessageGroupDelayedTest        - worker1 done...
2010-09-17 17:09:34,993 [main           ] INFO  MessageGroupDelayedTest        - worker worker2 received 10 messages from groups [C]
2010-09-17 17:09:34,993 [main           ] INFO  MessageGroupDelayedTest        - worker worker3 received 10 messages from groups [A]
2010-09-17 17:09:34,993 [main           ] INFO  MessageGroupDelayedTest        - worker worker1 received 10 messages from groups [B]
2010-09-17 17:09:34,994 [Thread-30      ] INFO  MessageGroupDelayedTest        - worker2 done...
2010-09-17 17:09:35,004 [main           ] INFO  MessageGroupDelayedTest        - testing with consumersBeforeDispatchStarts=5 and timeBeforeDispatchStarts=100
2010-09-17 17:09:35,005 [main           ] INFO  BrokerService                  - Using Persistence Adapter: MemoryPersistenceAdapter
2010-09-17 17:09:35,005 [main           ] INFO  BrokerService                  - ActiveMQ null JMS Message Broker (localhost) is starting
2010-09-17 17:09:35,005 [main           ] INFO  BrokerService                  - For help or more information please see: http://activemq.apache.org/
2010-09-17 17:09:35,006 [main           ] INFO  TransportServerThreadSupport   - Listening for connections at: tcp://localhost:57567
2010-09-17 17:09:35,006 [main           ] INFO  TransportConnector             - Connector tcp://localhost:57567 Started
2010-09-17 17:09:35,008 [main           ] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:5) started
2010-09-17 17:09:35,027 [main           ] INFO  MessageGroupDelayedTest        - 30 messages sent to group A/B/C
2010-09-17 17:09:35,027 [Thread-35      ] INFO  MessageGroupDelayedTest        - worker1
2010-09-17 17:09:35,027 [Thread-36      ] INFO  MessageGroupDelayedTest        - worker2
2010-09-17 17:09:35,030 [Thread-37      ] INFO  MessageGroupDelayedTest        - worker3
2010-09-17 17:09:35,492 [Thread-31      ] INFO  MessageGroupDelayedTest        - worker3 done...
2010-09-17 17:09:39,645 [Thread-36      ] INFO  MessageGroupDelayedTest        - worker2 done...
2010-09-17 17:09:39,645 [main           ] INFO  MessageGroupDelayedTest        - worker worker2 received 10 messages from groups [B]
2010-09-17 17:09:39,646 [main           ] INFO  MessageGroupDelayedTest        - worker worker3 received 10 messages from groups [A]
2010-09-17 17:09:39,646 [main           ] INFO  MessageGroupDelayedTest        - worker worker1 received 10 messages from groups [C]
2010-09-17 17:09:39,651 [Thread-35      ] INFO  MessageGroupDelayedTest        - worker1 done...
2010-09-17 17:09:39,680 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:scranton-57557-1284757749892-0:0) is shutting down
2010-09-17 17:09:39,680 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:scranton-57557-1284757749892-0:1) is shutting down
2010-09-17 17:09:39,680 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:scranton-57557-1284757749892-0:4) is shutting down
2010-09-17 17:09:39,682 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:57559 Stopped
2010-09-17 17:09:39,682 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:scranton-57557-1284757749892-0:3) is shutting down
2010-09-17 17:09:39,682 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:scranton-57557-1284757749892-0:2) is shutting down
2010-09-17 17:09:39,683 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ Message Broker (localhost, ID:scranton-57557-1284757749892-0:5) is shutting down
2010-09-17 17:09:39,776 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:1) stopped
2010-09-17 17:09:39,794 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:57563 Stopped
2010-09-17 17:09:39,796 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:3) stopped
2010-09-17 17:09:40,140 [Thread-37      ] INFO  MessageGroupDelayedTest        - worker3 done...
2010-09-17 17:09:40,242 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:57561 Stopped
2010-09-17 17:09:40,243 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:2) stopped
2010-09-17 17:09:40,461 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:57565 Stopped
2010-09-17 17:09:40,463 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:4) stopped
2010-09-17 17:09:40,608 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:57556 Stopped
2010-09-17 17:09:40,608 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:0) stopped
2010-09-17 17:09:41,009 [MQ ShutdownHook] INFO  TransportConnector             - Connector tcp://localhost:57567 Stopped
2010-09-17 17:09:41,011 [MQ ShutdownHook] INFO  BrokerService                  - ActiveMQ JMS Message Broker (localhost, ID:scranton-57557-1284757749892-0:5) stopped
{code}","ActiveMQ 5.3.0.5-fuse and 5.3.0.6-fuse
Mac OS X 10.6.4
{code}
java version ""1.6.0_20""
Java(TM) SE Runtime Environment (build 1.6.0_20-b02-279-10M3065)
Java HotSpot(TM) 64-Bit Server VM (build 16.3-b01-279, mixed mode)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkdi7:,179169,,,,,,,,27/Sep/10 9:38 PM;scranton;The MessageGroupTest patches attached to issue [MB-735|http://fusesource.com/issues/browse/MB-735] appear to reduce/eliminate the number of NPE,,,,,,,,,,,,,,,,,,,
Deflater.end() should be called from ActiveMQBytesMessage,MB-727,12516149,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,15/Sep/10 9:30 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,15/Sep/10 11:44 AM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,,,,0,,Please see details in the DEV issue DEV-2630,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2919,,,,0.0,1.0,,1|hzkdhb:,179165,,,,,,,,15/Sep/10 11:44 AM;dbosanac;The issue has been resolved on the trunk and should be available in the upcoming apache and fuse releases,,,,,,,,,,,,,,,,,,,
ActiveMQConnection.close logs stack trace in INFO level,MB-726,12516147,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,janstey,janstey,13/Sep/10 5:35 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,08/Oct/10 1:00 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,,,,0,,"Connection.close() logs stack trace in INFO level sometimes. It can be reproduce with the org.apache.activemq.bugs.AMQ2870Test testcase.

2010-09-13 17:40:34,781 [main ] INFO Transport - Transport failed: org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://testStoreSize#5) disposed.
org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://testStoreSize#5) disposed.
at org.apache.activemq.transport.vm.VMTransport.stop(VMTransport.java:159)
at org.apache.activemq.transport.vm.VMTransportServer$1.stop(VMTransportServer.java:81)
at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
at org.apache.activemq.transport.ResponseCorrelator.stop(ResponseCorrelator.java:132)
at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:656)
at org.apache.activemq.bugs.AMQ2870Test.closeConsumer(AMQ2870Test.java:129)
at org.apache.activemq.bugs.AMQ2870Test.testSize(AMQ2870Test.java:84)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:597)
at junit.framework.TestCase.runTest(TestCase.java:168)
at junit.framework.TestCase.runBare(TestCase.java:134)
at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
at junit.framework.TestResult$1.protect(TestResult.java:110)
at junit.framework.TestResult.runProtected(TestResult.java:128)
at junit.framework.TestResult.run(TestResult.java:113)
at junit.framework.TestCase.run(TestCase.java:124)
at junit.framework.TestSuite.runTest(TestSuite.java:232)
at junit.framework.TestSuite.run(TestSuite.java:227)
at com.intellij.junit3.TestRunnerUtil$SuiteMethodWrapper.run(TestRunnerUtil.java:259)
at junit.textui.TestRunner.doRun(TestRunner.java:116)
at com.intellij.junit3.JUnit3IdeaTestRunner.doRun(JUnit3IdeaTestRunner.java:108)
at junit.textui.TestRunner.doRun(TestRunner.java:109)
at com.intellij.junit3.JUnit3IdeaTestRunner.startRunnerWithArgs(JUnit3IdeaTestRunner.java:42)
at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:192)
at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:64)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2902,,,,0.0,2.0,,1|hzkdof:,179197,,,,,,,,13/Sep/10 5:36 PM;janstey;I also reproduced this on trunk at Apache (version 5.5-SNAPSHOT).,08/Oct/10 1:00 PM;garytully;issue resolved at apache and merged to 5.4.1-fuse branch. Fix will be available in tonight's 5.4.1-fuse-SNAPSHOT to validate.,,,,,,,,,,,,,,,,,,
Slow consumer stops receiving messages because PrefetchSubscription.dispatched is filled with expired messages,MB-725,12516146,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,10/Sep/10 8:20 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,14/Feb/11 3:49 PM,5.3.1-fuse-02-01,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,User has attached a possible patch to the AMQ issue,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2908,,,,0.0,6.0,,1|hzkec7:,179304,,,,,,,,07/Oct/10 2:58 PM;garytully;schedule for 5.4.1-fuse-01-00,"04/Nov/10 6:44 PM;garytully;I tried to reproduce this issue with a test case. The test case is committed at apache: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/usecases/ExpiredMessagesWithNoConsumerTest.java?view=diff&r1=1031135&r2=1031136&pathrev=1031136

It is a variant of a slow consumer test, in the original the consumer blocks and only acks when all the messages in the queue have expired. So it will have received 600 (prefetch) messages and they will be in the prefetchsubscription.dispatched list on the broker. The test verifies that all of these messages expire.
The variation of that test to validate this issue adds another batch of messages with no expiry and validates that the consumer can receive them, so it proves that expiring messages in the dispatched list does not block the consumer.

Could you look at the test case to see if any of the options used in the test do not match your use case?",11/Nov/10 2:35 PM;garytully;pushing this out to the next release pending more information.,24/Jan/11 3:00 PM;garytully;any update on this?,24/Jan/11 3:01 PM;garytully;taking off the schedule pending updates,"24/Jan/11 3:18 PM;socallag;Hi Gary,

I have pinged the user pointing him to your test, will let you know if there are any updates.

Thanks,

Seán",,,,,,,,,,,,,,
Faulty URI parsing with NMS 1.4.0,MB-724,12516145,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,socallag,socallag,09/Sep/10 2:47 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Mar/12 2:17 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"he connection factory is created correctly, but the Broker URI given the factory ""failover:(tcp://localhost:8520?keepAlive=false&wireFormat.maxInactivityDuration=1000)"" is incorrectly parsed, the parsing extracts the query part of the URI ""?keepAlive=false&wireFormat.maxInactivityDuration=1000)"", incorrectly with the last bracket, and add it again to the original broker URI resulting in ""failover:(tcp://localhost:8520?keepAlive=false&wireFormat.maxInactivityDuration=1000)?keepAlive=false&wireFormat.maxInactivityDuration=1000)"". So because the URI is invalid, creating of a connection therefor fails.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,10.0,,1|hzkhyf:,179878,,,,,,,,"09/Sep/10 3:33 PM;tabish121;Changing the URI to the following makes this work.

{noformat}
failover:tcp://localhost:8520?keepAlive=false&wireFormat.maxInactivityDuration=1000
{noformat}
","09/Sep/10 8:44 PM;tabish121;This issue should be resolved by the changes submitted in:

https://issues.apache.org/activemq/browse/AMQNET-281

These fixes will make their way into the official NMS.ActiveMQ and NMS.Stomp v1.4.0 releases.","10/Sep/10 8:52 AM;socallag;Hi Tim,

Do we have any dates on these releases, user is anxious to get this released as they want to move to 1.4 due to other fixes in 1.4.

Thanks,

Seán

",10/Sep/10 10:13 AM;tabish121;The NMS API Vote was called this week and looks as if it will pass without any issues.  So each of the NMS Providers will undergo voting starting next week with NMS.ActiveMQ and NMS.Stomp.  So as long as there aren't any issues found next week with the release candidates they should be out by the end of the week.,"10/Sep/10 10:15 AM;socallag;Thanks Tim, that should keep them happy.
Seán","15/Sep/10 5:41 PM;tabish121;The NMS.ActiveMQ vote appears to be good, voting closes tomorrow morning and no issues have been raised.  The final release binaries should be out on the Apache Mirrors sometime Friday.  ",23/Sep/10 4:01 PM;socallag;Thanks Tim.,27/Sep/10 5:35 PM;tabish121;I called the vote for NMS.ActiveMQ v1.4.1 this morning.  The binaries and source for the release candidate is located here: http://people.apache.org/~tabish/nms-1.4.0/,04/Oct/10 3:03 PM;tabish121;The official NMS.ActiveMQ v1.4.1 release is now up at: http://bit.ly/9NZwhv,02/Mar/12 2:17 PM;tabish121;This is fixed in NMS.ActiveMQ v1.4.1 and beyond,,,,,,,,,,
failover: protocol doesn't work within a static:() URI in a networkConnector,MB-723,12516144,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,07/Sep/10 5:56 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,04/Apr/11 12:49 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-00,,,,broker,,,0,,see details in http://fusesource.com/issues/browse/DEV-2605 - needs to be merged to fixes branch,,,,,,,,,,,,,,,03/Mar/11 3:17 PM;sjavurek;bad_config.zip;https://issues.jboss.org/secure/attachment/12368833/bad_config.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2904,,,,1.0,13.0,,1|hzkg27:,179570,,,,,,,,29/Sep/10 2:30 PM;dbosanac;The fix is available in 5.4.1-fuse-00-00,"03/Mar/11 12:40 PM;sjavurek;Hi Gary, 

Ade re-opened this issue yesterday after a visit on site under DEV-2605.  I'm updating this report accordingly so we can track the issue for the customer.  

+Test Case+
Configure a network of three brokers. One is the 'central' broker which does not initiate any network connections. The other two brokers, 'webshop' and 'cm' both connect to the central brokers using a static:(failover:...) url. 

{code} 
	Webshop <----> Central <----> CM
{code} 

We find that if we send messages to webshop: 

{code}
	ant producer -Durl=tcp://localhost:32260 -Ddurable=true
{code} 
	
 then they can be consumed from central. 
 
{code} 
	ant consumer -Durl=tcp://localhost:322658 -Ddurable=true 	
{code} 
 
 but cannot be consumed from CM.
 
{code} 
 	ant consumer -Durl=tcp://localhost:322680 -Ddurable=true 	
{code} 
 
 If we remove the failover logic, then it works just fine: messages are transferred through central all the way to WebShop. 

Attaching config files (see config.zip) to reproduce.","03/Mar/11 3:17 PM;sjavurek;One last comment, this behavior is seen on 5.4.2-fuse-01.","15/Mar/11 10:49 AM;garytully;They are quite different, in static simple case with a comma list of urls static:(url1,url2), a bridge will be created for each url in the list, retrying till success. 
With static and failover static:(failover:(url1,url2)) there is a single bridge that can connect to either url. 

In the use case, the problem seems to be the placement of the failover url query string, randomized=false. There needs to be applied to the network connector uri, so at the outer scope. It then gets applied to all discovered urls. In the current config the failover is random so it will fail some of the time!","15/Mar/11 3:46 PM;garytully;there is a problem here, parameters that are applicable to both the underlying transport and the discovery mechanism get lost.
There needs to be a separation between params that are for discovered uris, in the case of multicast and those that are applicable to the agent.
Something like the following is needed:
{code}discovery:(multicast://default)?initialReconnectDelay=100&discovered.connectionTimeout=300{code} where initialReconnectDelay refers to the underlying discovery retry mechanism and where connectionTimeout is applied to the discovered uri from a broker.
Efforts to support his have left us in the state where something like maxReconnectAttempts cannot be applied to a failover transport at the moment, bc it is picked off by the simple discovery agent retry semantics.
Related ActiveMQ issues: https://issues.apache.org/jira/browse/AMQ-2981 and  https://issues.apache.org/jira/browse/AMQ-2598",16/Mar/11 5:02 PM;garytully;new issue at Apache to track this: https://issues.apache.org/jira/browse/AMQ-3222,"21/Mar/11 10:42 AM;garytully;fix is on trunk, 5.5 at apache follow by 5.5-fuse is the next scheduled release.","01/Apr/11 12:01 PM;garytully;Ade, the idea is that a network bridge gets to do its own failure detection so that it can teardown/recreate the network bridge correctly.
So we want the failover transport to fail and not try and reconnect, because in this mode the network connector looks alive when it is not.
 
The use case for failover under a network connector is to avoid constant retries on a passive slave, ie: it is being used to choose one of the uri collection but if none succeed it should report a failure so that the network connector can do the retry.

They key to this is to have the network connector failover url contain the maxReconnectAttempts=1 such that it will fail bridge creation and the bridge will be restarted. On a static bridge that is applied to the failover uri, for discovery, it is applied as a discovered. prefix option.

It is worth investigating a bit more exactly where the stale mate occurs, but I am not convinced that both the failover transport and the network connector should be trying to recover from a failure. 
At the moment, the failover transport does not recover commands relevant to a network connector but the network connector can do that just fine.",01/Apr/11 1:43 PM;ade1;Thanks Gary - Have recommended this configuration change to the customer and hope to hear from them soon. ,"04/Apr/11 9:45 AM;ade1;Hi Gary, 

We've made the change (adding 'maxReconnectAttempts=1' to the failover string), but we're still seeing problems.

{code:xml}
        <networkConnectors>
                <networkConnector name=""mb2central"" 
                          uri=""static:(failover:(tcp://${activemq.cb.openwire.host.primary}:${activemq.cb.openwire.port},tcp://${activemq.cb.openwire.host.secondary}:${activemq.cb.openwire.port})?maxReconnectAttempts=1)""
                          dynamicOnly=""true"" networkTTL=""3"" duplex=""true"" />
        </networkConnectors>
{code}

{code}
ERROR | Could not stop service: tcp://<machine-name>/<ip-address>:61616. Reason: java.lang.InterruptedException
java.lang.InterruptedException
        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1200)
        at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:245)
        at org.apache.activemq.transport.tcp.TcpTransport.doStop(TcpTransport.java:534)
        at org.apache.activemq.util.ServiceSupport.stop(ServiceSupport.java:69)
        at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:551)
        at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:132)
        at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:65)
        at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:91)
        at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:43)
        at org.apache.activemq.transport.failover.FailoverTransport.disposeTransport(FailoverTransport.java:210)
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:226)
        at org.apache.activemq.transport.failover.FailoverTransport$3.onException(FailoverTransport.java:187)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:101)
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:160)
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:265)
        at org.apache.activemq.transport.InactivityMonitor$3.run(InactivityMonitor.java:156)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
WARN | Transport (<machine-name>/<ip-address>:61616) failed to <machine-name>61616 , attempting to automatically reconnect due to: java.net.SocketException: Broken pipe
INFO | Outbound transport to Unknown interrupted.
{code}","04/Apr/11 10:24 AM;garytully;Ade, can you get trace level logging for the org.apache.activemq.transport.failover.FailoverTransport module, that will help identify the sequence of events that lead to the above exception.","04/Apr/11 12:49 PM;garytully;note the fix version for this is 5.5-fuse. I ran through the use case again this morning and works as expected on trunk.
","08/Jul/11 2:25 PM;socallag;Hi Gary,

Would this be a tricky one to backport on to 5.4.2 ?
A user is asking, we will push them to mov to 5.5, but if they are adamant about it would like to know if this would be easy to do?

Thanks,

Seán",,,,,,,
Cannot browse queues with bytes messages via JMX,MB-722,12516143,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,janstey,janstey,03/Sep/10 6:10 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,14/Feb/11 11:21 AM,5.3.0-fuse-01-00,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,5.4.2-fuse-02-00,,,,broker,,,0,,"As described in PROD-256, when a queue contains a BytesMessage, invoking the browse operation via JMX (in jconsole) the following exception occurs on the broker and there is no operation result displayed.

{quote}
 WARN | exception browsing destination
javax.management.openmbean.OpenDataException: Argument's element itemValues[8]=""[B@129617b"" is not a valid value for this item (itemName=BodyPreview,itemType=javax.management.openmbean.ArrayType(name=[Ljava.lang.Byte;,dimension=1,elementType=javax.management.openmbean.SimpleType(name=java.lang.Byte),primitiveArray=false)).
	at javax.management.openmbean.CompositeDataSupport.<init>(CompositeDataSupport.java:155)
	at javax.management.openmbean.CompositeDataSupport.<init>(CompositeDataSupport.java:201)
	at org.apache.activemq.broker.jmx.OpenTypeSupport.convert(OpenTypeSupport.java:398)
	at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView.java:151)
	at org.apache.activemq.broker.jmx.DestinationView.browse(DestinationView.java:132)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:93)
	at com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(StandardMBeanIntrospector.java:27)
	at com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(MBeanIntrospector.java:208)
	at com.sun.jmx.mbeanserver.PerInterface.invoke(PerInterface.java:120)
	at com.sun.jmx.mbeanserver.MBeanSupport.invoke(MBeanSupport.java:262)
	at javax.management.StandardMBean.invoke(StandardMBean.java:391)
	at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.invoke(DefaultMBeanServerInterceptor.java:836)
	at com.sun.jmx.mbeanserver.JmxMBeanServer.invoke(JmxMBeanServer.java:761)
	at javax.management.remote.rmi.RMIConnectionImpl.doOperation(RMIConnectionImpl.java:1427)
	at javax.management.remote.rmi.RMIConnectionImpl.access$200(RMIConnectionImpl.java:72)
	at javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run(RMIConnectionImpl.java:1265)
	at javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(RMIConnectionImpl.java:1360)
	at javax.management.remote.rmi.RMIConnectionImpl.invoke(RMIConnectionImpl.java:788)
	at sun.reflect.GeneratedMethodAccessor63.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:305)
	at sun.rmi.transport.Transport$1.run(Transport.java:159)
	at java.security.AccessController.doPrivileged(Native Method)
	at sun.rmi.transport.Transport.serviceCall(Transport.java:155)
	at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:535)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:790)
	at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:649)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
{quote}

A simple test case is listed in PROD-256.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3180,,,,0.0,4.0,,1|hzkebr:,179302,,,,,,,,03/Sep/10 6:23 PM;janstey;FYI just tried this with 5.4 and it fails the same way.,"01/Feb/11 4:21 PM;ubhole;Junit testcase for this issue. 

{code:java}
package org.apache.activemq.jmx;

import junit.framework.TestCase;
import org.apache.activemq.broker.jmx.OpenTypeSupport;
import org.apache.activemq.command.ActiveMQBytesMessage;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import javax.jms.BytesMessage;

/**
 * Created by IntelliJ IDEA.
 * User: ubhole
 * Date: 01/02/2011
 * Time: 15:51
 * To change this template use File | Settings | File Templates.
 */
public class OpenTypeSupportTest  extends TestCase {

    private static final Log LOG = LogFactory.getLog(OpenTypeSupportTest.class);

    public void testBrowseByteMessageFails() throws Exception {
        BytesMessage bm = new ActiveMQBytesMessage();
        bm.writeBytes(""123456"".getBytes());


        OpenTypeSupport.convert(bm);

    }
}
{code}

Regards,

Ulhas Bhole",14/Feb/11 11:18 AM;garytully;Apache issue: https://issues.apache.org/jira/browse/AMQ-3180 - JMX Browse of BytesMessage fails with javax.management.openmbean.OpenDataException: Argument's element itemValues[8]=[B@de15a0 is not a valid value for this item. readonly flag needs to be flipped by browser such that content can be read.,14/Feb/11 11:21 AM;garytully;fix merged to 5.4-fusesource branch,,,,,,,,,,,,,,,,
Cannot forward single destination using dynamicallyIncludedDestinations,MB-721,12516141,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,,janstey,janstey,02/Sep/10 2:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Sep/10 2:41 PM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Customer has the following set up:

App A (Producer) ---> Broker A (Queue EOL) --------------- networkconnector ---------------------> Broker B (Queue EOL) --------> AppB (Consumer)

AppB consumes messages only when message consumer is activated or interested by messages in queue EOL. The following network connector is used on Broker A:

{code}
<networkConnectors>
  <networkConnector uri=""static://(tcp://brokerB:51616)"" name=""A_to_B"" dynamicOnly=""false"" networkTTL=""2"" conduitSubscriptions=""false""
    decreaseNetworkConsumerPriority=""false"">
    <excludedDestinations>
      <queue physicalName="">"" />
    </excludedDestinations>
    <dynamicallyIncludedDestinations>
      <queue physicalName=""EOL"" />
    </dynamicallyIncludedDestinations>
  </networkConnector>
</networkConnectors>
{code}

I verified that this does not work using 2 brokers as shown above and using the producer/consumer tool shipped with AMQ.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkdg7:,179160,,,,,,,,02/Sep/10 2:41 PM;janstey;This wasn't an issue after-all! See DEV-2601 for solution.,,,,,,,,,,,,,,,,,,,
Fix setter in RA redelivery policy (type mismatch with getter),MB-720,12516142,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,garytully,garytully,garytully,31/Aug/10 7:39 AM,31/Aug/10 7:40 AM,29/Nov/16 4:16 PM,31/Aug/10 7:40 AM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2889,,,,0.0,1.0,,1|hzkdcv:,179145,,,,,,,,31/Aug/10 7:40 AM;garytully;fix on 5.4.0-fuse branch,,,,,,,,,,,,,,,,,,,
fix aries util version - discrepancy between karaf and blueprint modules,MB-719,12516140,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,garytully,garytully,30/Aug/10 2:01 PM,30/Aug/10 4:18 PM,29/Nov/16 4:16 PM,30/Aug/10 4:18 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,broker,,,0,,"[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Blueprint
[INFO]    task-segment: [dependency:tree]
[INFO] ------------------------------------------------------------------------
[INFO] [dependency:tree {execution: default-cli}]
[INFO] org.apache.activemq:activemq-blueprint:bundle:5.5-SNAPSHOT
[INFO] +- org.apache.aries.blueprint:org.apache.aries.blueprint:jar:0.1-incubating:compile
[INFO] |  +- org.apache.aries:org.apache.aries.util:jar:0.1-incubating:compile
[INFO] |  \- org.slf4j:slf4j-api:jar:1.5.0:compile (version managed from 1.5.11)
[INFO] \- org.apache.xbean:xbean-blueprint:jar:3.7:compile
[INFO]    +- org.apache.commons:commons-jexl:jar:2.0:compile
[INFO]    \- org.ops4j.pax.logging:pax-logging-api:jar:1.5.0:compile
[INFO] ------------------------------------------------------------------------
[INFO] Building ActiveMQ :: Apache Karaf
[INFO]    task-segment: [dependency:tree]
[INFO] ------------------------------------------------------------------------
[INFO] [dependency:tree {execution: default-cli}]
[INFO] org.apache.activemq:activemq-karaf:bundle:5.5-SNAPSHOT
[INFO] +- org.apache.karaf.shell:org.apache.karaf.shell.console:jar:2.0.0:compile
[INFO] |  +- jline:jline:jar:0.9.95.20100209:compile
[INFO] |  +- org.fusesource.jansi:jansi:jar:1.2:compile
[INFO] |  +- org.apache.aries.blueprint:org.apache.aries.blueprint:jar:0.1-r964701:compile
[INFO] |  |  +- org.apache.aries:org.apache.aries.util:jar:0.1-r964701:compile
[INFO] |  |  \- org.slf4j:slf4j-api:jar:1.5.0:compile (version managed from 1.5.11)
[INFO] |  \- org.apache.felix.gogo:org.apache.felix.gogo.runtime:jar:0.4.0:compile
[INFO] +- org.osgi:org.osgi.core:jar:4.1.0:provided (scope not updated to compile)
[INFO] +- org.apache.activemq:activemq-core:jar:5.5-SNAPSHOT:compile
[INFO] |  +- commons-logging:commons-logging-api:jar:1.1:compile
[INFO] |  +- org.apache.geronimo.specs:geronimo-jms_1.1_spec:jar:1.1.1:compile
[INFO] |  +- org.apache.activemq:activeio-core:jar:3.1.2:compile
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2885,,,,0.0,2.0,,1|hzkdcf:,179143,,,,,,,,30/Aug/10 2:08 PM;garytully;looks like the timestamped one is the later one,30/Aug/10 4:18 PM;dbosanac;ActiveMQ should use 0.1-r964701. Fixed and merged to 5.4.0-fuse branch,,,,,,,,,,,,,,,,,,
Exception thrown during commit leads to message loss,MB-718,12516139,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,stlewis,stlewis,26/Aug/10 8:02 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,29/Sep/10 2:29 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,,,,1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2880,,,,0.0,1.0,,1|hzkdjj:,179175,,,,,,,,29/Sep/10 2:29 PM;dbosanac;Resolving it as the fix is available in 5.4.1-fuse-00-00,,,,,,,,,,,,,,,,,,,
Fuse Console not deployed at startup *:8161/console/admin/ gives 404 Not Found,MB-717,12516138,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,garytully,garytully,26/Aug/10 9:44 AM,31/Aug/10 11:28 AM,29/Nov/16 4:16 PM,31/Aug/10 10:33 AM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,broker,,,0,,Activation missing from conf/jetty.xml,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,6.0,,1|hzkdef:,179152,,,,,,,,"26/Aug/10 9:46 AM;garytully;conf/jetty.xml needs the following addition in the handlers section:{code}
          <property name=""handlers"">
                    <list>
                        <bean class=""org.eclipse.jetty.webapp.WebAppContext"">
                            <property name=""contextPath"" value=""/console"" />
                            <property name=""resourceBase"" value=""${activemq.base}/webapps/console"" />
                            <property name=""logUrlOnStart"" value=""true"" />
                        </bean>{code}","26/Aug/10 10:26 AM;garytully;the contents of  {code}webapps/console/WEB-INF/classes/fuse-console.xml{code} is out of date and invalid . An empty spring xml context is sufficient. To achieve an empty xml file on Unix, use the following command:
{code}echo '<beans xmlns=""http://www.springframework.org/schema/beans"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd""/>' > webapps/console/WEB-INF/classes/fuse-console.xml{code}

In windows, manually edit the file to include the above.",26/Aug/10 10:37 AM;garytully;A 1.1 release of fuse-web-console will be needed for the next release to remove the fuse-console.xml or make it optional.,31/Aug/10 10:33 AM;dbosanac;fixed in trunk and 5.4.0-fuse branch,"31/Aug/10 10:43 AM;garytully;just  fyi: when i simply deleted the fuse-console.xml file, there was an ugly not found error on startup as if there is a hard coded dependency to load it, think there may be the need for some additional code change to the war for this. ",31/Aug/10 11:28 AM;garytully;there is an empty config as part of the installation now.,,,,,,,,,,,,,,
Merge fix for: Failover and prefetch=0 can result in hung consumers if the MessagePull command is lost,MB-715,12516137,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,25/Aug/10 10:59 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,31/Aug/10 7:50 AM,5.3.1-fuse-02-00,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,,,,0,,"Issue 1 from http://fusesource.com/issues/browse/PROD-376
fix in  https://issues.apache.org/activemq/browse/AMQ-2877",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2877,,,,0.0,2.0,,1|hzkddj:,179148,,,,,,,,25/Aug/10 11:00 AM;garytully;ensure this fix gets in the next fuse release,31/Aug/10 7:50 AM;garytully;fix merged,,,,,,,,,,,,,,,,,,
ClassCastException in KahaDB,MB-713,12516134,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,ccorsi1,stlewis,stlewis,12/Aug/10 3:39 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,19/Aug/11 2:43 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2284,,,,0.0,1.0,,1|hzkfqn:,179518,,,,,,,,"19/Aug/11 2:43 PM;ccorsi1;There has been many improvements to the kahadb implementation that allow it to recover from issues like these.

For instance, you can set the checkForCorruptJournalFiles and checksumJournalFiles properties to true. This will ask kahadb to check
for corruption within the journal files.

Here is an example:

{code}
   <persistenceAdapter>
      <kahaDB directory=""activemq-data"" checksumJournalFiles=""true"" checkForCorruptJournalFiles=""true""/>
    </persistenceAdapter>
{code}


",,,,,,,,,,,,,,,,,,,
"Configuring HTTP <networkConnector> with proxyHost, proxyPort results in ""Invalid connect parameters: {proxyPort=nn)}"" error",MB-712,12516133,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,10/Aug/10 12:01 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,12/Aug/10 3:36 PM,,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,,,,0,,"User has a workaround/potential fix in place for this already listed in a comment at AMQ-2598. Currently they apply this fix themselves to a custom Apache ActiveMQ release. We need this fix integrated into the next FUSE MB build.

DEV-2556 is also tracking this issue.",Apache ActiveMQ 5.3.0 and 5.3.1 (not yet on a FUSE build),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2598,,,,0.0,2.0,,1|hzkd8v:,179127,,,,,,,,"12/Aug/10 3:36 PM;dbosanac;The issue has been fixed and is now in the fuse trunk as well.

Just the note (as in the original issue) that url should be

static:(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)

instead of 

static://(http://gstest-252:61617?proxyHost=gstest-252&amp;proxyPort=80)",12/Aug/10 3:54 PM;janstey;Thanks Dejan!,,,,,,,,,,,,,,,,,,
"AMQ network of brokers, duplex connection (HTTPS), restart client broker (or when connection restarts due to network), server broker gets duplicate consumer on queue and only forwards every other message",MB-711,12516132,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,stlewis,stlewis,09/Aug/10 6:08 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,31/Aug/10 7:51 AM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,broker,,,0,,Steps to reproduce this are outlined in [AMQ-2764|https://issues.apache.org/activemq/browse/AMQ-2764].,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2764,,,,0.0,4.0,,1|hzkddz:,179150,,,,,,,,"24/Aug/10 12:44 PM;garytully;I checked out your test case, and made some mods, sent some first directly to the consumer broker, made the consumer use failover and restarted the consumer broker. it still held together.
So we need a test case for this one that shows the problem.",24/Aug/10 9:00 PM;stlewis;Have attached an updated test case that does reproduce [AMQ-2764|https://issues.apache.org/activemq/browse/AMQ-2764].,"27/Aug/10 12:01 PM;garytully;found resolution to https://issues.apache.org/activemq/browse/AMQ-2764
With the inactivity monitor (enabled by default) on a http connection, on an initiating broker shutdown the return end of a duplex network connector can expire and the consumer close, such that the messaged destined for that network connector can be delivered to other consumers.
The timeout values can be tweaked on the target brokers http network connector {code}<transportConnectors>
      <!-- configure a low inactivity monitor check time to ensure all messages are received quickly -->
      <transportConnector uri=""http://localhost:61617?transport.readCheckTime=4000&amp;transport.initialDelayTime=4000""/>
    </transportConnectors>
{code}",31/Aug/10 7:51 AM;garytully;fix merged,,,,,,,,,,,,,,,,
Message store is not cleaned when durable topic subscribers are refusing messages,MB-710,12516131,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,stlewis,stlewis,06/Aug/10 2:12 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Nov/10 1:03 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-01-00,,,,broker,,,0,,,,,,,,,,,,,,,,,12/Aug/10 7:47 PM;stlewis;test-case.tar.gz;https://issues.jboss.org/secure/attachment/12368781/test-case.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2584,,,,1.0,13.0,,1|hzkdtr:,179221,,,,,,,,"12/Aug/10 7:47 PM;stlewis;Have verified the test case attached to [AMQ-2584|https://issues.apache.org/activemq/browse/AMQ-2584] and packaged it up so it's pretty easy to run.  To run:

1)  mvn clean install activemq:run
2)  mvn -Predeliveryconsumers
3)  mvn -Pdlqconsumer
4)  mvn -Pproducer

After the producer is finished you'll note that the dlqconsumer has consumed all of the messages that were sent to the DLQ, however if you have a look in target/data/kahadb none of the data files have been cleaned up.","16/Aug/10 4:59 PM;garytully;Added a junit test case to the AMQ issue that works ok on trunk. https://issues.apache.org/activemq/secure/attachment/19535/AMQ2584Test.java

the dups are not really an issue. Think the only problem was the use of a default journal file length and the current file never being deleted. With lots of smaller journal files the older ones can quickly be reclaimed.","16/Aug/10 7:09 PM;stlewis;Ah, okay thanks Gary!",17/Aug/10 12:19 PM;garytully;resolving on the back of the resolution to https://issues.apache.org/activemq/browse/AMQ-2584,18/Aug/10 8:30 AM;garytully;new test case shows an issue with multiple concurrent durable subs. investigating now.,18/Aug/10 3:39 PM;garytully;Updating fix version. Found resolution to https://issues.apache.org/activemq/browse/AMQ-2584 but too late for 5.4.0-fuse-00-00 release so we will need to expedite the first fuse maintenance release to make the fix available.,31/Aug/10 7:52 AM;garytully;fix merged,20/Oct/10 8:26 PM;stlewis;Have re-opened [AMQ-2584|https://issues.apache.org/activemq/browse/AMQ-2584] with an updated version of AMQ2584Test that shows the issue when the consumer and DLQ consumer are run concurrently.,"22/Oct/10 2:16 PM;garytully;With multiple durable subscribers refusing messages and a single DLQ, there will be duplicates. 
But when the consumer of the DLQ is working concurrently, on occasion the duplicates are not suppressed by the store as they have already been acknowledged by the DLQ consumer.
So every second or third duplicate is not suppressed. This results in blocked messages because there is duplicate suppression on the store cursor that prevents the duplicates from being dispatched.
(When the dlq consumer is run serially, there is no acking concurrent with sending to the DLQ so there is only every one instance of each message in the DLQ. Additional sends are rejected by the store.)

The workaround for this is to disable the message audit on the DLQ via a destination policy entry.{code}
<policyEntry queue=ActiveMQ.DLQ"" enableAudit=""false"" />{code}

This allows duplicate serial additions to the DLQ to be consumed so they do not block resources in the message store.

I think we need an enhancement to fully resolve this, provide an option to have a separate DLQ per durable consumer. In this way, it would be clear which consumer failed to accept a message and there would be no duplicate sends to a single destination.

",27/Oct/10 1:03 PM;garytully;checking out the 10 log files to ensure they need to be there...,"28/Oct/10 1:00 PM;garytully;There is a problem with files remaining sometimes. The root cause is the default concurrentStoreAndDispatchQueues value for the kahaDB persistence adapter.
I have committed a modified version of the test[1] to apache that unsubscribes consumers, waits for the DLQ to drain and uses concurrentStoreAndDispatchQueues=false. This reliably completes with just a single journal log file. 
This means that along with enableAudit =false, you need to add concurrentStoreAndDispatchQueues=false to the kahaDB persistence adapter, so that is two non default config values.

[1] http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/bugs/AMQ2584ConcurrentDlqTest.java?view=markup","02/Nov/10 1:03 PM;garytully;Finally got the the bottom of the potential problem with concurrentStoreAndDispathQueues and duplicates in the DLQ. the bottom line is that dispatching of duplicates is problematic, duplicates need to be suppressed at source. The store catches most duplicates but with concurrent dispatch is is possible that the cursors cause a dispatch to be dropped leaving a pending duplicate that the store missed because it had already acked the original.
The solution is to have the DeadLetterStrategy keep a message audit and only allow one copy of a message to be sent the the DeadLetterQueue. In this way, there are no duplicates and none of the associated problems of unreferenced messages in the journal. With this chance, the test works with default configuration and there is only one copy of the poison message in the dlq, irrespective of the number of durable consumers that reject it.
This change will be in tonights 5.4.1-fuse-SNAPSHOT",02/Nov/10 1:25 PM;stlewis;Nice work Gary!,,,,,,,
Usage manager exceeds 100% when sending messages from multiple producers and producerFlowControl is turned off,MB-709,12516130,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,stlewis,stlewis,04/Aug/10 2:06 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,05/Aug/10 1:46 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,"The scenario is multiple producers sending persistent messages to a destination with the broker configured with no memory limit on the queues or topics but a system memory limit of 100mb, and with producerFlowControl turned off, so that when the system memory limit is reached the broker should start spooling messages to disk.  With either kahaPersistentAdapter or kahaDB as the persistent store the memory usage in JMX will exceed 100% as messages are sent.",Actually tested on 5.3.1-fuse-02-01,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,4.0,,1|hzkd7j:,179121,,,,,,,,04/Aug/10 3:38 PM;garytully;I will give this a run tomorrow to see if I can reproduce and identify where the problem is.,"05/Aug/10 1:42 PM;garytully;The memory usage is being exceeded in this case because each destination is configured by default to use 70% of its usage limit as a message cache. 
As each destination sees the system Usage memory limit as its limit (because no individual destination limits are set), it will strive to use 70% of that value. So the usage will go to 140% before leveling off as no further messages will be cached in the destination cursors.

With two destinations, this test passes if the usage low water mark is reduced from 70% to 50%, allowing each destination to consume half of the available memory usage for its cache. The memory is reclaimed when the messages are consumed.
{code}<policyEntries>
  <policyEntry queue="">"" producerFlowControl=""false"" cursorMemoryHighWaterMark=""50""/>
  ..{code}

without the cursorMemoryHighWaterMark change, each destination will potentially cause the usage to exceed the limit by the default 70%.",05/Aug/10 1:46 PM;garytully;We now fully understand this scenario. The questions are: 1) what is the required behavior for this use case? 2) is the max number of destinations known in advance? ,05/Aug/10 1:49 PM;stlewis;Will check for #1 but for question 2 the answer is no.,,,,,,,,,,,,,,,,
When sending to a composite destination the CursorMemoryUsage is not updated for all destinations,MB-708,12516129,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,janstey,janstey,02/Aug/10 7:35 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,04/Aug/10 4:27 PM,5.3.1-fuse-01-00,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,,,,2,,"A customer has observed that when sending to composite destinations, not all CursorMemoryUsage attributes on the queue MBeans are updated. Will attach a test case shortly.",,,,,,,,,,,,,,,02/Aug/10 7:40 PM;janstey;TestCaseCursorMemoryUsage.zip;https://issues.jboss.org/secure/attachment/12368782/TestCaseCursorMemoryUsage.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2861,,,,1.0,3.0,,1|hzkd6n:,179117,,,,,,,,"02/Aug/10 7:40 PM;janstey;To run this test start up a broker and execute the following command in the test project

{code}
mvn compile exec:java -Dexec.mainClass=ch.vd.test.SendCompositeMessage
{code}

This test will send a composite message to ""compositeA,compositeB"" and also a message to noCompositeA and noCompositeB.

In JConsole you can observe the CursorMemoryUsage attribute on the 4 queues. After a single run you can see that the compositeB queue has an enqueued message but its CursorMemoryUsage is still 0.","04/Aug/10 2:17 PM;janstey;I also forgot to mention that when consuming messages, the CursorMemoryUsage is not updated correctly either. For instance, consuming from one queue will decrease the count on the other queue in the composite. The attached test case does not demonstrate this however.",04/Aug/10 4:27 PM;dbosanac;This has been fixed in Apache trunk (https://issues.apache.org/activemq/browse/AMQ-2861) and will be available in the forthcoming apache and fuse 5.4.0 releases. Please reopen it if you need it merged to 5.3.1-fuse branch.,,,,,,,,,,,,,,,,,
Concurrent access to maxPageSize - via JMX and message dispatch can cause dispatch to think there is nothing in the store and stop dispatch,MB-706,12516127,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,26/Jul/10 3:48 PM,17/Aug/10 12:30 PM,29/Nov/16 4:16 PM,17/Aug/10 12:30 PM,5.3.0.6-fuse,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,broker,,,0,,trouble shooting http://fusesource.com/issues/browse/MB-668 causes the invocation of setMaxPageSize on a Destination from JMX that resulted in the broker dispatch loop getting into a state where it thinks there is nothing to dispatch. This needs to be resolved so that this situation cannot occur again.,,,,,,,,,,,MB-668,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkdan:,179135,,,,,,,,26/Jul/10 3:50 PM;garytully;This issue will ensure the JMX contention with dispatch is removed,17/Aug/10 12:30 PM;garytully;There have been improvements (from other unrelated issues) to the logic in doPageIn Queue.java such that the negative toPageIn count will no longer occur in the event of a concurrent change to the max page size.,,,,,,,,,,,,,,,,,,
Kahadb database corrupted when broker shutdown by turning machine off,MB-705,12516126,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,ccorsi1,socallag,socallag,26/Jul/10 9:49 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,19/Aug/11 2:42 PM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,"010-06-27 13:40:17,970 | ERROR | Failed to fill batch | org.apache.activemq.broker.region.cursors.AbstractStoreCursor | ActiveMQ Scheduler
java.io.IOException: Invalid location: 866:14432, : java.lang.NegativeArraySizeException
	at org.apache.kahadb.journal.DataFileAccessor.readRecord(DataFileAccessor.java:94)
	at org.apache.kahadb.journal.Journal.read(Journal.java:573)
	at org.apache.activemq.store.kahadb.MessageDatabase.load(MessageDatabase.java:673)
	at org.apache.activemq.store.kahadb.KahaDBStore.loadMessage(KahaDBStore.java:565)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:243)
	at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
	at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:236)
	at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:253)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:106)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1449)
	at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1592)
	at org.apache.activemq.broker.region.Queue.doBrowse(Queue.java:816)
	at org.apache.activemq.broker.region.Queue.expireMessages(Queue.java:632)
	at org.apache.activemq.broker.region.Queue.access$100(Queue.java:89)
	at org.apache.activemq.broker.region.Queue$2.run(Queue.java:123)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkfqf:,179517,,,,,,,,05/Aug/11 3:18 PM;rkieley;Discussion concluded this is not a problem in 5.5. Reopen if required for earlier version.,"19/Aug/11 2:42 PM;ccorsi1;There has been many improvements to the kahadb implementation that allow it to recover from issues like these.  

For instance, you can set the checkForCorruptJournalFiles and checksumJournalFiles properties to true.  This will ask kahadb to check 
for corruption within the journal files.

Here is an example:

{code}

    <persistenceAdapter>
      <kahaDB directory=""activemq-data"" checksumJournalFiles=""true"" checkForCorruptJournalFiles=""true""/>
    </persistenceAdapter>

{code}
",,,,,,,,,,,,,,,,,,
Messages that don't match a message selector for a durable subscription are stored causing the persistent store to eventually fill up,MB-704,12516125,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,stlewis,stlewis,22/Jul/10 6:03 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,16/Aug/10 3:41 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,broker,,,0,,"If you create a durable subscription with a message selector on a topic and send messages that *don't* match the message selector the store will eventually fill up, as while these messages are not sent to the subscription they're not discarded either.  The attached test gives a good indication of this behavior.",actually tested this against trunk at Apache,,,,,,,,,,,,,,22/Jul/10 6:04 PM;stlewis;StoreSizeTest.java;https://issues.jboss.org/secure/attachment/12368780/StoreSizeTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkd9b:,179129,,,,,,,,13/Aug/10 3:11 PM;garytully;get this into the 5.4 fuse release that lags activemq 5.4,16/Aug/10 11:37 AM;garytully;issue at apache: https://issues.apache.org/activemq/browse/AMQ-2870,16/Aug/10 3:41 PM;garytully;fix on trunk. will be in 5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,
ConcurrentModificationException on broker when sending messages to composite destinations,MB-701,12516122,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,hzbarcea1,hzbarcea1,hzbarcea1,19/Jul/10 2:41 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,19/Jul/10 3:06 PM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"See DEV-2493.

I created AMQ-2836 to fix this at apache (see external issue)","Linux version 2.6.18-92.1.13.el5
Java 1.6.0_18
FUSE Message Broker 5.3.1-00-00",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2836,,,,0.0,1.0,,1|hzkd5z:,179114,,,,,,,,19/Jul/10 3:06 PM;hzbarcea1;AMQ-2836 is fixed at apache and will be released with 5.4.0.,,,,,,,,,,,,,,,,,,,
initialRedeliveryDelay configuration not being respected.,MB-700,12516121,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,garytully,socallag,socallag,19/Jul/10 1:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,06/Aug/10 8:18 AM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,,,,0,,Please see attached testcase,,,,,,,,,,,,,,,19/Jul/10 1:18 PM;socallag;testCase7_immediate_1st_redelivery.zip;https://issues.jboss.org/secure/attachment/12368779/testCase7_immediate_1st_redelivery.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1847,,,,1.0,1.0,,1|hzkd7z:,179123,,,,,,,,06/Aug/10 8:18 AM;garytully;fix in https://issues.apache.org/activemq/browse/AMQ-1847,,,,,,,,,,,,,,,,,,,
Temporary queues create advisory topics without bound,MB-699,12516120,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,16/Jul/10 11:08 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,05/Jan/11 1:04 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-03-00,,,,,,,0,,"Have also tested against  5.3.1-01-00.
Please see attached testcase.",,,,,,,,,,,,,,,16/Jul/10 11:09 AM;socallag;AdvisoryTopicTest.java;https://issues.jboss.org/secure/attachment/12368778/AdvisoryTopicTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-2571,,,,1.0,2.0,,1|hzkegn:,179324,,,,,,,,"03/Aug/10 1:47 PM;dbosanac;Hi Sean,

just checked and the issue doesn't exist (test passes) on the current trunk. Is upgrading to 5.4 we're working on is an option for the customer? I can track down the change and merge it back if necessary.

Regards,
Dejan","05/Jan/11 1:04 PM;dbosanac;This should be now merged to 5.3.1-fuse branch.

The problem is that temp queue is created if it doesn't exists, which was fixed with https://issues.apache.org/jira/browse/AMQ-2571

The snapshot (20110105.123612-7) is available at

http://repo.fusesource.com/nexus/content/repositories/snapshots/org/apache/activemq/apache-activemq/5.3.1-fuse-03-01-SNAPSHOT/",,,,,,,,,,,,,,,,,,
Advisory Messages not being cleaned up when queue removed using AdminView,MB-698,12516119,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,stlewis,socallag,socallag,14/Jul/10 1:26 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,07/Mar/11 3:52 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,,,,0,,"Please see attached testcase.
I've tested against  the 1st July 5.3.1-fuse-03-01-SNAPSHOT ",,,,,,,,,,,,,,,07/Mar/11 3:40 PM;socallag;AdvisoryTopicTest.java;https://issues.jboss.org/secure/attachment/12368834/AdvisoryTopicTest.java,14/Jul/10 1:27 PM;socallag;AdvisoryTopicTest.java;https://issues.jboss.org/secure/attachment/12368777/AdvisoryTopicTest.java,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2915,,,,2.0,6.0,,1|hzkeg7:,179322,,,,,,,,"14/Jul/10 1:27 PM;socallag;Add test to:

apache-activemq-5.3.1-fuse-03-01-SNAPSHOT\src\activemq-core\src\test\java\org\apache\activemq\usecases","13/Sep/10 5:40 PM;stlewis;Have test case + potential fix submitted as a patch, see [AMQ-2915|https://issues.apache.org/activemq/browse/AMQ-2915].",29/Sep/10 2:28 PM;dbosanac;This has been fixed and is available in 5.4.1-fuse-00-00,07/Mar/11 3:40 PM;socallag;This problem exists in 5.4.2 snapshot of Mar 6th,"07/Mar/11 3:48 PM;stlewis;Sean, this is a slightly different circumstance with a different test case.  You should open a new bug with the new testcase.",07/Mar/11 3:49 PM;socallag;Will do Stan,,,,,,,,,,,,,,
HTTP networkConnector with staticallyIncludedDestination - Broker restart causes store and forward mechanism to break,MB-697,12516118,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,lcurry,lcurry,12/Jul/10 3:14 PM,12/Jul/10 4:12 PM,29/Nov/16 4:16 PM,,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Steps to reproduce the issue
----------------------------------
To reproduce this issue I installed apache-activemq-5.3.2 in two separate locations. The scenario simulates a hub and spoke architecture in which the hub (Broker1) will be connected (via a networkConnector) to Broker2. The network connector uses ""http"" rather than ""tcp"" for connection between brokers. This is a requirement for customer because customer  broker connection must traverse distinct networks. Note the problem does not seem to occur when ""tcp"" is used. The networkConnector also defines a ""staticallyIncludedDestination"".

The problem happens when Broker1 is shutdown and restarted. After that, the networkConnector (store and forward)
mechanism seems to break. Messages that should be available to a consumer in queue on Broker1 are not sent to consumer
and appear to be lost.  

The actual config details are given below. Also attached are the activemq.xml files for Broker1 and Broker2.

1)	Update activemq.xml for Broker1.
The changes to the default configuration for Broker1 include the following: 
•	Change the broker name from localhost to Broker1
•	Add networkConnector to Broker2.

    <broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" brokerName=""BROKER1"" dataDirectory=""${activemq.base}
/data"" destroyApplicationContextOnStop=""true"" >

...
...
      <networkConnectors>
              <networkConnector name=""SCA"" uri=""static://(http://localhost:61617)"" duplex=""true"">
                      <staticallyIncludedDestinations>
                      <queue physicalName=""R""/>
                      </staticallyIncludedDestinations>
              </networkConnector>
      </networkConnectors>


2)	Update the activemq.xml for Broker2
The changes to the default configuration for Broker2 include the following:
•	Change the broker name from localhost to Broker2
•	Change the default transport connector (tcp) to listen on 61618 (to avoid conflict with Broker1's tcp port)
•	Add an transport connector (http) for port 61617. This is the port that will be connected to by Broker1.

    <broker xmlns=""http://activemq.apache.org/schema/core"" useJmx=""true"" brokerName=""BROKER2"" dataDirectory=""${activemq.base}
/data"" destroyApplicationContextOnStop=""true"">
...
...
       <transportConnectors>
           <transportConnector name=""openwire"" uri=""tcp://0.0.0.0:61618""/>
           <transportConnector name=""http"" uri=""http://0.0.0.0:61617""/>
       </transportConnectors>



3)	Start Broker2 using the activemq.bat script in Broker2's installation /bin directory.
4)	Start Broker1 using the activemq.bat script in Broker1's installation /bin directory.


5)	Run simple producer/consumer scenarios.
a)	Run consumer against 61616 (Broker1).
 Go to Broker1's example directory:
E.g.
C:\Progress\apache-activemq-5.3.2\example
Run the following:

	ant consumer -Durl=tcp://localhost:61616 -Dmax=100 -Dsubject=R
The above command will connect to Broker1 and listen for 100 messages on queue R on Broker1

b)	Next in another window - same directory - run the following:
	ant producer -Durl=tcp://localhost:61616 -Dmax=10 -Dsubject=R
The above command will connect to Broker1 and send 10 messages to queue R on Broker1

You should see the consumer will receive the 10 messages.
c)	Next, Run producer to send messages to Broker2:
	ant producer -Durl=tcp://localhost:61618 -Dmax=10 -Dsubject=R
Because of the networkConnector set up for queue R between Broker1->Broker2, the consumer (that was already running and connected to Broker1) should also receive these 10 messages that were sent to queue R on Broker2.

6)	Shutdown Broker1 and restart.

7)	Run step 5 again. You will see when you run the producer the second time (step 5c) that not all the messages get to the consumer connected to queue R on Broker1. Only every other message arrive at consumer. 

You can shutdown Broker1 and repeat step 5 over and over and each time you will see fewer and fewer messages arrive at consumer connected to queue R on Broker1.  Where do these messages go?

Information from jconsole
-------------------------------
While running this test case, start jconsole and attach to each of the brokers.
On Broker2 open the MBeans tab and expand activemq->BROKER2->Subscription->Non-Durable->Queue->R->NC_BROKER1_inbound_BROKER2
This will show the subscription created on Broker2 by the networkConnector.
Each time you shutdown Broker1 and restart, jconsole will show a new Subscription created in Broker2.

",Tested on Windows 7,,,,,,,,,,,,,,12/Jul/10 3:14 PM;lcurry;activemq.broker1.xml;https://issues.jboss.org/secure/attachment/12368772/activemq.broker1.xml,12/Jul/10 3:14 PM;lcurry;activemq.broker2.xml;https://issues.jboss.org/secure/attachment/12368771/activemq.broker2.xml,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2764,,,,2.0,0.0,,1|hzkd5r:,179113,,,,,,,,,,,,,,,,,,,,,,,,,,,
Race condition in kahaPersistenceAdapter and incorrect cursor memory usage count in DLQ,MB-695,12516116,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,stlewis,stlewis,06/Jul/10 1:05 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,05/Aug/10 10:01 AM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,,,,0,,"The attached test case shows the following problems in the activemq.log when run:

2010-06-30 16:07:16,575 [ue:ActiveMQ.DLQ] ERROR DataManagerImpl - Looking for key 132 but not found in fileMap: {133=data-queue-data-133 number = 133 , length = 2044648 refCount = 30}
2010-06-30 16:07:16,575 [ue:ActiveMQ.DLQ] ERROR MapContainerImpl - Failed to get value for offset=153, key=(132, 33528178, 52), value=(132, 33528235, 24573), previousItem=-1, nextItem=255
2010-06-30 16:07:16,576 [ue:ActiveMQ.DLQ] ERROR AbstractStoreCursor - Failed to fill batch
2010-06-30 16:07:16,576 [ue:ActiveMQ.DLQ] ERROR AbstractStoreCursor - Failed to fill batch
2010-06-30 16:07:16,576 [ue:ActiveMQ.DLQ] ERROR Queue - Failed to page in more queue messages

and especially:

2010-06-30 16:05:58,428 [ue:ActiveMQ.DLQ] ERROR Queue                          - Failed to page in more queue messages 
java.lang.RuntimeException: java.lang.RuntimeException: org.apache.activemq.kaha.RuntimeStoreException: java.io.IOException: Could not locate data file data-queue-data-117
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:145)
	at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1447)
	
it appears one thread is cleaning up a data file while another thread has a reference to a message stored in that data file.  Increasing the max file size to avoid the data files getting cleaned up too often can work around this.  But there's another problem, the cursor memory usage counter appears to be giving incorrect information, after running the test the DLQ cursor memory usage mbean in jconsole is around 80% even though there's no more messages to be consumed.  After another run it exceeds 100%.

Also bumping up the number of producer threads in the test case to 10 (change in the ""sender"" bean):

<property name=""threadCount"" value=""10"" />

cause flow control to kick in, probably shouldn't happen if persistent messages are being used.

To run the test case start up a broker using the config/activemq.xml configuration, then do an ""mvn clean compile test"" to run the test case.  The activemq.log should contain the above messages by the end of the test run, and you can use jconsole to check the cursor memory usage mbean for the DLQ.
",,,,,,,,,,,,,,,06/Jul/10 1:06 PM;stlewis;test-case.tar.gz;https://issues.jboss.org/secure/attachment/12368774/test-case.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkd73:,179119,,,,,,,,"03/Aug/10 2:11 PM;garytully;The AMQ persistence adaper is better in this regard. Also, going forward, the kahaDB store is recommented due to it linear enqueue rate and faster index recovery.
Making the following change: {code}<!-- kahaPersistenceAdapter directory=""${activemq.base}/data"" maxDataFileLength=""33554432""/ -->
<amqPersistenceAdapter directory=""${activemq.base}/data"" maxFileLength=""33554432""/>{code} and the test case was successful with a 5.4-SNAPSHOT.",05/Aug/10 10:01 AM;garytully;KahaDB on any 5.3 or AMQ are preferable to Kaha Persistence Adapter,,,,,,,,,,,,,,,,,,
"Message received from Queue before its expiration and acknowledged after it, is put to deadletter queue",MB-694,12516115,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,joe.luo,joe.luo,05/Jul/10 4:30 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,31/Aug/10 7:49 AM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-00-00,,,,broker,,,0,,"we're facing inconsistent behaviour of message broker during messaging if timeToLive is used. Testcase is following:

    * DLQ consumer
    * queue consumer with 1000ms delay before message acknowledgement
    * queue producer1 - sending 10msgs with value 500ms set for message TTL
    * queue producer2 - sending 10msgs infinite TTL (started after producer1 ends)
      Observed:
    * testQueue consumer receives 11 messages
    * dlq consumer receives 10 messages (in case if topic is used instead of testQueue it is only 9)

First message with ttl=500ms is received twice:

    * by consumer(see JMSMessageId in logs/consumer.csv) which also acknowledges it after 1000ms(after it expires)
    * by dlq consumer (logs/dlq.csv),

Then 9 messages are put to DLQ directly (this is correct - they are expired). Finaly 10 messages with no TTL are received by consumer.

If topic as a destination is used instead, there are only 9 message received from DLQ and 11 received by topic durable subscriber (including first one with ttl 500ms).

However this is not described in JMS 1.1 specifiaction,I think behaviour should be same in both cases (queue, topic). Once, message is received,it shouldn't be put to DLQ even if it is acknoledged after expiration time - attached test case considers queue message expiration behaviour as incorrect.",,,,,,,,,,,,,,,05/Jul/10 4:37 PM;joe.luo;MB-694-testcase.zip;https://issues.jboss.org/secure/attachment/12368775/MB-694-testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzkddb:,179147,,,,,,,,"05/Jul/10 4:37 PM;joe.luo;To run the test case, just unzip it and run ""mvn test"". 

For topic type destination, you will need to modify ""config\spring\testCase4_RRexpiration_applicationContext.xml"" to change following beans to:
{code}
<bean id=""testQueue"" class=""org.apache.activemq.command.ActiveMQTopic"">
            <constructor-arg value=""testQueue"" />
    </bean>
{code}

and 
{code}
<bean id=""jmsContainer""
        class=""org.springframework.jms.listener.DefaultMessageListenerContainer"">
        <property name=""sessionAcknowledgeModeName"" value=""CLIENT_ACKNOWLEDGE"" />
        <property name=""autoStartup"" value=""true"" />
        <property name=""connectionFactory"" ref=""jmsFactory""/>
        <property name=""clientId"" value=""client1""/>
        <property name=""subscriptionDurable"" value=""true"" /> 
        <property name=""pubSubDomain"" value=""true"" />
        <property name=""durableSubscriptionName"" value=""testSub1"" />
        <property name=""destination"" ref=""testQueue"" />
        <property name=""messageListener"" ref=""testQueue_consumer""/>
    </bean>
{code}",24/Aug/10 9:56 AM;garytully;Open issue at apache for the fix to this: https://issues.apache.org/activemq/browse/AMQ-2876,25/Aug/10 10:52 AM;garytully;setting fix version so this gets into the next fuse release.,31/Aug/10 7:49 AM;garytully;fix merged,,,,,,,,,,,,,,,,
"'Zombie' messages created in KahaDB after failover, with warning 'Duplicate message add attempt rejected",MB-693,12516114,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,ade1,ade1,28/Jun/10 11:03 AM,18/Jul/11 1:29 PM,29/Nov/16 4:16 PM,18/Jul/11 1:29 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.4.1-fuse-02-00,,,,broker,,,0,,Follow external issue URL for link on Apache,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2803,,,,0.0,1.0,,1|hzkfg7:,179471,,,,,,,,18/Jul/11 1:29 PM;garytully;resolved at apache https://issues.apache.org/jira/browse/AMQ-2803,,,,,,,,,,,,,,,,,,,
Lots of NullPointerException in KahaDB after restart ,MB-692,12516113,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,,joe.luo,joe.luo,23/Jun/10 2:26 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,23/Jun/10 2:32 PM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,"Upon restart of activemq, we see thousands of these errors in the log. Messages were not being processed:

java.lang.RuntimeException: java.lang.RuntimeException: java.lang.NullPointerException
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:107)
at org.apache.activemq.broker.region.cursors.StoreQueueCursor.reset(StoreQueueCursor.java:157)
at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1446)
at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)
at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

It was preceded be a few instances of the following error:

ERROR | Failed to fill batch
java.lang.NullPointerException
at org.apache.kahadb.index.BTreeNode$BTreeIterator.findNextPage(BTreeNode.java:109)
at org.apache.kahadb.index.BTreeNode$BTreeIterator.hasNext(BTreeNode.java:120)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore$5.execute(KahaDBStore.java:240)
at org.apache.kahadb.page.Transaction.execute(Transaction.java:728)
at org.apache.activemq.store.kahadb.KahaDBStore$KahaDBMessageStore.recoverNextMessages(KahaDBStore.java:235)
at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:97)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:251)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:142)
at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1447)
at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1585)
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1219)
at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

The problem seems to be related to the size of the queue because I can pull messages from all the queues except one which has over 400k messages in it. I am even able to add messages to the large queue, just not read from it without getting the NPE exception above... 

I also tried using the fileQueueCursor, but get the same error.

Here is a recently reported and fixed Apache JIRA: [https://issues.apache.org/activemq/browse/AMQ-2757] with exactly the same symptom and would like to see the fix of AMQ-2757 to be merged to 5.3.1-fuse branch.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2757,,,,0.0,1.0,,1|hzke0f:,179251,,,,,,,,23/Jun/10 2:32 PM;chirino;fix merged into the activemq-5.3.1-fuse branch in rev 13933,,,,,,,,,,,,,,,,,,,
Broker can't recover from possibly corrupt KahaDB store,MB-691,12516112,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Duplicate Issue,chirino,janstey,janstey,23/Jun/10 1:53 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,25/Jun/10 6:17 PM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"So there is an issue when using M/S with KahaDB on a GFS2 cluster where the broker store can get corrupted. Once corrupted, the broker cannot recover and the broker store has to be deleted.

The failure that caused this is described in more detail in PROD-319. Basically, I couldn't reproduce this locally (nor could the customer) so I thought it would be prudent to see if we could recover from this sort of corruption.

I'll be posting more details and possble fix in a bit.",Linux / Java 1.6.0_18,,,,,,,,,MB-692,,,,,23/Jun/10 2:30 PM;janstey;PROD-319.patch;https://issues.jboss.org/secure/attachment/12368776/PROD-319.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,5.0,,1|hzkd3z:,179105,,,,,,,,"23/Jun/10 2:28 PM;janstey;Test case is at smb://devnas03.bedford.progress.com/sonicscratch/janstey/prod-319/prod-319.tar.gz, which is on the VPN (its too big to attach here). Running mvn clean test will show the problem.","23/Jun/10 2:30 PM;janstey;This patch seems to allow the broker to recover from this sort of corruption. Please review this before committing as I didn't write anything for KahaDB :)

I created this against the http://fusesource.com/forge/svn/fusemq/tags/activemq-5.3.1-fuse-01-00 tag.",25/Jun/10 6:17 PM;chirino;supplied patch just masked the problem.  Actual fix applied in MB-692,25/Jun/10 6:17 PM;chirino;resolving as a dup.,28/Jun/10 12:43 PM;janstey;Thanks Hiram!,,,,,,,,,,,,,,,
Messages are only expired from a durable subscription when a connection is present,MB-690,12516111,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,joe.luo,joe.luo,22/Jun/10 10:35 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,03/Nov/11 4:43 PM,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,5.6.0-fuse-00-00,,,,,,,1,,"When you use messages with TimeToLive (JMSExpiration) on queues in ActiveMQ, the messages are expired automatically if they are not consumed on time or there are no messages to consume.

However, if the messages are sent to a topic, and then placed onto a durable subscription, the messages only get expired if a consumer is present. This is actually the same behaviour that ActiveMQ used to exhibit for queues back in the time of 5.3.0.1 (I think!). We'd like to get this behaviour updated to match the new automatic expiration used on queues. Our rationale is this:

    * We have a number of consumers using durable subscriptions.
    * We want to be able to handle the case where the consumers are not up due to some catastrophic or byzantine failure. In this case, the producers will keep running, so we want to expire messages from the durable subscription and place onto the dead letter queue where we can get them out of the broker and logged or saved to file/DB.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/jira/browse/AMQ-3532,,,,0.0,2.0,,1|hzkgo7:,179669,,,,,,,,10/Oct/11 6:22 PM;garytully;issue at apache https://issues.apache.org/jira/browse/AMQ-3532,03/Nov/11 4:43 PM;garytully;fix on fuse-trunk.,,,,,,,,,,,,,,,,,,
Sending message to multiple destinations when using JDBCPersistenceAdapter results in second message being lost,MB-689,12516110,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,16/Jun/10 2:28 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,19/Jul/10 9:30 AM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,,,,2,,"We found a regression sending message to multiple destination when using JDBCPersistenceAdapter
The second destination is detected as duplicate and not inserted in database but keep in memory.
If the broker is restart, message to second destination are lost.

Exemple :

Turning the log debug for jdbc store (log4j.logger.org.apache.activemq.store.jdbc=DEBUG)

send a simple text message to destination testA,testB

2010-06-16 00:26:25,260 [168.1.103:54204] DEBUG JDBCMessageStore - testB ignoring duplicated (add) message, already stored: ID:giampaolo-laptop-49914-1276640768153-0:0:1:1:1

Message to testB not inserted in database, jmx show a message in queue testB

restarting the broker, message in testB is lost.

After looking the source code, we use a workaround that consist to set false the enableAudit attribut

<amq:jdbcPersistenceAdapter enableAudit=""false"" dataSource=""#mysql-ds"">

In this case, all messages are inserted in DB.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkd6f:,179116,,,,,,,,"19/Jul/10 9:29 AM;garytully;The workaround is good, as that duplicate checker is over eager. That duplicate suppression logic is intended for failover recovery scenarios where a send is replayed which can sometimes result in a duplicate if just the reply is lost. Without failover transport recovery it will not occur and even if it does, the message will be skipped by the store. The only possible workaround is over a very long period these messages could consume some additional resources in the database.

The fix needs to be in 5.4 as it requires an additional attribute on a connection info (wireformat) that can indicate reconnection.
The relevant fix to apache is URL: http://svn.apache.org/viewvc?rev=961783&view=rev 
resolve https://issues.apache.org/activemq/browse/AMQ-2800, https://issues.apache.org/activemq/browse/AMQ-2542, https://issues.apache.org/activemq/browse/AMQ-2803 - implement duplicate checker in transport for a failover: reconnect, uses last seq id from store. implemented for kahaDB and JDBC",19/Jul/10 9:30 AM;garytully;wire format change makes this applicable to a major release.,"27/Jul/10 9:43 AM;garytully;great. that is expected. In fact, we can and should remove the enableAudit capability from the JDBC store.",,,,,,,,,,,,,,,,,
Producer Advisory Topics not created for Stomp producers,MB-688,12516109,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,socallag,socallag,10/Jun/10 8:52 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,5.3.1-fuse-02-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Find attached a patch to StompTest which reproduces the issue.,,,,,,,,,,,,,,,10/Jun/10 8:52 AM;socallag;StompTestAdvisoryTopic.java;https://issues.jboss.org/secure/attachment/12368770/StompTestAdvisoryTopic.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkd4v:,179109,,,,,,,,"09/Jul/10 12:31 PM;dbosanac;Hi,

there is a difference between JMS producers and how Stomp send messages. In Stomp there is no producers and messages are just sent over the connection. Internally ActiveMQ send all those messages over one producer, which is created when CONNECT frame is sent. As this producer is not tied to any destination, advisories are not created (a usual behavior of advisory support).


I'm not sure if it would be a good practice to create a separate producer for every destination used and thus sending appropriate advisories.

Massimo, James any thoughts from your side would be very valuable. 

Regards,
Dejan",,,,,,,,,,,,,,,,,,,
Durable subscription MBean shows incorrect active/inactive state.,MB-687,12516107,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,09/Jun/10 12:29 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,15/Jun/10 2:25 PM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,See [AMQ-2770|https://issues.apache.org/activemq/browse/AMQ-2770],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2770,,,,0.0,1.0,,1|hzkd13:,179092,,,,,,,,15/Jun/10 2:25 PM;dbosanac;Fixed and merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,,
Topics hold consumers for unsubscribed durable subscriptions.,MB-686,12516108,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,09/Jun/10 12:27 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,14/Jun/10 7:06 AM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,See [AMQ-2769|https://issues.apache.org/activemq/browse/AMQ-2769],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2769,,,,0.0,1.0,,1|hzkd1j:,179094,,,,,,,,14/Jun/10 7:06 AM;dbosanac;Fixed and merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,,
Invalid messages in the pending queue of durable subscriptions,MB-685,12516106,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,08/Jun/10 4:07 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,14/Jun/10 11:50 AM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,"Invalid messages appear in the pending queue of the durable subscriptions (with message selector) right after broker restart. These invalid messages are blocking the delivery of the newly produced ones.

For more detail and junit test case, please have a look at Apache JIRA [https://issues.apache.org/activemq/browse/AMQ-2695].",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2695,,,,0.0,1.0,,1|hzkcxb:,179075,,,,,,,,14/Jun/10 11:50 AM;dbosanac;Fixed and merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,,
Durable subscription re-activation increases the consumers list.,MB-683,12516103,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,dbosanac,stlewis,stlewis,08/Jun/10 1:48 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,10/Jun/10 11:39 AM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,broker,,,0,,"From the user:

{quote}
If the keepDurableSubsActive=true in the broker and there are pre-created topics (at startup) in the config xml, then every subscription re-activation increases the consumers list of the destination.
{quote}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2665,,,,0.0,1.0,,1|hzkizr:,180044,,,,,,,,10/Jun/10 11:39 AM;dbosanac;Fixed and merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,,
Failed durable subscription re-activation when keepDurableSubsActive=false,MB-682,12516104,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,08/Jun/10 11:42 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,10/Jun/10 11:36 AM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,"From the user:

If i set keepDurableSubsActive=false then i won't get the messages after re-activation. 

I've figured out that the DurableTopicSubscription.deactivate() invokes StoreDurableSubscriberCursor.remove() what is removes the TopicStorePrefetch from the topic. Up to this point everyting is fine. But when the durable subscription becomes active the StoreDurableSubscriberCursor.add won't be called. So DurableTopicSubscription.activate() does not put the cursor back.",,,,,,,,,,,,,,,08/Jun/10 11:42 AM;socallag;DurableSubscriptionReactivationTest.java;https://issues.jboss.org/secure/attachment/12368769/DurableSubscriptionReactivationTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2663,,,,1.0,1.0,,1|hzkcwv:,179073,,,,,,,,10/Jun/10 11:36 AM;dbosanac;Fixed and merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,,
Network of Brokers becomes overwhelmed with Advisory Messages on Temporary Queues which are not being deleted when a broker is restarted.,MB-680,12516101,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,03/Jun/10 1:30 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Jun/10 3:11 PM,5.4.0-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-01,,,,,,,0,,,,,,,,,,,,,,,,,03/Jun/10 1:32 PM;socallag;ThreeBrokerStompTemporaryQueueTest.java;https://issues.jboss.org/secure/attachment/12368768/ThreeBrokerStompTemporaryQueueTest.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2782,,,,1.0,2.0,,1|hzkd2n:,179099,,,,,,,,"03/Jun/10 1:32 PM;socallag;The test shows that the Advisory Messages are not being cleared up correctly. 
Tested against 20th May 5.4.0-SNAPSHOT. problem also seen on 5.3.1",17/Jun/10 3:11 PM;dbosanac;Fixed and merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,
Include fuse console,MB-677,12516098,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,dbosanac,dbosanac,28/May/10 5:33 PM,04/Jun/10 9:47 AM,29/Nov/16 4:16 PM,04/Jun/10 9:47 AM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-02-00,,,,,,,0,,In 5.3.1-xx-xx release we don't have fuse console included like in 5.3.0.x lineup.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkcw7:,179070,,,,,,,,04/Jun/10 9:47 AM;dbosanac;The console is now included.,,,,,,,,,,,,,,,,,,,
"Extra ""vm://localhost"" is added to the failover URL in HA mode",MB-674,12516095,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,hzbarcea1,hzbarcea1,26/May/10 3:45 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,08/Jun/10 2:55 PM,5.3.0.6-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.7-fuse,5.3.1-fuse-02-00,,,,,,0,,"With a configuration like below, in HA mode round-robin, after a reconnect the URL gets modified an an extra vm://localhost pops up in the url.
{code}
<proxyConnectors>
  <proxyConnector bind=""tcp://hostA:21616"" remote=""failover:(tcp://hostB:61616,tcp://hostC:61616)""/>
</proxyConnectors>
{code}

{code}
DEBUG FailoverTransport - urlList connectionList:[tcp://wsbfep2:61616, vm://localhost, tcp://wsbfep1:61616] 
{code}

Adding ""randomize=false"" makes the problem less severe.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2767,,,,0.0,1.0,,1|hzkcwn:,179072,,,,,,,,"08/Jun/10 2:55 PM;dbosanac;This was intent behavior as proxy connector was first made for use with fanout protocol and the intention was to fanout messages to the local broker as well.

I added new a property (proxyToLocalBroker) to the <proxyConnector> which allows more control over this behavior. It's on by default, but you can turn it off by setting 

{code}
<proxyConnector proxyToLocalBroker=""false"" bind=""tcp://0.0.0.0:61616"" remote=""failover:(tcp://host1:61616,tcp://host2:61616)""/>
{code}",,,,,,,,,,,,,,,,,,,
"ActiveMQMessageConsumer incorrectly regards replayed message as a duplicate, logging 'ignoring (auto acking) duplicate', when failover: transport is used.",MB-673,12516094,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,ade1,ade1,25/May/10 4:41 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,14/Jun/10 5:46 PM,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,java client,,,0,,"Using a simple QueueConsumer and CLIENT_ACKNOWLEDGE with session.recover(), we see that the redelivery of the message from the broker is incorrectly regarded as a duplicate. This has the drastic effect that the redelivery is automatically acknowledged under the covers, instead of being redelivered to application code. The result? The message is lost forever!! Strangely, this behaviour only seems to occur if the 'failover:' protocol is used in the consumer's connection string.

Here's the error we see: 

{code}
DEBUG | ID:lonws014820-3221-1274805153596-0:0:1:1 ignoring (auto acking) duplicate: ActiveMQTextMessage {...
{code}

Here's the code: 

{code}
package replay;

import javax.jms.Connection;
import javax.jms.JMSException;
import javax.jms.Message;
import javax.jms.MessageConsumer;
import javax.jms.MessageListener;
import javax.jms.Queue;
import javax.jms.Session;

import org.apache.activemq.ActiveMQConnectionFactory;

public class QueueConsumer {

  private static String clientIdPrefix = ""consumer"";
  private static String queueName = ""FOO"";

  public static void main(String[] args) throws Exception {
    ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(
        ""failover:(tcp://localhost:61616)"");

    Connection connection = factory.createConnection();
    String clientId = clientIdPrefix;
    connection.setClientID(clientId);

    final Session session = connection.createSession(false,
        Session.CLIENT_ACKNOWLEDGE);

    Queue queue = session.createQueue(queueName);

    MessageConsumer consumer = session.createConsumer(queue);

    consumer.setMessageListener(new MessageListener() {
      public void onMessage(Message message) {
        try {
          if (message.getJMSRedelivered()) {
            System.out.println(""It's a redelivery."");
          } else {
            System.out.println(
                ""Got the message, but calling recover() on the session "" +
                ""to force redelivery."");
          }

          session.recover();
        } catch (JMSException e) {
          // TODO Auto-generated catch block
          e.printStackTrace();
        }
      }
    });

    System.out.println(""Created queue consumer with clientId "" + clientId);
    connection.start();
  }

}
{code} 

To test, simply compile and run the code, and then use the web console to send a message. The JMS consumer will receive the message the first time, then call session.recover, and then regard the redelivery as a duplicate :( 

Note that this does issue is tightly related to the client-side implementation of ActiveMQ 5.3.1-fuse-01-00. The issue does not arise on ActiveMQ 5.3.1-fuse-00-00, or the vanilla ActiveMQ 5.3.1 or 5.3.2 versions on Apache.

",Java 1.6 on Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,7.0,,1|hzkd0f:,179089,,,,,,,,"26/May/10 11:33 AM;ade1;Just to add a little light on this issue, I've noticed that the first redelivery is actually processed correctly: we always see the message ""It's a redelivery"". The problem seems to be occuring when we have the _second_ redelivery. The error might be round calling recover() for a session that only has redelivered messages. 

By the way, the problem doesn't go away if we make the session transactional. We end up just getting a different error message from the following line of code in {{ActiveMQMessageConsumer}}: 

{code:java}
                                LOG.warn(""acking duplicate delivery as poison, redelivery must be pending to another""
                                        + "" consumer on this connection, failoverRedeliveryWaitPeriod="" 
                                        + failoverRedeliveryWaitPeriod + "". Message: "" + md);
{code}
","26/May/10 1:29 PM;garytully;created issue at apache as this fails on trunk and added junit test case that demonstrates and currently fails:
https://issues.apache.org/activemq/browse/AMQ-2751","26/May/10 2:35 PM;garytully;disabling the redelivery delay seems to work around this issue with the test case attached to AMQ-2751.
Add to the test case:{code}        final ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""failover:("" + this.bindAddress + "")"");
        RedeliveryPolicy policy = new RedeliveryPolicy();
        policy.setInitialRedeliveryDelay(0);
        policy.setUseExponentialBackOff(false);
        factory.setRedeliveryPolicy(policy);
{code}

The problem is a race condition between session redelivery and consumer delayed delivery of the same list of unconsumed messages. It only occurs with async delivery. calling consumer.receive() will work around this also.
",26/May/10 2:58 PM;garytully;applied a fix to apache trunk so it will make 5.4. see the resolution to https://issues.apache.org/activemq/browse/AMQ-2751 - note the workarounds above.,26/May/10 2:59 PM;garytully;fixed on 5.4 apache trunk which will be basis for 5.4-fuse,"26/May/10 3:27 PM;ade1;Nice work Gary! 

Quick thought: I tried to disable the redelivery policy using the URI below, but I still see the error. Have I missed something? 

{code}
failover:(tcp://localhost:61616)?initialReconnectDelay=0&useExponentialBackOff=false
{code}
",26/May/10 3:49 PM;garytully;what you want is:{code}failover:(tcp://localhost:61616)?jms.redeliveryPolicy.initialRedeliveryDelay=0&jms.redeliveryPolicy.useExponentialBackOff=false{code},,,,,,,,,,,,,
KahaDB not cleaning old data files,MB-671,12516092,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,joe.luo,joe.luo,joe.luo,18/May/10 9:57 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,26/May/10 11:28 AM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Here is an Apache JIRA raised for the problem: https://issues.apache.org/activemq/browse/AMQ-2736,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2736,,,,0.0,1.0,,1|hzkcu7:,179061,,,,,,,,26/May/10 11:28 AM;joe.luo;It seems that it had been fixed in 5.3.1-fuse-01-00 version.,,,,,,,,,,,,,,,,,,,
Possible CSRF attack error received when selecting purge/delete links in the ActiveMQ Admin console,MB-670,12516091,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,dbosanac,socallag,socallag,17/May/10 11:11 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,,5.3.1-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"On selecting to Purge a queue the following URL is returned:

http://localhost:8161/admin/purgeDestination.action?JMSDestination=TEST.FOO&JMSDestinationType=queue&secret=d639b715-9ffb-48d4-b6ff-9bfd8ba62880.

The exception is:

HTTP ERROR: 500

Possible CSRF attack
RequestURI=/admin/purgeDestination.action

Caused by:

java.lang.UnsupportedOperationException: Possible CSRF attack
	at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:58)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:184)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:854)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:807)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:501)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:693)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1124)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:864)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:533)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:207)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:403)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)
Powered by Jetty://
",,,,,,,,,,,,,,,17/May/10 11:12 AM;socallag;activemq-dev2402.xml;https://issues.jboss.org/secure/attachment/12368764/activemq-dev2402.xml,21/May/10 9:10 PM;dbosanac;dev2402.zip;https://issues.jboss.org/secure/attachment/12368766/dev2402.zip,08/Jun/10 4:21 PM;dbosanac;mb670.zip;https://issues.jboss.org/secure/attachment/12368773/mb670.zip,17/May/10 11:12 AM;socallag;webconsole.properties;https://issues.jboss.org/secure/attachment/12368765/webconsole.properties,,,,,,,,,,,,,,,,,,,,,,,4.0,7.0,,1|hzkecf:,179305,,,,,,,,17/May/10 11:12 AM;socallag;Files used when starting the broker.,"21/May/10 9:10 PM;dbosanac;Hi Sean,

can you try files attached in the dev2302.zip archive? They contain modified activemq-dev2402.xml to include adapted jetty.xml which secures console correctly (see http://fusesource.com/issues/browse/MB-666 for more details).

I couldn't reproduce the error with these files and 5.3.1-00-01 broker.","24/May/10 8:39 AM;socallag;Hi Dejan,

Thanks, I think my setup might not be correct can you send me on the credentials.properties and webconsole.properties that you use?
I can logon to the console using the user and password I've defined in webconsole.properties:

system:ev3rstr3am: amqAdmin,

However when I try to create I get an exception and also when I hit purge the same:

java.lang.UnsupportedOperationException: Possible CSRF attack occurs.

Regards,

Sean.","08/Jun/10 9:09 AM;dbosanac;Hi Sean,

I just tried it on a clean 5.3.1-01-00 install, with files from dev-2402.zip.

I copied missing webconsole.properties manually and started a broker with

bin/acitvemq xbean:conf/activemq-dev2402.xml

and everything seems to work fine.

Can you try it on a fresh install and describe step-by-step how do you reproduce it.

Thanks,
Dejan","08/Jun/10 12:31 PM;socallag;Hi Dejan,

I have tried a fresh install of 5.3.1-01-00.

Using the activemq-dev2402.xml file and copied in the webconsole.properties I get the exception below on starting the broker:


 INFO | Connector vm://localhost Stopped
 INFO | Connector vm://localhost Started
 WARN | Failed to add Connection
java.lang.SecurityException: User name or password is invalid.
        at org.apache.activemq.security.SimpleAuthenticationBroker.addConnection(SimpleAuthenticationBroker.java:52)
        at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
        at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:683)
        at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:303)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:219)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Do you see this?

Sean.
","08/Jun/10 4:21 PM;dbosanac;Hi Sean,

strangely no. It's probably due to the security plugins configured in the file. Just for the sake of easier testing I created a new archive with everything included and broker security disabled) - mb670.zip.

Can you try it out?

Thanks,
Dejan","09/Jun/10 10:13 AM;socallag;Hi Dejan,

Using that config all seems to work okay. 

Thanks,

Sean.",,,,,,,,,,,,,
Message Broker Stops Dispatching from Queues,MB-668,12516089,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,rajdavies,rajdavies,10/May/10 8:29 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,31/Aug/10 12:36 PM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,1,,"Application has Two Queues, used for processing persistent messages. There is an inbound Queue and an Oubound Queue - both with multiple consumers, using selectors.
The Queue depth never gets beyond 2-3 messages, until dispatching suddenly stops.",AIX 6.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,11.0,,1|hzkdev:,179154,,,,,,,,"10/May/10 8:36 AM;rajdavies;Core file when broker stopped dispatching. Log appender blocked, Message Store full - probably because dispatching stopped","10/May/10 9:46 PM;garytully;It appears that a concurrent jmx copy operation, via the console may be the problem. This makes a temp change to the maxPageSize that can break dispatch if it happens concurrently with dispatch.

Would there be some admin task that uses the console or jmx to copy some messages by any chance?",07/Jun/10 7:18 PM;terranotsoferma;Hi gary.  I noticed you were the last to comment on this issue. Is there an update?,"09/Jun/10 3:37 PM;garytully;Jack, I would like some feedback on my question about the use of jmx at the time that the problem occurred or the use of jmx programatically.  From analysis of the logs the use of JMX (Jconsole or webconsole) copy seems to be the culprit. I wonder if this can be confirmed from the customer usecase or usage pattern of the application in question?","22/Jul/10 3:53 PM;terranotsoferma;All CVS Carmark's, AMQ and ESB instances are monitored by HP SiteScope using a JMX interface similar to JConsole.  The HP SiteScope monitors (polls) every couple of minutes to check in statistics like queue depths, Heap Sizes, Component States, and number of open sockets, etc.

Specificall for the CVS ESP (Enterprise Service Platform) the AMQ broker dtopped accepting new messages even when hundreds of publishers were attached trying to enqueue.

Question:  Can you help CVS understand why concurrent JMX operations lead to a hung state in a lightly loaded broker?","22/Jul/10 4:51 PM;garytully;So the problem is only with the use of the attribute on a destination view, maxPageSize, A change to this while dispatch is in operation can lead to dispatch stopping, which seems to be the case from the analysis of the logs.
A JMX copy/move/ operation changes this attribute as part of normal operation so this is the most likely culprit, but as the attribute exposed in read/write mode on the DestinationView any tool that can change those attributes could be involved.

In any event, we need to fix this concurrency bug around the maxPageSize attribute, but It would be great to know if it is probable that via JMX, either that attribute was set or a copy or move operation was executed on that broker.


",22/Jul/10 6:00 PM;terranotsoferma;The change in maxPageSize was dont via JMX after the hung condition manifested itself (Rob suggested it during troubleshooting).  The only other thing we do with JMX is monitor so I dont think the sitescope tools would be doing a copy or move?,23/Jul/10 2:43 PM;garytully;That explains why the broker got into the non recoverable state it was in but it does not help understand the original root cause. What information have we from before the JMX maxPageSize operation was invoked?,26/Jul/10 3:17 PM;terranotsoferma;Just what was in the submitted logs.  This really is an issue here as everything is monitored with JMX and if there a chance that the monitoring is somehow stoping messaging then we need to figure that out.,"26/Jul/10 3:51 PM;garytully;We can address the issue with concurrent access to maxPageSize via JMX and dispatch in the 5.4 release but from your comments it looks like this is not the root cause. I have opened http://fusesource.com/issues/browse/MB-706 to track this for 5.4.

To do more analysis we need some more thread dumps and logs from a broker that gets into this state, or a test case that can reproduce the hung scenario.
I need to do one more pass of the existing logs to ensure there is nothing useful being overlooked.","29/Jul/10 2:33 PM;garytully;Jeff yes, that looks like the sort of information we need. Essentially a collection of periodic thread dumps from the broker when the hang occurs.

Jack, can you try and pull together the relevant information, logs and thread dumps that are relevant to a given event, there seems to be information scattered across a bunch of jira issues. We need to make sure we are analyzing the correct latest information.",,,,,,,,,
"Multiple send from onMessage can hang through failover, variant of AMQ-2645",MB-667,12516088,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,07/May/10 8:13 AM,08/May/10 12:03 AM,29/Nov/16 4:16 PM,08/May/10 12:03 AM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,broker,,,0,,"http://fusesource.com/forums/thread.jspa?messageID=6561&#6561

The fix on trunk does not apply to the 5.3.1 branch so an alternative is needed.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2645,,,,0.0,1.0,,1|hzkcrz:,179051,,,,,,,,08/May/10 12:03 AM;garytully;fix applied in r13518,,,,,,,,,,,,,,,,,,,
Purge in Jconsole could cause CPU spinning,MB-662,12516083,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,22/Apr/10 11:20 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,22/Apr/10 1:06 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,,,,0,,"If we send a message to a composite destination say, ""audit,audit"", Fuse Message Broker detects the duplicate message. However, it is not handled correctly.  

For instance, if I send 100 messages to the composite queue (""audit,audit""), the ""audit"" queue's queueSize shows 200 messages. As a matter of fact, the real size should be 100 instead. If I try to purge the queue via JMX, say,  do ""purge"" operation via Jconsole, Fuse Message Broker begins an infinite loop and cause CPU spinning. ",,,,,,,,,,,,,,,22/Apr/10 11:27 AM;joe.luo;mb-662.zip;https://issues.jboss.org/secure/attachment/12368763/mb-662.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2323,,,,1.0,2.0,,1|hzkclr:,179023,,,,,,,,"22/Apr/10 11:27 AM;joe.luo;1. unzip it to <Fuse MB install dir>;
2. send messages to broker by ""ant producer"";
3. start jconsole and navigate to the ""audit"" queue, then do ""purge"" operation on the queue.",22/Apr/10 1:06 PM;dbosanac;Resolved and merged to 5.3.1-fuse branch.,,,,,,,,,,,,,,,,,,
NullPointerException in  WriteoutTimer,MB-661,12516082,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,22/Apr/10 10:54 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,18/May/10 3:25 PM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,,,,1,,"

2010-04-12 18:17:03,159 ERROR org.apache.activemq.transport.WriteTimeoutFilter$TimeoutThread.run(WriteTimeoutFilter.java:177) [WriteTimeoutFilter-Timeout-1] - WriteTimeout thread unable validate existing sockets.
java.lang.NullPointerException: null

Did some looking and the issue is most certainly with getWriter() on WriteTimeoutFilter. It calls narrows(TcpBufferedOutputStream.class) on its transport. If you look at the StompNIOTransport there is no narrow() method so it inherits from TcpTransport. TcpTransport returns a cast of buffOut when TcpBufferedOutputStream.class is passed as an argument.

Looking at buffOut its initially set to null and then initialized later in initializeStreams() method in TcpTransport. However, StompNIOTransport overrides initializeStreams() and doesn't set buffOut to anything.

So thats the NPE, just not sure what the fix is to get this working with NIO.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkd27:,179097,,,,,,,,18/May/10 3:21 PM;garytully;relevant issue at apache: https://issues.apache.org/activemq/browse/AMQ-2737,18/May/10 3:25 PM;garytully;This will make the fuse 5.4 release,17/Jun/10 10:43 AM;garytully;we are about 5 weeks out from 5.4 so if that time frame is ok we are in business.,,,,,,,,,,,,,,,,,
Messages to composite destinations don't get sent to all queues on the slave.,MB-660,12516081,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,stlewis,stlewis,20/Apr/10 7:08 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,27/Apr/10 8:58 AM,5.3.0.6-fuse,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,broker,,,1,,"If you configure a virtual destination up front that sends messages to a couple queues you can see in a pure master/slave setup that the queues on the slave get the correct number of messages.  However, if you send messages from the producer to a composite destination like:

Queue queue = new ActiveMQQueue(""FOO.A,FOO.B,FOO.C"");
producer.send(queue, someMessage);

Only FOO.A on the slave will have messages in it, FOO.B and FOO.C get created but won't contain any messages.

To reproduce start up two brokers using the attached configuration:

./bin/activemq xbean:activemq-master.xml
./bin/activemq xbean:activemq-slave.xml

Then run the example producer like:

ant producer -Dtopic=false -Durl=tcp://localhost:61612 -Dsubject=QUEUE1.BAR,QUEUE2.BAR,QUEUE3.BAR -Dmax=10

If you then use JConsole you'll see on the master that all 3 queues have an enqueue count of 10.  However on the slave broker only QUEUE1.BAR has an enqueue count of 10, the other two queues have an enqueue count of 0.",,,,,,,,,,,,,,,20/Apr/10 7:08 PM;stlewis;activemq-master.xml;https://issues.jboss.org/secure/attachment/12368760/activemq-master.xml,20/Apr/10 7:08 PM;stlewis;activemq-slave.xml;https://issues.jboss.org/secure/attachment/12368761/activemq-slave.xml,21/Apr/10 1:01 PM;stlewis;test-case.txt;https://issues.jboss.org/secure/attachment/12368762/test-case.txt,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2183,,,,3.0,3.0,,1|hzkcmf:,179026,,,,,,,,"21/Apr/10 1:01 PM;stlewis;Here's a unit test that reproduces the problem against 5.4-SNAPSHOT at Apache, am looking into it further as well.",21/Apr/10 2:10 PM;stlewis;Looks like the problem is because the messages destined for QUEUE2.VAR and QUEUE3.BAR get detected as duplicates and dropped.  This is because in ActiveMQMessageAudit.java only the message ID is taken into account.  As in this case the same exact message is going onto two different queues the check fails.  If I fudge the check to just return false all the time the attached test case will pass.,27/Apr/10 8:58 AM;dbosanac;Fixed and merged to fuse branch.,,,,,,,,,,,,,,,,,
Bug in PooledConnectionFactoryBean in version 5.3.1-fuse-00-00,MB-659,12516080,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,dbosanac,ubhole,ubhole,15/Apr/10 10:03 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,20/Apr/10 3:47 PM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,broker,,,1,,"This class do not extends anymore FactoryBean, InitializingBean, DisposableBean.
Upgrading the library from 5.3.0-fuse-01-00 on client application, generates this error on Spring initialize

Caused by: java.lang.IllegalStateException: Cannot convert value of type [org.apache.activemq.pool.PooledConnectionFactoryBean] to required type [javax.jms.ConnectionFactory] for property 'connectionFactory': no matching editors or conversion strategy found
at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:291)
at org.springframework.beans.TypeConverterDelegate.convertIfNecessary(TypeConverterDelegate.java:155)
at org.springframework.beans.BeanWrapperImpl.convertForProperty(BeanWrapperImpl.java:461)
... 47 more
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2702,,,,0.0,2.0,,1|hzkcmn:,179027,,,,,,,,"20/Apr/10 11:10 AM;garytully;it looks like all of the impls that the pooledconnectonfactorybean creates can be directly instantiated, there is no magic (only a little logic) in the factory bean - think it is good to have that logic explicit in the config in any event so it is clear that an xa or jca or plain pool is being used.","20/Apr/10 3:47 PM;dbosanac;This has been done by mistake in 5.3.1 release. The change is now reverted in 5.3.1-fuse branch. As for the Apache, in 5.4 the class will be moved in a separate activemq-spring module",,,,,,,,,,,,,,,,,,
Transport connector throws SSL exception when network connector is configured to failover over ssl transport,MB-658,12516079,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,stlewis,stlewis,13/Apr/10 5:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,29/Apr/10 4:53 PM,5.3.0.6-fuse,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,broker,,,0,,"Basically it looks like you can't configure a static network connector that combines failover and ssl, the attach shows the issue nicely, just follow the Readme.txt in the attached archive.",,,,,,,,,,,,,,,13/Apr/10 5:39 PM;stlewis;test-case.tar.gz;https://issues.jboss.org/secure/attachment/12368758/test-case.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzkcp3:,179038,,,,,,,,"28/Apr/10 12:37 PM;garytully;networkconnectors do their own retries at the moment so there are some issues with failover and networkconnectors, in particular a duplex connector with failover and the target broker being down at startup will hang till that target is started.
Also the mbeans are a problematic. 

When the target broker is alive on startup thinks are ok for static:failover:tcp and I see the problem with static:failover:ssl but this use case opens a bunch off issues for the independent start case..

I think a networkConnector with a composite url would possibly have the same effect as using the failover transport. need to do some research, was that tried and was unsuccessful already?","28/Apr/10 12:46 PM;stlewis;Yeah, taking failover out of the picture makes this work, as does taking ssl out of the picture.  It's the combination of failover and ssl that appears to be problematic.",28/Apr/10 1:11 PM;garytully;opened https://issues.apache.org/activemq/browse/AMQ-2715 to track and fix this.,29/Apr/10 4:53 PM;garytully;fix on 5.3.1-fuse-branch r13474,,,,,,,,,,,,,,,,
VM Transport and BrokerService threads deadlock under a very high load.,MB-657,12516078,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,,socallag,socallag,13/Apr/10 1:10 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,5.3.0.6-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Found one Java-level deadlock:
=============================
""BrokerService"":
  waiting for ownable synchronizer 0x00007fe50b649620, (a java.util.concurrent.locks.ReentrantLock$NonfairSync),
  which is held by ""VMTransport""
""VMTransport"":
  waiting to lock monitor 0x0000000040466ec0 (object 0x00007fe50b7d3230, a org.apache.activemq.broker.region.Queue$2),
  which is held by ""BrokerService""

Java stack information for the threads listed above:
===================================================
""BrokerService"":
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00007fe50b649620> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:747)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued(AbstractQueuedSynchronizer.java:778)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire(AbstractQueuedSynchronizer.java:1114)
	at java.util.concurrent.locks.ReentrantLock$NonfairSync.lock(ReentrantLock.java:186)
	at java.util.concurrent.locks.ReentrantLock.lock(ReentrantLock.java:262)
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1184)
	- locked <0x00007fe50b7d3230> (a org.apache.activemq.broker.region.Queue$2)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1342)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:399)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:369)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:468)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:461)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00007fe50cfa13f8> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:713)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:159)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	- locked <0x00007fe50cfa16f8> (a java.lang.Object)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1222)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:807)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:844)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)
""VMTransport"":
	at org.apache.activemq.broker.region.Queue.iterate(Queue.java:1107)
	- waiting to lock <0x00007fe50b7d3230> (a org.apache.activemq.broker.region.Queue$2)
	at org.apache.activemq.broker.region.Queue.wakeup(Queue.java:1342)
	at org.apache.activemq.broker.region.Queue.doDispatch(Queue.java:1436)
	- locked <0x00007fe51b0c1e08> (a java.util.ArrayList)
	at org.apache.activemq.broker.region.Queue.removeSubscription(Queue.java:432)
	- locked <0x00007fe50bb21010> (a java.util.ArrayList)
	at org.apache.activemq.broker.region.AbstractRegion.removeConsumer(AbstractRegion.java:328)
	at org.apache.activemq.broker.region.RegionBroker.removeConsumer(RegionBroker.java:398)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:114)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:114)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:114)
	at org.apache.activemq.broker.BrokerFilter.removeConsumer(BrokerFilter.java:114)
	at org.apache.activemq.broker.MutableBrokerFilter.removeConsumer(MutableBrokerFilter.java:121)
	at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:576)
	at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:76)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
	at java.lang.Thread.run(Thread.java:619)

Found 1 deadlock.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkckn:,179018,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ-2461 fix was not merged into 5.3.1-fuse branch,MB-656,12516077,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,13/Apr/10 11:30 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,13/Apr/10 12:56 PM,5.3.1-fuse-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"The fix for https://issues.apache.org/activemq/browse/AMQ-2461 was only merged to trunk but not the 5.3.1-fuse branch. As a result, the new release of 5.3.1-fuse-00-00 does not have the fix. 

We need to merge the fix to 5.3.1-fuse branch to make sure next patched release of 5.3.1-fuse will have the fix. ",Fuse MB 5.3.1-fise-00-00,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2461,,,,0.0,1.0,,1|hzkcjz:,179015,,,,,,,,13/Apr/10 12:56 PM;dbosanac;Merged to 5.3.1-fuse branch,,,,,,,,,,,,,,,,,,,
Multiple duplicate messages and extra durable subscription created after a broker in a network of brokers is restarted.,MB-655,12516076,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,stlewis,stlewis,01/Apr/10 6:28 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,10/May/10 3:15 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,broker,,,0,,"So the setup of the network of brokers is like so:

A connects to D, B
B connects to A, C
C connects to B, D
D connects to C, A

We're trying to track down the reason for ""WARN MessageDatabase - Duplicate message add attempt rejected."" but have run into this behavior as part of this effort.  So I'm going to attach 4 broker configuration files that sets up the above network.  You first need to start 4 brokers using the following commands (relative to your activemq installation):

./bin/activemq xbean:brokerA.xml
./bin/activemq xbean:brokerB.xml
./bin/activemq xbean:brokerC.xml
./bin/activemq xbean:brokerD.xml


Then connect a durable subscriber to each using the example consumer:

brokerA consumer:
ant consumer -Durl=tcp://localhost:61616 -Dtopic=true -Ddurable=true -DclientId=consumerA -Dmax=1000000

brokerB consumer:
ant consumer -Durl=tcp://localhost:61618 -Dtopic=true -Ddurable=true -DclientId=consumerB -Dmax=1000000

brokerC consumer:
ant consumer -Durl=tcp://localhost:61620 -Dtopic=true -Ddurable=true -DclientId=consumerC -Dmax=1000000

brokerD consumer:
ant consumer -Durl=tcp://localhost:61622 -Dtopic=true -Ddurable=true -DclientId=consumerD -Dmax=1000000


Then finally in another window run a producer and send one message:

ant producer -Durl=tcp://localhost:61616 -Dtopic=true -Dmax=1


The consumers connected to brokers B, C and D will each receive the same message twice, while the consumer connected to A will only receive 1 message (not sure the duplicates are okay here, could be given there's two network connectors for each broker).

Now, restart broker A gracefully with a CTRL-C and restart it.  You'll see for some reason it's created a durable subscriber for the network connector, as you'll get this exception:

javax.jms.JMSException: Durable consumer is in use for client: NC_brokerB_inbound_brokerA and subscriptionName: brokerA_TEST.FOO

Once it's connected back to the other brokers just run the producer again to send 1 message.  The consumers connected to B and D will each receive the same message 25 times and the consumer connected to C will receive the message 14 times.  

Also If you look at broker A in jconsole you'll see that there's a durable subscription created for each network connector (for some reason) before doing anything else.",,,,,,,,,,,,,,,01/Apr/10 6:29 PM;stlewis;broker_configs.tar.gz;https://issues.jboss.org/secure/attachment/12368759/broker_configs.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,8.0,,1|hzkcsf:,179053,,,,,,,,"01/Apr/10 6:32 PM;stlewis;Also of note, this gets worse as you restart more brokers.  For example in some initial testing I did I restarted all 4 brokers, restarted all the consumers and then sent 10000 messages in with a producer.  After a good 10 minutes of waiting for the consumers to stop getting duplicates (the producer finished fairly quickly) I killed everything.","02/Apr/10 5:28 PM;garytully;I can see a duplicate durable subscription after a network broker restart, it should not be the case. I don't immediately see the culprit though so will have to do some more investigation on tuesday.
The durable sub created on the networked broker should have a broker path that identifies the originator and destination broker, when this subscription is replayed via the advisories on restart it should be suppressed but is not atm, which leads to a bogus duplicate subscription. ","09/Apr/10 2:38 PM;garytully;I have created and resolved https://issues.apache.org/activemq/browse/AMQ-2691 that resolves this issue with duplicate message add attempts and duplicate delivery on restart.
Would it be possible to get some feedback on this change.
We are currently in lock down mode with the 5.3.1-fuse-00-00 release, but after monday next I will be able to merge the fixes into fuse so that a 5.3.1-fuse-00-SNAPSHOT will have them.
In the mean time, they are available in the newly deployed apache 5.4-SNAPSHOT.

btw: the networkTTL of 6 is quite large, I wonder why that is changed from the default value 1",09/Apr/10 2:55 PM;stlewis;Thanks Gary!,30/Apr/10 12:20 PM;garytully;fyi: some additional feedback on DEV-2294 ,06/May/10 9:18 AM;garytully;teeing up for next release.,"06/May/10 11:47 AM;garytully;Relevant fixes merged to  fuse 5.3.1 branch for 5.3.1-fuse-01-00
 - https://issues.apache.org/activemq/browse/AMQ-2691
 - https://issues.apache.org/activemq/browse/AMQ-2704
 - https://issues.apache.org/activemq/browse/AMQ-2720

Snapshot is available at http://repo.fusesource.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.3.1-fuse-SNAPSHOT/",10/May/10 3:15 PM;garytully;James came back with some good feedback that the issue is now resolved. Fix will be in the official  5.3.1-fuse-01-00,,,,,,,,,,,,
org.apache.activemq.pool.ConnectionPool maintains stale connections when Client Connections Attempt to Connect before Broker is started,MB-654,12516075,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,01/Apr/10 7:34 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,26/Apr/10 12:13 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,,,,0,,http://issues.apache.org/activemq/browse/AMQ-2677,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2677,,,,0.0,2.0,,1|hzkcon:,179036,,,,,,,,26/Apr/10 12:13 PM;dbosanac;fix merged into 5.3.1-fuse branch,"28/Apr/10 3:16 PM;dbosanac;Hi Matt,

just confirmed that the plan is to with 5.3.1-fuse-01-00 release in the next esb 4.2 release. So it looks ok.

Thanks,
Dejan",,,,,,,,,,,,,,,,,,
Messages out of order despite creating exclusive MessageConsumers ,MB-653,12516074,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,30/Mar/10 9:58 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,05/May/10 10:28 AM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-01-00,,,,,,,0,,"
/**
 * <p>This test opens a broker listening at {@link #BROKER_URL}, and sends
 * thirty messages to the queue named {@link #QUEUE_NAME} on that broker. It
 * then reads back those thirty messages, using a prefetch limit of 10,
 * disconnecting and re-connecting every ten messages. It demonstrates that the
 * messages arrive of order: messages that were prefetched once, but never
 * actually read, are treated by the broker as though they had been read but not
 * acknowledged, so that they arrive late, and usually with the redelivered flag
 * set. (Also, occasionally a few messages will seem to be only ""partially""
 * prefetched: they will arrive late, but before the other prefetched messages,
 * and without their redelivered flag set.)</p>
 *

Note if prefetch limit set to zero then messages will be delivered in order...
",,,,,,,,,,,,,,,30/Mar/10 9:59 AM;socallag;OutOfOrderTestCase.java;https://issues.jboss.org/secure/attachment/12368757/OutOfOrderTestCase.java,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2719,,,,1.0,1.0,,1|hzkcpr:,179041,,,,,,,,"05/May/10 10:28 AM;dbosanac;I've fixed the problem reproduced by this test case and merged the change to the fuse branch. The problem is not related to exclusive consumer, but to the order in which redelivered messages are redispatched. The important thing to note is that exclusive consumer doesn't have any particular effect in a single consumer scenario and it doesn't provide any additional ordering guarantees over the ""regular"" consumer in that case.",,,,,,,,,,,,,,,,,,,
Topic Memory usage creep with constant pending message strategy and a file pending message cursor,MB-652,12516073,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,stlewis,stlewis,29/Mar/10 7:24 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,31/Aug/10 2:16 PM,5.3.0.5-fuse,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2626,,,,0.0,1.0,,1|hzkdfb:,179156,,,,,,,,31/Aug/10 2:16 PM;garytully;This issues is resolved in 5.4.0-fuse-00-00 which is in ESB 4.3.0-fuse-00-00 ,,,,,,,,,,,,,,,,,,,
Fuse MB slave in shared filesystem master/slave setup reports Slave=false in JMX,MB-650,12516071,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,23/Mar/10 3:01 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,25/Mar/10 2:20 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.1-fuse-01-00,,,broker,,,0,,"If you set up a shared filesystem master/slave, start the master, start the slave and then point JConsole at the slave the ""Slave"" attribute of the broker mbean is set to ""False"", same as the master.  So it's not as straightforward as it should be to figure out via JMX whether or not an instance of the broker is a slave or not.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2669,,,,0.0,3.0,,1|hzkcr3:,179047,,,,,,,,"24/Mar/10 5:01 PM;garytully;This is a follow on from http://fusesource.com/issues/browse/MB-590 - I guess it is after the fix for MB-590 that this jmx attribute is visible.
MB-590 needs to go into a SMX release, is the same true for this issue?
","24/Mar/10 5:23 PM;stlewis;Yup, needs to go into 3.4.0.5 and the service pack for 4.2, thanks Gary!",25/Mar/10 2:20 PM;dbosanac;Fixed and merged in both 5.3.0-fuse and 5.3.1-fuse branches,,,,,,,,,,,,,,,,,
Cross-site scripting vulnerability in web console,MB-648,12516070,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,dbosanac,dbosanac,22/Mar/10 11:07 AM,07/May/10 11:20 AM,29/Nov/16 4:16 PM,22/Mar/10 1:12 PM,5.3.0.5-fuse,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.1-fuse-01-00,,,,,,0,,Merge https://issues.apache.org/activemq/browse/AMQ-2613 to relevant fuse branches,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2613,,,,0.0,1.0,,1|hzkcrj:,179049,,,,,,,,22/Mar/10 1:12 PM;dbosanac;The fix is now merged into 5.3.0-fuse and 5.3.1-fuse branches,,,,,,,,,,,,,,,,,,,
Space character inserted before subscriptionID in durable subscription info,MB-646,12516067,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,,stlewis,stlewis,17/Mar/10 4:08 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Mar/10 4:38 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,See [AMQ-2654|https://issues.apache.org/activemq/browse/AMQ-2654],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2654,,,,0.0,0.0,,1|hzkcgf:,178999,,,,,,,,,,,,,,,,,,,,,,,,,,,
Messages not delivered due to deadlock,MB-645,12516066,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Cannot Reproduce Bug,,hzbarcea1,hzbarcea1,16/Mar/10 8:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Dec/10 2:29 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"A deadlock prevents sending messages and they are left in the queue in a scenario where transactions are used and the consumer sends messages back to the same broker (different queue though) within the same transaction.

A bunch of messages like below are present in the log. See attachments to original issue.
{code}
2010-02-22 12:01:06,927 [Q Cleanup Timer] WARN  JDBCPersistenceAdapter         
- Old message cleanup failed due to: com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction
2010-02-22 12:06:08,936 [Q Cleanup Timer] WARN  JDBCPersistenceAdapter         
- Old message cleanup failed due to: com.mysql.jdbc.exceptions.jdbc4.MySQLTransactionRollbackException: Deadlock found when trying to get lock; try restarting transaction
{code}","OpenJDK Runtime Environment (IcedTea6 1.4.1) (6b14-1.4.1-0ubuntu11)
OpenJDK Server VM (build 14.0-b08, mixed mode)
Glassfish 2.1.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkdzz:,179249,,,,,,,,"19/Mar/10 3:40 PM;garytully;This seems to be a case of https://issues.apache.org/activemq/browse/AMQ-2551 where there is a workaround but it is not fixed yet. See the comments on the jira for the workaround detail.
If this workaround does the trick we are on to something.",,,,,,,,,,,,,,,,,,,
jms.useAsyncSend=true option does not appear to work with failover transport,MB-644,12516065,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,16/Mar/10 2:30 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,11/Feb/11 4:12 PM,5.3.0.5-fuse,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"failover:(tcp://localhost:61616)?jms.useAsyncSend=true

works (or at least does not hang; I haven't validated the async send part)

failover:(tcp://localhost:61616?jms.useAsyncSend=true)

does not work - causes the ConnectionFactory to hand unless a failover...?timeout=xxxx has been set

Why does it only work as a failover parameter? Its not intuitive to the developer that this is what must be done.

Would be good to fix, or at a minimum update the documentation to flag this usage...",,,,,,,,,,,,,,,16/Mar/10 2:30 PM;socallag;asyncSendTestCase2.tar.gz;https://issues.jboss.org/secure/attachment/12368750/asyncSendTestCase2.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkebb:,179300,,,,,,,,"25/Jan/11 10:29 AM;socallag;BQ:Medium raised sometime back by Scott, I just tested against latest 5.4.2 and test still fails. Seán","28/Jan/11 5:31 PM;garytully;Some info that can feed into the doc.
asyncSend is about not waiting for a reply to a send, so that there can be pending sends, but it still blocks to do the send, which may be dependent on the failover reconnect.
There is a jms.sendTimeout option that you can use that will ensue that a send will not block for ever, you get an exception if the time expires. would that suffice?

The timeout on the failover transport is configuring something different, the failover retry limit.",11/Feb/11 4:12 PM;garytully;may need a doc issue. no code problem.,,,,,,,,,,,,,,,,,
Advisory for discarded should indicate the consumer id that missed the message to allow correlation of missed messages with DLQ for example,MB-642,12516063,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,stlewis,stlewis,25/Feb/10 6:44 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,31/Aug/10 2:19 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2628,,,,0.0,1.0,,1|hzkdfr:,179158,,,,,,,,31/Aug/10 2:19 PM;garytully;this issues is resolved in 5.4.0-fuse-00-00 which is in ESB 4.3.0-fuse-00-00,,,,,,,,,,,,,,,,,,,
Tidy up store duplicate suppression from failover recovery - consistent store implementation with help from transportConnection,MB-640,12516062,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,socallag,socallag,19/Feb/10 3:08 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Opening this for corresponding Apache AMQ-2542,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2542,,,,0.0,0.0,,1|hzkcfr:,178996,,,,,,,,,,,,,,,,,,,,,,,,,,,
Auto acknowledged session does not redeliver message in case of exception.,MB-639,12516060,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ubhole,ubhole,19/Feb/10 2:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,30/Apr/10 12:02 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0-fuse-01-00,,,,broker,,,0,,"When AUTO_ACKNOWLEDGE in asynchronous delivery mode is used FUSE MB 5.3.0.5 doesn't try to redeliver message in case of RuntimeException being thrown from onMessage() message listener. 

I am attaching a Test case here That shows message is being removed from ""testqueue"" once the connection is closed (even though message listener has thrown Runtime Exception). I confirmed this with JConsole where once the connection is close the dequeue count rises and the message is no longer on queue. 

",,,,,,,,,,,,,,,19/Feb/10 2:39 PM;ubhole;jmsTest.zip;https://issues.jboss.org/secure/attachment/12368749/jmsTest.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkcpb:,179039,,,,,,,,"24/Mar/10 4:54 PM;garytully;The apache issue https://issues.apache.org/activemq/browse/AMQ-906 resolves this but it is only on 5.4 (trunk). This would be a nice candidate for 5.3.1-fuse-00.
Would that version be acceptable?",,,,,,,,,,,,,,,,,,,
Inner class onMessage method not called when system tests executed on ubuntu machines,MB-638,12516059,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,rajdavies,mpc755,mpc755,18/Feb/10 11:01 PM,18/Feb/10 11:02 PM,29/Nov/16 4:16 PM,18/Feb/10 11:02 PM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"The onMessage in the inner TopicHandler class within org.fusesource.meshkeeper.distribution.event.jms.JMSEventClient was not being called when the NetworkFailureTest was executed using the CloudMix/Meshkeeper distributed test environment on the vm-fuseubtNN machines.

I created a listener on the constructor and created an onMessage method in the main class for the same topic a listener was created for in the TopicHandler class and the messages were received by the onMessage method in the main class.

The problem was resolved by correcting the activemq plug-in version in MeshKeeper from 5.3.0 to 5.4.0-fuse-SNAPSHOT but there still appears there may be a defect in 5.3.0. The brokers were started on a remote host using 5.4.0-fuse-SNAPSHOT so there may be a compatibility issue between the 5.3.0 client and a 5.4.0-fuse-SNAPSHOT broker but this still doesn't answer why I was able to receive the message in the onMessage method I created in the main class.

I'm entering and closing this defect as a place holder in case a customer sees something similar. I'm closing because I don't think it is worth developments time to go back and fix a 5.3.0 issue which seems to only occur in this ubuntu environment.

To reproduce: Start a cloudmix control server and agent on vm-fuseubt1 or vm-fuseubt3. Reset the activemq plugin version in MeshKeeper to 5.3.0. Execute the system tests from a PC.",vm-fuseubtNN machines executing cloudmix/meshkeeper environment. NetworkFailureTest running from my pc.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkcf3:,178993,,,,,,,,18/Feb/10 11:02 PM;mpc755;Closing as this issue seems to only appear on the ubuntu machines using a 5.3.0 activemq client. Entered as place holder in case customers run into a similar issue.,,,,,,,,,,,,,,,,,,,
"""java.lang.NoSuchMethodError: org.apache.activemq.broker.Broker.getTempDataStore()Lorg/apache/activemq/kaha/Store;"" in amq-sys-test NetworkFailureTest",MB-637,12516058,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,mpc755,mpc755,02/Feb/10 6:05 PM,02/Feb/10 10:02 PM,29/Nov/16 4:16 PM,02/Feb/10 10:02 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"The following exception is occurring in the TeamCity amq-sys-test activemq-trunk builds across all platforms.

[12:35:37]: -------------------------------------------------------
[12:35:37]:  T E S T S
[12:35:37]: -------------------------------------------------------
[12:35:37]: Running com.iona.cpi.failure.http.HttpLoadTest
[12:35:38]: 12:35:38 INFO  ManagementContext: JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
[12:35:38]: 12:35:38 INFO  PListStore: JobSchedulerStore:target/activemq-data/localhost/tmp_storage started
[12:35:38]: 12:35:38 INFO  BrokerService: Using Persistence Adapter: AMQPersistenceAdapter(target/activemq-data/localhost)
[12:35:38]: 12:35:38 INFO  AMQPersistenceAdapter: AMQStore starting using directory: target/activemq-data/localhost
[12:35:38]: 12:35:38 INFO  AMQPersistenceAdapter: Journal deleted: 
[12:35:38]: 12:35:38 INFO  KahaStore: Kaha Store successfully deleted data directory target/activemq-data/localhost/kr-store/data
[12:35:38]: 12:35:38 INFO  KahaStore: Kaha Store successfully deleted data directory target/activemq-data/localhost/kr-store/state
[12:35:38]: 12:35:38 INFO  KahaStore: Kaha Store using data directory target/activemq-data/localhost/kr-store/state
[12:35:38]: 12:35:38 INFO  AMQPersistenceAdapter: Active data files: []
[12:35:38]: 12:35:38 INFO  BrokerService: ActiveMQ 5.4.0-fuse-SNAPSHOT JMS Message Broker (localhost) is starting
[12:35:38]: 12:35:38 INFO  BrokerService: For help or more information please see: http://activemq.apache.org/
[12:35:38]: 12:35:38 INFO  SchedulerBroker: Scheduler using directory: target/activemq-data/scheduler
[12:35:38]: 12:35:38 INFO  KahaStore: Kaha Store using data directory target/activemq-data/localhost/kr-store/data
[12:35:38]: 2010-02-02 12:35:38.777::INFO:  Logging to STDERR via org.mortbay.log.StdErrLog
[12:35:38]: 2010-02-02 12:35:38.828::INFO:  jetty-6.1.14
[12:35:38]: 2010-02-02 12:35:38.983::INFO:  Started SocketConnector@localhost:61666
[12:35:38]: 12:35:38 INFO  TransportConnector: Connector http://localhost:61666 Started
[12:35:39]: 12:35:39 INFO  BrokerService: ActiveMQ JMS Message Broker (localhost, ID:vm-rhel46-2-60809-1265132138493-0:0) started
[12:35:39]: 12:35:39 INFO  HttpLoadTest: Sleeping for 30 seconds to allow broker to start before creating application context.
[12:36:09]: 12:36:09 INFO  HttpLoadTest: Creating spring context...
[12:36:11]: Exception in thread ""Thread-12"" org.springframework.jms.UncategorizedJmsException: Uncategorized exception occured during JMS processing; nested exception is javax.jms.JMSException: org.apache.activemq.broker.Broker.getTempDataStore()Lorg/apache/activemq/kaha/Store;
[12:36:11]: 	at org.springframework.jms.support.JmsUtils.convertJmsAccessException(JmsUtils.java:308)
[12:36:11]: 	at org.springframework.jms.support.JmsAccessor.convertJmsAccessException(JmsAccessor.java:168)
[12:36:11]: 	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:474)
[12:36:11]: 	at org.springframework.jms.core.JmsTemplate.receiveSelected(JmsTemplate.java:708)
[12:36:11]: 	at org.springframework.jms.core.JmsTemplate.receive(JmsTemplate.java:686)
[12:36:11]: 	at com.iona.cpi.failure.http.HttpLoadTest$Receiver.run(HttpLoadTest.java:90)
[12:36:11]: 	at java.lang.Thread.run(Thread.java:595)
[12:36:11]: Caused by: javax.jms.JMSException: org.apache.activemq.broker.Broker.getTempDataStore()Lorg/apache/activemq/kaha/Store;
[12:36:11]: 	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
[12:36:11]: 	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1273)
[12:36:11]: 	at org.apache.activemq.AdvisoryConsumer.<init>(AdvisoryConsumer.java:50)
[12:36:11]: 	at org.apache.activemq.ActiveMQConnection.ensureConnectionInfoSent(ActiveMQConnection.java:1377)
[12:36:11]: 	at org.apache.activemq.ActiveMQConnection.createSession(ActiveMQConnection.java:303)
[12:36:11]: 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[12:36:11]: 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
[12:36:11]: 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
[12:36:11]: 	at java.lang.reflect.Method.invoke(Method.java:585)
[12:36:11]: 	at org.springframework.jms.connection.SingleConnectionFactory$SharedConnectionInvocationHandler.invoke(SingleConnectionFactory.java:549)
[12:36:11]: 	at $Proxy5.createSession(Unknown Source)
[12:36:11]: 	at org.springframework.jms.support.JmsAccessor.createSession(JmsAccessor.java:196)
[12:36:11]: 	at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:462)
[12:36:11]: 	... 4 more
[12:36:11]: Caused by: java.lang.NoSuchMethodError: org.apache.activemq.broker.Broker.getTempDataStore()Lorg/apache/activemq/kaha/Store;
[12:36:11]: 	at org.apache.activemq.broker.region.TopicSubscription.<init>(TopicSubscription.java:70)
[12:36:11]: 	at org.apache.activemq.broker.region.TopicRegion.createSubscription(TopicRegion.java:263)
[12:36:11]: 	at org.apache.activemq.broker.jmx.ManagedTopicRegion.createSubscription(ManagedTopicRegion.java:44)
[12:36:11]: 	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:258)
[12:36:11]: 	at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:112)
[12:36:11]: 	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:399)
[12:36:11]: 	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
[12:36:11]: 	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
[12:36:11]: 	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
[12:36:11]: 	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:89)
[12:36:11]: 	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
[12:36:11]: 	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)
[12:36:11]: 	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:530)
[12:36:11]: 	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:349)
[12:36:11]: 	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
[12:36:11]: 	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
[12:36:11]: 	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
[12:36:11]: 	at org.apache.activemq.transport.http.HttpTunnelServlet.doPost(HttpTunnelServlet.java:117)
[12:36:11]: 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:727)
[12:36:11]: 	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
[12:36:11]: 	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
[12:36:11]: 	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:363)
[12:36:11]: 	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
[12:36:11]: 	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
[12:36:11]: 	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
[12:36:11]: 	at org.mortbay.jetty.Server.handle(Server.java:324)
[12:36:11]: 	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
[12:36:11]: 	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
[12:36:11]: 	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:741)
[12:36:11]: 	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:213)
[12:36:11]: 	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:403)
[12:36:11]: 	at org.mortbay.jetty.bio.SocketConnector$Connection.run(SocketConnector.java:228)
[12:36:11]: 	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)
",TeamCity amq-sys-test activemq-trunk,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkc9z:,178970,,,,,,,,02/Feb/10 10:02 PM;mpc755;TeamCity Deploy with 'clean check-out' of activemq trunk corrected issue.,,,,,,,,,,,,,,,,,,,
Broker counters off when using CXF client server ,MB-636,12516057,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,26/Jan/10 7:03 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,03/Feb/10 11:08 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"I'm using a CXF SOAP/JMS client and server .. pretty much the out of the box demo with the following modifications:

1) client was modifed to loop on a greetMe and send 100K requests
2) greetMeImpl was modified to send a larger hello reponse.
3) Using temp Queue's for the CXF responses..

Observed:
+ It seems as though all request complete sucessfully from the perspective of the client

+ but in JConsole for the broker seeing:

    + storePercentageUsage increase
    + # of messages queued and dequeued for HELLO.REQ don't match the number of CXF requests sent (far less)
    + It seems some messages are not cleaned up in that the if you set the brokers storeLimit to be 100mb, storePercentageUsage should be > 0 although the queue's are all empty...

Will attach a testcase..

",Fuse MB 5.3.0.5,,,,,,,,,,,,,,26/Jan/10 7:11 PM;davestanley;testcase_cxf_soap_jms.zip;https://issues.jboss.org/secure/attachment/12368747/testcase_cxf_soap_jms.zip,28/Jan/10 7:35 PM;chirino;usage-stablizes.jpg;https://issues.jboss.org/secure/attachment/12368748/usage-stablizes.jpg,,,,,,,,,,,,,,,,,,,,,,,,,2.0,5.0,,1|hzkccf:,178981,,,,,,,,"26/Jan/10 7:11 PM;davestanley;Testcase attached: 

Start instance of 5.3.0.5-fuse broker with attached broker config 

{code}
>./bin/activemq
{code}

Start SOAP/JMS Server
{code}
>mvn -Pserver
{code}

Start SOAP/JMS Client
{code}
>mvn -Pclient
{code}
","27/Jan/10 4:58 PM;davestanley;When debugging saw the following log.. might give some clues:

{code}
Caused by: javax.jms.InvalidDestinationException: Cannot publish to a deleted Destination: temp-queue://ID:dstanley-laptop.local-64803-1264435843986-0:5:1
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1628)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:269)
        at org.springframework.jms.connection.CachedMessageProducer.send(CachedMessageProducer.java:121)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:594)
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:574)
        at org.springframework.jms.core.JmsTemplate$3.doInJms(JmsTemplate.java:541)
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:471)
        ... 23 more
{code}","28/Jan/10 7:35 PM;chirino;I just updated the client config so it continuously loops doing requests and everything looks normal.  Initially it may look odd that store usage keeps increasing.  But eventually if you monitor the usage, you will see it starts following a familar saw tooth usage pattern since the store usage employs garbage collection cycles to reclaim disk space.","28/Jan/10 7:40 PM;chirino;Running du in the data directory also shows constant usage.  The journal data files by far are the biggest user.  Each journal file is configured to be 20 megs each and this test seems to make it use between 1-3 files.  This is why the usage percentage is between 30 and 60 percent of the configured store limit (100 megs)

{code}
$ du -sh *
4.0K	activemq.log
 40M	journal
1.8M	kr-store
  0B	localhost
  0B	lock

$ du -sh *
4.0K	activemq.log
 60M	journal
1.2M	kr-store
  0B	localhost
  0B	lock
{code}
",03/Feb/10 11:08 PM;davestanley;Closing as not a bug,,,,,,,,,,,,,,,
Missing messages in NetworkFailureTest,MB-634,12516054,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,mpc755,mpc755,21/Jan/10 7:41 PM,21/Jan/10 7:42 PM,29/Nov/16 4:16 PM,,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"NetworkFailureTest tests various types of network failures and then makes sure all messages expected to be received are received.

Tests occasionally fail with:

[07:58:55]: 07:58:55 INFO  NetworkFailureTest: Message validation error
[07:58:55]: junit.framework.AssertionFailedError: Profile-3 [Options: durable=false, deliveryMode=PERSISTENT, asyncSendAndDispatch=false, domain=PTP, timeToLive=0] There are missing messages {ID:pdrhas41a-42257-1264078718084-1:10:1:1=[92]}

Two TeamCity build logs are attached.

","Linux - pdrhas4-64 (activemq-5.3.1-fuse), pdrhas41a (activemq trunk)",,,,,,,,,,,,,,21/Jan/10 7:42 PM;mpc755;amq-sys-test_activemq-5.3.1-fuse_Nightly_Linux_RH_4_64-bit_Java_5_101.log.txt;https://issues.jboss.org/secure/attachment/12368745/amq-sys-test_activemq-5.3.1-fuse_Nightly_Linux_RH_4_64-bit_Java_5_101.log.txt,21/Jan/10 7:42 PM;mpc755;amq-sys-test_trunk_Nightly_Linux_621.log-1.txt;https://issues.jboss.org/secure/attachment/12368746/amq-sys-test_trunk_Nightly_Linux_621.log-1.txt,,,,,,,,,,,,,,,,,,,,,,,,,2.0,0.0,,1|hzkc8n:,178964,,,,,,,,,,,,,,,,,,,,,,,,,,,
Receive notify events missing in NetworkFailureTest,MB-633,12516055,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,mpc755,mpc755,21/Jan/10 4:19 PM,05/Feb/10 4:07 PM,29/Nov/16 4:16 PM,,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"NetworkFailureTest tests various types of network failures and monitors the events which should occur because of the failures. Some of the test cases consistently fail with:

Timed out waiting for 8 RESUME_NOTIFY events, only received 6

Attached build logs are from activemq trunk and activemq-5.3.1-fuse",Occurs mostly on Solaris and Aix and sometimes on Windows,,,,,,,,,,,,,,21/Jan/10 4:21 PM;mpc755;amq-sys-test_activemq-5.3.1-fuse_Nightly_AIX_5.3_64_bit_Java_6_85.log-2.txt;https://issues.jboss.org/secure/attachment/12368744/amq-sys-test_activemq-5.3.1-fuse_Nightly_AIX_5.3_64_bit_Java_6_85.log-2.txt,21/Jan/10 4:21 PM;mpc755;amq-sys-test_trunk_Nightly_Windows_658.log-1.txt;https://issues.jboss.org/secure/attachment/12368743/amq-sys-test_trunk_Nightly_Windows_658.log-1.txt,,,,,,,,,,,,,,,,,,,,,,,,,2.0,2.0,,1|hzkccv:,178983,,,,,,,,"05/Feb/10 9:36 AM;garytully;mike, do u know, does this work ok with say the 5.3.0 GA or the latest fuse 5.3.0.6 release. wondering if this is regression?","05/Feb/10 2:26 PM;mpc755;Not a regression. Executed on my pc.

5.4.0-fuse-SNAPSHOT
Tests run: 14, Failures: 0, Errors: 1, Skipped: 0

5.3.0-psc-01-SNAPSHOT
Tests run: 14, Failures: 0, Errors: 0, Skipped: 0

5.3.0-fuse-SNAPSHOT
Tests run: 14, Failures: 3, Errors: 6, Skipped: 0",,,,,,,,,,,,,,,,,,
"""ERROR AbstractStoreCursor: TEST cursor got duplicate"" executing amq-sys-test  FullQueueHangAndResumeTest",MB-630,12516051,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,mpc755,mpc755,19/Jan/10 1:57 PM,19/Jan/10 1:58 PM,29/Nov/16 4:16 PM,,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,"Following exception appeared in execution of FullQueueHangAndResumeTest.testFullQueueHang:

[20:50:20]: 22:20:20 INFO  FullQueueHangAndResumeTest: =========================testFullQueueHang===================
[20:50:20]: 22:20:20 INFO  FullQueueHangAndResumeTest:  Starting to produce messages until we'll be blocked due to space limits...
[20:50:26]: 22:20:26 INFO  WaitThread: >>MessageSender done...(11384)
[20:50:26]: 22:20:26 INFO  FullQueueHangAndResumeTest: ===================================================================================
[20:50:26]: 22:20:26 INFO  FullQueueHangAndResumeTest:  Now consuming messages and wait for storage space becoming available again...
[20:50:26]: 22:20:26 INFO  WaitThread: >>waitWhileBlocked started...
[20:50:34]: 22:20:30 ERROR AbstractStoreCursor: TEST cursor got duplicate: ActiveMQTextMessage {commandId = 1552, responseRequired = true, messageId = ID:moleman-59678-1263865820123-1:1:1:1:1549, originalDestination = null, originalTransactionId = null, producerId = ID:moleman-59678-1263865820123-1:1:1:1, destination = queue://TEST, transactionId = null, expiration = 0, timestamp = 1263865821815, arrival = 0, brokerInTime = 1263865821815, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false, text = 1548 on Mon Jan 18 22:20:21 NST 2010 ...     ...            }
[20:50:34]: 22:20:30 ERROR AbstractStoreCursor: TEST cursor got duplicate: ActiveMQTextMessage {commandId = 1553, responseRequired = true, messageId = ID:moleman-59678-1263865820123-1:1:1:1:1550, originalDestination = null, originalTransactionId = null, producerId = ID:moleman-59678-1263865820123-1:1:1:1, destination = queue://TEST, transactionId = null, expiration = 0, timestamp = 1263865821815, arrival = 0, brokerInTime = 1263865821815, brokerOutTime = 0, correlationId = null, replyTo = null, persistent = true, type = null, priority = 4, groupID = null, groupSequence = 0, targetConsumerId = null, compressed = false, userID = null, content = null, marshalledProperties = null, dataStructure = null, redeliveryCounter = 0, size = 0, properties = null, readOnlyProperties = false, readOnlyBody = false, droppable = false, text = 1549 on Mon Jan 18 22:20:21 NST 2010 ...     ...            }
(and about 40 more)

Log attached","Version is ""ActiveMQ 5.4.0-fuse-SNAPSHOT JMS Message Broker ""
Host: moleman - Linux 2.6.22-14-server
Test executed from TeamCity",,,,,,,,,,,,,,19/Jan/10 1:58 PM;mpc755;amq-sys-test_trunk_Checkin_288.log.txt;https://issues.jboss.org/secure/attachment/12368742/amq-sys-test_trunk_Checkin_288.log.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,0.0,,1|hzkc6v:,178956,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory leak in  OracleJDBCAdapter ,MB-629,12516050,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,socallag,socallag,19/Jan/10 10:29 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,12/Apr/10 7:50 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-00-00,,,,,,,0,,"Setup the broker to use an oracle-ds. Config attached.
Using the simple producer and consumer provided in the example.


To reproduce:
1. Start MQ broker
2. Copy ""fuse_perf.bat"" to your MQ example directory (ie C:\fuse-message-broker-5.3.0.3\example)
3. From cmd line, change to C:\fuse-message-broker-5.3.0.3\example and run ""fuse_perf.bat"". Initially this will put 1k msgs on the queue.
4. When prompted, stop the MQ broker then restart the MQ broker. Attach JConsole now if desired.
5. Hit enter once the broker is up. 10 producers and 10 consumers will spawn for 15k msgs each.",,,,,,,,,,,,,,,19/Jan/10 10:30 AM;socallag;activemq-prod159.xml;https://issues.jboss.org/secure/attachment/12368740/activemq-prod159.xml,19/Jan/10 10:30 AM;socallag;fuse_perf.bat;https://issues.jboss.org/secure/attachment/12368741/fuse_perf.bat,,,,,,,,,,,,,,,,,,,,,,,,,2.0,4.0,,1|hzkcjr:,179014,,,,,,,,19/Jan/10 11:01 AM;martinmurphy;escalated to bug queue,"24/Mar/10 3:30 PM;garytully;The test case should work with http://repo.fusesource.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.3.1-fuse-00-SNAPSHOT/

There are a bunch of jdbc and transaction related issues resolved in apache 5.3.1 so back porting to 5.3.0.x should be avoided if possible. It will basically pull it into line with this release as there are so many changes.

Would the customer consider upgrading to 5.3.1-fuse-00 when it is released, if this snapshot fixes their memory leak?","24/Mar/10 3:36 PM;socallag;Hi Gary,

I have asked the user to take a look at this SNAPSHOT.
Hopefully we will hear back from them shortly.

Thanks,

Seán",12/Apr/10 7:50 PM;garytully;5.3.1-fuse-00-00 has been released,,,,,,,,,,,,,,,,
"com.iona.cpi.failure.issues.DEV602Test consistently fails with 'Unmatched acknowledege""",MB-627,12516048,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mpc755,mpc755,14/Jan/10 4:28 PM,18/Jan/10 2:12 PM,29/Nov/16 4:16 PM,18/Jan/10 2:12 PM,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"The following exception appears consistently when executing com.iona.cpi.failure.issues.DEV602Test in Eclipse on my PC.

11:25:22 WARN  Service: Async error occurred: javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 71593, responseRequired = false, ackType = 2, consumerId = ID:nbmc1-2582-1263486162152-2:2:1:1, firstMessageId = ID:nbmc1-2582-1263486162152-2:3:1:1:69214, lastMessageId = ID:nbmc1-2582-1263486162152-2:3:1:1:69214, destination = queue://c1.se1.sl1.n1.test.destination, transactionId = null, messageCount = 1}; Could not find Message-ID ID:nbmc1-2582-1263486162152-2:3:1:1:69214 in dispatched-list (start of ack)
javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 71593, responseRequired = false, ackType = 2, consumerId = ID:nbmc1-2582-1263486162152-2:2:1:1, firstMessageId = ID:nbmc1-2582-1263486162152-2:3:1:1:69214, lastMessageId = ID:nbmc1-2582-1263486162152-2:3:1:1:69214, destination = queue://c1.se1.sl1.n1.test.destination, transactionId = null, messageCount = 1}; Could not find Message-ID ID:nbmc1-2582-1263486162152-2:3:1:1:69214 in dispatched-list (start of ack)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:440)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:208)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:373)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:449)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:215)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:204)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:186)",Eclipse executing on my PC.,,,,,,,,,,,,,,15/Jan/10 2:14 PM;mpc755;amq-sys-test_activemq-5.3.1-fuse_Nightly_Linux_RH_4_64-bit_Java_5_95.log-1.txt;https://issues.jboss.org/secure/attachment/12368738/amq-sys-test_activemq-5.3.1-fuse_Nightly_Linux_RH_4_64-bit_Java_5_95.log-1.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkc5z:,178952,,,,,,,,"15/Jan/10 2:02 PM;mpc755;Also seeing many ""PrefetchSubscription: Ignoring ack received before dispatch"" messages when DEV602Test executed on vm-rhel46-2:

[07:29:00]: 07:29:00 WARN  PrefetchSubscription: Ignoring ack received before dispatch; result of failover with an outstanding ack. Acked messages will be replayed if present on this broker. Ignored ack: MessageAck {commandId = 3654, responseRequired = false, ackType = 2, consumerId = ID:vm-rhel46-2-47449-1263558486761-2:0:7:1, firstMessageId = ID:vm-rhel46-2-47449-1263558486761-2:1:1:1:3357, lastMessageId = ID:vm-rhel46-2-47449-1263558486761-2:1:1:1:3357, destination = queue://c1.se1.sl1.n1.test.destination, transactionId = null, messageCount = 1}

Not sure if this is just a warning like ""Unmatched acknowledege"" but the two test cases that failed on vm-rhel46-2 both had the ""PrefetchSubscription: Ignoring ack received before dispatch"" warning and it doesn't look like any of the passing tests did. Attached amq-sys-test log.
","18/Jan/10 10:21 AM;garytully;so both of those warns are expected on failover if an ack is outstanding when failover happens. the ack will be stale when it arrives as the message will again be dispatched. So the consumer gets a duplicate and acks it again.

When these test fail, what is the failure condition?","18/Jan/10 2:12 PM;mpc755;I increased the maxReconnectDelay from 31 to 45. The comment in the code stated maxReconnectDelay had to be greater than wireFormat.maxInactivityDuration=30000.

The test has started passing since the increase.

Closing the issue.

I will reopen if it starts to fail again.",,,,,,,,,,,,,,,,,
"NetworkFailureTest consistently fails with ""DemandForwardingBridge: Caught an exception processing local command"" 'java.net.SocketException: Broken pipe""",MB-625,12516046,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,mpc755,mpc755,13/Jan/10 12:59 AM,13/Jan/10 2:08 AM,29/Nov/16 4:16 PM,,5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"This might have to do with socket timeouts on linux. Will try setting the socket timeouts on vm-rhel46-32-1 to as low as possible.

The most common exception when executing NetworkFailureTest is the following:

19:36:16 [REMOTE] BROKER1: 19:36:16 WARN  DemandForwardingBridge: Network connection between vm://broker1#6 and tcp://localhost/127.0.0.1:10006 shutdown due to a remote error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: localhost/127.0.0.1:10006 
19:36:16 [REMOTE] BROKER1: 19:36:16 WARN  DemandForwardingBridge: Caught an exception processing local command 
19:36:16 [REMOTE] BROKER1: java.net.SocketException: Socket closed 
19:36:16 [REMOTE] BROKER1: 	at java.net.SocketOutputStream.socketWrite(SocketOutputStream.java:99) 
19:36:16 [REMOTE] BROKER1: 	at java.net.SocketOutputStream.write(SocketOutputStream.java:136) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.tcp.TcpBufferedOutputStream.flush(TcpBufferedOutputStream.java:115) 
19:36:16 [REMOTE] BROKER1: 	at java.io.DataOutputStream.flush(DataOutputStream.java:106) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.tcp.TcpTransport.oneway(TcpTransport.java:168) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.InactivityMonitor.oneway(InactivityMonitor.java:242) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.TransportFilter.oneway(TransportFilter.java:83) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.WireFormatNegotiator.oneway(WireFormatNegotiator.java:104) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:702) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:158) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:116) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:115) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1203) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:787) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:823) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122) 
19:36:16 [REMOTE] BROKER1: 	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43) 
19:36:16 [REMOTE] BROKER1: 	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
19:36:16 [REMOTE] BROKER1: 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
19:36:16 [REMOTE] BROKER1: 	at java.lang.Thread.run(Thread.java:595) 
19:36:16 [REMOTE] BROKER1: 19:36:16 INFO  TransportConnector: Connector vm://broker1 Stopped 
19:36:16 [REMOTE] BROKER1: 19:36:16 INFO  DemandForwardingBridge: broker1 bridge to broker2 stopped 
19:36:16 [REMOTE] BROKER1: 19:36:16 INFO  DiscoveryNetworkConnector: Establishing network connection from vm://broker1 to tcp://vm-rhel46-32-1:10006?wireFormat.maxInactivityDuration=1000 
19:36:16 [REMOTE] BROKER1: 19:36:16 INFO  TransportConnector: Connector vm://broker1 Started 
",Occurs consistently on Linux and other unix platforms. Reproduced on vm-rhel46-32-1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkc5j:,178950,,,,,,,,,,,,,,,,,,,,,,,,,,,
JMX property inflight count not updated correctly when used with transactions and rollbacks occur. ,MB-623,12516044,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,11/Jan/10 1:06 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,21/Jan/10 5:09 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0-fuse-01-00,,,,broker,,,0,,The JMX property InflightCount for a queue is not updated correctly under all circumstances. There are issues when transactions are used and rollbacks occur. ,,,,,,,,,,,,,,,11/Jan/10 1:08 PM;mielket;MB-623.patch;https://issues.jboss.org/secure/attachment/12368737/MB-623.patch,11/Jan/10 1:44 PM;mielket;NegativeInflightCount.jpg;https://issues.jboss.org/secure/attachment/12368739/NegativeInflightCount.jpg,,,,,,,,,,,,,,,,,,,,,,,,,2.0,4.0,,1|hzkc87:,178962,,,,,,,,11/Jan/10 1:08 PM;mielket;Proposed patch from Gary Tully: MB-623.patch,"11/Jan/10 1:40 PM;mielket;This can be reproduced easily using a transacted consumer that rolls back the transaction. The default redelivery is to redeliver the msg 6 times before moving it to a dead letter queue. Each redelivery causes the inflight count to decrease by 1. 
So that after 6 redelivery attempts of the same msg the inflight count is at -5 as in the attached screen shot.
",11/Jan/10 2:04 PM;mielket;Just ran another test with redelivery attempts = 0. Each not rolled back msg then gets moved to DLQ straight away and the inflight count is not decremented either. ,13/Jan/10 4:44 PM;garytully;corresponding issue at apache: https://issues.apache.org/activemq/browse/AMQ-2566,,,,,,,,,,,,,,,,
"""Ack for non existent subscription"" ""The subscription does not exist"" exception executing a Network Failure Test",MB-622,12516043,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,rajdavies,mpc755,mpc755,06/Jan/10 4:52 PM,08/Jan/10 2:46 PM,29/Nov/16 4:16 PM,08/Jan/10 2:46 PM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.3.0-fuse-01-00,,,,broker,,,0,,"Several test cases in NetworkFailureTest fail with the exception below when executed against a 5.3.0 message broker. The exception does not occur when executing against activemq-core 5.4-SNAPSHOT.

junit.framework.AssertionFailedError: Failure occurred: [java.lang.Exception: Process Error from BROKER1: 09:49:53 WARN  AbstractRegion: Ack for non existent subscription, ack:MessageAck {commandId = 21400, responseRequired = false, ackType = 4, consumerId = ID:nbmc1-2228-1262789365648-7:1:1:12, firstMessageId = null, lastMessageId = ID:nbmc1-2246-1262789372148-0:16:1:1:4876, destination = queue://queue://QUEUE-Profile-6, transactionId = null, messageCount = 1}
09:49:53 WARN  Service: Async error occurred: java.lang.IllegalArgumentException: The subscription does not exist: ID:nbmc1-2228-1262789365648-7:1:1:12
java.lang.IllegalArgumentException: The subscription does not exist: ID:nbmc1-2228-1262789365648-7:1:1:12
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:363)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:449)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:297)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:175)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:114)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:697)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:156)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:114)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
	at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
	at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1190)
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:779)
	at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:815)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
09:49:53 INFO  DemandForwardingBridge: Network connection between vm://broker1#4 and tcp://localhost/127.0.0.1:10003 shutdown due to a local error: java.lang.IllegalArgumentException: The subscription does not exist: ID:nbmc1-2228-1262789365648-7:1:1:12
09:49:53 INFO  DiscoveryNetworkConnector: Establishing network connection from vm://broker1 to tcp://nbmc1:10003?wireFormat.maxInactivityDuration=500000
09:49:53 INFO  DemandForwardingBridge: broker1 bridge to broker2 stopped
09:49:53 INFO  DemandForwardingBridge: Network connection between vm://broker1#6 and tcp://localhost/127.0.0.1:10003(broker2) has been established.
]
	at junit.framework.Assert.fail(Assert.java:47)
	at junit.framework.Assert.assertTrue(Assert.java:20)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub$EventHandler.assertNoFailures(AckForNonExistentSub.java:749)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub.assertNoErrors(AckForNonExistentSub.java:643)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub.access$1(AckForNonExistentSub.java:642)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub$EventHandler.waitForEvents(AckForNonExistentSub.java:791)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub.reconnectTest(AckForNonExistentSub.java:584)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub.executeFailureTest(AckForNonExistentSub.java:424)
	at org.fusesource.fusemq.systest.networkfailure.bugs.AckForNonExistentSub.testMultiBrokerFailure(AckForNonExistentSub.java:224)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at junit.framework.TestSuite.runTest(TestSuite.java:208)
	at junit.framework.TestSuite.run(TestSuite.java:203)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkc53:,178948,,,,,,,,"06/Jan/10 5:36 PM;mpc755;This is occurring for more than the one test case in AckForNonExistentSub. I am seeing the ""The subscription does not exist"" exception in multiple test cases when executing NetworkFailureTest.",08/Jan/10 2:46 PM;mpc755;Fixed in 5.3.0-psc-01-SNAPSHOT,,,,,,,,,,,,,,,,,,
Broker hangs during destroy() after getting Out Of Memory when executing NetworkQueueSystemUsage using MeshKeeper,MB-617,12516038,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,mpc755,mpc755,23/Dec/09 6:47 PM,23/Dec/09 6:50 PM,29/Nov/16 4:16 PM,,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"A BrokerManager.kill() (Active MQ Broker destroy()) hangs after the broker OOMs.

To reproduce start a MeshKeeper Control Server and Lauch Agent on a remote host (preferably Linux/Unix). Execute NetworkQueueSystemUsage using the Control Server and Launch Agent. The Broker will hang during the kill():

13:27:33 [REMOTE] TEST BROKER2: 09:30:14 INFO  DemandForwardingBridge: localhost bridge to localhost stopped 
Messages Sent before producer blocked: 25582 (MSGCOUNT is 25583)
13:27:46 [REMOTE] TEST BROKER1: Exception in thread ""ActiveMQ Transport Server Thread Handler: tcp://0.0.0.0:61616"" java.lang.OutOfMemoryError: Java heap space 
Killing Brokers
TEST CLIENT: Wire format negotiation timeout: peer did not send his wire format.
TEST CLIENT: Socket closed
13:30:47 [REMOTE] TEST BROKER1: Exception in thread ""ActiveMQ Scheduler""  

Java thread dump of broker1 attached. ",MeshKeeper. NetworkQueueSystemUsage executing from within Eclipse. MeshKeeper control server and launch agent executing on unix (soniclx18). Issue is reproducible when executing against vm-fuseubtXX machines,,,,,,,,,,,,,,23/Dec/09 6:50 PM;mpc755;multiple-broker1-thread-dumps-before-process-waitfor-hang.txt;https://issues.jboss.org/secure/attachment/12368736/multiple-broker1-thread-dumps-before-process-waitfor-hang.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkc3b:,178940,,,,,,,,"23/Dec/09 6:50 PM;mpc755;Modified the test by adding in a sleep prior to BrokerManager.kill(). Performed several ""kill -QUIT""s against the broker launched broker process.

Once the hang occurred, there is no output to be found associated with the ""kill -QUIT""s.",,,,,,,,,,,,,,,,,,,
Unmatched Acknowledege Error after failover ,MB-614,12516035,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,16/Dec/09 12:42 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,12/Apr/10 7:50 PM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-00-00,,,,,,,0,,"After failover, the following error started to appear in the log:
{quote}
009-12-16 12:23:50,004 [/127.0.0.1:2288] WARN  Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: MessageAck \{commandId = 1071, responseRequired = false, ackType = 2, consumerId = ID:nbdubjluo2-1436-1260965866504-0:14:1:1, firstMessageId = ID:nbdubjluo2-4701-1260964318113-0:0:1:1:11340, lastMessageId = ID:nbdubjluo2-4701-1260964318113-0:0:1:1:11340, destination = queue://test.queue.new, transactionId = null, messageCount = 1}; Could not find Message-ID ID:nbdubjluo2-4701-1260964318113-0:0:1:1:11340 in dispatched-list (start of ack)
javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 1071, responseRequired = false, ackType = 2, consumerId = ID:nbdubjluo2-1436-1260965866504-0:14:1:1, firstMessageId = ID:nbdubjluo2-4701-1260964318113-0:0:1:1:11340, lastMessageId = ID:nbdubjluo2-4701-1260964318113-0:0:1:1:11340, destination = queue://test.queue.new, transactionId = null, messageCount = 1\}; Could not find Message-ID ID:nbdubjluo2-4701-1260964318113-0:0:1:1:11340 in dispatched-list (start of ack)
	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:446)
	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:208)
	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:377)
	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:468)
	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:461)
	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
	at java.lang.Thread.run(Thread.java:595)
{quote}

I have developed a test case on Windows XP which involves a batch script to start two brokers to connect to the same JDBC database and periodically kills the master broker so the slave one will be prompted to master and then start a slave broker again.

Using the test case and following the instruction, it is quite easy to reproduce above error.","Windows XP SP2, JDK 1.5, Oracle 10G",,,,,,,,,,,,,,16/Dec/09 1:18 PM;joe.luo;mb614-testcase.zip;https://issues.jboss.org/secure/attachment/12368735/mb614-testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzkcjb:,179012,,,,,,,,"16/Dec/09 1:18 PM;joe.luo;Instruction:
1. unzip the test case to Fuse Message Broker installation directory;
2. configure your broker activemq.xml using direct JDBC adaptor and have a look at attached ""activemq.xml"" for your information;
3. copy ""run_master_slave_brokers.bat"" and ""sleep.bat"" scripts to Fuse Message Broker installation directory;
4. start a command console and invoke ""run_master_slave_brokers.bat"" script from Fuse MB installation directory:
<activemq-installation-dir>run_master_slave_brokers.bat
You will see two windows popping up and the one is master broker and the other is slave broker. And you will also see message ""Press any key to continue . . .""  appear in this command console but do not press any key yet; 
5. start another command console, go to directory ""<activemq-installation-dir>\MB-614"" and upload messages to JDBC database by invoking ""ant sender"";
6. after uploading over 20K Messages, stop the sender process (MasterSlaveSender);
7. start MasterSlaveTest by invoking ""ant test"";
8. go back to cmd console started in step #4  and press any key to let scripts to continue;

Note, 
1. you will need minimum 20K message (each of size 100K Bytes) uploaded to JDBC database using MasterSlaveSender in order to reproduce the error;
2. failover of master/slave broker requires a little manual intervention since the script will try to terminate master broker and a ""process ending"" window will pop up;
","13/Jan/10 6:18 PM;garytully;Some of these warn messages are expected and are at the warn level because they are not indicative of a bug. An exception listener on the connection can pick them up and ignore them if needed.

If an ack is pending when a failover occurs, the ack can still be sent but will be stale so it will not match and result in an exception. Unacked messages will get redelivered on reconnect and resume so there is no message loss.
On trunk, some of these messages have been suppressed (https://issues.apache.org/activemq/browse/AMQ-2560) but it is impossible to remove them all. 
At some stage it may make sense to ignore unmatched acks altogether but not till duplicate suppression is implemented with recourse to a reconnect attempt. Something that will require a wireformat (and version) update. see https://issues.apache.org/activemq/browse/AMQ-2542

Is it the case that the customer is worried about the warn log message only?","24/Mar/10 4:46 PM;garytully;Joe, Seems like the customer is already aware of this fix but just for the record:
Their test case should work with http://repo.fusesource.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.3.1-fuse-00-SNAPSHOT/
There are a bunch of jdbc and transaction related issues resolved in apache 5.3.1 so back porting to 5.3.0.x should be avoided if possible. It will basically pull it into line with this release as there are so many changes.

Would the customer consider upgrading to 5.3.1-fuse-00 when it is released, if this snapshot fixes their memory leak?",12/Apr/10 7:50 PM;garytully;5.3.1-fuse-00-00 has been released,,,,,,,,,,,,,,,,
Strange behaviors observed with DLQ queue when browsing using Hermes JMS,MB-612,12516033,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,pedroneveu,pedroneveu,09/Dec/09 8:39 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,29/Dec/09 2:15 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,,,,broker,,,1,,"Someone reported this behavior:
================
In production, we have the following problem.
Now, when I try to browse a dead letter queue, a new dead letter queue is created prefixed by DLQ.

example (real case) :

if I browse (HermesJMS) the queue ""DLQ.audit"", a new queue is created ""DLQ.DLQ.audit"" etc...
actualy I have a queue called DLQ.DLQ.DLQ.DLQ.DLQ.DLQ.audit
via jmx each queue report a different queue size.

We configure activemq.xml to create a DLQ as prefix as deadLetterStrategy
{code}
<destinationPolicy> 
    <:policyMap> 
        <policyEntries> 
            <policyEntry queue="">"" producerFlowControl=""false"">
                <deadLetterStrategy> 
                    <individualDeadLetterStrategy queuePrefix=""DLQ."" useQueueForQueueMessages=""true"" /> 
                </deadLetterStrategy> 
            </policyEntry> 
        </policyEntries> 
    </policyMap> 
</destinationPolicy>
{code}
================

When I tested the testcase on Linux the behavior that i observed was different.  In my case every time I would browse (from Hermes JMS) that would have the effect of increasing the QueueSize by 1.  This occurs whether JDBC or Kaha DB is used for persistence or whether JMS or XA transaction is used.",Tested on Linux,,,,,,,,,,,,,,09/Dec/09 8:39 PM;pedroneveu;DlqDupTestJmsTx.tar.gz;https://issues.jboss.org/secure/attachment/12368734/DlqDupTestJmsTx.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2553,,,,1.0,4.0,,1|hzkcen:,178991,,,,,,,,"09/Dec/09 8:44 PM;pedroneveu;To run the testcase:
- compile using
    > mvn install
- start the broker
- start the listener using:
    > mvn exec:java -Dexec.mainClass=""ch.vd.test.StartListener""
- send message using:
    > mvn exec:java -Dexec.mainClass=""ch.vd.test.SendMessage""

Notice the creation of DLQ queue.

- use Hermes JMS to view the DLQ queue.
- Open a jconsole to monitor queue activity.
- perform a browse from Hermes JMS and notice the increase of QueueSize.",29/Dec/09 2:15 PM;dbosanac;I managed to reproduce the original issue. The problem was the case where DLQ is browsed over the transacted session (which Hermes do) and the transaction is not committed after the browsing is done. This leads to transaction rollback and message is sent again to the DLQ (as it has its original redeliveryCount from the original message set). The issue is fixed now and merged into 5.3.0-fuse branch.,"10/Feb/10 8:55 AM;dbosanac;Hi Pedro,

yes, it's megred in the appropriate branch, so it will be included in the next release.

Regards,
Dejan","18/Feb/10 10:06 AM;dbosanac;Hi,

I just checked and everything seems fine with 5.3.0-fuse-01-00.

The issue is merged, the corresponding IndividualDeadLetterTest test is passing, and trying to browse with Hermes doesn't create another DLQ (nor increase current DLQ size).

Can you check it out and see if I'm missing something.

Thanks,
Dejan",,,,,,,,,,,,,,,,
Message can be consumed twice over network of brokers,MB-611,12516032,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,dbosanac,joe.luo,joe.luo,09/Dec/09 12:57 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,14/Dec/09 9:35 AM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.0-fuse-01-00,,,,,,1,,"I have two brokers (broker1 and broker2) running on two different hosts. The two brokers are networked together through network connector. Each of them is connecting to a Database of their own (Oracle 10g) through direct JDBC.

Here are steps to reproduce the problem:
1. Produce 10 message to broker1;
2. Browse messages on broker2 using QueueBrowser on the same queue until I can see all of 10 messages appearing (you might need to browse multiple times depending on timing but I always just need to browse once to get all 10 messages propagated over the broker2);
3. Consume all of 10 messages on broker1;
4. I can still consume the 10 messages on broker2 again.

It looks like after the 10 messages were consumed on broker1, nothing had happened on broker2' DB. Hence when I tried to consume messages on broker2, all 10 messages were paged in from broker2's local DB.

I also tried to test with default AMQPersistentAdaptor, the same problem persists and I can consume the 10 message twice over the network of brokers.

The same test case attached on MB-607 can be used for this issue.",The latest Fuse Message Broker 5.3 SNAPSHOT (fix of MB-607 is included),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2529,,,,0.0,2.0,,1|hzkduv:,179226,,,,,,,,"14/Dec/09 9:35 AM;dbosanac;Fixed and merged into 5.3.0-fuse and 5.3.1-fuse branches. 

Once the message is browsed on remote broker, it should be removed from the local broker and cannot be consumed there anymore.","09/Nov/10 2:17 PM;dbosanac;Due to https://issues.apache.org/activemq/browse/AMQ-3020 we now don't propagate browsers over the network. This means that browsers only shows messages on the local broker. I remembered this issue, so wanted to put a comment so you're aware of this change in the future. I think it shouldn't affect your use case.",,,,,,,,,,,,,,,,,,
Port AMQ-2513 to 5.3.0-fuse branch,MB-609,12516030,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,08/Dec/09 4:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,11/Dec/09 9:50 AM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.0-fuse-01-00,,,broker,,,0,,AMQ-2513 needs to be ported to the FUSE MB 5.3.0 branch. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-2513,,,,0.0,1.0,,1|hzkc1b:,178931,,,,,,,,11/Dec/09 9:50 AM;dbosanac;merged into 5.3.0-fuse and 5.3.1-fuse branches,,,,,,,,,,,,,,,,,,,
Under a heavy load Queue.send throws a NullPointerException,MB-608,12516029,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,07/Dec/09 9:46 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,05/Jan/10 11:43 AM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,,,,,,,0,,"2009-11-25 13:19:09,955 org.apache.activemq.broker.TransportConnection.Service WARN (TransportConnection.java: 293) ::::Async error occurred: java.lang.NullPointerException::::
java.lang.NullPointerException
at org.apache.activemq.broker.region.Queue.send(Queue.java:391)
at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:443)
at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
at java.lang.Thread.run(Thread.java:595)

Attached is a testcase that reproduces the problem
It runs against mySQL.

mvn exec:java to run the test.",,,,,,,,,,,,,,,07/Dec/09 9:46 AM;socallag;SpringJMSLoadTest.tar.gz;https://issues.jboss.org/secure/attachment/12368733/SpringJMSLoadTest.tar.gz,07/Dec/09 9:46 AM;socallag;activemq-dev-1991.xml;https://issues.jboss.org/secure/attachment/12368731/activemq-dev-1991.xml,,,,,,,,,,,,,,,,,,,,,,,,,2.0,3.0,,1|hzkc47:,178944,,,,,,,,"08/Dec/09 3:25 PM;garytully;this is related to the use of the ""ConnectionDotFilePlugin"" the NPE only occurs when it is present. It tries to recreate a graph by tracking producer add/remove events but this is problematic. It may be sufficient for the plugin to do periodic or snapshot graphs rather than the current real time attempt.",17/Dec/09 1:49 PM;garytully;the fix for https://issues.apache.org/activemq/browse/AMQ-2473 resolves this.,05/Jan/10 11:43 AM;garytully;fixes merged to 5.3.0 branch. related to MB-545,,,,,,,,,,,,,,,,,
QueueBrowser on Networks of brokers cause duplicate messages on broker restart,MB-607,12516028,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,dbosanac,joe.luo,joe.luo,30/Nov/09 5:04 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,08/Dec/09 1:30 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.0-fuse-01-00,,,broker,,,0,,"I have two brokers (broker1 and broker2) running on two different hosts. The two brokers are networked together through network connector. Each of them is connecting to a Database of their own (Oracle 10g) through direct JDBC. 

If I produce 10 message to broker1, then browse messages on broker2 using QueueBrowser on the same queue seems to causing duplicated messages on the JDBC database of the broker2. Here is steps I performed (Note, you need to start with clean Oracle DB without any of ACTIVEMQ_* tables on both brokers):

1) sent 10 messages to ""queueA"" on broker1 using command ""ant producer"";
2) checked the broker1 and broke2 DB using SQL query, there were 10 rows on broker1 DB and 0 row on broker2 DB;
3) browsed ""queueA"" on broker2 using command ""ant browser"" the first time, it returned an empty list. However SQL query on broker2 DB showed a number of rows (it is quite random however) created;
4) browsed 4 more times on ""queueA"" of broker2 using command ""ant browser"", it returned 10 or less message each time depending on the number of rows in the DB. However there were 44 rows created on broker2 DB after 5 browsing attempts;
5) checked the broker 1 DB, still 10 rows and 44 rows on broker 2 DB; 
6) started a consumer to consume messages from broker 2 using command ""ant consume"", it received only 10 messages; 
7) checked the broker1 DB using SQL query, it returns 0 rows but 34 rows on broker2 DB;
8) restarted the broker2;
9) started a new consumer on broker2 ""queueA"", the consumer received 10 more messages again! And SQL query showed the broker2 DB had 24 rows left;
10 ) repeated step 9 three more times until there were no more records in broker2 DB, then the consumer will no longer receive any more messages.

I also tested with default AMQPersistentAdaptor but I did not see any problem. It looks like that this issue exists with JDBC adaptor only. ","version 5.3.0.5-fuse
JDBC Adapter
Oracle 10G ",,,,,,,,,,,,,,30/Nov/09 5:08 PM;joe.luo;activemq_broker1.xml;https://issues.jboss.org/secure/attachment/12368729/activemq_broker1.xml,30/Nov/09 5:08 PM;joe.luo;activemq_broker2.xml;https://issues.jboss.org/secure/attachment/12368730/activemq_broker2.xml,30/Nov/09 5:08 PM;joe.luo;test_client.zip;https://issues.jboss.org/secure/attachment/12368727/test_client.zip,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2519,,,,3.0,5.0,,1|hzkc0v:,178929,,,,,,,,"30/Nov/09 5:08 PM;joe.luo;Here are attached test code and both broker configuration files.

To produce messages, run command ""ant producer"";
To browser messages, run command ""ant browser"";
To consume messages, run command ""ant consumer"".","01/Dec/09 5:41 PM;dbosanac;I improved JDBC store to prevent persisting duplicated messages twice. You can see https://issues.apache.org/activemq/browse/AMQ-2519 for more info. The fix will be merged to fuse 5.3.0.x trunk soon. I also need to check all this ""browse over network"" functionality, since it should IMHO show all messages the first time it is called. ","01/Dec/09 5:57 PM;garytully;on the browse over network, the first time it is called will be the first time the demand is created and the demand will only exist for the duration of the browse so I guess the piecemeal propagation of messages is expected. A browse is always going to have to be a snapshot in time and since messages only migrate on demand and it takes some time to complete, the snapshot will need to be updated.","02/Dec/09 12:13 PM;dbosanac;Thanks Gary, that's actually makes sense and tests are showing. So the only issue was duplicated messages in the database, which should be fixed now on the apache trunk",08/Dec/09 1:30 PM;dbosanac;This is now merged to 5.3.0 and 5.3.1 fuse branches,,,,,,,,,,,,,,,
"A temporary topic is created, even though security role should forbid it. ",MB-606,12516027,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,25/Nov/09 2:19 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Dec/09 4:58 PM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.31-fuse,5.3.0.6-fuse,,,,,,1,,"Start the vbroker using the config attached. run the test against it. The output shows that a temporary topic is created.
Interestingly on shutdown when trying to remove the topic, it cannot be as user does not have permission.

From debug output:

DEBUG PropertiesLoginModule          - Initialized debug=true usersFile=security/users.properties groupsFile=security/groups.properties basedir=C:\FUSE_ISSUES\DEV-1966\fm-soa-bug\fuse-message-broker-5.3.0.5\conf
DEBUG PropertiesLoginModule          - login amq
DEBUG PropertiesLoginModule          - commit
DEBUG AbstractRegion                 - localhost adding destination: topic://ActiveMQ.Advisory.Connection
DEBUG AbstractRegion                 - localhost adding consumer: ID:nbdubsean-4314-1259157940116-0:0:-1:1 for destination: topic://ActiveMQ.Advisory.TempQueue,
topic://ActiveMQ.Advisory.TempTopic
DEBUG AbstractRegion                 - localhost adding destination: temp-topic://ID:nbdubsean-4314-1259157940116-0:0:1
DEBUG AbstractRegion                 - localhost adding destination: topic://ActiveMQ.Advisory.TempTopic
DEBUG Service                        - Error occured while processing sync command: ConsumerInfo {commandId = 5, responseRequired = true, consumerId = ID:nbdubs
ean-4314-1259157940116-0:0:1:1, destination = temp-topic://ID:nbdubsean-4314-1259157940116-0:0:1, prefetchSize = 32766, maximumPendingMessageLimit = 0, browser= false, dispatchAsync = true, selector = null, subscriptionName = null, noLocal
 = false, exclusive = false, retroactive = false, priority = 0, brokerPath = null, optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null
}, exception: java.lang.SecurityException: User amq is not authorized to read from: temp-topic://ID:nbdubsean-4314-1259157940116-0:0:1
java.lang.SecurityException: User amq is not authorized to read from: temp-topic://ID:nbdubsean-4314-1259157940116-0:0:1
        at org.apache.activemq.security.AuthorizationBroker.addConsumer(AuthorizationBroker.java:110)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:93)


Then on shutdown:

DEBUG AbstractRegion  - localhost removing consumer: ID:nbdubsean-4314-1259157940116-0:0:-1:1 for destination: topic://ActiveMQ.Advisory.TempQueue,topic://ActiveMQ.Advisory.TempTopic
WARN  Service                        - Failed to remove tmp destination temp-topic://ID:nbdubsean-4314-1259157940116-0:0:1
java.lang.SecurityException: User amq is not authorized to remove: temp-topic://ID:nbdubsean-4314-1259157940116-0:0:1
        at org.apache.activemq.security.AuthorizationBroker.removeDestination(AuthorizationBroker.java:91)
        at org.apache.activemq.broker.MutableBrokerFilter.removeDestination(MutableBrokerFilter.java:153)
        at org.apache.activemq.broker.TransportConnection.processRemoveConnection(TransportConnection.java:721)
        at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:1007)
        at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:74)
        at org.apache.activemq.broker.TransportConnection$3.run(TransportConnection.java:932)

Also from jconsole one can see that temp topic has been created.


",,,,,,,,,,,,,,,25/Nov/09 3:22 PM;socallag;TempTopicTest.java;https://issues.jboss.org/secure/attachment/12368726/TempTopicTest.java,25/Nov/09 2:21 PM;socallag;activemq.xml;https://issues.jboss.org/secure/attachment/12368724/activemq.xml,25/Nov/09 2:21 PM;socallag;groups.properties;https://issues.jboss.org/secure/attachment/12368725/groups.properties,25/Nov/09 2:21 PM;socallag;users.properties;https://issues.jboss.org/secure/attachment/12368728/users.properties,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2539,,,,4.0,2.0,,1|hzkc1r:,178933,,,,,,,,17/Dec/09 4:58 PM;dbosanac;Fixed and merged to 5.0.0-fuse and 5.3.0-fuse branches,17/Dec/09 5:00 PM;dbosanac;Fix version is actually 5.0.0.31 as 5.0.0.30 is already released,,,,,,,,,,,,,,,,,,
"JMX properties for individual connections are always zero: DispatchQueueSize, EnqueueSize, DequeueSize",MB-603,12516024,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,23/Nov/09 11:25 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,16/Feb/10 11:09 AM,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.0-fuse-01-00,,,broker,,,0,,"There is an MBean exposed for each individual JMS connection which can be viewed in jconsole. 
However the following properties of that MBean are not updated correctly and always remain at 0: DispatchQueueSize, EnqueueSize and DequeueSize.

These properties should get updated correctly in order to see statistics per consumer/producer. 

The properties of the subscription show similar numbers however only work for consumers and not for producers.",JMX properties ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2302,,,,0.0,2.0,,1|hzkce7:,178989,,,,,,,,"24/Nov/09 9:38 AM;mielket;This can be reproduced easily. 
Simply fire any consumer of producer and connect to the broker using jconsole. Then drill into org.apache.activemq -> localhost -> Connection ... until you see the attributes of a particular connection. Watch the counter properties as you send or consume more messages. These counters don't change.
","16/Feb/10 11:09 AM;dbosanac;Connection statistics were explicitly disabled as they caused to much of a contention overhead. See https://issues.apache.org/activemq/browse/AMQ-2302 for more info. I merged changes for AMQ-2302 which hides these properties over JMX and in Web Console.

If these stats are absolutely necessary, please comment here to discuss what is the best way to proceed.",,,,,,,,,,,,,,,,,,
NetworkFailureTest fails with optimizedAcknowledge=true,MB-602,12516023,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,dbosanac,cmacnaug,cmacnaug,17/Nov/09 3:27 AM,26/Nov/09 4:58 PM,29/Nov/16 4:16 PM,26/Nov/09 4:57 PM,5.3.0-psc-01-00RC1,,,,,,,,,,,,,,,,,,,,5.3.0-psc-01-00RC1,,,,broker,,,0,,"Run src/test/java/org/fusesource/fusemq/systest/networkfailure/bugs/NetworkFailureOptimizedAck.java from http://fusesource.com/forge/svn/fusemqptest/trunk. 

This may not be an issue with optimizedAcknowledge per se. I believe this problem may be related to InactivityMonitor, but didn't get far enough to confirm. The producer in the test remains hung after it's transport resumes. ",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2515,,,,0.0,1.0,,1|hzkby7:,178917,,,,,,,,26/Nov/09 4:57 PM;dbosanac;This should be fixed now with https://issues.apache.org/activemq/browse/AMQ-2515 The problem was with optimized ack and interrupting transport. See Apache issue for more details,,,,,,,,,,,,,,,,,,,
Request to remove user's password details in DEBUG mode,MB-600,12516021,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,pedroneveu,pedroneveu,16/Nov/09 3:33 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Nov/09 2:29 PM,5.3.0-psc-01-00M2,,,,,,,,,,,,,,,,,,,,5.0.0.30-fuse,5.3.0.6-fuse,5.3.0-psc-01-00RC1,,broker,,,0,,There is a request to have the details of the user password to not be published in DEBUG log level in ActiveMQ.,"Windows, Linux
AMQ used in 3.3.1.20, standalone AMQ",,,,,,,,,,,,,,17/Nov/09 6:11 PM;pedroneveu;DEV-1943.txt;https://issues.jboss.org/secure/attachment/12368721/DEV-1943.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2499,,,,1.0,3.0,,1|hzkbw7:,178908,,,,,,,,17/Nov/09 2:29 PM;dbosanac;Issue of logging passwords contained in ActiveMQ commands is fixed and merged to 5.0.0.x-fuse branch.,17/Nov/09 6:11 PM;pedroneveu;Log showing displayed password when at debug level of logging.,"18/Nov/09 9:44 AM;dbosanac;Hi Pedro,

my mistake I only merged it in 5.0.0.x branch and totally overlooked the rest. It's now merged in both 5.3.0.x branch and ""enterprise"" branch.

Regards
Dejan",,,,,,,,,,,,,,,,,
Warning about using default locking mechanism should be an info,MB-599,12516020,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,pedroneveu,pedroneveu,pedroneveu,14/Nov/09 2:42 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,17/Nov/09 4:22 PM,5.3.0-psc-01-00M2,,,,,,,,,,,,,,,,,,,,5.3.0-psc-01-00RC1,,,,broker,,,0,,"The warning:
{code}
INFO  JDBCPersistenceAdapter         - Database lock driver override not found for : [apache_derby_embedded_jdbc_driver].  Will use default implementation.
{code}
can cause confusion and tends to suggest that there is something wrong while it is just informing that activemq will use the DefaultDatabaseLocker instead of a specific DB locker. So it should be an ""INFO"" rather than a ""WARN"".
",All supported OS,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2493,,,,0.0,3.0,,1|hzkc1j:,178932,,,,,,,,14/Nov/09 2:44 AM;pedroneveu;The patch is attached to: https://issues.apache.org/activemq/browse/AMQ-2493,17/Nov/09 4:22 PM;garytully;fix merges to the fuse branch for 5.3.0-psc-01  so it will be in the next snapshot and release candidate.,17/Nov/09 4:24 PM;garytully;tonight's teamcity deploy build will ensure this fix is the next snapshot: http://repo.fusesource.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.3.0-psc-01-SNAPSHOT/,,,,,,,,,,,,,,,,,
XML configuration element for KahaDB has changed to <KahaDB> from <kahaDB>,MB-598,12516019,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,mielket,mielket,12/Nov/09 5:38 PM,12/Nov/09 5:38 PM,29/Nov/16 4:16 PM,,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"Only in 5.3.0.5-fuse the new KahaDB store needs to be configured using <KahaDB> in activemq.xml. earlier versions as well as 5.4-SNAPSHOT use <kahaDB>.

The was a case change in KahaDBPersistenceAdapter.java from

{code:java}
 * @org.apache.xbean.XBean element=""kahaDB""
 * @version $Revision: 1.17 $
 */
{code}

to 

{code:java}
 * @org.apache.xbean.XBean element=""KahaDB""
 * @version $Revision: 1.17 $
{code}

in 5.3.0.5-fuse.
To be more consistent with the other stores, we should use the lower case again.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkbvb:,178904,,,,,,,,,,,,,,,,,,,,,,,,,,,
Unzipping 5.3.0.x zip presents two different console config files and one must choose to overwrite or not,MB-597,12516018,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,dansjuan,dansjuan,11/Nov/09 6:57 PM,11/Nov/09 6:58 PM,29/Nov/16 4:16 PM,,5.3.0.5-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,Installer,,0,,"When installing 5.3.0 bleeding edge and also 5.3.0.2 possibly other versions, I saw this problem:
Whenn unzipping the 5.3.0 zip file, there is an anomaly.
It seems the file fuse-console.xml is included twice in the zip file and they are not the same size - the first is 3k and the second is 1.5k.
I used command line tool and when prompted did NOT overwrite but renamed so I could look at them both.
They are quite different and I do not know which one is the correct one to use.
I will attach them from the 5.3.0 bleeding edge snapshot from 2009 11 10 if I am allowed to do that.
",,,,,,,,,,,,,,,11/Nov/09 6:58 PM;dansjuan;fuse-console.xml;https://issues.jboss.org/secure/attachment/12368719/fuse-console.xml,11/Nov/09 6:58 PM;dansjuan;fuse-console2.xml;https://issues.jboss.org/secure/attachment/12368720/fuse-console2.xml,,,,,,,,,,,,,,,,,,,,,,,,,2.0,1.0,,1|hzkbuv:,178902,,,,,,,,"11/Nov/09 6:58 PM;dansjuan;These are the two fuse-console.xml files that are presented; the end user has no idea which one to use (whether to overwrite the first larger one with the second smaller one presented later).
I have renamed the second smaller one.",,,,,,,,,,,,,,,,,,,
Trouble with newly downloaded 'stable' 5.3.0 Windows 32,MB-596,12516017,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,dansjuan,dansjuan,11/Nov/09 5:44 PM,11/Nov/09 5:44 PM,29/Nov/16 4:16 PM,,5.3.0.0-fuse,5.3.0.1-fuse,5.3.0.2-fuse,5.3.0.3-fuse,5.3.0.4-fuse,5.3.0.5-fuse,5.3.0-psc-01-00M2, 5.3.1.0M1-fuse,,,,,,,,,,,,,,,,,broker,,,0,,"I am guessing version. I went to this link and downloaded latest snapshot as suggested by Dejan:
--
But more likely you'll want to get latest snapshots (which also passed all tests). Those can be found at
http://repo.fusesource.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.3.0-fuse-SNAPSHOT/
--
I downloaded yesterday 11/10/2009 so it is whatever was there.
Here are the problems (two in all):
1.
The admin UI doesn't seem to work out of the box.

I get all kinds of exceptions when I try to browse the two queues I configured to be available at startup.

When I click on either of the Queues link, I see the following.

I don't know what queue example.A is. I didn't create that.

<!--[if !supportLists]-->1.1.                    <!--[endif]-->HTTP ERROR: 500
java.lang.reflect.UndeclaredThrowableException
RequestURI=/admin/xml/queues.jsp

<!--[if !supportLists]-->1.1.1.   <!--[endif]-->Caused by:
javax.el.ELException: java.lang.reflect.UndeclaredThrowableException
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:298)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.xml.queues_jsp._jspx_meth_c_forEach_0(org.apache.jsp.xml.queues_jsp:104)
        at org.apache.jsp.xml.queues_jsp._jspService(org.apache.jsp.xml.queues_jsp:71)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1124)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:39)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:864)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:533)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:207)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:403)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)
Caused by: java.lang.reflect.UndeclaredThrowableException
        at $Proxy27.getName(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
        ... 38 more
Caused by: javax.management.InstanceNotFoundException: org.apache.activemq:BrokerName=localhost,Type=Queue,Destination=example.A
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1010)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:627)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:659)
        at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:175)
        ... 44 more
<!--[if !supportLists]-->1.1.1.   <!--[endif]-->Caused by:
java.lang.reflect.UndeclaredThrowableException
        at $Proxy27.getName(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.xml.queues_jsp._jspx_meth_c_forEach_0(org.apache.jsp.xml.queues_jsp:104)
        at org.apache.jsp.xml.queues_jsp._jspService(org.apache.jsp.xml.queues_jsp:71)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1124)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:39)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:864)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:533)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:207)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:403)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)
Caused by: javax.management.InstanceNotFoundException: org.apache.activemq:BrokerName=localhost,Type=Queue,Destination=example.A
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1010)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:627)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:659)
        at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:175)
        ... 44 more
<!--[if !supportLists]-->1.1.1.   <!--[endif]-->Caused by:
javax.management.InstanceNotFoundException: org.apache.activemq:BrokerName=localhost,Type=Queue,Destination=example.A
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getMBean(DefaultMBeanServerInterceptor.java:1010)
        at com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:627)
        at com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:659)
        at javax.management.MBeanServerInvocationHandler.invoke(MBeanServerInvocationHandler.java:175)
        at $Proxy27.getName(Unknown Source)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at javax.el.BeanELResolver.getValue(BeanELResolver.java:293)
        at javax.el.CompositeELResolver.getValue(CompositeELResolver.java:175)
        at com.sun.el.parser.AstValue.getValue(AstValue.java:138)
        at com.sun.el.ValueExpressionImpl.getValue(ValueExpressionImpl.java:206)
        at org.apache.jasper.runtime.PageContextImpl.evaluateExpression(PageContextImpl.java:1001)
        at org.apache.jsp.xml.queues_jsp._jspx_meth_c_forEach_0(org.apache.jsp.xml.queues_jsp:104)
        at org.apache.jsp.xml.queues_jsp._jspService(org.apache.jsp.xml.queues_jsp:71)
        at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:109)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:389)
        at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:486)
        at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:380)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1124)
        at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
        at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:39)
        at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361)
        at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
        at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
        at org.mortbay.jetty.Server.handle(Server.java:324)
        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
        at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:864)
        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:533)
        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:207)
        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:403)
        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)

2. When I try to submit a query using the activemq-admin.bat by typing:
activemq-admin query <CR>
I see the following:
C:\apps\apache-activemq-5.3.0-fuse-SNAPSHOT\bin>.\activemq-admin.bat query

Warning: JAVA_HOME environment variable is not set.

Java Runtime: Sun Microsystems Inc. 1.5.0_06 c:\jdk1.5.0_06\jre
  Heap sizes: current=1984k  free=1335k  max=520256k
    JVM args: -Dcom.sun.management.jmxremote -Xmx512M -Dorg.apache.activemq.UseD
edicatedTaskRunner=true -Dactivemq.classpath=C:\apps\apache-activemq-5.3.0-fuse-
SNAPSHOT\bin\../conf; -Dactivemq.home=C:\apps\apache-activemq-5.3.0-fuse-SNAPSHO
T\bin\.. -Dactivemq.base=C:\apps\apache-activemq-5.3.0-fuse-SNAPSHOT\bin\..
ACTIVEMQ_HOME: C:\apps\apache-activemq-5.3.0-fuse-SNAPSHOT\bin\..
ACTIVEMQ_BASE: C:\apps\apache-activemq-5.3.0-fuse-SNAPSHOT\bin\..
ERROR: java.lang.RuntimeException: Failed to execute query task. Reason: java.io
.IOException: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailable
Exception [Root exception is java.rmi.ConnectException: Connection refused to ho
st: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
java.lang.RuntimeException: Failed to execute query task. Reason: java.io.IOExce
ption: Failed to retrieve RMIServer stub: javax.naming.ServiceUnavailableExcepti
on [Root exception is java.rmi.ConnectException: Connection refused to host: loc
alhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
        at org.apache.activemq.console.command.QueryCommand.runTask(QueryCommand
.java:120)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.AbstractJmxCommand.execute(Abstra
ctJmxCommand.java:224)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
ERROR: java.lang.Exception: java.io.IOException: Failed to retrieve RMIServer st
ub: javax.naming.ServiceUnavailableException [Root exception is java.rmi.Connect
Exception: Connection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
java.lang.Exception: java.io.IOException: Failed to retrieve RMIServer stub: jav
ax.naming.ServiceUnavailableException [Root exception is java.rmi.ConnectExcepti
on: Connection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
        at org.apache.activemq.console.command.QueryCommand.runTask(QueryCommand
.java:121)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.AbstractJmxCommand.execute(Abstra
ctJmxCommand.java:224)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand
.java:136)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractC
ommand.java:57)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.ja
va:82)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.
java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAcces
sorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
        at org.apache.activemq.console.Main.main(Main.java:107)
Caused by: java.io.IOException: Failed to retrieve RMIServer stub: javax.naming.
ServiceUnavailableException [Root exception is java.rmi.ConnectException: Connec
tion refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
        at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:31
7)
        at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFacto
ry.java:248)
        at javax.management.remote.JMXConnectorFactory.connect(JMXConnectorFacto
ry.java:207)
        at org.apache.activemq.console.command.AbstractJmxCommand.createJmxConne
ctor(AbstractJmxCommand.java:146)
        at org.apache.activemq.console.command.AbstractJmxCommand.createJmxConne
ction(AbstractJmxCommand.java:169)
        at org.apache.activemq.console.command.QueryCommand.runTask(QueryCommand
.java:109)
        ... 11 more
Caused by: javax.naming.ServiceUnavailableException [Root exception is java.rmi.
ConnectException: Connection refused to host: localhost; nested exception is:
        java.net.ConnectException: Connection refused: connect]
        at com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java
:97)
        at com.sun.jndi.toolkit.url.GenericURLContext.lookup(GenericURLContext.j
ava:185)
        at javax.naming.InitialContext.lookup(InitialContext.java:351)
        at javax.management.remote.rmi.RMIConnector.findRMIServerJNDI(RMIConnect
or.java:1807)
        at javax.management.remote.rmi.RMIConnector.findRMIServer(RMIConnector.j
ava:1777)
        at javax.management.remote.rmi.RMIConnector.connect(RMIConnector.java:25
9)
        ... 16 more
Caused by: java.rmi.ConnectException: Connection refused to host: localhost; nes
ted exception is:
        java.net.ConnectException: Connection refused: connect
        at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:574)
        at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:185
)
        at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:171)
        at sun.rmi.server.UnicastRef.newCall(UnicastRef.java:306)
        at sun.rmi.registry.RegistryImpl_Stub.lookup(Unknown Source)
        at com.sun.jndi.rmi.registry.RegistryContext.lookup(RegistryContext.java
:93)
        ... 21 more
Caused by: java.net.ConnectException: Connection refused: connect
        at java.net.PlainSocketImpl.socketConnect(Native Method)
        at java.net.PlainSocketImpl.doConnect(PlainSocketImpl.java:333)
        at java.net.PlainSocketImpl.connectToAddress(PlainSocketImpl.java:195)
        at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:182)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:366)
        at java.net.Socket.connect(Socket.java:507)
        at java.net.Socket.connect(Socket.java:457)
        at java.net.Socket.<init>(Socket.java:365)
        at java.net.Socket.<init>(Socket.java:178)
        at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirect
SocketFactory.java:22)
        at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMaster
SocketFactory.java:128)
        at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:569)
        ... 26 more
C:\apps\apache-activemq-5.3.0-fuse-SNAPSHOT\bin>
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkbuf:,178900,,,,,,,,,,,,,,,,,,,,,,,,,,,
AMQ2021Test hang with ibm jdk on aix,MB-595,12516016,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,peterjones1,peterjones1,07/Nov/09 1:05 AM,10/Dec/09 11:58 AM,29/Nov/16 4:16 PM,10/Dec/09 11:58 AM,,,,,,,,,,,,,,,,,,,,,5.3.0-psc-01-00RC1,,,,,,,0,,"I'm seeing this test hang frequently. Particularly when run in the Teamcity build.  There is also another test which seems to hang the build occasionally, but I've been focussing my investigation on this particular test so far.  I suspect the hang is seen with the ibm jdk but not the sun jdk as a result of some nuance in the implementation of the threading/synchronization classes between the two jvms.

When the hang occurs, the test seems to get an InterruptedIOException in a thread that's sending a message while another thread is locked waiting for an ack.  The exception causes the test to shutdown the broker service, but the broker is unable to obtain a write lock on the connection which is waiting for the ack.  At least, this is as much as I can tell from looking at the logs and debugging a little.  I'll attach a copy of a log of a run which works and a run which hangs shutting down the broker. ",ibm jdk 6 sr4 aix 6.1,,,,,,,,,,,,,,08/Dec/09 5:38 PM;peterjones1;MB-595.patch.txt;https://issues.jboss.org/secure/attachment/12368732/MB-595.patch.txt,07/Nov/09 1:07 AM;peterjones1;activemq-test.log.bad;https://issues.jboss.org/secure/attachment/12368718/activemq-test.log.bad,07/Nov/09 1:07 AM;peterjones1;activemq-test.log.ok;https://issues.jboss.org/secure/attachment/12368717/activemq-test.log.ok,,,,,,,,,,,,,,,,,,,,,,,,3.0,15.0,,1|hzkc13:,178930,,,,,,,,07/Nov/09 1:07 AM;peterjones1;Log files for the test when the test passes - log.ok - and when the test hangs shutting down the broker - log.bad.,"10/Nov/09 12:38 AM;peterjones1;Interesting to note that in the log file for the hang I'm looking at, the first checkpoint is initiated just after the connector thread gets the read lock to process the ack.","10/Nov/09 9:06 PM;peterjones1;Stack traces of all threads when the test is hanging.  One possibility is that the properties HashMap  of the Message that is being copied in the thread processing the ack was modified by another thread at the point where its being copied and so that's why iterating through copying the elements never stops?  Anyway, if you are wondering why the line numbers may appear off here and there, it's because I added some extra LOGging statements in the code.

{code}
ActiveMQ Transport: tcp:///127.0.0.1:56744[1] where all
main:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos (AbstractQueuedSynchronizer.java:958)
  [4] java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos (AbstractQueuedSynchronizer.java:1,250)
  [5] java.util.concurrent.CountDownLatch.await (CountDownLatch.java:264)
  [6] org.apache.activemq.broker.TransportConnection.stop (TransportConnection.java:905)
  [7] org.apache.activemq.util.ServiceStopper.stop (ServiceStopper.java:41)
  [8] org.apache.activemq.broker.TransportConnector.stop (TransportConnector.java:281)
  [9] org.apache.activemq.util.ServiceStopper.stop (ServiceStopper.java:41)
  [10] org.apache.activemq.broker.BrokerService.stopAllConnectors (BrokerService.java:1,536)
  [11] org.apache.activemq.broker.BrokerService.stop (BrokerService.java:508)
  [12] org.apache.activemq.bugs.AMQ2021Test.tearDown (AMQ2021Test.java:94)
  [13] junit.framework.TestCase.runBare (TestCase.java:140)
  [14] junit.framework.TestResult$1.protect (TestResult.java:110)
  [15] junit.framework.TestResult.runProtected (TestResult.java:128)
  [16] junit.framework.TestResult.run (TestResult.java:113)
  [17] junit.framework.TestCase.run (TestCase.java:124)
  [18] junit.framework.TestSuite.runTest (TestSuite.java:232)
  [19] junit.framework.TestSuite.run (TestSuite.java:227)
  [20] org.junit.internal.runners.JUnit38ClassRunner.run (JUnit38ClassRunner.java:79)
  [21] org.apache.maven.surefire.junit4.JUnit4TestSet.execute (JUnit4TestSet.java:62)
  [22] org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet (AbstractDirectoryTestSuite.java:140)
  [23] org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute (AbstractDirectoryTestSuite.java:165)
  [24] org.apache.maven.surefire.Surefire.run (Surefire.java:107)
  [25] sun.reflect.NativeMethodAccessorImpl.invoke0 (native method)
  [26] sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)
  [27] sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:37)
  [28] java.lang.reflect.Method.invoke (Method.java:599)
  [29] org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess (SurefireBooter.java:289)
  [30] org.apache.maven.surefire.booter.SurefireBooter.main (SurefireBooter.java:1,005)
JIT Compilation Thread:
Signal Dispatcher:
  [1] com.ibm.misc.SignalDispatcher.waitForSignal (native method)
  [2] com.ibm.misc.SignalDispatcher.run (SignalDispatcher.java:54)
Gc Slave Thread:
Gc Slave Thread:
Gc Slave Thread:
Finalizer thread:
ActiveMQ Scheduler:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
ActiveMQ Data File Writer:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:167)
  [3] org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue (NIODataFileAppender.java:79)
  [4] org.apache.activemq.kaha.impl.async.DataFileAppender$2.run (DataFileAppender.java:234)
MemoryPoolMXBean notification dispatcher:
  [1] com.ibm.lang.management.MemoryNotificationThread.processNotificationLoop (native method)
  [2] com.ibm.lang.management.MemoryNotificationThread.run (MemoryNotificationThread.java:55)
OperatingSystemMXBean notification dispatcher:
  [1] com.ibm.lang.management.OperatingSystemNotificationThread.processNotificationLoop (native method)
  [2] com.ibm.lang.management.OperatingSystemNotificationThread.run (OperatingSystemNotificationThread.java:39)
RMI Scheduler(0):
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos (AbstractQueuedSynchronizer.java:1,974)
  [4] java.util.concurrent.DelayQueue.take (DelayQueue.java:175)
  [5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take (ScheduledThreadPoolExecutor.java:593)
  [6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take (ScheduledThreadPoolExecutor.java:586)
  [7] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:957)
  [8] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [9] java.lang.Thread.run (Thread.java:735)
RMI TCP Accept-1099:
  [1] java.net.PlainSocketImpl.socketAccept (native method)
  [2] java.net.PlainSocketImpl.accept (PlainSocketImpl.java:414)
  [3] java.net.ServerSocket.implAccept (ServerSocket.java:464)
  [4] java.net.ServerSocket.accept (ServerSocket.java:432)
  [5] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop (TCPTransport.java:381)
  [6] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run (TCPTransport.java:353)
  [7] java.lang.Thread.run (Thread.java:735)
RMI TCP Accept-0:
  [1] java.net.PlainSocketImpl.socketAccept (native method)
  [2] java.net.PlainSocketImpl.accept (PlainSocketImpl.java:414)
  [3] java.net.ServerSocket.implAccept (ServerSocket.java:464)
  [4] java.net.ServerSocket.accept (ServerSocket.java:432)
  [5] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop (TCPTransport.java:381)
  [6] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run (TCPTransport.java:353)
  [7] java.lang.Thread.run (Thread.java:735)
RMI Reaper:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:107)
  [4] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:79)
  [5] sun.rmi.transport.ObjectTable$Reaper.run (ObjectTable.java:350)
  [6] java.lang.Thread.run (Thread.java:735)
GC Daemon:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] sun.misc.GC$Daemon.run (GC.java:112)
RMI RenewClean-[10.65.4.113:56702]:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:107)
  [4] sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run (DGCClient.java:528)
  [5] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61616:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61616:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:56744:
  [1] java.util.HashMap.putAllImpl (HashMap.java:679)
  [2] java.util.HashMap.<init> (HashMap.java:369)
  [3] org.apache.activemq.command.Message.copy (Message.java:120)
  [4] org.apache.activemq.command.ActiveMQMessage.copy (ActiveMQMessage.java:64)
  [5] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:57)
  [6] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:52)
  [7] org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue (RegionBroker.java:710)
  [8] org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ (PrefetchSubscription.java:462)
  [9] org.apache.activemq.broker.region.PrefetchSubscription.acknowledge (PrefetchSubscription.java:365)
  [10] org.apache.activemq.broker.region.AbstractRegion.acknowledge (AbstractRegion.java:369)
  [11] org.apache.activemq.broker.region.RegionBroker.acknowledge (RegionBroker.java:470)
  [12] org.apache.activemq.broker.TransactionBroker.acknowledge (TransactionBroker.java:195)
  [13] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [14] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [15] org.apache.activemq.broker.MutableBrokerFilter.acknowledge (MutableBrokerFilter.java:85)
  [16] org.apache.activemq.broker.TransportConnection.processMessageAck (TransportConnection.java:466)
  [17] org.apache.activemq.command.MessageAck.visit (MessageAck.java:205)
  [18] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:309)
  [19] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:179)
  [20] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [21] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [22] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [23] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [24] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [25] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [26] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:56733:
  [1] java.util.HashMap.putAllImpl (HashMap.java:679)
  [2] java.util.HashMap.<init> (HashMap.java:369)
  [3] org.apache.activemq.command.Message.copy (Message.java:120)
  [4] org.apache.activemq.command.ActiveMQMessage.copy (ActiveMQMessage.java:64)
  [5] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:57)
  [6] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:52)
  [7] org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue (RegionBroker.java:710)
  [8] org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ (PrefetchSubscription.java:462)
  [9] org.apache.activemq.broker.region.PrefetchSubscription.acknowledge (PrefetchSubscription.java:365)
  [10] org.apache.activemq.broker.region.AbstractRegion.acknowledge (AbstractRegion.java:369)
  [11] org.apache.activemq.broker.region.RegionBroker.acknowledge (RegionBroker.java:470)
  [12] org.apache.activemq.broker.TransactionBroker.acknowledge (TransactionBroker.java:195)
  [13] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [14] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [15] org.apache.activemq.broker.MutableBrokerFilter.acknowledge (MutableBrokerFilter.java:85)
  [16] org.apache.activemq.broker.TransportConnection.processMessageAck (TransportConnection.java:466)
  [17] org.apache.activemq.command.MessageAck.visit (MessageAck.java:205)
  [18] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:309)
  [19] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:179)
  [20] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [21] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [22] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [23] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [24] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [25] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [26] java.lang.Thread.run (Thread.java:735)
InactivityMonitor ReadCheck:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
InactivityMonitor WriteCheck:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61616:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:56754:
  [1] org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending (PrefetchSubscription.java:582)
  [2] org.apache.activemq.broker.region.PrefetchSubscription.add (PrefetchSubscription.java:158)
  [3] org.apache.activemq.broker.region.DurableTopicSubscription.add (DurableTopicSubscription.java:199)
  [4] org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch (SimpleDispatchPolicy.java:49)
  [5] org.apache.activemq.broker.region.Topic.dispatch (Topic.java:588)
  [6] org.apache.activemq.broker.region.Topic.doMessageSend (Topic.java:442)
  [7] org.apache.activemq.broker.region.Topic.send (Topic.java:376)
  [8] org.apache.activemq.broker.region.AbstractRegion.send (AbstractRegion.java:354)
  [9] org.apache.activemq.broker.region.RegionBroker.send (RegionBroker.java:445)
  [10] org.apache.activemq.broker.TransactionBroker.send (TransactionBroker.java:227)
  [11] org.apache.activemq.broker.BrokerFilter.send (BrokerFilter.java:126)
  [12] org.apache.activemq.broker.CompositeDestinationBroker.send (CompositeDestinationBroker.java:95)
  [13] org.apache.activemq.broker.MutableBrokerFilter.send (MutableBrokerFilter.java:133)
  [14] org.apache.activemq.broker.TransportConnection.processMessage (TransportConnection.java:459)
  [15] org.apache.activemq.command.ActiveMQMessage.visit (ActiveMQMessage.java:631)
  [16] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:309)
  [17] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:179)
  [18] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [19] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [20] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [21] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [22] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [23] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [24] java.lang.Thread.run (Thread.java:735)
QueueThread:queue://ActiveMQ.DLQ:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.park (LockSupport.java:173)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await (AbstractQueuedSynchronizer.java:1,936)
  [4] java.util.concurrent.LinkedBlockingQueue.take (LinkedBlockingQueue.java:369)
  [5] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:957)
  [6] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [7] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport Stopper: /127.0.0.1:56733:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.park (LockSupport.java:173)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt (AbstractQueuedSynchronizer.java:758)
  [4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (AbstractQueuedSynchronizer.java:789)
  [5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (AbstractQueuedSynchronizer.java:1,125)
  [6] java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock (ReentrantReadWriteLock.java:818)
  [7] org.apache.activemq.broker.TransportConnection$3.run (TransportConnection.java:931)
InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@4700470:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (SynchronousQueue.java:435)
  [4] java.util.concurrent.SynchronousQueue$TransferStack.transfer (SynchronousQueue.java:334)
  [5] java.util.concurrent.SynchronousQueue.poll (SynchronousQueue.java:885)
  [6] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:955)
  [7] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [8] java.lang.Thread.run (Thread.java:735)
{code}","13/Nov/09 11:05 PM;peterjones1;From the stack traces, you can see two threads which are in the process of creating an Ack are both stuck iterating through the properties HashMap which is being copied into a new Message.  Every time it happens, it seems to be right after the first checkpoint is started.  I think the iteration through the HashMap is messed up as the Map is modified by another thread right in the middle of the iteration.  I've wrapped the properties HashMap with a Collections.synchronizedMap() and the hang has disappeared through many reruns of the test.  I'll put together a patch, and ask for some feedback on the appropriateness of this fix.","08/Dec/09 5:38 PM;peterjones1;Attached a patch which addresses the hang issue caused by unsynchronized access to the properties Map of the Message.

The patch also contains a few minor changes to address the following issues:
VMTransportWaitForTest - slight increase in wait time to allow test to pass on slow solaris/aix boxes
MasterSlaveSlaveDieTest - increased maxInactivityDurationInitalDelay to make test pass reliably on slow solaris/aix boxes
SimpleNetworkTest - increased sleep/receive timeout to make test pass reliably on slow boxes
NetworkBrokerDetachTest & DuplexNetworkMBeanTest - changed to junit4 style and added an assume not null so that these tests won't end up reporting a failure in the case where the 1099 port is already in use (if port 1099 isn't in use, the tests will run as usual).
MultiBrokersMultiClientsTest - increased the timeout to check for connected consumers as the remote broker connections can take longer than the current 30s to become available on slow solaris/aix boxes.
BrokerService - added a 10 minute timeout to waiting for the slave to start up.  If the slave doesn't start in that time an error is logged.  Currently, without the timeout, if slave fails to start (e.g. the slave doesn't wait long enough for format negotiation on a slow machine and so bombs out) then the master can be left waiting for the slave forever.
ManagementContext - I have commented out the change I made here but just wanted some feedback - is there any point in  creating JMXConnectorServer if we get a BindException (i.e. if the connectorPort was already in use?)

MarshallingSupport & Message - these contain the changes to synchronize the properties Map of the Message and prevent the hang which occurs with the ibm jdk.

Please review the patch and let me know if you have any suggestions  for changes or alterations!  Thanks!",09/Dec/09 10:30 AM;garytully;those mods look great and will address issues with these tests across many platforms. great work,"09/Dec/09 11:57 AM;garytully;so looking in a little more detail, on the sync of the properties in the message. I think we can get away with less in that the only area the is problematic is the copy. I think if the copy uses a sync on the non null properties object before attempting the copy it will be fine as the copy is the contentious point, a copy is made when ever the same message is being dispatched and may be modified.

{code}
Index: activemq-core/src/main/java/org/apache/activemq/command/Message.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/command/Message.java	(revision 886178)
+++ activemq-core/src/main/java/org/apache/activemq/command/Message.java	(working copy)
@@ -117,7 +117,9 @@
         copy.groupSequence = groupSequence;
 
         if (properties != null) {
-            copy.properties = new HashMap<String, Object>(properties);
+            synchronized(properties) {
+                copy.properties = new HashMap<String, Object>(properties);
+            }
         } else {
             copy.properties = properties;
         }
{code}
Would it be possible to verify that this is sufficient as adding a sync map for properties will have a detremental overall effect on performance?","09/Dec/09 3:09 PM;garytully;Have opened https://issues.apache.org/activemq/browse/AMQ-2527 for this and attached a modified version of your patch. Can you have a look at it, main difference is the simpler sync change to message.java above and the configurable timeout and throw in the event of the timeout expiry.","09/Dec/09 3:13 PM;peterjones1;Hi Gary,

Yeah the performance impact was something that was concerning me about the change.  The hang was fairly consistently reproducible on aix, so I'll try out the sync on copy change instead a few times and let you know how it goes.

Regards,
Peter","09/Dec/09 4:24 PM;peterjones1;It seems that it's not just the copy operation which needs the synchronization.  I'm still seeing the hang with the sync in the copy.  One thread is waiting at the sync point, and the other is stuck inside the iteration through the map as before.  I suspect that another thread modifies the map as the iteration is taking place - maybe the checkpoint thread since it always seems to occur right after the first checkpoint is kicked off according to the logging.

I'll experiment a bit and let you know.","09/Dec/09 4:36 PM;peterjones1;
Okay, it looks like we need to synchronize in the setProperty method as well.  With the change below, I've run the AMQ2021 test half a dozen times on aix with no hang.  So I think this addition should make things good to go.

{code}
Index: activemq-core/src/main/java/org/apache/activemq/command/Message.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/command/Message.java        (revision 11970)
+++ activemq-core/src/main/java/org/apache/activemq/command/Message.java        (working copy)
@@ -117,7 +117,9 @@
         copy.groupSequence = groupSequence;

         if (properties != null) {
-            copy.properties = new HashMap<String, Object>(properties);
+            synchronized (properties) {
+                copy.properties = new HashMap<String, Object>(properties);
+            }
         } else {
             copy.properties = properties;
         }
@@ -171,7 +173,9 @@

     public void setProperty(String name, Object value) throws IOException {
         lazyCreateProperties();
-        properties.put(name, value);
+        synchronized (properties) {
+            properties.put(name, value);
+        }
     }

     protected void lazyCreateProperties() throws IOException {
{code}","09/Dec/09 5:11 PM;garytully;thanks for that, but thinking more, there should be no concurrent access to setting properties. I think the root cause may be in org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue(ConnectionContext, MessageReference) with the call to stampAsExpired(). This will modify the message properties even if the message has not expired. I am not sure why it is in there at all.

I think with that commented out and with the sync in the copy it will be ok.
Need to do a test run to see if there is any reason for that method call to be there, but I cannot see any reason for it. 
Bottom line though, I think, is that there should be minimal sync for a message as we go to lengths to ensure that it is only dealt with by one thread at a time or a copy is done.
{code}
Index: activemq-core/src/main/java/org/apache/activemq/broker/region/RegionBroker.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/broker/region/RegionBroker.java	(revision 888847)
+++ activemq-core/src/main/java/org/apache/activemq/broker/region/RegionBroker.java	(working copy)
@@ -700,7 +700,6 @@
 		try{
 			if(node!=null){
 				Message message=node.getMessage();
-				stampAsExpired(message);
 				if(message!=null && node.getRegionDestination()!=null){
 					DeadLetterStrategy deadLetterStrategy=node
 					        .getRegionDestination().getDeadLetterStrategy();
{code}","09/Dec/09 5:19 PM;peterjones1;Actually, seeing the hang again even with the setProperty synchronization... happens a lot less often with that change as I had to run the test more than a dozen times for this to occur, but still  getting the hang:

{code}
main:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos (AbstractQueuedSynchronizer.java:958)
  [4] java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos (AbstractQueuedSynchronizer.java:1,250)
  [5] java.util.concurrent.CountDownLatch.await (CountDownLatch.java:264)
  [6] org.apache.activemq.broker.TransportConnection.stop (TransportConnection.java:887)
  [7] org.apache.activemq.util.ServiceStopper.stop (ServiceStopper.java:41)
  [8] org.apache.activemq.broker.TransportConnector.stop (TransportConnector.java:281)
  [9] org.apache.activemq.util.ServiceStopper.stop (ServiceStopper.java:41)
  [10] org.apache.activemq.broker.BrokerService.stopAllConnectors (BrokerService.java:1,556)
  [11] org.apache.activemq.broker.BrokerService.stop (BrokerService.java:528)
  [12] org.apache.activemq.bugs.AMQ2021Test.tearDown (AMQ2021Test.java:94)
  [13] junit.framework.TestCase.runBare (TestCase.java:140)
  [14] junit.framework.TestResult$1.protect (TestResult.java:110)
  [15] junit.framework.TestResult.runProtected (TestResult.java:128)
  [16] junit.framework.TestResult.run (TestResult.java:113)
  [17] junit.framework.TestCase.run (TestCase.java:124)
  [18] junit.framework.TestSuite.runTest (TestSuite.java:232)
  [19] junit.framework.TestSuite.run (TestSuite.java:227)
  [20] org.junit.internal.runners.JUnit38ClassRunner.run (JUnit38ClassRunner.java:83)
  [21] org.apache.maven.surefire.junit4.JUnit4TestSet.execute (JUnit4TestSet.java:62)
  [22] org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet (AbstractDirectoryTestSuite.java:140)
  [23] org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute (AbstractDirectoryTestSuite.java:165)
  [24] org.apache.maven.surefire.Surefire.run (Surefire.java:107)
  [25] sun.reflect.NativeMethodAccessorImpl.invoke0 (native method)
  [26] sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:39)
  [27] sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:37)
  [28] java.lang.reflect.Method.invoke (Method.java:599)
  [29] org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess (SurefireBooter.java:289)
  [30] org.apache.maven.surefire.booter.SurefireBooter.main (SurefireBooter.java:1,005)
JIT Compilation Thread:
Signal Dispatcher:
  [1] com.ibm.misc.SignalDispatcher.waitForSignal (native method)
  [2] com.ibm.misc.SignalDispatcher.run (SignalDispatcher.java:54)
Gc Slave Thread:
Gc Slave Thread:
Gc Slave Thread:
Finalizer thread:
MemoryPoolMXBean notification dispatcher:
  [1] com.ibm.lang.management.MemoryNotificationThread.processNotificationLoop (native method)
  [2] com.ibm.lang.management.MemoryNotificationThread.run (MemoryNotificationThread.java:55)
OperatingSystemMXBean notification dispatcher:
  [1] com.ibm.lang.management.OperatingSystemNotificationThread.processNotificationLoop (native method)
  [2] com.ibm.lang.management.OperatingSystemNotificationThread.run (OperatingSystemNotificationThread.java:39)
RMI Scheduler(0):
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos (AbstractQueuedSynchronizer.java:1,974)
  [4] java.util.concurrent.DelayQueue.take (DelayQueue.java:175)
  [5] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take (ScheduledThreadPoolExecutor.java:593)
  [6] java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take (ScheduledThreadPoolExecutor.java:586)
  [7] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:957)
  [8] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [9] java.lang.Thread.run (Thread.java:735)
RMI TCP Accept-1099:
  [1] java.net.PlainSocketImpl.socketAccept (native method)
  [2] java.net.PlainSocketImpl.accept (PlainSocketImpl.java:414)
  [3] java.net.ServerSocket.implAccept (ServerSocket.java:464)
  [4] java.net.ServerSocket.accept (ServerSocket.java:432)
  [5] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop (TCPTransport.java:381)
  [6] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run (TCPTransport.java:353)
  [7] java.lang.Thread.run (Thread.java:735)
RMI TCP Accept-0:
  [1] java.net.PlainSocketImpl.socketAccept (native method)
  [2] java.net.PlainSocketImpl.accept (PlainSocketImpl.java:414)
  [3] java.net.ServerSocket.implAccept (ServerSocket.java:464)
  [4] java.net.ServerSocket.accept (ServerSocket.java:432)
  [5] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.executeAcceptLoop (TCPTransport.java:381)
  [6] sun.rmi.transport.tcp.TCPTransport$AcceptLoop.run (TCPTransport.java:353)
  [7] java.lang.Thread.run (Thread.java:735)
RMI Reaper:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:107)
  [4] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:79)
  [5] sun.rmi.transport.ObjectTable$Reaper.run (ObjectTable.java:350)
  [6] java.lang.Thread.run (Thread.java:735)
GC Daemon:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] sun.misc.GC$Daemon.run (GC.java:112)
ActiveMQ Scheduler:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
RMI RenewClean-[10.65.4.113:52462]:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.lang.ref.ReferenceQueue.remove (ReferenceQueue.java:107)
  [4] sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run (DGCClient.java:528)
  [5] java.lang.Thread.run (Thread.java:735)
ActiveMQ Data File Writer:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:167)
  [3] org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue (NIODataFileAppender.java:80)
  [4] org.apache.activemq.kaha.impl.async.DataFileAppender$2.run (DataFileAppender.java:230)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61617:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61617:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:52484:
  [1] org.apache.activemq.command.Message.copy (Message.java:120)
  [2] org.apache.activemq.command.ActiveMQMessage.copy (ActiveMQMessage.java:64)
  [3] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:57)
  [4] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:52)
  [5] org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue (RegionBroker.java:710)
  [6] org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ (PrefetchSubscription.java:462)
  [7] org.apache.activemq.broker.region.PrefetchSubscription.acknowledge (PrefetchSubscription.java:365)
  [8] org.apache.activemq.broker.region.AbstractRegion.acknowledge (AbstractRegion.java:373)
  [9] org.apache.activemq.broker.region.RegionBroker.acknowledge (RegionBroker.java:470)
  [10] org.apache.activemq.broker.TransactionBroker.acknowledge (TransactionBroker.java:194)
  [11] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [12] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [13] org.apache.activemq.broker.MutableBrokerFilter.acknowledge (MutableBrokerFilter.java:85)
  [14] org.apache.activemq.broker.TransportConnection.processMessageAck (TransportConnection.java:449)
  [15] org.apache.activemq.command.MessageAck.visit (MessageAck.java:205)
  [16] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:297)
  [17] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:175)
  [18] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [19] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [20] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [21] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [22] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [23] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [24] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:52495:
  [1] java.util.HashMap.putAllImpl (HashMap.java:679)
  [2] java.util.HashMap.<init> (HashMap.java:369)
  [3] org.apache.activemq.command.Message.copy (Message.java:121)
  [4] org.apache.activemq.command.ActiveMQMessage.copy (ActiveMQMessage.java:64)
  [5] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:57)
  [6] org.apache.activemq.command.ActiveMQTextMessage.copy (ActiveMQTextMessage.java:52)
  [7] org.apache.activemq.broker.region.RegionBroker.sendToDeadLetterQueue (RegionBroker.java:710)
  [8] org.apache.activemq.broker.region.PrefetchSubscription.sendToDLQ (PrefetchSubscription.java:462)
  [9] org.apache.activemq.broker.region.PrefetchSubscription.acknowledge (PrefetchSubscription.java:365)
  [10] org.apache.activemq.broker.region.AbstractRegion.acknowledge (AbstractRegion.java:373)
  [11] org.apache.activemq.broker.region.RegionBroker.acknowledge (RegionBroker.java:470)
  [12] org.apache.activemq.broker.TransactionBroker.acknowledge (TransactionBroker.java:194)
  [13] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [14] org.apache.activemq.broker.BrokerFilter.acknowledge (BrokerFilter.java:74)
  [15] org.apache.activemq.broker.MutableBrokerFilter.acknowledge (MutableBrokerFilter.java:85)
  [16] org.apache.activemq.broker.TransportConnection.processMessageAck (TransportConnection.java:449)
  [17] org.apache.activemq.command.MessageAck.visit (MessageAck.java:205)
  [18] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:297)
  [19] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:175)
  [20] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [21] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [22] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [23] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [24] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [25] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [26] java.lang.Thread.run (Thread.java:735)
InactivityMonitor ReadCheck:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
InactivityMonitor WriteCheck:
  [1] java.lang.Object.wait (native method)
  [2] java.lang.Object.wait (Object.java:196)
  [3] java.util.Timer$TimerImpl.run (Timer.java:230)
ActiveMQ Transport: tcp://localhost/127.0.0.1:61617:
  [1] java.net.SocketInputStream.socketRead0 (native method)
  [2] java.net.SocketInputStream.read (SocketInputStream.java:140)
  [3] org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill (TcpBufferedInputStream.java:50)
  [4] org.apache.activemq.transport.tcp.TcpBufferedInputStream.read (TcpBufferedInputStream.java:58)
  [5] java.io.DataInputStream.readInt (DataInputStream.java:381)
  [6] org.apache.activemq.openwire.OpenWireFormat.unmarshal (OpenWireFormat.java:272)
  [7] org.apache.activemq.transport.tcp.TcpTransport.readCommand (TcpTransport.java:210)
  [8] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:202)
  [9] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [10] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport: tcp:///127.0.0.1:52505:
  [1] org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending (PrefetchSubscription.java:582)
  [2] org.apache.activemq.broker.region.PrefetchSubscription.add (PrefetchSubscription.java:158)
  [3] org.apache.activemq.broker.region.DurableTopicSubscription.add (DurableTopicSubscription.java:199)
  [4] org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch (SimpleDispatchPolicy.java:49)
  [5] org.apache.activemq.broker.region.Topic.dispatch (Topic.java:588)
  [6] org.apache.activemq.broker.region.Topic.doMessageSend (Topic.java:442)
  [7] org.apache.activemq.broker.region.Topic.send (Topic.java:376)
  [8] org.apache.activemq.broker.region.AbstractRegion.send (AbstractRegion.java:354)
  [9] org.apache.activemq.broker.region.RegionBroker.send (RegionBroker.java:445)
  [10] org.apache.activemq.broker.TransactionBroker.send (TransactionBroker.java:224)
  [11] org.apache.activemq.broker.BrokerFilter.send (BrokerFilter.java:126)
  [12] org.apache.activemq.broker.CompositeDestinationBroker.send (CompositeDestinationBroker.java:95)
  [13] org.apache.activemq.broker.MutableBrokerFilter.send (MutableBrokerFilter.java:133)
  [14] org.apache.activemq.broker.TransportConnection.processMessage (TransportConnection.java:443)
  [15] org.apache.activemq.command.ActiveMQMessage.visit (ActiveMQMessage.java:631)
  [16] org.apache.activemq.broker.TransportConnection.service (TransportConnection.java:297)
  [17] org.apache.activemq.broker.TransportConnection$1.onCommand (TransportConnection.java:175)
  [18] org.apache.activemq.transport.TransportFilter.onCommand (TransportFilter.java:68)
  [19] org.apache.activemq.transport.WireFormatNegotiator.onCommand (WireFormatNegotiator.java:113)
  [20] org.apache.activemq.transport.InactivityMonitor.onCommand (InactivityMonitor.java:210)
  [21] org.apache.activemq.transport.TransportSupport.doConsume (TransportSupport.java:84)
  [22] org.apache.activemq.transport.tcp.TcpTransport.doRun (TcpTransport.java:203)
  [23] org.apache.activemq.transport.tcp.TcpTransport.run (TcpTransport.java:185)
  [24] java.lang.Thread.run (Thread.java:735)
ActiveMQ Transport Stopper: /127.0.0.1:52495:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.park (LockSupport.java:173)
  [3] java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt (AbstractQueuedSynchronizer.java:758)
  [4] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireQueued (AbstractQueuedSynchronizer.java:789)
  [5] java.util.concurrent.locks.AbstractQueuedSynchronizer.acquire (AbstractQueuedSynchronizer.java:1,125)
  [6] java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock.lock (ReentrantReadWriteLock.java:818)
  [7] org.apache.activemq.broker.TransportConnection$3.run (TransportConnection.java:906)
Persistence Adaptor Task:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (SynchronousQueue.java:435)
  [4] java.util.concurrent.SynchronousQueue$TransferStack.transfer (SynchronousQueue.java:334)
  [5] java.util.concurrent.SynchronousQueue.poll (SynchronousQueue.java:885)
  [6] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:955)
  [7] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [8] java.lang.Thread.run (Thread.java:735)
InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@2160216:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (SynchronousQueue.java:435)
  [4] java.util.concurrent.SynchronousQueue$TransferStack.transfer (SynchronousQueue.java:334)
  [5] java.util.concurrent.SynchronousQueue.poll (SynchronousQueue.java:885)
  [6] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:955)
  [7] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [8] java.lang.Thread.run (Thread.java:735)
InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@4720472:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (SynchronousQueue.java:435)
  [4] java.util.concurrent.SynchronousQueue$TransferStack.transfer (SynchronousQueue.java:334)
  [5] java.util.concurrent.SynchronousQueue.poll (SynchronousQueue.java:885)
  [6] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:955)
  [7] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [8] java.lang.Thread.run (Thread.java:735)
InactivityMonitor Async Task: java.util.concurrent.ThreadPoolExecutor$Worker@3440344:
  [1] sun.misc.Unsafe.park (native method)
  [2] java.util.concurrent.locks.LockSupport.parkNanos (LockSupport.java:213)
  [3] java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill (SynchronousQueue.java:435)
  [4] java.util.concurrent.SynchronousQueue$TransferStack.transfer (SynchronousQueue.java:334)
  [5] java.util.concurrent.SynchronousQueue.poll (SynchronousQueue.java:885)
  [6] java.util.concurrent.ThreadPoolExecutor.getTask (ThreadPoolExecutor.java:955)
  [7] java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:917)
  [8] java.lang.Thread.run (Thread.java:735)
{code}",09/Dec/09 9:45 PM;garytully;committed fix to apache trunk. https://issues.apache.org/activemq/browse/AMQ-2527 . Next step to get it into fuse.,10/Dec/09 11:58 AM;garytully;merged to http://fusesource.com/forge/svn/fusemq/branches/activemq-5.3.1-fuse r11978,,,,,
Port MB-432 to KahaDB persistence adapter,MB-592,12516013,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,03/Nov/09 3:28 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,20/Nov/09 2:52 PM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.0-psc-01-00RC1,,,broker,,,0,,"MB-432 was resolved for the journaled JDBC persistence adapter but not for KahaDB persistence adapter. Customer needs a fix for Kaha as well. 

All details are in MB-432 and apply to KahaDB as well.
","FUSE MB 5.3.0.4-fuse, KahaDB",,,,,,,,,,MB-432,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2042,,,,0.0,1.0,,1|hzkbwv:,178911,,,,,,,,20/Nov/09 2:52 PM;dbosanac;A lot of refactoring has been done to support configurable IOException handling. Take a look at http://activemq.apache.org/configurable-ioexception-handling.html for more info. This is all merged to 5.3.0.x and enterprise branches. ,,,,,,,,,,,,,,,,,,,
"If tmp message store fills up, broker can deadlock due to while producers wait on disk space and consumers wait on acks",MB-591,12516012,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,martinmurphy,martinmurphy,03/Nov/09 10:03 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,05/Jan/10 4:47 PM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,,,,broker,,,0,,See [AMQ-2475|https://issues.apache.org/activemq/browse/AMQ-2475] for details.,,,,,,,,,,,,,,,19/Nov/09 5:01 PM;socallag;testcase-20091119.zip;https://issues.jboss.org/secure/attachment/12368723/testcase-20091119.zip,18/Nov/09 8:40 AM;socallag;testcase.zip;https://issues.jboss.org/secure/attachment/12368722/testcase.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2475,,,,2.0,2.0,,1|hzkc4n:,178946,,,,,,,,"19/Nov/09 5:01 PM;socallag;I have tried turning producerFlowControl off but this made no difference. This will still need to be fixed as in users setup they may end up with several queues and thus hit tempUsage limits.

This latest testcase is more robust in that it contains multiple queues.",05/Jan/10 4:47 PM;rajdavies;Fixed by svn revision 12337,,,,,,,,,,,,,,,,,,
Unit test org.apache.activemq.config.ConfigTest.testJdbcConfig() intermittently failing on windows XP SP3,MB-588,12516009,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Trivial,Done,dbosanac,pfox,pfox,30/Oct/09 4:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,19/Dec/11 11:21 AM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.5.0-fuse-00-xx,5.5.1-fuse-02-02,,,broker,,,0,,"Fails with the following exception  

"": Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in file [C:\pfox\data\activemq-5.3.0.4-fuse\activemq-core\src\test\resources\org\apache\activemq\config\sample-conf\jdbc-example.xml]: Invocation of init method failed; nested exception is java.io.IOException: Failed to create database 'testJdbcConfig', see the next exception for details.""

The underlying exception is caused by ...\activemq-core\target\test-data\testJournaledJDBCConfig\testJdbcConfig already exists. It appear the test does not remove the ""testJdbcConfig"" db files correctly after a successful run.

Please see attached for full exception stack.


","Win XP ver 2002 SP3, Java version ""1.6.0_14"", Fuse Message Broker 5.3.0.4 ",,,,,,,,,,,,,,30/Oct/09 4:22 PM;pfox;org.apache.activemq.config.ConfigTest.txt;https://issues.jboss.org/secure/attachment/12368716/org.apache.activemq.config.ConfigTest.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkh1b:,179728,,,,,,,,"19/Dec/11 11:21 AM;dbosanac;This test s fixe long time ago and is stable in recent builds. I believe that this commit

http://svn.apache.org/viewvc?view=revision&revision=811019

was a fix for this particular failure. It's available in all recent branches.",,,,,,,,,,,,,,,,,,,
Broker won't recover corrupted Kaha DB files and refuses to start until the data directory is deleted,MB-587,12516006,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Duplicate Issue,rajdavies,stlewis,stlewis,30/Oct/09 12:54 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Nov/09 4:37 PM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"If an error occurs with the underlying filesystem the DB can become corrupted in some way.  Currently what will happen is that if the broker encounters an error with the Kaha DB caused by truncated data it will bail out and exit instead of recovering what it can and logging an appropriate error:

DEBUG AbstractRegion                 - localhost adding destination: queue://TEST.FOO
ERROR MapContainerImpl               - Failed to load container queue://TEST.FOO
java.io.EOFException
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:383)
	at java.io.RandomAccessFile.readFully(RandomAccessFile.java:361)
	at org.apache.activemq.kaha.impl.data.SyncDataFileReader.readItem(SyncDataFileReader.java:71)
	at org.apache.activemq.kaha.impl.data.DataManagerImpl.readItem(DataManagerImpl.java:142)
	at org.apache.activemq.kaha.impl.container.MapContainerImpl.load(MapContainerImpl.java:111)
	at org.apache.activemq.store.kahadaptor.KahaPersistenceAdapter.getMapContainer(KahaPersistenceAdapter.java:229)
	at org.apache.activemq.store.kahadaptor.KahaPersistenceAdapter.createQueueMessageStore(KahaPersistenceAdapter.java:106)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:80)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:468)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:266)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:149)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:176)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:103)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.BrokerService$3.start(BrokerService.java:1624)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:469)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:56)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1368)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1334)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:473)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:221)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:96)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:52)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:115)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:138)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
	at java.lang.reflect.Method.invoke(Method.java:597)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
	at org.apache.activemq.console.Main.main(Main.java:107)

To reproduce this:

1)  Use the attached activemq.xml
2)  Run the broker.
3)  Run the example producer like ""ant producer -Dmax=500 -Dtopic=false -Ddurable=true""
4)  Stop the broker.
5)  Truncate the queue data by cd'ing into data and running ""head data-queue-data-1 > data-queue-data-1""
6)  Start the broker, you'll see the above exception.  You won't be able to start the broker again until you delete the data directory.",,,,,,,,,,,,,,,30/Oct/09 12:54 PM;stlewis;activemq.xml;https://issues.jboss.org/secure/attachment/12368715/activemq.xml,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkbmf:,178864,,,,,,,,"02/Nov/09 4:37 PM;aileenc;Duplicate of MB-511

See comments under MB-511 for details of how to enable this.",,,,,,,,,,,,,,,,,,,
org.apache.activemq.bugs.DurableConsumerTest fails when run on windows XP SP3,MB-586,12516008,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,dbosanac,pfox,pfox,29/Oct/09 7:17 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,26/Feb/10 10:32 AM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0-fuse-01-00,,,,broker,,,0,,"When the org.apache.activemq.bugs.DurableConsumerTest it fails.See attached log for details.
","windows XP SP3, java version ""1.6.0_13"" , Maven version: 2.0.9",,,,,,,,,,,,,,29/Oct/09 7:20 PM;pfox;TEST-org.apache.activemq.bugs.DurableConsumerTest.xml;https://issues.jboss.org/secure/attachment/12368711/TEST-org.apache.activemq.bugs.DurableConsumerTest.xml,29/Oct/09 7:20 PM;pfox;org.apache.activemq.bugs.DurableConsumerTest.txt;https://issues.jboss.org/secure/attachment/12368712/org.apache.activemq.bugs.DurableConsumerTest.txt,,,,,,,,,,,,,,,,,,,,,,,,,2.0,2.0,,1|hzkcg7:,178998,,,,,,,,29/Oct/09 7:20 PM;pfox;failure logs,26/Feb/10 10:32 AM;dbosanac;Customer confirmed that it was resolved in 5.3.0-fuse-01-00,,,,,,,,,,,,,,,,,,
In a a network of brokers cannot setup SSL connections between brokers.,MB-585,12516007,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,29/Oct/09 2:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Nov/09 5:04 PM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,0,,"setting up a network of brokers using the config attached the brokers will throw the exception below

2009-10-12 17:37:56,958 ic-52.cern.ch#6 WARN TransportConnection - Failed to add Connection
java.lang.SecurityException: Unable to authenticate transport without SSL certificate.
at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:75)
at org.apache.activemq.broker.BrokerFilter.addConnection(BrokerFilter.java:82)
at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:686) at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134) at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:109)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:112)
at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
at org.apache.activemq.network.DemandForwardingBridgeSupport.startLocalBridge(DemandForwardingBridgeSupport.java:288)
at org.apache.activemq.network.DemandForwardingBridgeSupport$3.run(DemandForwardingBridgeSupport.java:248)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
at java.lang.Thread.run(Thread.java:619)",,,,,,,,,,,,,,,29/Oct/09 2:12 PM;socallag;broker1-dev-1840.xml;https://issues.jboss.org/secure/attachment/12368708/broker1-dev-1840.xml,29/Oct/09 2:12 PM;socallag;broker2-dev-1840.xml;https://issues.jboss.org/secure/attachment/12368709/broker2-dev-1840.xml,29/Oct/09 2:12 PM;socallag;groups.properties;https://issues.jboss.org/secure/attachment/12368713/groups.properties,29/Oct/09 2:12 PM;socallag;login.config;https://issues.jboss.org/secure/attachment/12368714/login.config,29/Oct/09 2:12 PM;socallag;users.properties;https://issues.jboss.org/secure/attachment/12368710/users.properties,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2474,,,,5.0,1.0,,1|hzkbov:,178875,,,,,,,,02/Nov/09 5:04 PM;dbosanac;Resolved and merged to 5.3.0.x trunk. You can find relevant test case here (http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/test/java/org/apache/activemq/security/JaasNetworkTest.java?view=markup&pathrev=831942),,,,,,,,,,,,,,,,,,,
Calling purge on a large queue causes OutOfMemoryError in the broker.,MB-560,12515982,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,mielket,mielket,26/Oct/09 3:24 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,30/Oct/09 11:53 AM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0-psc-01-00RC1,,,,broker,,,0,,"If purge is called on a queue with a total message size greater than the java max heap size configured (Xmx), the broker will run out of heap memory and raise an OutOfMemoryError.

This can be easily reproduced using the default persistence adapter configuration and a queue that has 1 million messages of 1 KB size each. Also use the default -Xmx settings which is 512 MB. 
Using the web console or JMX console purge the queue and observe the brokers heap memory usage and queue size of the queue to be purged. 
The heap goes straight up to the max and the decrease of the queue size slows down until it comes to a stand still (see attached screen shots).

It might take a couple of minutes before the broker eventually raises an OutOfMemoryError, due to the JVMs attempts to free more heap space.
{code}
Exception in thread ""RMI TCP Connection(33)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(35)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(37)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(36)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(38)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(39)-172.16.202.75"" Exception in thread ""RMI TCP Connection(40)-172.16.202.75"" java.lang.OutOfMemoryError: Java
 heap space
java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(41)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI RenewClean-[172.16.202.75:1750]"" java.lang.OutOfMemoryError: Java heap space
Exception in thread ""RMI TCP Connection(44)-172.16.202.75"" java.lang.OutOfMemoryError: Java heap space
{code}

","default AMQ store persistence adapter configuration, ",,,,,,,,,,,,,,26/Oct/09 3:25 PM;mielket;HeapUsage.JPG;https://issues.jboss.org/secure/attachment/12368707/HeapUsage.JPG,26/Oct/09 3:25 PM;mielket;QueueSizeDuringPurge.JPG;https://issues.jboss.org/secure/attachment/12368706/QueueSizeDuringPurge.JPG,,,,,,,,,,,,,,,,,,,,,,,,,2.0,2.0,,1|hzkbjr:,178852,,,,,,,,"28/Oct/09 3:30 PM;garytully;corresponding issue at apache: https://issues.apache.org/activemq/browse/AMQ-2468
","30/Oct/09 11:53 AM;garytully;fix on the 5.3.1 fuse branch, will make next 5.3.0-psc-01 milestone M3. Or is available in the next snapshot of 5.3.1-fuse.
There is quite a bit of work involved in a merge to 5.3.0-fuse for a 5.3.0.x as there are a bunch of relevant changes that have not made 5.3.0.4. For this reason, working with 5.3.1-fuse-SNAPSHOT, the precursor to 5.3.0-psc-01, is best.",,,,,,,,,,,,,,,,,,
"Timeouts in ActiveMQ Windows XP SP2, 32-bit, Java 6 Nightly",MB-559,12515980,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,e79ret,e79ret,23/Oct/09 1:56 PM,15/Feb/10 5:23 PM,29/Nov/16 4:16 PM,,5.3.0-psc-01-00M2,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"All the nightly runs have had an ""Execution timeout"" out this week.  See TeamCity link: http://teamcity:8111/viewType.html?buildTypeId=bt2084&tab=buildTypeStatusDiv
The timeouts don't appear to happen at the same point in testing.  The exceptions in the build log are never the same.","Windows XP SP2, 32-bit, Java 6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkcdb:,178985,,,,,,,,"23/Oct/09 6:13 PM;e79ret;This also happens in the Windows XP SP2, 32-bit, Java 5 nightly run.  Both nightlies run on a slower vm so maybe the TeamCity project needs to up it's build timeout.",,,,,,,,,,,,,,,,,,,
JMS clients stalled in case of many messages on a different queue.,MB-558,12515979,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,22/Oct/09 12:29 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,29/Oct/09 5:05 PM,5.0.0.27-fuse,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,broker,,,0,,"Consider the following scenario: a queue Q has 2 million messages that are all persistet into the JDBC db. Another producer/consumer pair connects to a different queue X but does not get to produce/consume any messages. 

Because of having two million msgs on one queue, the periodically run clean up task takes ages to complete (for me >20 mins) but locks the entire database during that time as it runs an SQL delete statement:

{code}
DEBUG DefaultJDBCAdapter - Executing SQL: DELETE FROM ACTIVEMQ_MSGS WHERE ( EXPIRATION<>0 AND EXPIRATION<?)
OR ID <= ( SELECT min(ACTIVEMQ_ACKS.LAST_ACKED_ID) FROM ACTIVEMQ_ACKS WHERE 
ACTIVEMQ_ACKS.CONTAINER=ACTIVEMQ_MSGS.CONTAINER)
{code}

During that time no other message (no matter for what queue) can be processed.
Also, the cleanup task is scheduled to run every 2-3 mins, so once it has completed to run over the 2 million messages (>20 mins) it is already late on schedule, hence it gets kicked off again straight away, not leaving much processing time for other threads to insert msgs into the db. So the threads managing the other queues starve and might perhaps never get the processing time to process their messages.

In order to diagnose this further I suggest to enable this logging:
{code}
log4j.logger.org.apache.activemq.store.jdbc=DEBUG
{code}

This should show the above SQL statement being executed for a long time and being called repeatedly as soon as it has finished.
Also, I suggest to attach jconsole to the broker and take a stack trace of the thread that manages the queue X and has a producer/consumer pair attached. It should be waiting almost forever in the following stack trace:

{code}
Name: QueueThread:queue://JMSLoadTest.queue.0
  State: RUNNABLE
  Total blocked: 1  Total waited: 0

  Stack trace: 
  java.net.SocketInputStream.socketRead0(Native Method)
  java.net.SocketInputStream.read(SocketInputStream.java:129)
  com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:113)
  com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:160)
  com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:188)
  com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:2428)
  com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:2882)
  com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:2871)
  com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3414)
  com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:1936)
  com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2060)
  com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2542)
  com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1734)
  com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1876)
  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:91)
  org.apache.commons.dbcp.DelegatingPreparedStatement.executeQuery(DelegatingPreparedStatement.java:91)
  org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doRecoverNextMessages(DefaultJDBCAdapter.java:709)
  org.apache.activemq.store.jdbc.JDBCMessageStore.recoverNextMessages(JDBCMessageStore.java:230)
  org.apache.activemq.store.ProxyMessageStore.recoverNextMessages(ProxyMessageStore.java:83)
  org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
  org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:210)
  org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:119)
  org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:131)
  org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1243)
  org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1378)
  org.apache.activemq.broker.region.Queue.iterate(Queue.java:1086)
  org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
  org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
  java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
  java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
  java.lang.Thread.run(Thread.java:595)
{code}
","FUSE MB 5.4, direct JDBC persistence to external database, large amount of message on a queue.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2470,,,,0.0,5.0,,1|hzkbj3:,178849,,,,,,,,22/Oct/09 12:43 PM;mielket;Perhaps a fix could limit the amount of time the cleanup task gets to executed to ensure it doesn't block everything else. ,"23/Oct/09 8:01 AM;mielket;This problem does not seem to manifest on every JDBC database. I reproduced it using MySQL. However when Apache Derby is used, the problem is not observed. It seems that Derby does not lock the entire db table when running the cleanup task's SQL statement (perhaps a row locking mechanism is applied). 
So whatever solution is worked out for this bug, it should probably be configurable. ","23/Oct/09 11:59 AM;garytully;the cleanup task is using a fixed rate rather than a fixed delay executor so changing that would make it a lot better. At least if it takes 20minutes, it will wait cleanupInterval before trying again. At the moment a bunch of cleanup executions will have backed up and it will execute immediately again.

That may do it. Another approach would be to limit the number of rows that are queried by the delete statement, but some state needs to be maintained to allow the entire table to be processed over time. ROWNUM > X < Y","29/Oct/09 2:12 PM;garytully;opened https://issues.apache.org/activemq/browse/AMQ-2470 at apache to implement some changes. Simplest solution is to have the cleanup on a fixed delay schedule so that if it takes 20 minutes, and with a period of 10 minutes, it will wait 10 minutes from when it finishes. ie: fixed delay. At the moment it is on a fixed rate schedule.
If this is not sufficient, a limit via ROWNUM needs to be explored.","29/Oct/09 5:05 PM;garytully;merged fix from https://issues.apache.org/activemq/browse/AMQ-2470 - making cleanup have fixed delay.

cleanup period attribute on the JDBCPeristenceAdapter allows the period to be configured. This period is now the delay from the finish of the task till the next start such that it won't hog the DB.",,,,,,,,,,,,,,,
JMX purge() does not delete messages,MB-556,12515978,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,21/Oct/09 1:15 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,23/Nov/09 2:13 PM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.6-fuse,5.3.0-psc-01-00RC1,,,broker,,,1,,"The attached test case puts some messages on a queue and then uses JMX to call the purge operation.  After the operation has been called the messages are still on the queue, I would expect the queue to be empty.",,,,,,,,,,,,,,,21/Oct/09 1:16 PM;stlewis;test-case.tar.gz;https://issues.jboss.org/secure/attachment/12368704/test-case.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2468,,,,1.0,2.0,,1|hzkchj:,179004,,,,,,,,"21/Oct/09 1:16 PM;stlewis;Here's the test, just do ""mvn clean install"" to run it.","23/Nov/09 2:13 PM;dbosanac;The issue is solved on the trunk with the https://issues.apache.org/activemq/browse/AMQ-2468 (purge for the large queues). the fix is now merged to 5.3.0.x branch. Also, note that there is a bug in a test case. The last assertion should be

{code}        assertEquals(0, messagesAfterPurge.size()); {code}

not 

{code} assertEquals(0, messages.size());{code}

",,,,,,,,,,,,,,,,,,
tmp_storage is not clean up once a slow subscriber is disconnected.,MB-553,12515974,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,socallag,socallag,14/Oct/09 9:09 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,23/Oct/09 12:35 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,0,,"This has already been raised on Apache:

With a producer sending messages to a topic with a slow subscriber, and messages accumulating under the tmp_storage, if the consumer is disconnected messages pushed to tmp_storage are not cleaned up by the broker. 

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2314,,,,0.0,2.0,,1|hzkbgn:,178838,,,,,,,,14/Oct/09 10:34 AM;socallag;Customer requested fix version: 5.3.0.5-fuse,23/Oct/09 12:35 PM;garytully;Fix ready for 5.3.0.5 - James commented on the apache jira to indicate he would validate the fix against his expectations as I worked from a test case I produced. It does look like the same issue though.,,,,,,,,,,,,,,,,,,
Peer certificates not propagated when using stomp+ssl w/mutual authentication,MB-552,12515973,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,13/Oct/09 4:41 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,14/Oct/09 10:51 AM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,0,,"When using stomp with ssl, and the ssl transport w/mutual authentication then the broker throws and ""Unable to authenticate transport without SSL certificate.""

{code}
Unable to authenticate transport without SSL certificate.

java.lang.SecurityException: Unable to authenticate transport without SSL certificate.
at org.apache.activemq.security.JaasCertificateAuthenticationBroker.addConnection(JaasCertificateAuthenticationBroker.java:75)
at org.apache.activemq.broker.MutableBrokerFilter.addConnection(MutableBrokerFilter.java:89)
at org.apache.activemq.broker.TransportConnection.processAddConnection(TransportConnection.java:686)
at org.apache.activemq.broker.jmx.ManagedTransportConnection.processAddConnection(ManagedTransportConnection.java:86)
at org.apache.activemq.command.ConnectionInfo.visit(ConnectionInfo.java:134)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:78)
at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:135)
at org.apache.activemq.transport.stomp.ProtocolConverter.onStompConnect(ProtocolConverter.java:491)
at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommand(ProtocolConverter.java:187)
at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:67)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
at org.apache.activemq.transport.tcp.SslTransport.doConsume(SslTransport.java:104)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
at java.lang.Thread.run(Thread.java:636)

{code}",5.3.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2449,,,,0.0,1.0,,1|hzkbe7:,178827,,,,,,,,14/Oct/09 10:51 AM;dbosanac;Merged to 5.3.0.x branch. Thanks,,,,,,,,,,,,,,,,,,,
Roll out fix for AMQ-2439 in next release of FUSE MB 5.3 (5.3.0.5),MB-551,12515972,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ubhole,ubhole,12/Oct/09 1:38 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,12/Oct/09 5:07 PM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,0,,"Roll out fix for AMQ-2439 in next release of FUSE MB 5.3 (5.3.0.5).
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-2439,,,,0.0,3.0,,1|hzkbdz:,178826,,,,,,,,12/Oct/09 3:15 PM;martinmurphy;Closing since this is already fixed at Apache and will be in the 5.3.0.5 release.,12/Oct/09 4:11 PM;garytully;there is need for a manual merge to get it into 5.3.0.5 but that has not been completed yet. working on it at the moment,12/Oct/09 5:07 PM;garytully;merge complete - fix now on branch for 5.3.0.5,,,,,,,,,,,,,,,,,
LDAPLoginModuleTest fails with ibm jdk,MB-550,12515971,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,peterjones1,peterjones1,09/Oct/09 3:01 PM,20/Oct/09 12:42 PM,29/Nov/16 4:16 PM,20/Oct/09 12:42 PM, 5.3.1.0M1-fuse,,,,,,,,,,,,,,,,,,,,5.3.0-psc-01-00M2,,,,broker,,,0,,"An issue in apache directory server 1.5.4 causes the following exception in the LDAPLoginModuleTest when run with the ibm jdk:

{code}
java.lang.RuntimeException: Failed to create KeyManagerFactory
at org.apache.directory.server.ldap.handlers.extended.StartTlsHandler.setLdapServer(StartTlsHandler.java:164)
at org.apache.directory.server.ldap.LdapService.startLDAP0(LdapService.java:393)
at org.apache.directory.server.ldap.LdapService.start(LdapService.java:321)
at org.apache.directory.server.integ.state.NonExistentState.startup(NonExistentState.java:114)
at org.apache.directory.server.integ.state.NonExistentState.test(NonExistentState.java:202)
at org.apache.directory.server.integ.state.TestServerContext.test(TestServerContext.java:187)
at org.apache.directory.server.integ.SiRunner.invokeTestMethod(SiRunner.java:103)
at org.junit.internal.runners.JUnit4ClassRunner.runMethods(JUnit4ClassRunner.java:51)
at org.junit.internal.runners.JUnit4ClassRunner$1.run(JUnit4ClassRunner.java:44)
at org.junit.internal.runners.ClassRoadie.runUnprotected(ClassRoadie.java:27)
at org.junit.internal.runners.ClassRoadie.runProtected(ClassRoadie.java:37)
at org.junit.internal.runners.JUnit4ClassRunner.run(JUnit4ClassRunner.java:42)
at org.apache.directory.server.integ.SiRunner.run(SiRunner.java:77)
at org.apache.maven.surefire.junit4.JUnit4TestSet.execute(JUnit4TestSet.java:62)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:140)
at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:165)
at org.apache.maven.surefire.Surefire.run(Surefire.java:107)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:37)
at java.lang.reflect.Method.invoke(Method.java:599)
at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:289)
at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:1005)
Caused by: java.security.NoSuchAlgorithmException: SunX509 KeyManagerFactory not available
at sun.security.jca.GetInstance.getInstance(GetInstance.java:230)
at javax.net.ssl.KeyManagerFactory.getInstance(KeyManagerFactory.java:16)
at org.apache.directory.server.ldap.handlers.extended.StartTlsHandler.setLdapServer(StartTlsHandler.java:160)
... 22 more
{code}

The issue has been fixed in apacheds 1.5.5, and I've attached a patch to upgrade the version of apacheds used in activemq-jaas which resolves the test failure.",ibm jdk,,,,,,,,,,,,,,09/Oct/09 9:15 PM;peterjones1;LDAPLoginModuleTest.and.test.timing.patch.txt;https://issues.jboss.org/secure/attachment/12368703/LDAPLoginModuleTest.and.test.timing.patch.txt,09/Oct/09 3:04 PM;peterjones1;LDAPLoginModuleTest.patch.txt;https://issues.jboss.org/secure/attachment/12368702/LDAPLoginModuleTest.patch.txt,,,,,,,,,,,,,,,,,,,,,,,,,2.0,4.0,,1|hzkbfj:,178833,,,,,,,,09/Oct/09 3:04 PM;peterjones1;Upgrade to apacheds 1.5.5.,"09/Oct/09 9:15 PM;peterjones1;Added a couple of changes to make a couple of additional tests pass a bit more reliably on slow machines.
Changed timing in QueueConsumerPriorityTest and AMQ2021Test and changed jmx port in SecurityJMXTest so the test won't fail when something is already using the default port.","19/Oct/09 3:44 PM;garytully;will route these additional test changes via the apache 5.3 branch and onto the fuse 5.3 branch ready for 5.3.1. With that I will sync up the fuse 5.3 branch with the apache branch from where apache 5.3.0 was released. 
Until apache 5.3.1 is released, fuse 5.3.1 will be ahead of apache.",20/Oct/09 12:42 PM;garytully;fixes area all on the fuse 5.3.1 branch,,,,,,,,,,,,,,,,
When using pendingQueuePolicy the Broker throwing ResourceAllocationExceptions will not send consumers messages,MB-547,12515969,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,24/Sep/09 3:14 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,08/Oct/09 8:48 AM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,0,,"   1. start a broker using the config attached
   2. start some producers that permanently send to a single queue
   3. wait until the queues memory limit is reached and the broker shows ResourceAllocationException
   4. start at least one consumer for the queue

The consumers will not receive any messages.

Note: if the consumer sets up the connection with the broker prior to the memory exception being thrownm it and subsequent consumers will be able to receive the messages.
",,,,,,,,,,,,,,,24/Sep/09 3:14 PM;socallag;activemq-dev1767-2.xml;https://issues.jboss.org/secure/attachment/12368700/activemq-dev1767-2.xml,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2443,,,,1.0,2.0,,1|hzkbdj:,178824,,,,,,,,"08/Oct/09 8:48 AM;dbosanac;The problem is not related to pendingQueuePolicy, but the sendAdvisoryIfNoConsumers option which altered the original message instead of sending a copy of it. It is now resolved and merged to 5.3.0.x branch",12/Oct/09 3:17 PM;martinmurphy;Just adding the fix version for the next 5.3 release.,,,,,,,,,,,,,,,,,,
messages left in JDBC database but not showing up in ActiveMQ web console nor JMX console,MB-545,12515966,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,mielket,mielket,23/Sep/09 3:35 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,12/Apr/10 7:44 PM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.1-fuse-00-00,,,,broker,,,3,,"We have encountered a situation where the broker reports no messages being in a the queue but a query on the database shows unconsumed messages in the activemq_msgs table. Any connected consumers will not receive these messages. 

Restarting the broker re-activates the messages and the broker will deliver them to reconnecting clients. 

The attached testcase can be used to reproduce the problem. 
Use mvn exec:java to start the load test against a broker that is configured for direct JDBC. An sample broker config is enclosed in the testcase and uses a direct JDBC connection to a MySQL database. ","FUSE MB 5.3.0.3-fuse, direct JDBC persistence, SpringJMS, AMQ PooledConnectionFactory",,,,,,,,,,,,,,02/Oct/09 5:55 PM;dbosanac;mb545.zip;https://issues.jboss.org/secure/attachment/12368701/mb545.zip,23/Sep/09 3:35 PM;mielket;testcase.zip;https://issues.jboss.org/secure/attachment/12368699/testcase.zip,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1886,,,,2.0,10.0,,1|hzkclj:,179022,,,,,,,,"29/Sep/09 4:16 PM;dbosanac;Hi,

I tracked some changes between 5.2 and 5.3 that probably causes this problem (https://issues.apache.org/activemq/browse/AMQ-1886). They should be fixed now in apache trunk and apache 5.3 branch. Your test case runs fine against it.

I'll work more tomorrow to include your test case into ActiveMQ as unit test, so we can be sure this works correctly in the future.

It would be great if you could run your test against current apache trunk (https://svn.apache.org/repos/asf/activemq/trunk) and 5.3 branch (soon to apache 5.3.0 release - https://svn.apache.org/repos/asf/activemq/branches/activemq-5.3) and confirm if it behaves as it should.

Regards
Dejan",02/Oct/09 11:23 AM;dbosanac;Committed the proposed change in https://issues.apache.org/activemq/browse/AMQ-2436,"02/Oct/09 5:55 PM;dbosanac;Fixed another issue related to this problem https://issues.apache.org/activemq/browse/AMQ-2437

I think that now all should be fine regarding this problem. It would be great if someone could test the latest apache trunk (or 5.3 branch). Note that the original test case should be modified a bit (mb5454.zip) to ensure that every queue have at least one consumer.

Looking forward to results of your testings.",05/Oct/09 3:41 PM;mielket;I made intensive tests against the latest trunk and can't reproduce the bug anymore. It seems the problem is fixed.,14/Oct/09 8:50 AM;dbosanac;Fixes merged to 5.3.0.x branch,04/Dec/09 2:32 PM;mielket;The problem has re-occured at the customer site.,16/Feb/10 3:42 PM;garytully;change fix version to reflect snapshots of 5.3.0-fuse-00 that are being verified on customer site. My understanding is that the customer will move to 5.3.0-fuse-01-00,12/Apr/10 7:44 PM;garytully;this release is just out and has all the fixes,"13/Apr/10 4:10 PM;hzbarcea1;Gary, I assume you mean the newest 5.3.1-fuse-00-00 release","13/Apr/10 4:58 PM;garytully;Hadrian, yea. the fix version.",,,,,,,,,,
Fixes for StompTest and XmppTest failure with ibm jdk 6,MB-544,12515964,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,peterjones1,peterjones1,17/Sep/09 8:43 PM,19/Oct/09 6:20 PM,29/Nov/16 4:16 PM,06/Oct/09 12:21 PM,,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,5.3.0-psc-01-00M2,,,,,,0,,"Working on the customer certification of ibm jdk 6 on aix, these two failures were uncovered in the activemq build.

The StompTest and StompSslTest fail with ibm jdk 6.   There was a work-around added to this test to account for the different ordering of elements in the response when using the ibm jdk.  However, this work-around seems to be necessary only for ibm jdk 5.   The patch attached to this jira modifies the test to check for the version string of the jdk as well as the vendor of the jdk when determining to use the work-around.

The XmppTest fails with the ibm jdk 6, but not with ibm jdk 5.  Was getting an exception with a message ""No response from server.: PacketReadder.java:164"" when the test attempts to connect to the xmpp server.  A google search revealed a problem with the same error on jdk 6 was resolved in the latest version of the smack software, and after upgrading the version in the pom, and making some minor changes to the test to use the modified api, the test passed fine.

I've attached a patch with these two changes for review.  Let me know what you think and if you'd like me to make any changes to the patch.",ibm jdk 6,,,,,,,,,,,,,,17/Sep/09 8:44 PM;peterjones1;StompTest-XmppTest.patch.txt;https://issues.jboss.org/secure/attachment/12368698/StompTest-XmppTest.patch.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2442,,,,1.0,3.0,,1|hzkbev:,178830,,,,,,,,17/Sep/09 8:44 PM;peterjones1;Patch to resolve test failures when building with ibm jdk 6 on aix for customer certification.,25/Sep/09 9:30 AM;aileenc;Can you review and apply when you get a chance?,"06/Oct/09 12:21 PM;dbosanac;The patch is now applied to trunk, 5.3.0.x and 5.3.1.x branches. Thanks",,,,,,,,,,,,,,,,,
Backport fix for AMQ-1859,MB-543,12515965,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gseben,gseben,15/Sep/09 8:37 PM,16/Sep/09 12:25 PM,29/Nov/16 4:16 PM,16/Sep/09 12:25 PM,5.0.0.27-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.30-fuse,,,,,,,0,,"A fix for [AMQ-1859 | http://issues.apache.org/activemq/browse/AMQ-1859] was released in 5.3. However customer needs this backported to 5.0.0.x and then have the new message broker embedded in a FUSEE ESB 3.3.1.18. 
","FUSE ESB 3.3.1.18
FUSE MB 5.0.0.27",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkbcf:,178819,,,,,,,,16/Sep/09 12:25 PM;dbosanac;Resolved for 5.0.0.30,,,,,,,,,,,,,,,,,,,
Brokers cannot reestablish forwarding bridge,MB-542,12515963,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,hzbarcea1,hzbarcea1,14/Sep/09 3:10 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,28/Apr/10 2:03 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,broker,,,2,,"This is related to DEV-1697 (see logs and dumps attached to it).

In dump01.log there is the NPE that is the most suspicious and needs to be resolved","Ubuntu 8.42, Fuse 5.3.0.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkcnr:,179032,,,,,,,,18/Sep/09 11:30 AM;garytully;I think the fix for https://issues.apache.org/activemq/browse/AMQ-1855 will help with this. Currently 5.3.0.2 is a long way off trunk w.r.t fixes so this is not a trivial merge. I think it makes sense to have 5.3.0.5 sync up with the latest trunk (minus the upgrade to camel 2.0),28/Apr/10 2:03 PM;garytully;seems to be resolved at customer site by upgrade,,,,,,,,,,,,,,,,,,
Fuse Installer doesn't work with Windows 2003 64bit,MB-537,12515958,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,gseben,gseben,08/Sep/09 7:15 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,Installer,,,0,,When trying to install the message broker on a Windows 2003 64bit with a 64 bit JVM the installer fails with a message saying that Win64 is not a supported platform.The installer works when the JVM is switched to a 32bit one. ,"Windows Server 2003 64bit, FUSE MB 5.3.0.3, JDK 1.5.0_20 64-bit ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkbaf:,178810,,,,,,,,,,,,,,,,,,,,,,,,,,,
Consumer does not receive all messages if producer on another networked broker OOMs,MB-535,12515956,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,mpc755,mpc755,27/Aug/09 5:42 PM,27/Aug/09 5:43 PM,29/Nov/16 4:16 PM,,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"A producer is sending persistent messages to a broker. The broker sends messages until being blocked due to running into memoryUsage/storeUsage limits, or the broker OOMs.

Broker settings:

<memoryUsage limit=""100 mb"" />
<storeUsage limit=""50 mb"" name=""foo"" />
<tempUsage limit=""100 mb"" />

The broker is started with -Xmx20m and OOMs.

The broker is restarted with -Xmx40m and the producer sends messages until blocked.
A consumer is started on another broker in the cluster and consumes messages.

The sender does not receive all of the messages.

Prior to the broker getting the OOM the producer is on:

Messages Sent before producer blocked: 38300 (MSGCOUNT is 38301)
Total Messages Sent: 38300
Total Messages Received: 0

On restart of the broker:

TEST BROKER1: 13:16:52 INFO  [main] AMQPersistenceAdapter: Recovered 38300 operations from redo log in 6.89 seconds.

Consumer broker on restart:

TEST BROKER2: 13:16:55 INFO  [main] AMQPersistenceAdapter: Recovered 0 operations from redo log in 0.047 seconds.

Test executed with broker memory set to -Xmx40m:

Messages Sent before producer blocked: 30695 (MSGCOUNT is 30696)
Consumer connection started.
Messages Received: 10482 (MSGCOUNT is 10482)
Messages Received: 21832 (MSGCOUNT is 21832)
Messages Received: 31739 (MSGCOUNT is 31739)
Messages Sent: 30695
Messages Received: 31739
Messages Received: 31739
Messages Received: 31739
Messages Received: 31739
...
Messages Received: 31739
Total Messages Sent: 68995
Total Messages Received: 31739

To execute run the attached org.fusesource.fusemq.memory.NetworkQueueSystemUsage",windows,,,,,,,,,,,,,,27/Aug/09 5:43 PM;mpc755;NetworkQueueSystemUsage.java;https://issues.jboss.org/secure/attachment/12368697/NetworkQueueSystemUsage.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,0.0,,1|hzkb7z:,178799,,,,,,,,,,,,,,,,,,,,,,,,,,,
ManagedTransportConnection - Failed to register MBean,MB-534,12515953,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,mielket,mielket,24/Aug/09 3:17 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,1,,"Suppose two brokers each define two network connectors with a different name attribute (and also a different brokerName attribute) like in this example:

{code:xml}
            <networkConnector conduitSubscriptions=""false""
                            brokerName=""amq01.prod.1""
                            duplex=""false""
                            networkTTL=""5""
                            name=""queue_grid""
                            dynamicOnly=""false""
                            uri=""multicast://239.255.2.3:6155""
                            decreaseNetworkConsumerPriority=""false"">
                <excludedDestinations>
                    <topic physicalName="">""/>
                </excludedDestinations>
                <staticallyIncludedDestinations>
                    <queue physicalName="">""/>
                </staticallyIncludedDestinations>
            </networkConnector>
            <networkConnector conduitSubscriptions=""true""
                            brokerName=""amq01.prod.2""
                            duplex=""false""
                            networkTTL=""5""
                            name=""topic_grid""
                            dynamicOnly=""false""
                            uri=""multicast://239.255.2.3:6155""
                            decreaseNetworkConsumerPriority=""false"">
            </networkConnector>
{code}

The configuration is correct but it raises the following warning at runtime:
{code}
ManagedTransportConnection     - Failed to register MBean: 
org.apache.activemq:BrokerName=amq01.prod,Type=Connection,ConnectorName=tcp_//localhost_0,
Connection=NC_amq02.prod_outbound
{code}

in both brokers. 
This is because each brokers network connector will be registered at the peer broker. However they both use the same MBean name although the network connector name attribute and brokerName attribute are unique.

","FUSE MB 5.3.0.2-fuse, multicast,",,,,,,,,,,,,,,24/Aug/09 3:49 PM;mielket;JUnitTestcase.zip;https://issues.jboss.org/secure/attachment/12368696/JUnitTestcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkb7j:,178797,,,,,,,,"24/Aug/09 3:22 PM;mielket;Discussed the problem with gtully and he suggested that the network connector name should be part of the mbean name that is being registered. 


Also noticed that the brokerName attribute in the network connector config gets overridden with the brokerName of the <broker> config just before starting the network connector. 
{code:title=XBeanBrokerSevice.java}
//around line 1895, method startAllConnectors
for (Iterator<NetworkConnector> iter = getNetworkConnectors().iterator(); iter.hasNext();) {
                NetworkConnector connector = iter.next();
                connector.setLocalUri(uri);
                connector.setBrokerName(getBrokerName());
                connector.setDurableDestinations(durableDestinations);
                connector.start();
            }

{code}","24/Aug/09 3:30 PM;mielket;Also, when stopping a broker, the unregistration of this mbean fails.",24/Aug/09 3:49 PM;mielket;Attaching JUnit testcase. It could be improved though.,,,,,,,,,,,,,,,,,
Installer fails on 64-bit Windows,MB-532,12515955,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,lvisnick,lvisnick,20/Aug/09 7:44 PM,20/Aug/09 7:44 PM,29/Nov/16 4:16 PM,,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,,,,,Installer,,,3,,"Installer fails on 64-bit box with 64-bit jvm.  details button yields this output:
Fatal Application Error

This Application has Unexpectedly Quit

Invocation of this Java Application has caused an InvocationTargetException. This application will now exit. (LAX)

Details...

ZeroGpd: Windows DLL failed to load
at ZeroGae.a(DashoA8113)
at ZeroGae.b(DashoA8113)
at com.zerog.ia.installer.LifeCycleManager.b(DashoA8113)
at com.zerog.ia.installer.LifeCycleManager.a(DashoA8113)
at com.zerog.ia.installer.Main.main(DashoA8113)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at com.zerog.lax.LAX.launch(DashoA8113)
at com.zerog.lax.LAX.main(DashoA8113)

","64-bit win server 2008, 64-bit jdk (or 64-bit jre)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkb67:,178791,,,,,,,,,,,,,,,,,,,,,,,,,,,
staticallyIncludedDestinations set in a Network of Brokers results in duplicate messages,MB-531,12515952,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,17/Aug/09 10:22 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,20/Aug/09 10:46 AM,,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,1,,"On a  network of 2 brokers, if one or both of the brokers is set to use staticallyIncludedDestinations in it's networkConnectors then a topic consumer will receive duplicate messages from a topic producer.",,,,,,,,,,,,,,,17/Aug/09 10:26 AM;socallag;activemq1-DEV1693.xml;https://issues.jboss.org/secure/attachment/12368694/activemq1-DEV1693.xml,17/Aug/09 10:26 AM;socallag;activemq2-DEV1693.xml;https://issues.jboss.org/secure/attachment/12368695/activemq2-DEV1693.xml,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2359,,,,2.0,2.0,,1|hzkb5r:,178789,,,,,,,,"17/Aug/09 10:26 AM;socallag;start two brokers using the configs attached.

Run

ant producer -Dtopic=true -Durl=tcp://localhost:61617

ant consumer-Dtopic=true -Durl=tcp://localhost:61627

The producer produces 2000 messages, the consumer consumes 2 of every message up to message 999.
",20/Aug/09 10:46 AM;dbosanac;Fixed and merged in 5.3.0 branch,,,,,,,,,,,,,,,,,,
The config  tempUsage limit does not respect sendFailNoSpace attribute,MB-530,12515951,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,socallag,socallag,12/Aug/09 3:27 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Setting up the systemUsage:

        <systemUsage> 
            <systemUsage sendFailIfNoSpace=""true"">
                <memoryUsage>
                    <memoryUsage limit=""10 mb""/>
                </memoryUsage>
                <storeUsage>
                    <storeUsage limit=""2 mb"" name=""foo""/>
                </storeUsage>
                <tempUsage>
                    <tempUsage limit=""100 mb""/>
                </tempUsage>
            </systemUsage>
        </systemUsage> 

A producer sending messages will eventually hang when the broker runs out of tempUsage space but the broker does not send an exception so producer is not aware of a problem.



",Windows,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkbbj:,178815,,,,,,,,,,,,,,,,,,,,,,,,,,,
Error building fuse mb 5.3.0.4 due to unable to resolve artifact for com.agilejava.docbkx:docbkx-maven-plugin:pom:2.0.3   ,MB-528,12515948,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,dbosanac,joe.luo,joe.luo,10/Aug/09 11:38 AM,19/Aug/09 7:57 AM,29/Nov/16 4:16 PM,19/Aug/09 7:57 AM,5.3.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,,,,0,,"The activemq-book module uses ""docbkx-maven-plugin"" 2.0.3 to generate PDF file. However, the version 2.0.3 of docbkx-maven-plugin is no longer available from neither [http://repo1.maven.org/maven2/com/agilejava/docbkx/docbkx-maven-plugin/] nor [http://mvnrepository.com/artifact/com.agilejava.docbkx/docbkx-maven-plugin]. For people who does not have old local repository for this particular docbkx-maven-plugin version (2.0.3), they can not build the activemq-book module.

I have tried to modify pom.xml file from ""activemq-book"" module to use docbkx-maven-plugin version 2.0.9 instead:
{code}
...
<plugin>
        <groupId>com.agilejava.docbkx</groupId>
        <artifactId>docbkx-maven-plugin</artifactId>
        <version>2.0.9</version>
        <executions>
...
{code}

However, I got an error:
{quote}
[INFO] [docbkx:generate-pdf {execution: default}]
[INFO] Processing activemq.xml
[DEBUG] Xerces XInclude mode entered
[DEBUG] Customization: E:\opensources\fuse-mb\5.3.0.4-tag\activemq-book/src/styles/docbook-fo.xsl
[DEBUG] Customization: E:\opensources\fuse-mb\5.3.0.4-tag\activemq-book/src/styles/docbook-fo.xsl
[DEBUG] Customization: E:\opensources\fuse-mb\5.3.0.4-tag\activemq-book/src/styles/docbook-fo.xsl
[DEBUG] Configure the transformer.
[DEBUG] <!ENTITY % ____next SYSTEM ""jar:file:/E:/repository/org/docbook/docbook-xml/4.4/docbook-xml-
4.4.jar!/docbookx.dtd"">
%____next;
<!ENTITY version ""5.3.0.4-fuse"">
<!ENTITY % ____type SYSTEM ""docbkx.fo.ent"">
%____type;

[DEBUG] Handling type specific entities.
[DEBUG] Searching for E:\opensources\fuse-mb\5.3.0.4-tag\activemq-book\src\docbkx\docbkx.fo.ent
[DEBUG] File does not exist, so returning empty file.
[DEBUG] <fop version=""1.0"">
  <renderers>
        <renderer mime=""application/pdf"">
          <fonts>
          </fonts>
        </renderer>
  </renderers>
</fop>
[INFO] ------------------------------------------------------------------------
[ERROR] BUILD ERROR
[INFO] ------------------------------------------------------------------------
[INFO] Failed to transform to PDF

Embedded error: org.apache.fop.apps.FOPException: null:1:28984: Error(1/28984): No element mapping d
efinition found for (Namespace URI: ""http://xml.apache.org/fop/extensions"", Local Name: ""destination
"")
[INFO] ------------------------------------------------------------------------
[DEBUG] Trace
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to transform to PDF
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor
.java:583)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalWithLifecycle(DefaultLifec
ycleExecutor.java:499)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoal(DefaultLifecycleExecutor.
java:478)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoalAndHandleFailures(DefaultL
ifecycleExecutor.java:330)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeTaskSegments(DefaultLifecycleE
xecutor.java:291)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.execute(DefaultLifecycleExecutor.java
:142)
        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:336)
        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:129)
        at org.apache.maven.cli.MavenCli.main(MavenCli.java:287)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.codehaus.classworlds.Launcher.launchEnhanced(Launcher.java:315)
        at org.codehaus.classworlds.Launcher.launch(Launcher.java:255)
        at org.codehaus.classworlds.Launcher.mainWithExitCode(Launcher.java:430)
        at org.codehaus.classworlds.Launcher.main(Launcher.java:375)
Caused by: org.apache.maven.plugin.MojoExecutionException: Failed to transform to PDF
        at com.agilejava.docbkx.maven.AbstractPdfMojo.postProcessResult(AbstractPdfMojo.java:117)
        at com.agilejava.docbkx.maven.AbstractTransformerMojo.execute(AbstractTransformerMojo.java:2
24)
        at org.apache.maven.plugin.DefaultPluginManager.executeMojo(DefaultPluginManager.java:451)
        at org.apache.maven.lifecycle.DefaultLifecycleExecutor.executeGoals(DefaultLifecycleExecutor
.java:558)
        ... 16 more
Caused by: javax.xml.transform.TransformerException: org.apache.fop.apps.FOPException: null:1:28984:
 Error(1/28984): No element mapping definition found for (Namespace URI: ""http://xml.apache.org/fop/
extensions"", Local Name: ""destination"")
        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.ja
va:501)
        at com.agilejava.docbkx.maven.AbstractPdfMojo.postProcessResult(AbstractPdfMojo.java:105)
        ... 19 more
Caused by: org.apache.fop.apps.FOPException: null:1:28984: Error(1/28984): No element mapping defini
tion found for (Namespace URI: ""http://xml.apache.org/fop/extensions"", Local Name: ""destination"")
        at org.apache.fop.fo.ElementMappingRegistry.findFOMaker(ElementMappingRegistry.java:143)
        at org.apache.fop.fo.FOTreeBuilder.findFOMaker(FOTreeBuilder.java:190)
        at org.apache.fop.fo.FOTreeBuilder.access$300(FOTreeBuilder.java:51)
        at org.apache.fop.fo.FOTreeBuilder$MainFOHandler.startElement(FOTreeBuilder.java:275)
        at org.apache.fop.fo.FOTreeBuilder.startElement(FOTreeBuilder.java:163)
        at org.apache.xalan.transformer.TransformerIdentityImpl.startElement(TransformerIdentityImpl
.java:1072)
        at org.apache.xerces.parsers.AbstractSAXParser.startElement(Unknown Source)
        at org.apache.xerces.parsers.AbstractXMLDocumentParser.emptyElement(Unknown Source)
        at org.apache.xerces.impl.XMLNSDocumentScannerImpl.scanStartElement(Unknown Source)
        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl$FragmentContentDispatcher.dispatch(
Unknown Source)
        at org.apache.xerces.impl.XMLDocumentFragmentScannerImpl.scanDocument(Unknown Source)
        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
        at org.apache.xerces.parsers.XML11Configuration.parse(Unknown Source)
        at org.apache.xerces.parsers.XMLParser.parse(Unknown Source)
        at org.apache.xerces.parsers.AbstractSAXParser.parse(Unknown Source)
        at org.apache.xalan.transformer.TransformerIdentityImpl.transform(TransformerIdentityImpl.ja
va:484)
        ... 20 more
{quote}

It looks like the activemq-book module does not work with the latest docbkx-maven-plugin 2.0.9 due to some reason. 

Because the docbkx-maven-plugin 2.0.3 version is no longer available, we have to update activemq-book module to use the latest version say, 2.0.9 instead. But due to the error above, it is not possible either. ",Fuse ESB 5.3.0.4-fuse,,,,,,,,,,,,,,11/Aug/09 9:56 AM;joe.luo;docbkx-2.0.3.pom;https://issues.jboss.org/secure/attachment/12368693/docbkx-2.0.3.pom,11/Aug/09 9:51 AM;joe.luo;docbkx-maven-base-2.0.3.jar;https://issues.jboss.org/secure/attachment/12368691/docbkx-maven-base-2.0.3.jar,11/Aug/09 9:51 AM;joe.luo;docbkx-maven-base-2.0.3.pom;https://issues.jboss.org/secure/attachment/12368692/docbkx-maven-base-2.0.3.pom,10/Aug/09 11:41 AM;joe.luo;docbkx-maven-plugin-2.0.3.jar;https://issues.jboss.org/secure/attachment/12368688/docbkx-maven-plugin-2.0.3.jar,11/Aug/09 9:51 AM;joe.luo;docbkx-maven-plugin-2.0.3.pom;https://issues.jboss.org/secure/attachment/12368690/docbkx-maven-plugin-2.0.3.pom,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2357,,,,5.0,3.0,,1|hzkb5j:,178788,,,,,,,,10/Aug/09 11:41 AM;joe.luo;I attached the docbkx-maven-plugin 2.0.3 jar here just for people who do not have the jar in their local repository to work around this issue. ,"11/Aug/09 9:56 AM;joe.luo;Here are more attachments. Deploying only docbkx-maven-plugin-2.0.3.jar does not work. So you will need to download all of the files and deploy them onto your local maven repo with below command:
{code}
mvn install:install-file -DgroupId=com.agilejava.docbkx -DartifactId=docbkx -Dversion=2.0.3 -Dpackaging=pom -Dfile=<location of docbkx-2.0.3.pom>
{code}
{code}
mvn install:install-file -DgroupId=com.agilejava.docbkx -DartifactId=docbkx-maven-base -Dversion=2.0.3 -DpomFile=<location of docbkx-maven-base-2.0.3.pom> -Dpackaging=jar -Dfile=<location of docbkx-maven-base-2.0.3.jar>
{code}
and
{code}
mvn install:install-file -DgroupId=com.agilejava.docbkx -DartifactId=docbkx-maven-plugin -Dversion=2.0.3 -DpomFile=<location of docbkx-maven-plugin-2.0.3.pom> -Dpackaging=maven-plugin -Dfile=<location of docbkx-maven-plugin-2.0.3.jar>
{code}
Then try to build ""activemq-book"" module.",19/Aug/09 7:57 AM;dbosanac;Fixed and merged into 5.3 branch,,,,,,,,,,,,,,,,,
DbRestartJDBCQueueMasterSlaveTest - sometimes hangs on SunOS,MB-524,12515947,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,23/Jul/09 12:29 PM,27/Jul/09 9:23 AM,29/Nov/16 4:16 PM,27/Jul/09 9:23 AM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,broker,,,0,,"{code}
[23:00:36]:</u> Thread t@167: (state = IN_NATIVE)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=-1437416824 (Interpreted frame)
 - java.net.SocketInputStream.socketRead0(java.io.FileDescriptor, byte[], int, int, int) @bci=0 (Interpreted frame)
 - java.net.SocketInputStream.read(byte[], int, int) @bci=84, line=129 (Interpreted frame)
 - org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill() @bci=31, line=50 (Compiled frame)
 - java.io.DataInputStream.readInt() @bci=4, line=353 (Interpreted frame)
 - org.apache.activemq.openwire.OpenWireFormat.unmarshal(java.io.DataInput) @bci=10, line=272 (Interpreted frame)
 - org.apache.activemq.transport.tcp.TcpTransport.readCommand() @bci=8, line=210 (Compiled frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@44: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=2915710 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - org.apache.activemq.transport.failover.FailoverTransport.doReconnect() @bci=936, line=790 (Interpreted frame)
 - org.apache.activemq.transport.failover.FailoverTransport$2.iterate() @bci=58, line=116 (Interpreted frame)
 - org.apache.activemq.thread.PooledTaskRunner.runTask() @bci=65, line=122 (Interpreted frame)
 - org.apache.activemq.thread.PooledTaskRunner$1.run() @bci=15, line=43 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) @bci=44, line=650 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=28, line=675 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@39: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() @bci=41, line=1841 (Interpreted frame)
 - java.util.concurrent.LinkedBlockingQueue.take() @bci=29, line=359 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor.getTask() @bci=47, line=470 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=18, line=674 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@38: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)
 - java.util.concurrent.locks.LockSupport.park() @bci=5, line=118 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt() @bci=0, line=716 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(int) @bci=54, line=872 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(int) @bci=24, line=1179 (Interpreted frame)
 - java.util.concurrent.CountDownLatch.await() @bci=5, line=199 (Interpreted frame)
 - org.apache.activemq.broker.BrokerService.waitUntilStopped() @bci=21, line=581 (Interpreted frame)
 - org.apache.activemq.broker.ft.DbRestartJDBCQueueMasterSlaveTest$1.run() @bci=17, line=25 (Interpreted frame)


Thread t@23: (state = BLOCKED)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)
 - sun.misc.Unsafe.park(boolean, long) @bci=0 (Interpreted frame)
 - java.util.concurrent.locks.LockSupport.parkNanos(long) @bci=11, line=146 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedNanos(int, long) @bci=83, line=912 (Interpreted frame)
 - java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(int, long) @bci=25, line=1201 (Interpreted frame)
 - java.util.concurrent.CountDownLatch.await(long, java.util.concurrent.TimeUnit) @bci=10, line=245 (Interpreted frame)
 - org.apache.activemq.transport.WireFormatNegotiator.oneway(java.lang.Object) @bci=11, line=97 (Interpreted frame)
 - org.apache.activemq.transport.failover.FailoverTransport.restoreTransport(org.apache.activemq.transport.Transport) @bci=21, line=619 (Interpreted frame)
 - org.apache.activemq.transport.failover.FailoverTransport.doReconnect() @bci=396, line=711 (Interpreted frame)
 - org.apache.activemq.transport.failover.FailoverTransport$2.iterate() @bci=58, line=116 (Interpreted frame)
 - org.apache.activemq.thread.PooledTaskRunner.runTask() @bci=65, line=122 (Interpreted frame)
 - org.apache.activemq.thread.PooledTaskRunner$1.run() @bci=15, line=43 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.runTask(java.lang.Runnable) @bci=44, line=650 (Interpreted frame)
 - java.util.concurrent.ThreadPoolExecutor$Worker.run() @bci=28, line=675 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@22: (state = BLOCKED)
 - java.lang.Thread.sleep(long) @bci=2753710 (Interpreted frame)
 - java.lang.Thread.sleep(long) @bci=0 (Interpreted frame)
 - org.apache.activemq.store.jdbc.DefaultDatabaseLocker.start() @bci=423, line=107 (Interpreted frame)
 - org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start() @bci=120, line=197 (Interpreted frame)
 - org.apache.activemq.broker.BrokerService.start() @bci=107, line=463 (Interpreted frame)
 - org.apache.activemq.broker.ft.JDBCQueueMasterSlaveTest$1.run() @bci=60, line=49 (Interpreted frame)


Thread t@16: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=-1421890269 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - org.apache.derby.impl.services.monitor.AntiGC.run() @bci=20 (Interpreted frame)
 - java.lang.Thread.run() @bci=11, line=595 (Interpreted frame)


Thread t@15: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - java.util.TimerThread.mainLoop() @bci=28, line=483 (Interpreted frame)
 - java.util.TimerThread.run() @bci=1, line=462 (Interpreted frame)


Thread t@9: (state = BLOCKED)


Thread t@8: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=834295 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove(long) @bci=44, line=116 (Interpreted frame)
 - java.lang.ref.ReferenceQueue.remove() @bci=2, line=132 (Interpreted frame)
 - java.lang.ref.Finalizer$FinalizerThread.run() @bci=3, line=159 (Interpreted frame)


Thread t@7: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=-1421857600 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - java.lang.Object.wait() @bci=2, line=474 (Interpreted frame)
 - java.lang.ref.Reference$ReferenceHandler.run() @bci=46, line=116 (Interpreted frame)


Thread t@1: (state = BLOCKED)
 - java.lang.Object.wait(long) @bci=2915710 (Interpreted frame)
 - java.lang.Object.wait(long) @bci=0 (Interpreted frame)
 - org.apache.activemq.transport.failover.FailoverTransport.oneway(java.lang.Object) @bci=241, line=426 (Interpreted frame)
 - org.apache.activemq.transport.MutexTransport.oneway(java.lang.Object) @bci=12, line=40 (Interpreted frame)
 - org.apache.activemq.transport.ResponseCorrelator.asyncRequest(java.lang.Object, org.apache.activemq.transport.ResponseCallback) @bci=99, line=74 (Interpreted frame)
 - org.apache.activemq.transport.ResponseCorrelator.request(java.lang.Object) @bci=3, line=79 (Interpreted frame)
 - org.apache.activemq.ActiveMQConnection.syncSendPacket(org.apache.activemq.command.Command) @bci=20, line=1244 (Interpreted frame)
 - org.apache.activemq.ActiveMQSession.send(org.apache.activemq.ActiveMQMessageProducer, org.apache.activemq.command.ActiveMQDestination, javax.jms.Message, int, int, long, org.apache.activemq.usage.MemoryUsage, int) @bci=437, line=1692 (Interpreted frame)
 - org.apache.activemq.ActiveMQMessageProducer.send(javax.jms.Destination, javax.jms.Message, int, int, long) @bci=210, line=231 (Interpreted frame)
 - org.apache.activemq.ActiveMQMessageProducerSupport.send(javax.jms.Destination, javax.jms.Message) @bci=15, line=300 (Interpreted frame)
 - org.apache.activemq.broker.ft.DbRestartJDBCQueueMasterSlaveTest.sendToProducer(javax.jms.MessageProducer, javax.jms.Destination, javax.jms.Message) @bci=6, line=42 (Interpreted frame)
 - org.apache.activemq.JmsSendReceiveTestSupport.testSendReceive() @bci=128, line=99 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)
 - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)
 - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)
 - junit.framework.TestCase.runTest() @bci=107, line=168 (Interpreted frame)
 - junit.framework.TestCase.runBare() @bci=7, line=134 (Interpreted frame)
 - junit.framework.TestResult$1.protect() @bci=4, line=110 (Interpreted frame)
 - junit.framework.TestResult.runProtected(junit.framework.Test, junit.framework.Protectable) @bci=1, line=128 (Interpreted frame)
 - junit.framework.TestResult.run(junit.framework.TestCase) @bci=18, line=113 (Interpreted frame)
 - junit.framework.TestCase.run(junit.framework.TestResult) @bci=2, line=124 (Interpreted frame)
 - junit.framework.TestSuite.runTest(junit.framework.Test, junit.framework.TestResult) @bci=2, line=232 (Interpreted frame)
 - junit.framework.TestSuite.run(junit.framework.TestResult) @bci=40, line=227 (Interpreted frame)
 - org.junit.internal.runners.JUnit38ClassRunner.run(org.junit.runner.notification.RunNotifier) @bci=21, line=81 (Interpreted frame)
 - org.apache.maven.surefire.junit4.JUnit4TestSet.execute(org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=30, line=62 (Interpreted frame)
 - org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(org.apache.maven.surefire.testset.SurefireTestSet, org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=43, line=140 (Interpreted frame)
 - org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(java.lang.String, org.apache.maven.surefire.report.ReporterManager, java.lang.ClassLoader) @bci=74, line=165 (Interpreted frame)
 - org.apache.maven.surefire.Surefire.run(java.util.List, java.lang.Object[], java.lang.String, java.lang.ClassLoader, java.lang.ClassLoader, java.util.Properties, java.lang.Boolean) @bci=92, line=107 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) @bci=0 (Interpreted frame)
 - sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=87, line=39 (Interpreted frame)
 - sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) @bci=6, line=25 (Interpreted frame)
 - java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) @bci=111, line=585 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(java.lang.String, java.util.Properties) @bci=361, line=289 (Interpreted frame)
 - org.apache.maven.surefire.booter.SurefireBooter.main(java.lang.String[]) @bci=717, line=1005 (Interpreted frame)
{code}
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkb2v:,178776,,,,,,,,24/Jul/09 11:06 PM;garytully;apache r797685 should nail this. The dblockChecker thread was being interrupted by the shutdown of its persistence adapter before it had time to complete shutdown processing. A wait for shutdown to complete would hang forever,27/Jul/09 9:23 AM;garytully;test now passes with fix to trunk re shutdown thread interrupt.,,,,,,,,,,,,,,,,,,
Apache Commons Codec jar file missing,MB-522,12515943,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,22/Jul/09 10:56 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,23/Jul/09 10:50 AM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,,,,0,,"Using http protocol to connect to broker results in a  ClassNotFoundException:

C:\FUSE\fuse-message-broker-5.3.0.3\example>ant producer -Durl=http://localhost:61620
Buildfile: build.xml

init:

compile:

producer:
     [echo] Running producer against server at $url = http://localhost:61620 for
 subject $subject = TEST.FOO
     [java] Connecting to URL: http://localhost:61620
     [java] Publishing a Message with size 1000 to queue: TEST.FOO
     [java] Using non-persistent messages
     [java] Sleeping between publish 0 ms
     [java] Exception in thread ""main"" java.lang.NoClassDefFoundError: org/apache/commons/codec/DecoderException
     [java]     at org.apache.commons.httpclient.HttpMethodBase.<init>HttpMethodBase.java:220)
     [java]     at org.apache.commons.httpclient.methods.HeadMethod.<init>(HeadMethod.java:94)
     [java]     at org.apache.activemq.transport.http.HttpClientTransport.doStart(HttpClientTransport.java:190)
     [java]     at org.apache.activemq.util.ServiceSupport.start(ServiceSupport.java:53)
     [java]     at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
     [java]     at org.apache.activemq.transport.TransportFilter.start(TransportFilter.java:57)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:264)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:228)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:176)
     [java]     at ProducerTool.run(Unknown Source)
     [java]     at ProducerTool.main(Unknown Source)
     [java] Caused by: java.lang.ClassNotFoundException: org.apache.commons.codec.DecoderException
     [java]     at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
     [java]     at java.security.AccessController.doPrivileged(Native Method)
     [java]     at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
     [java]     at java.lang.ClassLoader.loadClass(ClassLoader.java:307)
     [java]     at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:301)

     [java]     at java.lang.ClassLoader.loadClass(ClassLoader.java:252)
     [java]     at java.lang.ClassLoader.loadClassInternal(ClassLoader.java:320)

     [java]     ... 11 more
     [java] Java Result: 1


Adding commons-codec-1.3.jar to the lib/optional folder fixes the problem.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2238,,,,0.0,1.0,,1|hzkb07:,178764,,,,,,,,23/Jul/09 10:50 AM;dbosanac;http-client 3.1 (upgraded for the previous issue) introduces commons-codec as dependency. It's now added to the lib/optional folder.,,,,,,,,,,,,,,,,,,,
InvalidRecordLocationException when using shared JDBC storage and journaledJDBC configuration,MB-520,12515942,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,dvansant,dvansant,20/Jul/09 12:59 PM,20/Jul/09 4:41 PM,29/Nov/16 4:16 PM,,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,2,,"When running a simple test to demonstrate FUSE's HA capabilities I encounter the following error when testing sharedJDBC based on a <journaledJDBC> configuration:

org.apache.activeio.journal.InvalidRecordLocationException: The location is less than the last mark.
	at org.apache.activeio.journal.active.JournalImpl.setMark(JournalImpl.java:340)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter.doCheckpoint(JournalPersistenceAdapter.java:437)
	at org.apache.activemq.store.journal.JournalPersistenceAdapter$1.iterate(JournalPersistenceAdapter.java:124)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Attached:
- my master broker's configuration (slave is similar)
- my java project that is both the producer and consumer (started twice in different roles)","Mac OSX, FUSE MB 5.3.0.3",,,,,,,,,,,,,,20/Jul/09 1:05 PM;dvansant;HATestApp.zip;https://issues.jboss.org/secure/attachment/12368681/HATestApp.zip,20/Jul/09 1:05 PM;dvansant;master.config.xml;https://issues.jboss.org/secure/attachment/12368685/master.config.xml,,,,,,,,,,,,,,,,,,,,,,,,,2.0,2.0,,1|hzkayv:,178758,,,,,,,,20/Jul/09 1:05 PM;dvansant;Master configuration and java project,20/Jul/09 4:41 PM;rajdavies;This isn't meant to work with journaled JDBC - need to update the docs to reflect this,,,,,,,,,,,,,,,,,,
"No messages consumed when tempUsage limit=""20 mb""",MB-519,12515941,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,mpc755,mpc755,16/Jul/09 9:19 PM,16/Jul/09 9:22 PM,29/Nov/16 4:16 PM,,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"With <destinationPolicy> removed and <tempUsage limit=""20 mb""/>, the consumer does not receive any messages and the broker does not shutdown cleanly and continually displays:

INFO  TransportConnection            - The connection to '/127.0.0.1:3975' is taking a long time to shutdown.

Steps to reproduce:
- place the attached activemq.xml file in the conf subdirectory of FuseMQ 5.3.x.x directory and start the broker
- Execute the attached com.iona.cpi.memory.QueueSystemUsage

Attached is a broker thread dump.",Windows,,,,,,,,,,,,,,16/Jul/09 9:21 PM;mpc755;MB-519.txt;https://issues.jboss.org/secure/attachment/12368679/MB-519.txt,16/Jul/09 9:21 PM;mpc755;QueueSystemUsage.java;https://issues.jboss.org/secure/attachment/12368678/QueueSystemUsage.java,16/Jul/09 9:22 PM;mpc755;activemq.xml;https://issues.jboss.org/secure/attachment/12368680/activemq.xml,,,,,,,,,,,,,,,,,,,,,,,,3.0,0.0,,1|hzkaxz:,178754,,,,,,,,,,,,,,,,,,,,,,,,,,,
"producer.close() should not hang, even when a producer send() is waiting for queue space.",MB-518,12515940,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,mpc755,mpc755,16/Jul/09 1:12 PM,16/Jul/09 1:13 PM,29/Nov/16 4:16 PM,,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"A producer sends until the queue is full. The producer, in another thread, then calls producer.close().

The close() should not hang.

The send should terminate and probably throw an exception.

setUseAsyncSend() doesn't seem like a workaround since it can lose messages out of the clients control. If the client calls close() on a send() that is hanging, that can be coded for.

To reproduce execute the attached com.iona.cpi.memory.ProducerCloseHang.",Windows,,,,,,,,,,,,,,16/Jul/09 1:13 PM;mpc755;ProducerCloseHang.java;https://issues.jboss.org/secure/attachment/12368677/ProducerCloseHang.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,0.0,,1|hzkaxj:,178752,,,,,,,,,,,,,,,,,,,,,,,,,,,
Proxy Consumers not being removed from Network of Brokers,MB-517,12515939,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,dbosanac,socallag,socallag,14/Jul/09 3:18 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Jul/09 1:02 PM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,,,,0,,"On a network of 4 brokers a consumer is attached to one. 
On this broker using a BrokerFilter plugin we can see the consumer being added once, on the other three brokers in the network we see proxy consumers being added three times. 

On removal of the consumer, we see that on the broker to which it is attached removeConsumer being called once, and similarly removeConsumer is only called once on the other three brokers in the network.
This means that there are two proxyConsumers on three of the brokers in the network that are not being removed.

This can be reproduced by adding the attached plugin.jar to the lib directory and modifying the activemq.xml file:

Run the standard example consumer: ant consumer

<bean id=""brokerStampPlugin"" class=""com.progress.ts.dev1635.BrokerStampPlugin""/>

    <broker xmlns=""http://activemq.apache.org/schema/core"" brokerName=""ActiveMQ1"" dataDirectory=""${activemq.base}/data1"" plugins=""#brokerStampPlugin""> ",,,,,,,,,,,,,,,14/Jul/09 3:22 PM;socallag;BrokerStampFilter.java;https://issues.jboss.org/secure/attachment/12368675/BrokerStampFilter.java,14/Jul/09 3:22 PM;socallag;BrokerStampPlugin.java;https://issues.jboss.org/secure/attachment/12368676/BrokerStampPlugin.java,14/Jul/09 3:20 PM;socallag;plugin.jar;https://issues.jboss.org/secure/attachment/12368674/plugin.jar,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2327,,,,3.0,1.0,,1|hzkayf:,178756,,,,,,,,17/Jul/09 1:02 PM;dbosanac;Fixed by reducing some cyclic links between brokers in this kind of configuration. The test show there's no cunsumers left hanging.,,,,,,,,,,,,,,,,,,,
Still seeing the Transport disposed exception when shutting down the broker in 5.3.0.3 even after merging the transport changes from the latest version of activemq.xml,MB-516,12515938,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,garytully,mpc755,mpc755,14/Jul/09 12:26 PM,20/Jul/09 5:02 PM,29/Nov/16 4:16 PM,20/Jul/09 5:02 PM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,broker,,,0,,"The fix for AMQ-2094 is to change the transport connectors from localhost to 0.0.0.0.

I manually made this change to the activemq.xml file installed with 5.3.0.3.

After making the change I am still seeing the Transport disposed exception when shutting down the broker.

It looks like the issue has to do with:

    <!-- configure the camel activemq component to use the current broker -->
    <bean id=""activemq"" class=""org.apache.activemq.camel.component.ActiveMQComponent"" >
        <property name=""connectionFactory"">
          <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
            <property name=""brokerURL"" value=""vm://localhost?create=false&amp;waitForStart=10000"" />
            <property name=""userName"" value=""${activemq.username}""/>
            <property name=""password"" value=""${activemq.password}""/>
          </bean>
        </property>
    </bean>

There is no exception when shutting down the broker when ""vm://localhost"" is changed to ""vm://0.0.0.0"".
",Windows,,,,,,,,,,,,,,14/Jul/09 12:28 PM;mpc755;activemq.xml;https://issues.jboss.org/secure/attachment/12368673/activemq.xml,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkaz3:,178759,,,,,,,,14/Jul/09 12:28 PM;mpc755;The attached activemq.xml file causes the exception when shutting down the broker.,"20/Jul/09 5:02 PM;garytully;I made the info message a debug message because it is not critical to send a remove message on shutdown and in this case the vm transport is already disposed (closed) before the camel context is disposed so it will always fail. 
the change is now on the 5.3.0-fuse branch. r10587

The reason the change from vm://localhost to vm://0.0.0.0 appears to work is because this prevents the camel context from starting. It waits in retries trying to find a vm transport called 0.0.0.0 which will never appear.",,,,,,,,,,,,,,,,,,
Interaction between Message Groups and Message Selectors freezes JMS Consumers,MB-515,12515937,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,chirino,pedroneveu,pedroneveu,09/Jul/09 9:39 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,16/Jul/09 7:21 AM,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,,,,0,,"
Interaction between Message Groups (JMSXGroupID) and Message Selectors freezes JMS Consumers.

MAVEN_OPTS='-Xmx256m -Dcom.sun.management.jmxremote'

To run: mvn clean test

test case will start an embedded broker that will store data within target dir, so mvn clean will delete brokers files to allow for clean runs.

You see failure when Camel Throughput logger output stops indicating that JMS Consumers have stoped. Enqueue Count however is still growing within embedded broker.

if within src/main/resources/routers.xml you set MessageCreator's numPartitions propery to 1 (only 1 message selector) or numMessageGroups to 0 (no JMSXGroupID header) then the JMS Consumer(s) will continue forever

MAVEN_OPTS='-Xmx256m -Dcom.sun.management.jmxremote' To run: mvn clean test test case will start an embedded broker that will store data within target dir, so mvn clean will delete brokers files to allow for clean runs. You see failure when Camel Throughput logger output stops indicating that JMS Consumers have stoped. Enqueue Count however is still growing within embedded broker. if within src/main/resources/routers.xml you set MessageCreator's numPartitions propery to 1 (only 1 message selector) or numMessageGroups to 0 (no JMSXGroupID header) then the JMS Consumer(s) will continue forever

","ActiveMQ 5.3.0.3-fuse, JDK 1.5 ",,,,,,,,,,,,,,14/Jul/09 11:17 AM;dbosanac;mb515.zip;https://issues.jboss.org/secure/attachment/12368671/mb515.zip,09/Jul/09 9:40 PM;pedroneveu;testcase0708.zip;https://issues.jboss.org/secure/attachment/12368670/testcase0708.zip,,,,,,,,,,,,,,,,,,,,,,,,,2.0,7.0,,1|hzkax3:,178750,,,,,,,,"13/Jul/09 8:36 AM;dbosanac;Hi,

I think there might be a misuse of message groups in this example. Here's what happens with this test case:

When you set message group on a message, the consumer that consumes the first message from that group is ""associated"" with the group. From that point on all messages from that group will be sent to that particular consumer. Now, the consumer also has a selector on it, so that will further filter messages sent to it.

If the group count is small (1 to 10) it can cause that the first consumer get ""assigned"" to all groups because of the prefetch size.

With the large group count (>1000) groups will be shared between two consumers, but again, only portion of those messages will be actually consumed.

What is the purpose for message groups in this scenario, maybe we can find some alternative way to achieve requested behavior.

Regards
Dejan",13/Jul/09 8:55 AM;dbosanac;I guess the alternative would be to first check message selectors and then divide those consumers into groups. Is that a desired behavior?,"13/Jul/09 1:28 PM;scranton;Core problem is to take 600 msgs/sec from one queue and route them to 10 independent store brokers; each partition broker will have 1000 store connection each with their own store specific queue.

The message header PartitionID is directly correlated to the store broker. The message header StoreID is directly correlated to a store consumer / store queue. The JMSXGroupID is set to the store id as we must guarantee that messages are delivered in publish order to a store without any dependence on message content.

The message groups are partitioned into clean subsets - e.g. stores (message groups) 1-1000 are in Partition 0; stores 1001-200 are in Partition 1; ... There will ultimately be ~10,000 message groups / consumers spread over 10 non-overlapping partition sets.

I started down combining selectors and groups based on earlier tests (and at the suggestion of Rob Davies :-) where message groups with competing consumers wasn't delivering the required throughput.","13/Jul/09 3:53 PM;dbosanac;Hi Scott,

thanks for the info. I created a pure-amq test case and there is definitely something wrong with this behavior. I hope I can provide a fix soon.

Regards
Dejan","14/Jul/09 11:17 AM;dbosanac;Hi Scott,

I played a bit more with your test case and got it working. Here's what's happening:

1. First of all, in order to have message groups with selectors working fine, we have to ""cluster"" selectors among partition id. Otherwise we can end up with the following situation: we send a message with group id 5 to partition 0 which will assign consumer to group id 5. If you later send a message with group id 5 and partition 1, consumer for partition 1 will not be able to consume the message, since it is assigned to the other consumer (because of the group id). I modified your MessageCreator to set group ids such as 0-5 and 1-5 so we can distinguish groups for these two consumers.

2. This will  solve the problem for small number of message groups, but with large number of message groups the will block again. The problem is that by default, message group to consumer association is kept in map that uses the hash value of the group to save some memory. This works fine with small number of groups, but in our use case (large number of similary named groups), there is a big chance these hash values will overlap and some groups will be left unassigned. To fix this you should use another type of message group map implementation. You can set it with the following policy entry:

{code}						
<amq:messageGroupMapFactory>
    <amq:simpleMessageGroupMapFactory/>
</amq:messageGroupMapFactory>
{code}

with this modification, you're test should be running fine even with large number of message groups. 

I attached a test case with described modifications (mb515.zip). Please let me know if it works for you. ","14/Jul/09 3:55 PM;pedroneveu;Hi Scott,

I've tried Dejan's (Thanks Dejan) suggestion and it seems to work for me.

Pedro","16/Jul/09 7:21 AM;dbosanac;I see that corresponding DEV issue has been closed, so I'm closing this one as well. Please reopen if any further work is needed for this issue.",,,,,,,,,,,,,
Java client exits when using failover + message listener and then broker is taken offline,MB-514,12515936,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,chirino,chirino,09/Jul/09 2:14 PM,10/Jul/09 8:21 AM,29/Nov/16 4:16 PM,,5.3.0.3-fuse,,,,,,,,,,,,,,,,,,,,,,,,java client,,,0,,"When Java is using failover + message listener and the main client thread is existed and then broker is taken offline.. no non-daemon threads are left running in the client process.
",,,,,,,,,,,,,,,10/Jul/09 8:01 AM;dvansant;HATestApp.zip;https://issues.jboss.org/secure/attachment/12368672/HATestApp.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkawf:,178747,,,,,,,,"10/Jul/09 8:01 AM;dvansant;The attached file contains a Maven project that can be used to reproduce this.
As attached, it works fine because the following code is added to the Main class (the class is called Main):

 //necessary
synchronized(this)
{
    this.wait();
}

Without that piece of code my listener crashes on failover if I run the following scenario:
1. Run the app as a sender and let it send 1000 messages to a queue on a failover connection
2. Run another instance of the app as a listener to receive these messages from the queue

Context: i am running the two brokers on ubuntu linux vmware sessions, they have an NFSv4 share mounted to a third ubuntu linux VM as shared storage.","10/Jul/09 8:05 AM;dvansant;Just found this JIRA: http://issues.apache.org/activemq/browse/AMQ-796

Does this have something to do with that?","10/Jul/09 8:21 AM;dvansant;Garry Tully commented on irc: gtully: dvansant, chirino:  just a thought, daemon=false on the connection factory url may help to make the transport thread non deamon

I just tried this with the following connection string: failover:(tcp://fmbserver1:61616?daemon=false,tcp://fmbserver2:61616?daemon=false), and this makes no difference to me.... So the problem is still there",,,,,,,,,,,,,,,,,
StompTest/StompSslTest failure on a slow machine,MB-513,12515935,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,peterjones1,peterjones1,08/Jul/09 7:49 PM,13/Jul/09 8:37 AM,29/Nov/16 4:16 PM,10/Jul/09 1:10 PM,,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,,,,0,,The StompTest.testDurableUnsub and StompSslTest.testDurableUnsub fail regularly when run on a slower build machine.  Increasing the sleep after the final sendFrame from 100 milliseconds to 400 milliseconds seems to allow this test to pass regularly on the slow box.  I've attached a patch which includes the minor change.,aix 5.3 64 bit jdk 1.5,,,,,,,,,,,,,,08/Jul/09 7:53 PM;peterjones1;StompTest.patch.txt;https://issues.jboss.org/secure/attachment/12368669/StompTest.patch.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzkawn:,178748,,,,,,,,08/Jul/09 7:53 PM;peterjones1;Slight timeout increase to allow disconnect to occur.,10/Jul/09 1:10 PM;dbosanac;Fixed and merged to 5.3 branch. Thanks for spotting this.,10/Jul/09 5:10 PM;peterjones1;Awesome!  Thanks Dejan!  Just got a green build of MB 5.3.0-fuse on 64 bit aix.,13/Jul/09 8:37 AM;dbosanac;That's great news Peter!,,,,,,,,,,,,,,,,
Memory leak in JMS Subscriber,MB-512,12515934,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Won't Fix,garytully,mielket,mielket,08/Jul/09 10:31 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,09/Jul/09 3:45 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.4-fuse,,,,java client,,,0,,"We have worked out a testcase that shows a memory leak in a Topic subscriber in the case of using high concurrency. The testcase creates a number of pulisher and subscriber threads for the same one topic within the same JVM but uses an external broker and I noticed the subscriber threads leak memory. 
That much, that when 50 subscribers, 100 publisher and 1000 messages per publisher, the JVM runs soon out of heap memory (even with -Xmx512m and -Xmx1024m).
If I modify the testcase that only the publishers are started and no subscribers, then no memory seems to leak. Only when the subscribers receive messages I observe the leak.

","FUSE MB 5.3.0.2-fuse, Windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkaw7:,178746,,,,,,,,"08/Jul/09 3:55 PM;garytully;looks like the subscribers session is transacted but there is no commit, so the deliveredMessages queue in the consumers fills up till OOM. Adding a periodic commit to the message listener or using a non transacted session will help here.
",09/Jul/09 3:45 PM;garytully;seems that the problem is in the test code.,,,,,,,,,,,,,,,,,,
SystemUsage sendFailIfNoSpace property is tied to producer flow control,MB-508,12515930,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,dbokde,dbokde,30/Jun/09 11:57 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,04/Aug/09 1:49 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.5-fuse,,,,broker,,,0,,"The systemUsage sendFailIfNoSpace property applies to an out of disk storage condition. Systems almost always have more disk storage than memory. ProducerFlowControl applies to an out of memory condition. If producer flow control is turned off, the broker can continue to handle more messages than the amount of JVM memory. However, the broker may still run into the disk storage limit, at which point the producer may want to be notified of this condition by receiving an exception from the send call. 

This situation has occured before, and customer would like to see sendFailIfNoSpace to be decoupled from producer flow control so that an exception is thrown when the broker runs out of storage space. ",Solaris 5.10,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2343,,,,0.0,1.0,,1|hzkb53:,178786,,,,,,,,04/Aug/09 1:49 PM;dbosanac;Resolved and merged into 5.3 branch,,,,,,,,,,,,,,,,,,,
Synchronization issue with AMQTransacitonStore - can leave duplicate transaction hanging about that can hold up journal cleanup,MB-501,12515925,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,26/Jun/09 12:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,29/Jun/09 11:59 AM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.3-fuse,,,,broker,,,0,,issue arises from http://fusesource.com/issues/browse/DEV-1605,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkatz:,178736,,,,,,,,26/Jun/09 12:13 PM;garytully;The fix has been applied at Apache http://svn.apache.org/viewvc?view=rev&revision=788646 and to the 5.3.0 branch for 5.3.0.3,26/Jun/09 12:35 PM;garytully;issue at Apache https://issues.apache.org/activemq/browse/AMQ-2307,,,,,,,,,,,,,,,,,,
ConcurrentModificationExceptions can occur under heavy load in the AbstractStoreCursor,MB-500,12515922,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,dbosanac,gseben,gseben,23/Jun/09 7:54 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,03/Aug/09 2:37 PM,5.0.0.28-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.30-fuse,,,,broker,,,0,,"The particular use case that exposed this problem multiple producers were sending 1MB messages at an overall rate of 800 msgs/sec to slow subscribers.
The full exception stack trace:
{code}
ERROR - Queue - Failed to page in more queue messages
java.util.ConcurrentModificationException
at java.util.LinkedHashMap$LinkedHashIterator.nextEntry(LinkedHashMap.java:378)
at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:397)
at java.util.LinkedHashMap$EntryIterator.next(LinkedHashMap.java:396)
at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.next(AbstractStoreCursor.java:136)
at org.apache.activemq.broker.region.cursors.StoreQueueCursor.next(StoreQueueCursor.java:140)
at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1145)
at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1269)
at org.apache.activemq.broker.region.Queue.iterate(Queue.java:994)
at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:665)
{code}

Attached is a unit test case that attempts to stress test the AbstractStoreCursor class. It does not reproduce the concurrent modification exception but it does force an IllegalStateException from the LinkedHashMap used by the AbstractStoreCursor. I think that this test exemplifies the general problem with the AbstractStoreCursor, since even though every method in the class is synchronized multiple methods can access the ""Iterator"" object at different times which could chage its state unexpectedly. ",,,,,,,,,,,,,,,23/Jun/09 7:56 PM;gseben;Test.patch;https://issues.jboss.org/secure/attachment/12368668/Test.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzkb47:,178782,,,,,,,,"03/Aug/09 2:37 PM;dbosanac;Hi,

I think the test case does not test cursor in the valid environment. Every cursor is tied to the particular queue and they're not accessed from multiple threads, so I believe the original issue was caused by something else. As far as I can see, the original DEV issue was resolved by upgrading the broker. Please reopen if this is still a valid issue.

Regards
Dejan",,,,,,,,,,,,,,,,,,,
AbstractStoreCursor java.lang.IllegalStateException when failing over a large number of connections to a slave broker,MB-496,12515918,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,18/Jun/09 7:45 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,01/Jul/09 1:50 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.2.0.3-fuse,,,,,,,1,,"Seeing a slave/standby broker throwing the following exception during a broker failover:

{code}
     [java] ERROR AbstractStoreCursor            - Failed to fill batch
     [java] java.lang.IllegalStateException: Message id ID:davestanley-laptop-38165-1245353329368-0:2:1:1:1 could not be recovered from the data store for: topic://failoverTopic - already dispatched
     [java] 	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:62)
     [java] 	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:88)
     [java] 	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.recoverNextMessages(KahaTopicReferenceStore.java:305)
     [java] 	at org.apache.activemq.store.amq.AMQTopicMessageStore.recoverNextMessages(AMQTopicMessageStore.java:59)
     [java] 	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:91)
     [java] 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:227)
     [java] 	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.reset(AbstractStoreCursor.java:99)
     [java] 	at org.apache.activemq.broker.region.cursors.StoreDurableSubscriberCursor.reset(StoreDurableSubscriberCursor.java:224)
     [java] 	at org.apache.activemq.broker.region.PrefetchSubscription.dispatchPending(PrefetchSubscription.java:574)
     [java] 	at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:158)
     [java] 	at org.apache.activemq.broker.region.DurableTopicSubscription.add(DurableTopicSubscription.java:197)
     [java] 	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:49)
     [java] 	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:576)
     [java] 	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:430)
     [java] 	at org.apache.activemq.broker.region.Topic.send(Topic.java:368)
     [java] 	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:354)
     [java] 	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:443)
     [java] 	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
     [java] 	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
     [java] 	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
     [java] 	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
     [java] 	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
     [java] 	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
     [java] 	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
     [java] 	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
     [java] 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     [java] 	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:113)
     [java] 	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:210)
     [java] 	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
     [java] 	at java.lang.Thread.run(Thread.java:595)
{code}

Testcase attached.

To Reproduce:

1. Start three console windows and export ACTIVEMQ_HOME=<Fuse MB 5.3 Home> in each console, e.g

{code}
>export ACTIVEMQ_HOME=~/progress/fusemb530SNAP
{code}

1. In the first console run

{code}
>ant master
{code}

2. In the second run 

{code}
>ant slave
{code}

// The slave should wait on a lock to the message store

3. Run the test. This starts 100 consumers and the producer thread (all using the failover transport)

{code}
>ant test
{code}

4. Kill the master with extreme prejudice

{code}
>ps -ef | grep MASTER
>kill -9 <pid>
{code}

5. In the slave broker, you should see the stack trace above, as all the connections fail over to the slave.

","5.3.0.x-fuse, 5.2.0.x-fuse, All Platforms",,,,,,,,,,,,,,18/Jun/09 7:46 PM;davestanley;failover_testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368666/failover_testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2303,,,,1.0,3.0,,1|hzkavj:,178743,,,,,,,,18/Jun/09 7:46 PM;davestanley;Testcase attached.,01/Jul/09 11:14 AM;dbosanac;The issue has been fixed on the trunk and will be merged to 5.2 and 5.3 branches shortly. ,01/Jul/09 1:50 PM;dbosanac;Merged to 5.3 branch,,,,,,,,,,,,,,,,,
 NullPointerException in ReadOnlyAsyncDataManager when running activemq-admin journal-audit,MB-494,12515916,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,15/Jun/09 8:32 PM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,17/Jun/09 9:54 AM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.3-fuse,,,,,,,0,,"activemq-admin journal-audit tool throws the following exception:

{code}
at org.apache.activemq.kaha.impl.async.ReadOnlyAsyncDataManager.close(ReadOnlyAsyncDataManager.java:107)
at com.iona.fuse.mb.store.amq.AMQJournalTool.execute(AMQJournalTool.java:177)
at com.iona.fuse.mb.store.amq.AMQJournalToolCommand.execute(AMQJournalToolCommand.java:37)
at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:138)
at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:57)
at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:81)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
at java.lang.reflect.Method.invoke(Method.java:585)
at org.apache.activemq.console.Main.runTaskClass(Main.java:251)
at org.apache.activemq.console.Main.main(Main.java:107)
{code}


","Fuse MB 5.3.x, all platforms",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2292,,,,0.0,1.0,,1|hzkapj:,178716,,,,,,,,17/Jun/09 9:54 AM;dbosanac;Fixed and merged into 5.3 branch.,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.ft.TransactedTopicMasterSlaveTest test hang,MB-493,12515915,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,peterjones1,peterjones1,11/Jun/09 5:53 PM,30/Jun/09 5:03 PM,29/Nov/16 4:16 PM,30/Jun/09 2:45 PM,5.2.0.2-fuse,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,5.3.0.3-fuse,,,,,,,0,,"The TransactedTopicMasterSlaveTest hangs for both versions 5.3.0.2-fuse and 5.2.0.2-fuse when run on solaris with jdk16 64bit.  I also tried running the test with 32 bit jdk15 and it hung as well on solaris.   jstack doesn't indicate there is any deadlock for the test process, but there are a couple of blocked threads, and it never exits.  I've attached jstack output for when the process is hanging for both versions.

AMQ-1959 mentions a hang on shutdown for this test, but the hang I am seeing doesn't seem to happen on shutdown
rather, it happens during the testSendReceiveTransactedBatchesWithMasterStop() test, and appears to happen about on the commit after sending the fourth batch of messages.

Just for a reference, a link to AMQ-1959
http://issues.apache.org/activemq/browse/AMQ-1959

If you have any suggestions for what I can try here or for what might be the issue, please let me know!
","uxadssolbld(pjones): which java
/opt/tools/pfm64/jdk1.6.0_14/bin/java
uxadssolbld(pjones): java -version
java version ""1.6.0_14""
Java(TM) SE Runtime Environment (build 1.6.0_14-b08)
Java HotSpot(TM) Server VM (build 14.0-b16, mixed mode)
uxadssolbld(pjones): uname -a
SunOS uxadssolbld 5.10 Generic_127127-11 sun4v sparc SUNW,Sun-Fire-T200
(also ran test with 32 bit java 1.5 on the same machine, and it also hung)",,,,,,,,,,,,,,25/Jun/09 10:41 PM;peterjones1;TransactedTopicMasterSlaveTest.patch.txt;https://issues.jboss.org/secure/attachment/12368667/TransactedTopicMasterSlaveTest.patch.txt,11/Jun/09 6:01 PM;peterjones1;jstack.amq5.2.0.2-fuse.TransactedTopicMasterSlaveTest.txt;https://issues.jboss.org/secure/attachment/12368664/jstack.amq5.2.0.2-fuse.TransactedTopicMasterSlaveTest.txt,11/Jun/09 6:01 PM;peterjones1;jstack.amq5.3.0.2-fuse.TransactedTopicMasterSlaveTest.txt;https://issues.jboss.org/secure/attachment/12368663/jstack.amq5.3.0.2-fuse.TransactedTopicMasterSlaveTest.txt,18/Jun/09 4:05 PM;peterjones1;jstack.amq5.3.0.2.jdk15_32-TransactedTopicMasterSlaveTest.txt;https://issues.jboss.org/secure/attachment/12368662/jstack.amq5.3.0.2.jdk15_32-TransactedTopicMasterSlaveTest.txt,19/Jun/09 6:32 PM;peterjones1;jstack.amq5.3.0.2.with.compositeConfigure.change.txt;https://issues.jboss.org/secure/attachment/12368665/jstack.amq5.3.0.2.with.compositeConfigure.change.txt,,,,,,,,,,,,,,,,,,,,,,5.0,14.0,,1|hzkau7:,178737,,,,,,,,11/Jun/09 6:01 PM;peterjones1;jstack -l output for 5.3.0.2-fuse hang and 5.2.0.2-fuse hang respectively.,"18/Jun/09 4:05 PM;peterjones1;Hi there,

Ran the test again with the 32bit jdk1.5 on the same machine:

uxadssolbld(pjones): which java
/opt/tools/pfm/jdk/bin/java
uxadssolbld(pjones): java -version
java version ""1.5.0_12""
Java(TM) 2 Runtime Environment, Standard Edition (build 1.5.0_12-b04)
Java HotSpot(TM) Server VM (build 1.5.0_12-b04, mixed mode)

It hung again... attaching the jdk1.5 jstack output (slightly less detail than the jdk1.6 jstack output).   Hung in the same spot it appears.","19/Jun/09 9:53 AM;garytully;Hi Peter,
this looks like an example of http://issues.apache.org/activemq/browse/AMQ-1993 but this time on the client side.
It seems like a write that results in the first reconnect attempt does not terminate but it should be aborting as there is no listening or reading thread. I guess there is no back log because the next write is blocked by the transport reconnect mutex. Some combination of low level tcp retries should be able to be configured at the OS level, and I guess the defaults should be less than 1 hour so I would expect this test to eventually complete, however, the OS level timeouts and retries may be contingent on a backlog reaching a minimum and currently there will be only one outstanding write due the the locking around the reconnect logic. This being the case, some code needs to implement the timeout.

The solution from http://issues.apache.org/activemq/browse/AMQ-1993 may be a good approach here. It will timeout a write call.

However the solution is currently only applicable to server side sockets, it needs to be extended to support a client connection.

I think all that is needed is to move the additional configuration code from:
org.apache.activemq.transport.TransportFactory.serverConfigure(Transport, WireFormat, HashMap)
to compositeConfigure that is called for all transports (both client and server)

The relevant code can be seen in the diff: 
http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/transport/TransportFactory.java?p2=%2Factivemq%2Ftrunk%2Factivemq-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Ftransport%2FTransportFactory.java&p1=%2Factivemq%2Ftrunk%2Factivemq-core%2Fsrc%2Fmain%2Fjava%2Forg%2Fapache%2Factivemq%2Ftransport%2FTransportFactory.java&r1=710109&r2=710108&view=diff&pathrev=710109

With these changes it should be possible to add this config to the uriString in the test case that currently hangs.
Something like:
- protected String uriString = ""failover://(tcp://localhost:62001,tcp://localhost:62002)?randomize=false"";
+ protected String uriString = ""failover://(tcp://localhost:62001?transport.soWriteTimeout=15000,tcp://localhost:62002)?randomize=false"";
    
Do you have the bandwidth to try this out and submit a patch against apache trunk?
","19/Jun/09 10:02 AM;garytully;there must be some thing about the time it takes to make a connection on solaris or some difference in the way backlogs are treated that makes this issue only appear on that platform. I wonder is it machine specific?
In any event, I think the code does need to deal with this case as currently there will only be one outstanding write after a reconnect attempt","19/Jun/09 6:32 PM;peterjones1;Hi Gary,

Thanks for the suggestions!  I moved the write timeout configuration from serverConfigure to compositeConfigure and updated the test uriString.  The test doesn't hang in quite the same way, but it still hangs.  I've attached the latest jstack output (with.compositeConfigure).  It seems to be stuck during the test setup. I noticed a couple of threads calling socketRead0, so tried just adding transport.soTimeout=10000 to the uriString as well, but that had no effect.  Does anything stand out to you in the new jstack output?

Thanks,
Peter","22/Jun/09 8:51 AM;garytully;this looks like progress. I think the issue now is how the timeout exception is handled on the client side.
The main thread stack seems interesting, it is waiting for a reconnect but not initiating the reconnect. There is a reconnect task that is trying the reconnect but it may have exponential backoff and will keep retrying for ever.

Possibly, when the first timeout error occurs, it needs to fail the connection or the reconnect logic needs to have a finite set of reconnect attempts in this case.

With full logging, this case should still produce some log information as it appears as if reconnection is ongoing.","25/Jun/09 6:15 PM;peterjones1;Hi Gary,

Sorry for the delay in getting back to you, had some other issues come up which took
me away from this.  Thanks for the very helpful suggestions!

Finally got this test to complete, but had to make a couple of minor modifications:

Had to either use ?soWriteTimeout=15000 instead of ?transport.soWritetimeout=15000
that, or prepend  ""transport."" to the filter in TransportFactory.java, i.e.:
    private static final String WRITE_TIMEOUT_FILTER = ""transport.soWriteTimeout"";
Not sure which is preferable.

Also, there was one slightly more significant change.  TcpTransportFactory.java
overrides compositeConfigure without calling the compositeConfigure in the super
class, so I had to add the call at the end of TcpTransportFactory.compositeConfigure:
-        return transport;
+        return super.compositeConfigure(transport, format, options);

Anyway, I'll put together a patch for apache trunk and either attach it here, or create
an apache jira and add a link to it here.
","25/Jun/09 6:43 PM;peterjones1;Also, had to add the soWriteTimeout to both the master and the slave uri in the uriString in the test.",25/Jun/09 10:41 PM;peterjones1;Patch to resolve the hanging test against apache trunk.,"26/Jun/09 1:24 PM;garytully;looks great. my mistake on the transport. prefix. I had a look and there are a bunch that don't take the transport prefix. I guess we leave it alone atm. I know there are a few users of this option in the wild and it may be best not to break them.

If you could raise a jira at Apache and attach your patch and do the license grant I can take it from there.","26/Jun/09 4:28 PM;peterjones1;Awesome thanks Gary!

Raised jira: https://issues.apache.org/activemq/browse/AMQ-2308 and attached patch.",29/Jun/09 11:57 AM;garytully;activemq issue resolved with your patch. will wait till post 5.3.0.3 release to merge to the 5.3-fuse branch.,30/Jun/09 2:45 PM;garytully;this made the 5.3.0.3 release. Thanks for the fix :-),30/Jun/09 5:03 PM;peterjones1;That's great!  Thanks for the help Gary!,,,,,,
ActiveMQ: Messages with an ID > (2^31 - 1) are not persisted to long term storage,MB-491,12515912,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,socallag,socallag,11/Jun/09 8:57 AM,07/Nov/13 5:43 AM,29/Nov/16 4:16 PM,15/Jun/09 5:06 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.3-fuse,,,,,,,0,,"2009/05/12 10:39:23.551 WARN [org.apache.activemq.store.journal.JournalMessageStore] Could not replay add for message 'ID:ech3-leo17.prod-39616-1241827394543-0:159880:1:1:1'. Message may have already been added. reason: java.io.IOException: Duplicate entry '2147483647' for key 1


The variable sequenceDataType in class org.apache.activemq.store.jdbc.Statments needs to be changedfrom an INTEGER to a LONG.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2291,,,,0.0,1.0,,1|hzkaon:,178712,,,,,,,,15/Jun/09 5:06 PM;dbosanac;Fixed and merged to 5.3 branch.,,,,,,,,,,,,,,,,,,,
Install guide is reported to state incorrect target directory,MB-490,12515911,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,,gsaintma,gsaintma,10/Jun/09 6:27 PM,19/Oct/10 10:18 PM,29/Nov/16 4:16 PM,11/Jun/09 7:15 PM,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.2-fuse,,,,Installer,,,0,,"Customer reports that the statement the MB Install Guide in source chapter installsource.xml:

When the build runs successfully, FUSE Message Broker distribution .zip and .tar.gz files are found in the 
apache-servicemix-fuse/src/distribution/apache-servicemix/target folder of the source installation directory.

but that the correct directory is in fact:
/apache-activemq-5.3.0.2-fuse/src/assembly/target",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkdqf:,179206,,,,,,,,11/Jun/09 12:41 PM;aileenc;This looks like a doc issue so I'm not sure why it was assigned to Dejan,11/Jun/09 12:42 PM;dbosanac;Here's the exact url of the page that contains the error http://fusesource.com/docs/broker/5.3/install_guide/IGFuseMBAfterBuild.html,11/Jun/09 7:15 PM;gsaintma;Downloaded and compiled sources to verify that the output target is as described by the customer. Revised the install guide accordingly and then uploaded the revised HTML and PDF files to the public site.,,,,,,,,,,,,,,,,,
Exploring JMS build file does not handle paths for properties files,MB-489,12515913,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,gsaintma,gsaintma,08/Jun/09 6:44 PM,11/Jun/09 12:21 PM,29/Nov/16 4:16 PM,11/Jun/09 12:21 PM,5.3.0.0-fuse,5.3.0.1-fuse,5.3.0.2-fuse,,,,,,,,,,,,,,,,,,5.3.0.3-fuse,,,,,,09/Jun/09 12:00 AM,0,,The Ant build file for the samples does not set the working directory for each sample folder. That's important when the app has a properties file to load. The affected samples are Topic MessageMonitor (tmonitor) and the Queue QueueMonitor (qmonitor). ,All platforms,,,,,,,,,,,,,,08/Jun/09 7:37 PM;gsaintma;build.xml;https://issues.jboss.org/secure/attachment/12368661/build.xml,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzkan3:,178705,,,,,,,,"08/Jun/09 6:50 PM;gsaintma;By adding dir=relative_path to the Java command, the path is identified.
Also an existing effort at using 'location' for qmonitor was deleted.
The changes in the attached build file are:

Deleted line: 7
>    <property name=""QMON"" location="".\QueuePTPSamples\QueueMonitor\QueueMonitor.properties""/>

Added dir to line: 127,128
<   <target name=""tmonitor"" depends=""compile"">
<    	<java classname=""MessageMonitor"" fork=""true"" dir=""${PS4}"" >

Add dir to line: 218,219
<   <target name=""qmonitor"" depends=""compile"">
<    	<java classname=""QueueMonitor"" fork=""true"" dir=""${PTP1}"" >
",08/Jun/09 7:37 PM;gsaintma;File contains the required changes to access the properties files for the monitor samples.,11/Jun/09 12:21 PM;dbosanac;Change applied. Thanks,,,,,,,,,,,,,,,,,
Spring conumser gets slow if share connection factory with producer,MB-484,12515906,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,dbosanac,dbosanac,27/May/09 12:21 PM,27/May/09 12:21 PM,29/Nov/16 4:16 PM,,5.3.0.1-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,To simulate investigate the original setup for the http://fusesource.com/issues/browse/MB-473 (using tcp protocol) or run sys-test FullQueueHangAndResumeTest on a slow (win) machine.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzkalb:,178697,,,,,,,,,,,,,,,,,,,,,,,,,,,
OOM on message consumer and very large memory consumption on broker.,MB-482,12515904,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,gseben,gseben,21/May/09 12:01 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,22/May/09 9:44 PM,5.3.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.2-fuse,,,,,,,0,,"The attached test case shows a problem where the Message consumer runs out of memory very quickly and the memory consumption on the broker spikes up by a few hundred megs. 

To reproduce the problem using the test case:

- Change the memory settings in the activemq startup script to 1gb.
- Start a broker with the attached activemq broker configuration.
- From the project attached run: mvn exec:java -Dexec.mainClass=com.fuse.test.ConsumerTask
- And mvn exec:java -Dexec.mainClass=com.fuse.test.ProducerTask

For better results with the test case set the Xmx value in maven-opts to at least 512m.",,,,,,,,,,,,,,,21/May/09 12:06 AM;gseben;TestCase.zip;https://issues.jboss.org/secure/attachment/12368653/TestCase.zip,22/May/09 2:05 PM;garytully;activemq.xml;https://issues.jboss.org/secure/attachment/12368658/activemq.xml,21/May/09 12:06 AM;gseben;activemq.xml;https://issues.jboss.org/secure/attachment/12368655/activemq.xml,,,,,,,,,,,,,,,,,,,,,,,,3.0,5.0,,1|hzkajb:,178688,,,,,,,,"21/May/09 10:45 AM;rajdavies;For the consumer - I would recommend setting the pretech to 10,000 for topics and set the optimizeAcknowledge property on the ConnectionFactory",22/May/09 2:05 PM;garytully;activemq.xml that will validate with 5.3-SNAPSHOT,"22/May/09 2:08 PM;garytully;two related issues from activemq trunk: 
https://issues.apache.org/activemq/browse/AMQ-2265 for the OOM
and for the JMX counters:
https://issues.apache.org/activemq/browse/AMQ-2262
",22/May/09 2:09 PM;garytully;in order to reduce the memory requirement with multiple consumers in the same jvm i reduced the prefetch to < 100,22/May/09 9:44 PM;garytully;fixes merged to fuse 5.3.0 branch.,,,,,,,,,,,,,,,
Inflight message count becomes negative when messages expire,MB-481,12515903,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gseben,gseben,20/May/09 11:04 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,25/May/09 1:46 PM,5.3.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.2-fuse,,,,,,,0,,"The inflight message counter is not correctly updated when messages expire. When a large volume of messages expire the count becomes negative. The attached test case demonstrates the problem by setting a TTL on the message of .5 seconds and setting the consumer thread to sleep for .1 secs.

To reproduce the problem with the attached test case:
Start an AMQ broker.
By default clients will connect to ""tcp://localhost:61616"". Port can be changed in the pom.xml.
From the cmd line run: 'mvn -Pconsumers' and 'mvn -Pproducers' 
Inflight count goes negative shortly test starts",,,,,,,,,,,,,,,20/May/09 11:15 PM;gseben;loadTest.zip;https://issues.jboss.org/secure/attachment/12368654/loadTest.zip,21/May/09 3:48 PM;gseben;screenshot-1.jpg;https://issues.jboss.org/secure/attachment/12368656/screenshot-1.jpg,21/May/09 3:49 PM;gseben;screenshot-2.jpg;https://issues.jboss.org/secure/attachment/12368657/screenshot-2.jpg,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2262,,,,3.0,4.0,,1|hzkakf:,178693,,,,,,,,21/May/09 3:55 PM;gseben;See screenshot2 where DispatchedQueueSize also shows a negative count for this test case.,21/May/09 7:33 PM;dbosanac;Fixed and merged into 5.3 branch,22/May/09 10:02 AM;dbosanac;The committed solution does not work when all messages expires at the consumer. Will be revisited.,25/May/09 1:46 PM;dbosanac;Fixed and merged into 5.3 branch.,,,,,,,,,,,,,,,,
"Test failures in MB 5.2, 5.3 on AIX 5.3, JDK1.5, 64-bit",MB-478,12515900,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,peterjones1,earljw,earljw,07/May/09 4:39 PM,04/Sep/09 5:17 PM,29/Nov/16 4:16 PM,04/Sep/09 5:17 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"The builds for ActiveMQ 5.2 and 5.3:
http://teamcity:8111/viewLog.html?tab=buildResultsDiv&buildTypeId=bt1720&buildId=180602
http://teamcity:8111/viewLog.html?tab=buildResultsDiv&buildTypeId=bt1721&buildId=180678

There are a total of 29 failures here.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzkb9r:,178807,,,,,,,,04/Sep/09 5:17 PM;peterjones1;MB 5.3.0.4 builds clean on aix.,,,,,,,,,,,,,,,,,,,
JMS consumer gets Cannot add a consumer to a session that had not been registered,MB-477,12515899,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,ubhole,ubhole,01/May/09 3:16 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,14/May/09 11:38 AM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.2-fuse,,,,broker,,,0,,"Camel JMS route is getting Cannot add a consumer to a session that had not been registered when deployed in JBoss.
",Linux + JDK 6 + Fuse 5.3.0.0 + Apache Camel (1.6.0) + No transactional context + Resource Adapter in JBoss ,,,,,,,,,,DEV-1492,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,5.0,,1|hzkain:,178685,,,,,,,,05/May/09 9:08 AM;garytully;corresponding apache issue: https://issues.apache.org/activemq/browse/AMQ-2241,06/May/09 1:03 PM;garytully;AMQ-2241 is not sufficient. The broker connection info reference count gets out of sync when the RA wrapps the connection in some scenarios that relate to failover. Still trying to get to the root cause but the scenario is reproducable in a jboss /camel/ ra scenario.,07/May/09 2:10 PM;garytully;the problem is related to https://issues.apache.org/activemq/browse/AMQ-2178 and is fixed in 5.3.0.1,13/May/09 6:04 PM;garytully;have been able to reproduce and have a fix. Need to work on a simpler test case to commit/protect the fix on trunk. Should have something by cob tomorrow.,"14/May/09 11:38 AM;garytully;additional fix was required. The failover state tracker was not aware of some simulated remove commands that ocurr while the transport is disconnected. this is resolved on trunk and merged to the 5.3.0-fuse branch. A new snapshot will be available in the afternoon,",,,,,,,,,,,,,,,
FUSE MB 5.3.0.1 Installer is unusable as it doesn't install anything but says install successful.,MB-476,12515898,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,cjackman,ubhole,ubhole,28/Apr/09 11:45 AM,04/Apr/10 12:42 PM,29/Nov/16 4:16 PM,04/Apr/10 12:42 PM,5.3.0.1-fuse,,,,,,,,,,,,,,,,,,,,,,,,Installer,,,0,,"FUSE MB 5.3.0.1 Installer is unusable as it doesn't install anything but says install successful. Even if I override the install location during installation it says 

Congratulations. Progress FUSE Message Broker 5.3.0.1 is successfully installed
in:

   /opt/progress/fuse-message-broker-5.3.0.1 

and nothing is install at either locations. 

Here is the dump of my install window with console mode installation. (But the same problem with UI based install as well).(Martin tested this on windows and he got the install in default location despite specifying the location to some other directory.)


DO YOU ACCEPT THE TERMS OF THIS LICENSE AGREEMENT? (Y/N): Y



===============================================================================
Choose Install Folder
---------------------

Where would you like to install?

  Default Install Folder: /opt/progress/fuse-message-broker-5.3.0.1

ENTER AN ABSOLUTE PATH, OR PRESS <ENTER> TO ACCEPT THE DEFAULT
      : /home/ubhole/local/fuse-message-broker-5.3.0.1

INSTALL FOLDER IS: /home/ubhole/local/fuse-message-broker-5.3.0.1
   IS THIS CORRECT? (Y/N): Y



===============================================================================
Pre-Installation Summary
------------------------

Please Review the Following Before Continuing:

Product Name:
    Progress FUSE Message Broker 5.3.0.1

Install Folder:
    /home/ubhole/local/fuse-message-broker-5.3.0.1

Product Components:
    ActiveMQ



PRESS <ENTER> TO CONTINUE: 



===============================================================================
Installing...
-------------

 [==================|==================|==================|==================]
 [------------------|------------------|------------------|------------------]



===============================================================================
Save Installer properties?
--------------------------

Do you wish to save this install configuration for use in performing an 
   identical install on another system? (Y/N): N



===============================================================================
Installation Complete
---------------------

Congratulations. Progress FUSE Message Broker 5.3.0.1 is successfully installed
in:

   /opt/progress/fuse-message-broker-5.3.0.1

PRESS <ENTER> TO CONTINUE: 
","Linux, Windows.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkciv:,179010,,,,,,,,"28/Apr/09 11:57 AM;aileenc;Hi Colin,

can you have some one on the Install team add a CPI test for installing to non default location to prevent this reoccuring?

thanks, Aileen
","28/Apr/09 12:01 PM;ubhole;Hi Aileen,
Existing CPI test should do that job as it uses non-default location for testing samples. 
Regards,

Ulhas Bhole
",,,,,,,,,,,,,,,,,,
HTTP transport not working correctly with spring client.,MB-473,12515895,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gseben,gseben,17/Apr/09 3:12 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,25/May/09 11:04 AM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.28-fuse,5.3.0.2-fuse,,,broker,,,0,,"Using the HTTP transport with a Spring JMS client causes faulty behavior. 
The attached test case uses a spring client to send and receive messages over HTTP. For message loads between 10 to 100 everything seems to work correctly. Increasing the load to 1000 will cause messages to not be received back. Also, the Inflight and Dispatch counts for the responseQueue goes up to the tens of thousand.

The test works such that:
ClientA send      -> requestQueue
ClientB receive  <- requestQueue
ClientB send     -> responseQueue
ClientA receive  <- requestQueue

To set up this test case add the following transport to the broker:

 - <transportConnector name=""http"" uri=""http://localhost:61666""/>
 - Add xstream.jar to lib/optional.

I worked on getting the HTTP tests under activemq-optional to run again and when using the HTTPJmsSendandReceive test case there are no problems when increasing the load. It seems that the problem is related to using a Spring client. I'm attaching the changes I made to get the http tests to work again. Note that I moved the JmsSendRecieve support classes from activemq-core in order to easily change the number of messages used in HttpJmsSendAndReceiveTest.",,,,,,,,,,,,,,,17/Apr/09 3:16 PM;gseben;HttpTests.patch;https://issues.jboss.org/secure/attachment/12368652/HttpTests.patch,17/Apr/09 3:16 PM;gseben;amq-http-spike.zip;https://issues.jboss.org/secure/attachment/12368649/amq-http-spike.zip,25/May/09 11:03 AM;dbosanac;http-spring-context.xml;https://issues.jboss.org/secure/attachment/12368660/http-spring-context.xml,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2238,,,,3.0,1.0,,1|hzkajz:,178691,,,,,,,,"25/May/09 11:04 AM;dbosanac;Fixed and merged into branches 5.0 and 5.3. 

There were couple of issues spotted in the transport that were fixed. Also, the http client (and Jetty in 5.0) have been upgraded, leading to better stability and performances. Now all tests related to the HTTP transport are enabled again and passing. There are also a couple of new tests for spotted issues, one of which is used to test the transport in the Spring environment.

The original test attached to this issue has been adapted and added to our sys-test suite, and is passing well for 10000 messages (with both 5.0 and 5.3 branches). One of the issues spotted with the test alone is usage of different pooled connection factories for two jms templates, which can impact the performances. You will notice the performance issue with tcp transport as well in this use case, but it will not be so drastic as with the http transport because of its better overall performances, As a solution, you should use the configuration similar to the one used in sys-test suite (and attached to this issue).

If there's still problem with your test case, please reopen this issue, or open new one for further improvement requests.",,,,,,,,,,,,,,,,,,,
The precompliled classes for the Exploring JMS samples are not included in the package,MB-472,12515894,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gsaintma,gsaintma,16/Apr/09 9:00 PM,11/Jun/09 12:22 PM,29/Nov/16 4:16 PM,11/Jun/09 12:22 PM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.3-fuse,,,,broker,,17/Apr/09 12:00 AM,0,,"The documentaton for the Exploring JMS samples explicitly states:

The samples in this package were precompiled with JDK1.5.0_11. While
that specific version might not be required, it is recommended that you use
that version or higher of a Sun JVM to run the compiled applications.
While a JDK is not required to run the samples, you will use a Java compiler
later in the samples to compile modified applications.

The packaging in a MB 5.3.0.0 download and installation  provides all the .java files but has no .class files at all.
The classes were confirmed to run as is on Macintosh, Red Hat Linux, and Windows XP. 
",Packaged sample applications,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzkanj:,178707,,,,,,,,"20/Apr/09 8:24 AM;dbosanac;Hi George,

In my opinion there is no need to provide compiled classes, as user must use Ant anyways (and it will compile classes prior the first execution). In 5.3.0.0 there were missing dependencies on the ""compile"" task, so if you experience ""class not found"" exception, you should call ""ant compile"" before anything else. That is now fixed in 5.3.0.1 and Ant will try to recompile the examples before it tries to run them. This should be equivalent to providing precompiled classes. Please let me know what you think.

Regards
Dejan ","20/Apr/09 8:40 PM;emjohnson;Dejan,
Is it possible to get rid of the log4j errors that pop up?
Cheers,
Eric
","11/Jun/09 12:22 PM;dbosanac;Hi Eric,

I don't see any logj4 errors. I suppressed some warnings during the build. I'll resolve this issue for now. Please reopen with more info if you still see logj4 errors.

Regards
Dejan",,,,,,,,,,,,,,,,,
JMS bridge doesn't reconnect if the foreign queue  is unavailable.,MB-470,12515892,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ubhole,ubhole,15/Apr/09 10:24 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,28/Apr/10 2:10 PM,5.2.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.4.0-fuse-00-00,,,,broker,,,1,,"see the forum post http://fusesource.com/forums/thread.jspa?threadID=784 for the description.
The problem also happens withe JMS bridge with Weblogic Server.
",Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkcnz:,179033,,,,,,,,28/Apr/10 2:07 PM;garytully;This has been resolved at apache via https://issues.apache.org/activemq/browse/AMQ-2455,"28/Apr/10 2:10 PM;garytully;resolved at apache, will be in ActiveMQ 5.4 - a few months away still though, fuse release will follow",,,,,,,,,,,,,,,,,,
LDAPLoginModule throws NullPointerException,MB-468,12515891,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gseben,gseben,09/Apr/09 6:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,30/Apr/09 7:30 AM,5.1.0.0-fuse,5.2.0.0-fuse,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,5.3.0.2-fuse,,,,broker,,,0,,"This issue was originally reported at the ActiveMQ jira: [https://issues.apache.org/activemq/browse/AMQ-1781]

The LDAPLoginModule class has poor null value handling which causes unexpected NullPointerExcpetions to be thrown when login properties are missing.
",,,,,,,,,,,,,,,09/Apr/09 6:32 PM;gseben;MB-468.patch;https://issues.jboss.org/secure/attachment/12368647/MB-468.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkahb:,178679,,,,,,,,09/Apr/09 6:32 PM;gseben;Attached is my suggested fix for the issue. It improves the handling of property values by the LDAPLoginModule class and fixes the LDAPLoginModuleTest unit test.,30/Apr/09 7:30 AM;dbosanac;Fix merged in 5.3 branch. Please reopen if you need a backport for earlier versions.,,,,,,,,,,,,,,,,,,
Deleting a queue via the admin console does not fully delete persistent messages in that queue,MB-466,12515889,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,mielket,mielket,07/Apr/09 8:37 AM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,15/Apr/09 1:33 PM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.1-fuse,,,,broker,,,0,,"Here are the instructions to reproduce the issue:

    * Create a queue with admin console
    * Post one ""persistent"" message in queue 'testQueue'
    * Delete queue via admin console
    * Post one ""persistent"" message in queue 'testQueue'

Now there is 2 messages in testQueue !
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2209,,,,0.0,3.0,,1|hzkad3:,178660,,,,,,,,"07/Apr/09 8:39 AM;mielket;If the default Kaha persistent store is used and you try to browse the messages after running the four steps above, it will fail with:

{code}
HTTP ERROR: 500

Message id ID:socframomi1-33351-1239022017161-1:0:1:1:1 could not be recovered from the data store - already dispatched

RequestURI=/admin/sendMessage.action
Caused by:

javax.jms.JMSException: Message id ID:socframomi1-33351-1239022017161-1:0:1:1:1 could not be recovered from the data store - already dispatched
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1255)
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1691)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:231)
	at org.apache.activemq.web.WebClient.send(WebClient.java:222)
	at org.apache.activemq.web.controller.SendMessage.sendMessages(SendMessage.java:80)
	at org.apache.activemq.web.controller.SendMessage.handleRequest(SendMessage.java:60)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:48)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:875)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:809)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:571)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:511)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:713)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:806)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:502)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1124)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:76)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:43)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1115)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:361)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:766)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:417)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:534)
	at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:879)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:741)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:213)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:403)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:409)
	at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:522)
Caused by: java.lang.IllegalStateException: Message id ID:socframomi1-33351-1239022017161-1:0:1:1:1 could not be recovered from the data store - already dispatched
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:58)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:93)
	at org.apache.activemq.store.amq.AMQMessageStore.recover(AMQMessageStore.java:475)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:179)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:440)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:261)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:418)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

Caused by:

java.lang.IllegalStateException: Message id ID:socframomi1-33351-1239022017161-1:0:1:1:1 could not be recovered from the data store - already dispatched
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:58)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:93)
	at org.apache.activemq.store.amq.AMQMessageStore.recover(AMQMessageStore.java:475)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:179)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:440)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:261)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:418)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:133)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:455)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:639)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:308)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:182)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:204)
	at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)
	at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)
Powered by Jetty://
{code}","07/Apr/09 8:41 AM;mielket;I also tested with a pure JDBC (MySQL) persistence adapter and did not reproduce the above JMSException. Still the message count after
step 4 was 2 and not 1. I could even access the old message that should have been deleted already.
","15/Apr/09 1:33 PM;dbosanac;Fixed in the trunk and merged into 5.3 branch, will be available in 5.3.0.1",,,,,,,,,,,,,,,,,
Resource Adaptor fails to deploy correctly under Weblogic,MB-465,12515890,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,gseben,gseben,06/Apr/09 5:19 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,17/Apr/09 4:36 PM,5.3.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.1-fuse,,,,broker,,,0,,"Customer reported problems deploying the Resource Adaptor into WebLogic.

So far based on my tests the main problem is that once the rar is deployed it fails to start a broker instance. I found a few problems that were preventing the broker from starting:

* The first problem was with Weblogic throwing an object non serialiazable exception for the ActiveMQResourceAdaptor$1 class. To solve this problem for the jrockit and Sun jdk I had to create a new class for the broker thread.  
* The broker-config.xml file was not being found on the classpath. To get around this problem I hard coded the path into the ra.xml file. This shouldn't be needed.
* ClassNotFoundExceptions related to springframework. Added dependency to activemq-rar pom to include springframework jars.
* ClassNotFoundExceptions related to ActiveMQBroker classes. Unpacked rar file and copied all jars to WebLogic server lib directory, including springframework jars. 

This got the adaptor to run but unpacking the rar and copying the jars under the server lib directory defeats the purpose of having a rar file that packages them up.

I tried to work on a solution to have the resource adaptor load classes correctly. As per Dave's recommendation I copied the firewall classloader
from the cxf Resource Adaptor in order to get a more robust and refined classloading for the adaptor. Even with the firewall class loader I'm still seeing ClassNotFoundExceptions and have not been able to make further progress.","Weblogic 9.2
Weblogic 10",,,,,,,,,,,,,,06/Apr/09 5:22 PM;gseben;RA.patch;https://issues.jboss.org/secure/attachment/12368646/RA.patch,13/Apr/09 9:35 PM;gseben;RARCandidate.patch;https://issues.jboss.org/secure/attachment/12368650/RARCandidate.patch,13/Apr/09 9:35 PM;gseben;RAcandidate.patch;https://issues.jboss.org/secure/attachment/12368648/RAcandidate.patch,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2212,,,,3.0,7.0,,1|hzkapz:,178718,,,,,,,,06/Apr/09 5:22 PM;gseben;Attached patch file contains the changes I tried to implement in order to solve the the problems related to deploying rar into Weblogic.,"17/Apr/09 2:59 PM;garytully;I have been playing with the RAR in weblogic 10 and Jboss 5. The key change is the need to set the thread context class loader for weblogic so that the xbean spring resource loader can find the xml configuration in the root of the RAR. That and the addition of the spring dependencies into the rar.

I also added a log4j.properties to the rar so that there is some logging to stdout in weblogic such that errors will appear on the console.

Also I suppressed the shutdownHook as the classloader is not always there on shutdowm.
I did not find the need for the firewall class loader.

It does take a long time for the broker to start under weblogic and the initial pool creation fails as a result but can succeed there after.

To specify an alternative BrokerXmlConfig in webligic, there is no need to change ra.xml, a property can be overridded using a deployment plan created via the console when the property is modified and saved. An example of the generated weblogic-ra.xml:{code}
<?xml version='1.0' encoding='UTF-8'?>
<weblogic-connector xmlns=""http://www.bea.com/ns/weblogic/weblogic-connector"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://www.bea.com/ns/weblogic/weblogic-connector http://www.bea.com/ns/weblogic/weblogic-connector/1.0/weblogic-connector.xsd"">
  <native-libdir></native-libdir>
  <jndi-name>ActiveMQ</jndi-name>
  <enable-access-outside-app>false</enable-access-outside-app>
  <enable-global-access-to-classes>false</enable-global-access-to-classes>
  <security></security>
  <properties>
    <property>
      <name>BrokerXmlConfig</name>
      <value>xbean:file:///tmp/broker-config.xml</value>
    </property>
  </properties>
  <admin-objects>
...
{code}
","17/Apr/09 4:36 PM;garytully;committed fix for https://issues.apache.org/activemq/browse/AMQ-2212 to trunk and to fuse 5.3.x branch so the fix will be in tonight's snapshot deploy.
Would be great if you get a chance to verify the changes as there is no firewall class loader included at the moment. ","20/Apr/09 5:45 PM;gseben;Hi Gary,

Just tried the fix against Weblogic 9.2 with jrockit 1.5 and it did not work for me. 
I see that you excluded my changes for the 'non-serializable' problems. I found that without those changes Weblogic won't start the broker correctly.

Weblogic traces are shown below:
{code}
####<Apr 20, 2009 1:12:08 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247528468> <BEA-190155> <Compliance checking/validation of the resource adapter C:\FUSE\fuse4RAR\activemq-5.3.0-fuse\activemq-rar\target\activemq-rar-5.3.0-fuse-SNAPSHOT.rar resulted in the following warnings:
The ra.xml <resourceadapter-class> class 'org.apache.activemq.ra.ActiveMQResourceAdapter' should implement java.io.Serializable but does not.>
####<Apr 20, 2009 1:12:08 PM EDT> <Warning> <WorkManager> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247528968> <BEA-002919> <Unable to find a WorkManager with name activemq-rar-5.3.0-fuse-SNAPSHOT.rar. Dispatch policy activemq-rar-5.3.0-fuse-SNAPSHOT.rar will map to the default WorkManager for the application activemq-rar-5> 
####<Apr 20, 2009 1:17:37 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247857346> <BEA-190032> << eis/activemq-rar-5_activemq-rar-5.3.0-fuse-SNAPSHOT_javax_jms_TopicConnectionFactory > ResourceAllocationException thrown by resource adapter on call to ManagedConnectionFactory.createManagedConnection(): ""javax.resource.ResourceException: Could not create connection. ""> 
####<Apr 20, 2009 1:17:37 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247857362> <BEA-190024> << eis/activemq-rar-5_activemq-rar-5.3.0-fuse-SNAPSHOT_javax_jms_TopicConnectionFactory > Error making initial connections for pool. Reason: javax.resource.ResourceException: Could not create connection.> 
####<Apr 20, 2009 1:17:38 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247858331> <BEA-190032> << eis/activemq-rar-5_activemq-rar-5.3.0-fuse-SNAPSHOT_javax_jms_QueueConnectionFactory > ResourceAllocationException thrown by resource adapter on call to ManagedConnectionFactory.createManagedConnection(): ""javax.resource.ResourceException: Could not create connection. ""> 
####<Apr 20, 2009 1:17:38 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247858331> <BEA-190024> << eis/activemq-rar-5_activemq-rar-5.3.0-fuse-SNAPSHOT_javax_jms_QueueConnectionFactory > Error making initial connections for pool. Reason: javax.resource.ResourceException: Could not create connection.> 
####<Apr 20, 2009 1:17:39 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247859331> <BEA-190032> << eis/activemq-rar-5_activemq-rar-5.3.0-fuse-SNAPSHOT_javax_jms_ConnectionFactory > ResourceAllocationException thrown by resource adapter on call to ManagedConnectionFactory.createManagedConnection(): ""javax.resource.ResourceException: Could not create connection. ""> 
####<Apr 20, 2009 1:17:39 PM EDT> <Warning> <Connector> <nbgseben2> <examplesServer> <[STANDBY] ExecuteThread: '5' for queue: 'weblogic.kernel.Default (self-tuning)'> <<WLS Kernel>> <> <> <1240247859331> <BEA-190024> << eis/activemq-rar-5_activemq-rar-5.3.0-fuse-SNAPSHOT_javax_jms_ConnectionFactory > Error making initial connections for pool. Reason: javax.resource.ResourceException: Could not create connection.>  
{code}","21/Apr/09 9:34 AM;garytully;Giovani,
I see the same information (warning) in weblogic 10 but the embedded broker starts, it just takes about 25 seconds.
The initial pool fill attempt fails because the broker is still initializing. The pool will fill on first use once the broker comes alive.
Why do you think the 'non-serializable' warning is the problem?

It may be good to chat about what we are seeing? What time zone are you in?

","18/May/09 2:41 PM;mhernon;Hi Ed, 

Yes, MB-465 is already fixed in 5.3.0.1 which will be included in the next 4.1.x release.

Regards,
Matt","19/Jun/09 10:54 AM;garytully;Hi Michelle,
yea the steps are still applicable. Generally the steps for deploying resource adapters (RARs) to a appserver need to be followed.
The current details reference fairly old versions of the app servers.
It may be best to raise a doc issue to have the steps exercised and validated with the current most popular jee containers. This will ensure that it gets on the radar.",,,,,,,,,,,,,
excludedDestinations property for a duplex network connector causes messages to be dispatched from the target queue and discarded,MB-464,12515888,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,31/Mar/09 2:48 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,13/Apr/09 1:21 PM,5.0.0.26-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.27-fuse,5.1.0.3-fuse,5.2.0.3-fuse,5.3.0.1-fuse,broker,,,0,,"A duplex network connector is set up between two brokers to mirror traffic sent on one broker (Hub) to another broker (Spoke).  To avoid unnecessary load on Hub we want traffic sent on the ""exclude.test.foo"" queue not to be sent to (Spoke).  Also the duplex network connector is configured for Spoke to avoid changing the configuration of Hub.

What happens is that traffic sent on the ""exclude.test.foo"" queue does not reach Spoke as expected.  However, the messages sent on the queue get dispatched anyway to some endpoint, most likely the network connector receives the messages, sees it shouldn't send it over to Spoke and just discards the message.  The problem here is that first off this removes the message from the queue, and secondly Spoke is adding some load to Hub for a queue that was configured to be excluded.

I'll attach a test case that shows this, you'll need to use jconsole to actually examine the behavior so it's clear.  Run the test case with ""mvn test"".  Then connect jconsole to localhost:1099.  If you take a look at the attributes for the exclude.test.foo queue for Hub you'll see that the dispatch and dequeue count is 1.  You'll also see that there's a subscription created by the network connector (NC_Spoke_inboundHub), the dequeue/dispatch counter for this subscription is also 1.  But if you look at Spoke there's no indication that the message was picked up, i.e. the enqueue count for exclude.test.foo is 0 (as it should be).  So the message appears to be consumed and then dropped by the network connector when it determines it shouldn't be forwarded on to Spoke.",Tested both 5.0.0.26-fuse and 5.3.0.0-fuse,,,,,,,,,,,,,,31/Mar/09 2:51 PM;stlewis;mb-433-testcase.zip;https://issues.jboss.org/secure/attachment/12368645/mb-433-testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzkafr:,178672,,,,,,,,"31/Mar/09 2:51 PM;stlewis;Here's the test case.

I was also thinking another way of showing this behavior would be to create a consumer for Hub's exclude.test.foo queue *after* the consumer that's connected to Spoke times out, this consumer should get a message but instead will get a null return value.","08/Apr/09 12:30 PM;dbosanac;Hi, 

we've been discussing this issue thoroughly. Although propagating properties such as excludedDestinations is technically feasible, there is a common impression that this shouldn't be done (at least not by default) and there is another solution proposed. 

The excludedDestination property (and other similar ones) of the network connector is not symmetric in general case and we should allow hub to configure it explicitly. So it shouldn't be forced on the remote broker of the duplex network connection. The basic idea is that the hub broker should only get the uri from the spoke and we should enable the explicit configuration of the hub network connector.

The proposed solution is that we allow defining the network connector with no uri parameter. In this case, the network connector wouldn't be started and it would be only used as a ""template"" for hub configuration.

For this particular example it would look like

{code}
<networkConnectors>
    
  <networkConnector>
	<excludedDestinations>
      		<queue physicalName=""exclude.test.foo""/>
      		<topic physicalName=""exclude.test.bar""/>
      	</excludedDestinations>
      	<dynamicallyIncludedDestinations>
      		<queue physicalName=""include.test.foo""/>
      		<topic physicalName=""include.test.bar""/>
      	</dynamicallyIncludedDestinations>
        <staticallyIncludedDestinations>
      		<queue physicalName=""always.include.queue""/>
      		<topic physicalName=""always.include.topic""/>
      	</staticallyIncludedDestinations>
  </networkConnector>
	  
</networkConnectors>
{code}

In this way we would allow spoke and hub to have different exclusion filters on the connector. If the central configuration of the hub is needed, we could possibly introduce the additional option, such as configureDuplex=""true"" which would allow us to simply copy spoke configuration to the hub. But this should be turned off by default.

It would be great if we'd have a customer feedback on this, before any implementation work is started.

Regards
Dejan
","13/Apr/09 1:21 PM;dbosanac;The fix has been merged to 5.0, 5.1 and 5.2 branches. It will probably go into 5.3.0.2 since 5.3.0.1 release is already in the progress (check release notes for more info).",15/Apr/09 1:34 PM;dbosanac;The fix will be merged into 5.3.0.1,,,,,,,,,,,,,,,,
FUSE MB 5.0.0.26 is missing xstream dependency jar from lib/optional directory. ,MB-463,12515887,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,ubhole,ubhole,ubhole,30/Mar/09 3:32 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,09/Apr/09 2:33 PM,5.0.0.26-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.27-fuse,,,,broker,,,0,,"FUSE Message Broker 5.0.0.x version is missing xstream dependency in kit which is required by http connector. It is part of the MB 5.2 kit so should also  including in 5.0.0.x version. 


",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkacf:,178657,,,,,,,,30/Mar/09 5:24 PM;ubhole;xstream changed group id in maven repository which caused FUSE MB to drop it from the kit. I am fixing this currently. ,09/Apr/09 2:33 PM;ubhole;Fixed in FUSE and will be available in next patch release.,,,,,,,,,,,,,,,,,,
"""ActiveMQ Connection Worker"" Daemon Thread leaks when trying to close a sharedConnection to a already stopped AMQ broker",MB-461,12515885,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,joe.luo,joe.luo,26/Mar/09 12:49 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,27/Mar/09 4:04 PM,5.0.0.26-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.27-fuse,,,,,,,0,,"I have a simple Spring-based client with an ActiveMQ connection factory wrapped into Spring's single connection factory. If the broker goes down, the client's connection receives an exception. The Spring's connection is an exception listener, so this AMQ exception will be caught there. Spring then will try to close the underlying ActiveMQ connection. Unfortunately, the ActiveMQConnection throws a second exception when being closed. It's because the connection tries to let the broker know that it's being closed. The broker is down, so an exception is thrown. The close() method does not finish all of the clean-up tasks - the 'ActiveMQ Connection Worker' is left running. There's no way to stop this thread.

If I restart the broker, the client reconnects. Next time I kill the broker, the new ActiveMQ connection instance will leak a daemon thread. This can easily lead to an OOM exception.

This behavior can easily be observed without Spring.

The source of the problem is org.apache.activemq.ActiveMQConnection line 615. Exception is thrown at this line and lines 629-631 are never invoked.
Lines 629-631 are:
{code}
if (asyncConnectionThread != null){
                    	asyncConnectionThread.shutdown();
}
{code}

The exception that I observed (in case of the Spring-based client):
{quote}
DEBUG - SingleConnectionFactory        - Could not close shared JMS Connection
javax.jms.JMSException: java.io.EOFException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:62)
	at org.apache.activemq.ActiveMQConnection.doSyncSendPacket(ActiveMQConnection.java:1275)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:615)
	at org.springframework.jms.connection.SingleConnectionFactory.closeConnection(SingleConnectionFactory.java:427)
	at org.springframework.jms.connection.SingleConnectionFactory.resetConnection(SingleConnectionFactory.java:322)
	at org.springframework.jms.connection.SingleConnectionFactory.onException(SingleConnectionFactory.java:303)
	at org.springframework.jms.connection.ChainedExceptionListener.onException(ChainedExceptionListener.java:60)
	at org.apache.activemq.ActiveMQConnection$4.run(ActiveMQConnection.java:1749)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
	at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.EOFException
	at java.io.DataInputStream.readInt(DataInputStream.java:358)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:269)
	at org.apache.activemq.transport.tcp.TcpTransport.readCommand(TcpTransport.java:203)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:195)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	... 1 more
{quote}

Below is captured stack trace of the client after successfully connnected to the broker for the first time:
{quote}
Task4 [Java Application]	
	com.progress.support.dev1432.Task4 at localhost:4545	
		Thread [DestroyJavaVM] (Running)	
		Daemon Thread [ActiveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] (Running)	
		Thread [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] (Running)	
		Daemon Thread [InactivityMonitor WriteCheck] (Running)	
		Daemon Thread [InactivityMonitor ReadCheck] (Running)	
		Thread [responderConsumer-14] (Running)	
	E:\software\java\jdk1.5.0_17\bin\javaw.exe (26 Mar 2009 11:42:01)	
{quote}

And below is captured client stack trace after we stopped/restarted the AMQ broker three times:
{quote} 
Task4 [Java Application]	
		com.progress.support.dev1432.Task4 at localhost:4545	
			Thread [DestroyJavaVM] (Running)	
			Daemon Thread [ActiveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] (Running)	
			Daemon Thread [ActiveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] (Running)	
			Daemon Thread [ActiveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] (Running)	
			Daemon Thread [ActiveMQ Connection Worker: tcp://localhost/127.0.0.1:61616] (Running)	
			Thread [ActiveMQ Transport: tcp://localhost/127.0.0.1:61616] (Running)	
			Daemon Thread [InactivityMonitor ReadCheck] (Running)	
			Daemon Thread [InactivityMonitor WriteCheck] (Running)	
			Thread [responderConsumer-27] (Running)	
		E:\software\java\jdk1.5.0_17\bin\javaw.exe (26 Mar 2009 11:42:01)
{quote}

One solution would probably be refactoring of the code to use some kind of try-catch-finally pattern, so that unsuccessful attempt to contact the broker does not cause lines 629-631 to be skipped.",,,,,,,,,,,,,,,26/Mar/09 1:58 PM;joe.luo;dev1432.zip;https://issues.jboss.org/secure/attachment/12368643/dev1432.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkaav:,178650,,,,,,,,"26/Mar/09 1:58 PM;joe.luo;Instruction to reproduce:
1. start the broker
2. start the provided client in a debug mode (debug it from Eclipse)
3. kill the broker
4. check the list of active threads and the messages printed to the console",27/Mar/09 4:04 PM;dbosanac;The ActiveMQConnection patch for https://issues.apache.org/activemq/browse/AMQ-1810 solves this problem. Merged in to 5.0 branch.,,,,,,,,,,,,,,,,,,
MessageConsumer.receive() does not throw an exception if the connection to the broker is lost.,MB-460,12515884,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,stlewis,stlewis,25/Mar/09 12:33 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,25/May/09 1:46 PM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.28-fuse,5.1.0.3-fuse,,,,,,0,,"If you don't set an ExceptionListener on the connection to the broker from within your consumer you won't get any notification if the connection to the broker has been lost, instead MessageConsumer.receive() will only return null or block indefinitely depending on if you use the timeout parameter or not.  The JMS specification clearly states (section 4.3.8):

{code}
The exceptions delivered to ExceptionListener are those that have no other place
to be reported. If an exception is thrown on a JMS call it, by definition, must
not be delivered to an ExceptionListener (in other words, ExceptionListener is not
for the purpose of monitoring all exceptions thrown by a connection).
{code}

To reproduce this use my modified ConsumerTool.java, copy it into examples/src.  Run the broker, then run the consumer like:

{code}
ant consumer -Dtopic=false -Dmax=10
{code}

Then run the producer like:

{code}
ant producer -Dtopic=false -Dmax=5
{code}

You'll see the consumer will get the 5 messages.  Now Ctrl-C the broker and restart it.  The consumer will still be running.  If you run the producer again the consumer won't get the messages even though it's still blocked on MessageConsumer.receive().

Also note that if I do use the ExceptionListener on the connection object but take out the timeout parameter on line 182 in ConsumerTool.java if an exception is handled by the ExceptionListener the call to receive() is still blocked which means the example consumer won't exit when you bounce the broker.",,,,,,,,,,,,,,,25/Mar/09 12:34 PM;stlewis;ConsumerTool.java;https://issues.jboss.org/secure/attachment/12368642/ConsumerTool.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzkakv:,178695,,,,,,,,03/Apr/09 7:41 AM;dbosanac;Fixed in trunk. Will be merged into 5.3.0.1 version.,25/May/09 1:46 PM;dbosanac;Fix merged into 5.0 branch.,,,,,,,,,,,,,,,,,,
 XPath selector fails to select messages correctly when the expression evaluates to 'true',MB-459,12515883,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gseben,gseben,24/Mar/09 6:25 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,25/Mar/09 9:56 AM,5.0.0.26-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.27-fuse,,,,broker,,,0,,"This is an issue with XPath message selectors, where the XPath expression provided is used to attempt to select a particular node. The problem is that often times the XPath exp will not return a node set but a boolean value.

I created a bug report for this issue with a suggested fix under the Apache Jira [AMQ-2179|http://issues.apache.org/activemq/browse/AMQ-2179] but it would need to be merged under the FUSE 5.0.0 branch for the customer.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzka9z:,178646,,,,,,,,25/Mar/09 9:56 AM;dbosanac;Patch committed to the trunk and merged to all branches. Thanks,,,,,,,,,,,,,,,,,,,
Messages are not dispatched anymore if the connection is idle for a while,MB-458,12515882,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,rajdavies,atooni1,atooni1,18/Mar/09 3:57 PM,07/Nov/13 5:17 AM,29/Nov/16 4:16 PM,02/Jul/12 2:52 PM,5.2.0.2-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,This is a copy of AMQ-2009.,Definitely happens on unix based machines using JDK 1.5. Unfortunately the error occurs infrequently and seemingly at random.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-2009,,,,0.0,0.0,,1|hzkix3:,180031,,,,,,,,,,,,,,,,,,,,,,,,,,,
source of activemq-xmpp does not compile due to missing repository,MB-457,12515881,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,dbosanac,mielket,mielket,11/Mar/09 1:56 PM,18/Mar/09 12:56 PM,29/Nov/16 4:16 PM,18/Mar/09 12:56 PM,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.27-fuse,5.1.0.3-fuse,5.2.0.3-fuse,5.3.0.1-fuse,,,,0,,"After I checked out the [FUSE MB 5.3.0.0-fuse source code|https://projects.open.iona.com/projects/svn/iona/activemq/tags/activemq-5.3.0.0-fuse/ ] I tried a mvn install but that failed for the activemq-xmpp component

{code}
[INFO] ------------------------------------------------------------------------
Downloading: https://maven2-repository.dev.java.net/nonav/repository/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: https://maven-repository.dev.java.net/nonav/repository/org.jvnet.jaxb2.maven2/poms/maven-jaxb2-plugin-0.1.pom
Downloading: http://people.apache.org/repo/m2-incubating-repository/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: http://repo.open.iona.com/maven2/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: http://repo1.maven.org/maven2/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: http://repository.codehaus.org//org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: https://maven2-repository.dev.java.net/nonav/repository/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: https://maven-repository.dev.java.net/nonav/repository/org.jvnet.jaxb2.maven2/poms/maven-jaxb2-plugin-0.1.pom
Downloading: http://repo1.maven.org/maven2//org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: http://people.apache.org/repo/m2-incubating-repository/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: http://repo.open.iona.com/maven2/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
Downloading: http://repo1.maven.org/maven2/org/jvnet/jaxb2/maven2/maven-jaxb2-plugin/0.1/maven-jaxb2-plugin-0.1.pom
      [INFO] ------------------------------------------------------------------------
      [ERROR] BUILD ERROR
      [INFO] ------------------------------------------------------------------------
      [INFO] Failed to resolve artifact.
       
      GroupId: org.jvnet.jaxb2.maven2
      ArtifactId: maven-jaxb2-plugin
      Version: 0.1
       
      Reason: Unable to download the artifact from any repository
       
        org.jvnet.jaxb2.maven2:maven-jaxb2-plugin:pom:0.1
       
      from the specified remote repositories:
        repo1.maven (http://repo1.maven.org/maven2/),
        central (http://repo1.maven.org/maven2),
        apache.snapshots (http://people.apache.org/repo/m2-snapshot-repository),
        codehaus (http://repository.codehaus.org/),
        open.iona.m2-snapshot (http://repo.open.iona.com/maven2-snapshot),
        maven2-repository.dev.java.net (https://maven2-repository.dev.java.net/nonav/repository),
        maven-repository.dev.java.net (https://maven-repository.dev.java.net/nonav/repository),
        open.iona.m2 (http://repo.open.iona.com/maven2),
        apache.incubating.releases (http://people.apache.org/repo/m2-incubating-repository) 
{code}


I had to manually add another mvn repository to pom.xml to resolve this.

{code:xml}
<repositories>
    <repository>
      <id>maven-repository</id>
      <name>Java.net Maven  Repository </name>
      <url>http://download.java.net/maven/2</url>
    </repository>
 ...
 </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>maven-repository</id>
      <url>http://download.java.net/maven/2</url>
    </pluginRepository>
...
{code}","FUSE MB 5.3.0.0-fuse, compiling activemq-xmpp source code.",,,,,,,,,,,,,,11/Mar/09 1:58 PM;mielket;MB-457.patch;https://issues.jboss.org/secure/attachment/12368641/MB-457.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzka8n:,178640,,,,,,,,11/Mar/09 1:58 PM;mielket;Attaching a possible fix to pom.xml here.,"18/Mar/09 12:56 PM;dbosanac;Patch committed to the trunk and merged to all fuse branches (5.0, 5.1, 5.2 and 5.3). Specific tags like 5.3.0.0 are not updated. There's no need to build them that often (if at all) and the build will fail only if there's no specified jar in the local repo. The solution for that case is to install the jar manually to the local repo.",,,,,,,,,,,,,,,,,,
"In rare cases, Failover transport is delivering out of order messages",MB-456,12515880,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,davestanley,davestanley,10/Mar/09 9:44 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Apr/09 2:32 PM,5.0.0.26-fuse,5.2.0.1-fuse,,,,,,,,,,,,,,,,,,,5.3.0.1-fuse,,,,,,,1,,"Its possible for a message to be delivered out of order when using the failover transport. As the failover
transport is providing the facade of a single jms session to the jms client, it should honor the message delivery order.

","5.2.0.x-fuse, 5.0.0.x-fuse. ",,,,,,,,,,,,,,18/Mar/09 4:32 PM;garytully;amq2149.outoforder.patch;https://issues.jboss.org/secure/attachment/12368637/amq2149.outoforder.patch,10/Mar/09 9:46 PM;davestanley;testcase_embedded.tar.gz;https://issues.jboss.org/secure/attachment/12368636/testcase_embedded.tar.gz,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-2149,,,,2.0,8.0,,1|hzkac7:,178656,,,,,,,,"10/Mar/09 9:46 PM;davestanley;To run:

1) export ACTIVEMQ_HOME=<Fuse Message Broker Home>

2) ant test to run the testcase

{code}
>ant test
{code}

Example Output:

{code}
     [java] INFO  - FailoverTransport              - Successfully reconnected to tcp://localhost:61616
     [java] INFO  - FailoverTransport              - Successfully reconnected to tcp://localhost:61616
     [java] INFO  - FailoverTransport              - Successfully reconnected to tcp://localhost:61616
     [java] INFO  - FailoverTransport              - Successfully reconnected to tcp://localhost:61616
     [java] INFO  - FailoverTransport              - Successfully reconnected to tcp://localhost:61616
     [java] INFO  - MasterSlaveTest                - test.queue.7 received 600
     [java] ERROR - Service                        - Async error occurred: javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 566, responseRequired = false, ackType = 2, consumerId = ID:davestanley-laptop-34911-1236720526949-2:16:1:1, firstMessageId = ID:davestanley-laptop-34911-1236720526949-2:17:1:1:193, lastMessageId = ID:davestanley-laptop-34911-1236720526949-2:17:1:1:193, destination = queue://test.queue.8, transactionId = null, messageCount = 2}; Could not find Message-ID ID:davestanley-laptop-34911-1236720526949-2:17:1:1:193 in dispatched-list (start of ack)
     [java] javax.jms.JMSException: Unmatched acknowledege: MessageAck {commandId = 566, responseRequired = false, ackType = 2, consumerId = ID:davestanley-laptop-34911-1236720526949-2:16:1:1, firstMessageId = ID:davestanley-laptop-34911-1236720526949-2:17:1:1:193, lastMessageId = ID:davestanley-laptop-34911-1236720526949-2:17:1:1:193, destination = queue://test.queue.8, transactionId = null, messageCount = 2}; Could not find Message-ID ID:davestanley-laptop-34911-1236720526949-2:17:1:1:193 in dispatched-list (start of ack)
     [java] 	at org.apache.activemq.broker.region.PrefetchSubscription.assertAckMatchesDispatched(PrefetchSubscription.java:433)
     [java] 	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:190)
     [java] 	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:377)
     [java] 	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:462)
     [java] 	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     [java] 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
     [java] 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
     [java] 	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:85)
     [java] 	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:458)
     [java] 	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:205)
     [java] 	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:305)
     [java] 	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:179)
     [java] 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     [java] 	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
     [java] 	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
     [java] 	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:203)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:185)
     [java] 	at java.lang.Thread.run(Thread.java:595)
     [java] INFO  - MasterSlaveTest                - test.queue.8 received 600
     [java] INFO  - MasterSlaveTest                - test.queue.12 received 500
     [java] INFO  - MasterSlaveTest                - test.queue.3 received 900
     [java] INFO  - MasterSlaveTest                - test.queue.4 received 800
     [java] WARN  - MasterSlaveTest                - ====================FAILED==========================
     [java] WARN  - MasterSlaveTest                - test.queue.10 received 591 expected 513
     [java] WARN  - MasterSlaveTest                - ====================================================
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 591
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 513
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 514
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 515
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 516
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 517
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 518
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 519
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 520
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 521
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 522
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 523
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 524
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 525
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 526
     [java] WARN  - MasterSlaveTest                - LogWindow: test.queue.10 received 527

{code}


Notes: 

+ Once the test fails it outputs the next 50 messages from that queue. It seems just a single message is send out of order, with the expected message being the message immediately after.

+ You may need to run the test multiple times in order to get the testcase to fail. 

","18/Mar/09 4:32 PM;garytully;an off shoot to http://issues.apache.org/activemq/browse/AMQ-2149

with memory usage, it is possible to get an out or order message and message hangs. the test case demonstrated and the patch fixes. It need more verification though. Attaching it here now such that it can be verified in paralel.
This is a patch to activemq-core on apache activemq trunk.",26/Mar/09 4:11 PM;garytully;AMQ-2149 is now resolved. Does this need to be back ported to 5.0.x?,"26/Mar/09 7:49 PM;aneveu;I confirmed with all involved, and this does not need to be backported to 5.0.x.","27/Mar/09 3:10 PM;garytully;further testing of AMQ-2149 shows that there is still an issue, with more than 100 concurrent producer/consumer pairs there are occasional out of order messages so some more work is required to get a complete fix.","27/Mar/09 3:15 PM;davestanley;Thanks for the update Gary. It was on my list to try it out today :-).

","03/Apr/09 2:32 PM;garytully;resolution of http://issues.apache.org/activemq/browse/AMQ-2149 now merged to fuse 5.3.0 branch. It will be in the next snapshot, should be tonight.",07/Apr/09 3:30 PM;davestanley;Latest snapshot is available [here|http://repo.open.iona.com/maven2-snapshot/com/iona/fuse/fuse-message-broker/5.3.0-SNAPSHOT/],,,,,,,,,,,,
Client consumer hang when using failover transport w/ transactions and jencks pooledConnectionFactory when broker is continually bounced,MB-455,12515879,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,03/Mar/09 11:15 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,30/Apr/09 4:52 PM,5.0.0.25-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.27-fuse,,,,broker,,,0,,"I've a client consumer when using the failover transport w/jecnks amqpool and transactions when the broker is continually bounced.

Seems client hangs trying to dequeue messages:

{code}
 [java] ""Thread-4"" prio=1 tid=0xa525c468 nid=0x5441 in Object.wait() [0xa376f000..0xa37700b0]
     [java] 	at java.lang.Object.wait(Native Method)
     [java] 	- waiting on <0xab00bde0> (a java.lang.Object)
     [java] 	at java.lang.Object.wait(Object.java:474)
     [java] 	at org.apache.activemq.MessageDispatchChannel.dequeue(MessageDispatchChannel.java:75)
     [java] 	- locked <0xab00bde0> (a java.lang.Object)
     [java] 	at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:404)
     [java] 	at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:452)
     [java] 	at com.iona.test.dev983.Consumer.run(DEV983Testcase.java:353)
     [java] 	at java.lang.Thread.run(Thread.java:595)
{code}
 
","5.0.0.6, 5.0.0.25",,,,,,,,,,,,,,30/Mar/09 2:15 PM;dbosanac;DEV983Testcase.java;https://issues.jboss.org/secure/attachment/12368644/DEV983Testcase.java,03/Mar/09 11:16 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368640/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,2.0,9.0,,1|hzkahj:,178680,,,,,,,,"03/Mar/09 11:16 PM;davestanley;Testcase attached:


Environment:

ActiveMQ 5.0.0.25, JDK 1.6, Ant 1.7

To run:

{code}
export ACTIVEMQ_HOME=<ActiveMQ>
>ant test
{code}


Testcase starts and embedded broker, consumer and producer. Both producer and consumer use a jencks amq-pool connection factory using a failover CX. ConnectionFactory is configured as follows:

{code}
  <bean id=""connectionFactory"" class=""org.jencks.amqpool.PooledConnectionFactory"">
    <constructor-arg value=""failover:(tcp://localhost:61616)"" />
    <property name=""maxConnections"" value=""1"" />
  </bean>
{code}

Options:
If you want to test with a standalone broker, set following variable in testcase to false:

{code}
// Use this to test with standalone broker

private boolean startBroker=true;

{code}	","03/Mar/09 11:17 PM;davestanley;If I restart the testcase, then these message are consumed from the persistent store. I see the following error logged with 5.0.0.25-fuse/5.0.0.6-fuse. 

{code}
  [java] ERROR - Service                        - Async error occurred: javax.jms.JMSException: Transaction 'TX:ID:davestanley-laptop-58082-1236121320578-2:0:5' has not been started.
     [java] javax.jms.JMSException: Transaction 'TX:ID:davestanley-laptop-58082-1236121320578-2:0:5' has not been started.
     [java] 	at org.apache.activemq.broker.TransactionBroker.getTransaction(TransactionBroker.java:270)
     [java] 	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:190)
     [java] 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java] 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java] 	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
     [java] 	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:440)
     [java] 	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     [java] 	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
     [java] 	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
     [java] 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
     [java] 	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
     [java] 	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:138)
     [java] 	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:185)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
     [java] 	at java.lang.Thread.run(Thread.java:595)
     [java] ERROR - Service                        - Async error occurred: javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 5133, responseRequired = false, ackType = 3, consumerId = ID:davestanley-laptop-58082-1236121320578-2:0:1:1, firstMessageId = null, lastMessageId = ID:davestanley-laptop-58082-1236121320578-2:0:2:1:5000, destination = topic://TEST.FOO, transactionId = null, messageCount = 1000}
     [java] javax.jms.JMSException: Could not correlate acknowledgment with dispatched message: MessageAck {commandId = 5133, responseRequired = false, ackType = 3, consumerId = ID:davestanley-laptop-58082-1236121320578-2:0:1:1, firstMessageId = null, lastMessageId = ID:davestanley-laptop-58082-1236121320578-2:0:2:1:5000, destination = topic://TEST.FOO, transactionId = null, messageCount = 1000}
     [java] 	at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:281)
     [java] 	at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:340)
     [java] 	at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:427)
     [java] 	at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     [java] 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java] 	at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java] 	at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:87)
     [java] 	at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:440)
     [java] 	at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     [java] 	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
     [java] 	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
     [java] 	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
     [java] 	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:134)
     [java] 	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:138)
     [java] 	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:185)
     [java] 	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:172)
     [java] 	at java.lang.Thread.run(Thread.java:595)
{code}
","30/Mar/09 2:15 PM;dbosanac;This issue looks like the topic version of [http://issues.apache.org/activemq/browse/AMQ-2149], which is being worked on.
I'm attaching a modified test case, which can be debugged in IDE. When run against the trunk, you can notice all kind of exceptions, observed in AMQ-2149.","03/Apr/09 11:26 AM;garytully;http://issues.apache.org/activemq/browse/AMQ-2149 is fully resolved, I added your test w.r.t transactions and topics and resolved the issues that ensued.
All that remains is to get the fixes into fuse. They will make 5.3.0.1

It may be difficult to retrofit to the 5.0.0.x branch. Is that a must have?
",03/Apr/09 2:19 PM;garytully;will be in next 5.3.0-fuse snapshot,"07/Apr/09 3:09 PM;davestanley;Hi Gary,
Just saw your request on branch this is needed on. I will check and get back to you.

Cheer's
/Dave",22/Apr/09 4:26 PM;jrutman;We need this backported to the 5.0 branch.  Reopening to track that action. ,"24/Apr/09 12:39 PM;garytully;merge complete to the 5.0.0 branch, snapshot available: http://repo.fusesource.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.0.0-fuse-SNAPSHOT/
",30/Apr/09 4:52 PM;garytully;relevant fixes merged from trunk.,,,,,,,,,,,
File index.html in the /docs folder points to the incubator page,MB-447,12515871,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,gsaintma,gsaintma,23/Feb/09 6:53 PM,20/Apr/09 7:50 AM,29/Nov/16 4:17 PM,20/Apr/09 7:50 AM,5.2.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.1-fuse,,,,,,,0,,"In an installation's /doc folder, the file index.html should no longer point to the incubator page. The file welcome.html in the same location seems to provide all the required links, so this index.html file could be deleted.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,4.0,,1|hzkag7:,178674,,,,,,,,25/Feb/09 9:34 AM;dbosanac;I've changed the the URI to http://fusesource.com/products/enterprise-activemq/. The complete removal of the file (if needed) should be done in packaging process (where welcome.html is added).,09/Mar/09 5:32 PM;dbosanac;Somehow the change didn't propagate from trunk to 5.3 branch. I now modified it for all branches and it should be ok for the following releases,16/Apr/09 8:49 PM;gsaintma;still broken as of mb 5.3.0.0 download on 15-apr-2009,"20/Apr/09 7:50 AM;dbosanac;Hi George,

this issue has been fixed after the 5.3.0.0 release. So it will be available in 5.3.0.1, it's mistakenly marked to fix 5.3.0.0 version.

Regards
Dejan",,,,,,,,,,,,,,,,
Proxy Consumers are not closed when a consumer closes on a networked broker ,MB-444,12515868,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,atooni1,atooni1,19/Feb/09 12:20 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,24/Feb/09 3:08 PM,5.2.0.2-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,1,,"This error occurs, when we have two brokers BrokerA and BrokerB. The simplest case is BrokerA being networked to BrokerB with a static network connector. If a consumer is created on BrokerB for a queue TEST, we will also note a consumer being established on BrokerA for that Queue, which is the intended behavior. If the consumer is closed on BrokerB, the proxy consumer on BrokerA continues to exist. Now consider the client reconnects due to failover reasons to BrokerA this time. BrokerA would then have 2 consumers on TEST, causing a portion of the messages being consumed by the proxy consumer.

So, when a consumer is closed for a queue, the proxy consumers in the peer brokers should also be closed.

",Can be reproduced independent from a specific environment,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-2109,,,,0.0,1.0,,1|hzka9r:,178645,,,,,,,,24/Feb/09 3:08 PM;garytully;merged to fuse 5.2.0 branch in r71903,,,,,,,,,,,,,,,,,,,
HTTPS transport is broken in FUSE - Please apply patch from AMQ-1098,MB-443,12515866,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,fbolton,fbolton,18/Feb/09 9:26 AM,18/Feb/09 10:51 AM,29/Nov/16 4:17 PM,18/Feb/09 10:51 AM,5.2.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.2.0.3-fuse,,,,broker,,,0,,"The HTTPS transport is broken in FUSE Message Broker 5.2.0.2 (and previous versions). When you configure a HTTPS endpoint in the broker (using a transportConnector element), you get an *insecure* HTTPS endpoint instead of a secure HTTPS endpoint.

This is a known bug that has already been fixed in Camel. Please apply the patch that is available from the Camel JIRA, AMQ-1098.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1098,,,,0.0,2.0,,1|hzka67:,178629,,,,,,,,18/Feb/09 10:46 AM;garytully;link to the amq issue that resolves this,"18/Feb/09 10:51 AM;garytully;patch applied in r69739, ready for 5.2.0.3-fuse",,,,,,,,,,,,,,,,,,
Intermittent failures of Kaha recovery tests,MB-442,12515867,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,dbosanac,dbosanac,12/Feb/09 2:01 PM,12/Feb/09 2:01 PM,29/Nov/16 4:17 PM,,5.3.0.0-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,1,,"KahaXARecoveryBrokerTest and KahaRecoveryBrokerTest are failing Intermittently (quite often). I've excluded it from the maven tests for now, but we should take a look at this.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzka5r:,178627,,,,,,,,,,,,,,,,,,,,,,,,,,,
Merge JMSXDeliveryCount fixes into Fuse (AMQ-1730 and AMQ-2087),MB-440,12515864,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,06/Feb/09 11:20 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,02/Mar/09 9:53 AM,5.1.0.2-fuse,5.2.0.0-fuse,,,,,,,,,,,,,,,,,,,5.3.0.0-fuse,,,,,,,0,,"Place holder to track the merge of these two issues into Fuse. 

*	https://issues.apache.org/activemq/browse/AMQ-1730 
*	https://issues.apache.org/activemq/browse/AMQ-2087
","Fuse MB 5.1.x, 5.2.x",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzka7r:,178636,,,,,,,,06/Feb/09 11:21 PM;davestanley;This is the full fix for MB-403,02/Mar/09 9:53 AM;garytully;fixes present in 5.3.0-fuse,,,,,,,,,,,,,,,,,,
Message relay issue when have network of brokers and downstream consumers using same queue/topic but different selectors,MB-438,12515862,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,03/Feb/09 7:45 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,11/Feb/09 2:46 PM,5.0.0.25-fuse,5.1.0.2-fuse,,,,,,,,,,,,,,,,,,,5.0.0.26-fuse,,,,broker,,,0,,"There appears to be an issue with message distribution in a network of brokers. Specifically
it seems the producer broker does not honor the downstream subscription, granular to the message selector specified in the consumers subscription,
(rather it sends messages to the broker with a consumer based on the Topic or Queue name only).

","Fuse MB 5.2.0.x-fuse, 5.0.0.x-fuse",,,,,,,,,,,,,,03/Feb/09 7:46 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368633/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2104,,,,1.0,3.0,,1|hzka6n:,178631,,,,,,,,"03/Feb/09 7:46 PM;davestanley;Testcase attached. README pasted below for convenience..

Test case demonstrates what appears to be an issue with message distribution in a network of brokers. Specifically
it seems the producer broker does not honor the downstream subscription, granular to the message selector specified in the consumers subscription,
(rather it sends messages to the broker with a consumer based on the Topic or Queue name only).

The messages in this test case are sent using the following properties: broker='BROKER_1' or broker='BROKER_2'
They are intended to be consumed by consumers connected by different brokers using message selectors.
 
Testcase setup
==============

Testcase uses two different topologies:

     brk-main --tcp-> brk1
     brk-main --tcp-> brk2
     
     and
     
     brk-main (multicast)
     brk1 (multicast)
     brk2 (multicast)
     

In round1, the test case has a producer that sends messages using the tcp transport and later are consumed
by tcp consumers.     
     producer ---tcp-> brk-main
     consumer1 (broker='BROKER_1') <--tcp-- brk1
     consumer2 (broker='BROKER_2') <--tcp-- brk2

In round2, the test it sends another 2 messages using the tcp transport and are consumed
by stomp consumers connected to brk1 and brk2 correspondingly.    
     producer ---tcp-> brk-main
     consumer1 (broker='BROKER_1') <--stomp-- brk1
     consumer2 (broker='BROKER_2') <--stomp-- brk2


Results:
========

The messages sent in round1 (the ones consumed by tcp consumers) are received partially,
in other words only the message from brk1 is received by consumer1, but not on the other message from consumer2 pointing to brk2.

The message intended for brk2 appears to be getting stuck on brk1, which explains why consumer2 doesn't get it.
The output created by this test case (see Output at the end of the document) shows this:
   BROKER_2 Received message: null

The messages send in round2 are received by the corresponding consumer.
This issue doesn't appear to be specific to the scenario of using stomp consumers in the second round of message sent as using
tcp consumers on both rounds displays the same problem.

The issue also happens when using the multicast connector on all brokers.

Also, connecting both tcp consumers in round1 to brk1 receives both messages, but the messages from round2 are received partially.


Running the testcase:
=====================
 
 Setup:
     Fuse Message broker 5.2.0.1, Maven 2.0.9, jdk 6
     
 Build:
     mvn clean package
     
 Test:

{code}
     mvn  -e exec:java -Dexec.mainClass=com.fusesource.support.activemq.ActiveMQNetworkOfBrokers
{code}
     
    Note: To avoid side effects, make sure to mvn clean package to remove the activemq-data directory
          before running the test case.","11/Feb/09 2:46 PM;dbosanac;Resolved and merged into 5.0, 5.1 and 5.2 branches","19/Feb/09 2:20 PM;dbosanac;Additional changes have been merged. Note that for this functionality to work correctly, you have to set conduitSubscriptions=false. More detailed explanation could be found here http://activemq.apache.org/networks-of-brokers.html#NetworksofBrokers-Conduitsubscriptionsandconsumerselectors ",,,,,,,,,,,,,,,,,
Intermittent failures VMTransportBrokerTest and MarshallingBrokerTest tests in TeamCity,MB-434,12515857,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,,rajdavies,dbosanac,dbosanac,15/Jan/09 6:45 AM,15/Jan/09 6:45 AM,29/Nov/16 4:17 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"{code}org.apache.activemq.transport.vm.VMTransportBrokerTest.testSessionCloseCascades {destination=queue://TEST, deliveryMode=2}
    junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:47)
    at junit.framework.Assert.assertTrue(Assert.java:20)
    junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:47)
    at junit.framework.Assert.assertTrue(Assert.java:20)
    at junit.framework.Assert.assertNull(Assert.java:233)
    at junit.framework.Assert.assertNull(Assert.java:226)
    at org.apache.activemq.broker.BrokerTest.testSessionCloseCascades(BrokerTest.java:1071)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at junit.framework.TestCase.runTest(TestCase.java:154)
    at junit.framework.TestCase.runBare(TestCase.java:127)
    at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
    at junit.framework.TestResult$1.protect(TestResult.java:106)
    at junit.framework.TestResult.runProtected(TestResult.java:124)
    at junit.framework.TestResult.run(TestResult.java:109)
    at junit.framework.TestCase.run(TestCase.java:118)
    at junit.framework.TestSuite.runTest(TestSuite.java:208)
    at junit.framework.TestSuite.run(TestSuite.java:203)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
    at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
    at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743){code}


{code}org.apache.activemq.broker.MarshallingBrokerTest.testConnectionCloseCascades {destination=queue://TEST, deliveryMode=1, wireFormat=OpenWireFormat{version=3, cacheEnabled=true, stackTraceEnabled=false, tightEncodingEnabled=false, sizePrefixDisabled=false}}
    junit.framework.AssertionFailedError
    at junit.framework.Assert.fail(Assert.java:47)
    at junit.framework.Assert.assertTrue(Assert.java:20)
    at junit.framework.Assert.assertNull(Assert.java:233)
    at junit.framework.Assert.assertNull(Assert.java:226)
    at org.apache.activemq.broker.BrokerTest.testConnectionCloseCascades(BrokerTest.java:1019)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at junit.framework.TestCase.runTest(TestCase.java:154)
    at junit.framework.TestCase.runBare(TestCase.java:127)
    at org.apache.activemq.CombinationTestSupport.runBare(CombinationTestSupport.java:90)
    at junit.framework.TestResult$1.protect(TestResult.java:106)
    at junit.framework.TestResult.runProtected(TestResult.java:124)
    at junit.framework.TestResult.run(TestResult.java:109)
    at junit.framework.TestCase.run(TestCase.java:118)
    at junit.framework.TestSuite.runTest(TestSuite.java:208)
    at junit.framework.TestSuite.run(TestSuite.java:203)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.junit.JUnitTestSet.execute(JUnitTestSet.java:210)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.executeTestSet(AbstractDirectoryTestSuite.java:135)
    at org.apache.maven.surefire.suite.AbstractDirectoryTestSuite.execute(AbstractDirectoryTestSuite.java:160)
    at org.apache.maven.surefire.Surefire.run(Surefire.java:81)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:585)
    at org.apache.maven.surefire.booter.SurefireBooter.runSuitesInProcess(SurefireBooter.java:182)
    at org.apache.maven.surefire.booter.SurefireBooter.main(SurefireBooter.java:743){code}



",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk9yv:,178596,,,,,,,,,,,,,,,,,,,,,,,,,,,
ActiveMQ duplex connector inboud connection does not inherit all policies from outboud connection,MB-433,12515858,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,amine.belkoura,amine.belkoura,05/Jan/09 12:56 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,10/Feb/09 9:40 AM,5.0.0.25-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.26-fuse,,,,broker,,,1,,"With two brokers connected with a duplex connector, not all connector policies get applied to outbound connection. For example, <excludedDestinations> does not apply.

Attached is a Junit test case that shows behavior.",all,,,,,,,,,,,,,,05/Jan/09 12:57 PM;amine.belkoura;testcase.zip;https://issues.jboss.org/secure/attachment/12368631/testcase.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2086,,,,1.0,2.0,,1|hzka33:,178615,,,,,,,,"27/Jan/09 12:56 PM;dbosanac;The issue has been fixed in the trunk. I've merge changes back to 5.0 and 5.1 branches. I'll resolve the issue when it is merged into 5.2 branch as well, which will happen immediately after the next release (perhaps tomorrow). ",10/Feb/09 9:40 AM;dbosanac;The fix has been merged into 5.2.0.3 as well,,,,,,,,,,,,,,,,,,
"Broker parameter systemExitOnShutdown=""true"" not being honored when persistence adapter file system is unavailable",MB-432,12515856,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,18/Dec/08 10:19 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,23/Dec/08 12:56 PM,5.0.0.24-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.25-fuse,,,,broker,,,0,,See [AMQ-2038|http://issues.apache.org/activemq/browse/AMQ-2038].,FUSE ESB 3.3.1.11 running with embedded Message Broker 5.0.0.23.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-2038,,,,0.0,1.0,,1|hzkbpr:,178879,,,,,,,,"23/Dec/08 12:56 PM;dbosanac;This should be fixed now in both 5.0 and 5.1 branches.

Regards
Dejan",,,,,,,,,,,,,,,,,,,
 Incorrect synchronization in PrefetchSubscription - receive timeouts may work incorrectly with *prefetch=0*,MB-431,12515855,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,17/Dec/08 4:26 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,14/Jan/09 9:10 AM,5.0.0.23-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.25-fuse,,,,broker,,,0,,"There appears to be an Incorrect synchronization in PrefetchSubscription .. this can have the side affect that receive timeouts may work incorrectly with *prefetch=0*

The 'final synchronized void pullTimeout(long dispatchCounterBeforePull)' method of the PrefetchSubscription class is not correctly synchronized with the rest of methods available in this class.
The result of this bug is that you can get a timeout in 0 ms when doing receive(long) with a JMS consumer that uses queue prefetch 0. The value of the timeout that you specify when calling receive does not matter.

Steps to reproduce:
1. Create a breakpoint in the 'final synchronized void pullTimeout(long dispatchCounterBeforePull)' method. It has to be done inside the if clause that is used in this method's body. In case of Fuse MB 5.0.0.23 it's line 131.
2. Run the MB in a debug mode.
3. Start jconsole.
4. Start the provided client (the consumer).
5. Wait for receive timeout to get fired - 5 sec.
6. Send a text message using jconsole to the AMQ queue named ""some.queue1"".
7. The client will receive a message immediately.
8. Resume the breakpoint.
9. Press Enter in the client console/window. This will fire a new receive(5000) invocation.
10. Watch the consumer receive a timeout in 0 ms.
","Fuse Message Broker, 5.0.0.23",,,,,,,,,,,,,,18/Dec/08 5:09 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368628/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,6.0,,1|hzk9zb:,178598,,,,,,,,18/Dec/08 5:09 PM;davestanley;Testcase attached. ,"26/Dec/08 10:43 AM;dbosanac;Fixed with [AMQ-2044|https://issues.apache.org/activemq/browse/AMQ-2044] and merged into 5.0, 5.1 and 5.2 MB branches. 

Now, the client does not receive message immediately. We must resume the breakpoint and then we receive timeout and the message is received after we press Enter (on the next receive).

Regards
Dejan","14/Jan/09 4:59 AM;dbosanac;Hi Dave,

customer is right, the problem could be reproduced. I've tested it with breakpoints inside the synchronized block, but on that statement. Putting the whole pullTimeout() method code inside the synchronized block (I'm not sure why I left the condition out of it in the first place) seems to solve the problem. 

Note that if you put a breakpoint on the synchronized statement in this case, the message will be received immediately, which is OK since we haven't obtained the lock before message arrived. But there is no problem of getting the NULL message immediately after that.

I'll do some more testing and commit it to all appropriate versions for your further testing.

Regards
Dejan","14/Jan/09 9:10 AM;dbosanac;The fix for the problem should be now available in 5.0, 5.1 and 5.2 branches. Give it a try and let me know if it is OK now.

Regards
Dejan",14/Jan/09 5:35 PM;davestanley;Thanks Dejan.,"15/Jan/09 3:08 PM;davestanley;Fix verified in 5.0.0-fuse branch
",,,,,,,,,,,,,,
Fixed enqueue time for fixed size queue - if full discard messages - how to configure?,MB-429,12515853,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,15/Dec/08 12:15 PM,08/Feb/09 1:42 PM,29/Nov/16 4:17 PM,08/Feb/09 1:42 PM,5.2.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.1.0.2-fuse,,,,,,,0,,"One producer with 5000msg/sec persistent enqueue to a single Queue (reporting data)
One consumer that is slower. Net result is that queue fills up.

Requirement - enqueue should be super fast, should never block, should execute in fixed time.

if Queue is full (Queue disk limit is reached), message can be dis-guarded.

Lots of messages, 5000/s over 8hours - 10GB of file system available for the queue.",debian 64 bit,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzka2f:,178612,,,,,,,,15/Dec/08 4:02 PM;garytully;fyi: Order is not important as each message is unrelated to the next.,"08/Feb/09 1:42 PM;garytully;disk usage limit and exception when the limit is reached. Checkpoint and cleanup ensure disk space is freed up
{code}<beans
  xmlns=""http://www.springframework.org/schema/beans""
  xmlns:amq=""http://activemq.apache.org/schema/core""
  xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance""
  xsi:schemaLocation=""http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
  http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd   
  http://activemq.apache.org/camel/schema/spring http://activemq.apache.org/camel/schema/spring/camel-spring.xsd"">

    <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>

    <bean id=""store"" class=""org.apache.activemq.store.amq.AMQPersistenceAdapter"" >
      <property name=""directory"" value=""target/amqdata"" />
      <property name=""maxFileLength"" value=""1000000"" />
      <property name=""checkpointInterval"" value=""5000"" />
      <property name=""cleanupInterval"" value=""5000"" />
    </bean>
    
    <broker xmlns=""http://activemq.apache.org/schema/core"" 
	  persistent=""true"" 
	  advisorySupport=""false""
	  dataDirectory=""target/amqdata""
	  deleteAllMessagesOnStartup=""true""
	  useJmx=""true"" 
	  brokerName=""localhost""
	  monitorConnectionSplits=""false""
	  splitSystemUsageForProducersConsumers=""false""
	  start=""false"" 
	  persistenceAdapter=""#store"">
	 
      <!-- Use the following to configure how ActiveMQ is exposed in JMX -->
      <managementContext>
        <managementContext createConnector=""false""/>
      </managementContext>

      <!-- A persistence Adapter -->
      
      <!--  The maximum about of space the broker will use before slowing down producers -->
      <systemUsage>
        <systemUsage sendFailIfNoSpace=""true"" >
          <memoryUsage>
            <memoryUsage limit=""400kb"" />
          </memoryUsage>
          <storeUsage>
            <storeUsage limit=""10mb"" store=""#store"" />
          </storeUsage>         
          <tempUsage>
            <tempUsage limit=""64mb"" />
          </tempUsage> 
        </systemUsage>
      </systemUsage>

      <destinationPolicy>
        <policyMap>
          <policyEntries>
            <policyEntry queue="">"" memoryLimit=""200kb"" useCache=""false"">
              <pendingQueuePolicy>
                <storeCursor />
              </pendingQueuePolicy>
            </policyEntry> 
          </policyEntries>
        </policyMap>
      </destinationPolicy>

      <!-- The transport connectors ActiveMQ will listen to -->
      <transportConnectors>
        <transportConnector name=""openwire"" uri=""tcp://localhost:0"" />
      </transportConnectors>
    </broker>
</beans>
{code}",,,,,,,,,,,,,,,,,,
Redelivered messages to consumer skiped due to false duplicate detection on message rollback with Spring and cacheLevel=CACHE_NONE,MB-428,12515852,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,joe.luo,joe.luo,10/Dec/08 7:06 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,15/Dec/08 4:00 PM,5.0.0.21-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.25-fuse,,,,,,,0,,"Redelivery of message fails after a rollback with Spring DMLC with cacheLevel=CACHE_NONE due to a bug in class : 'org.apache.activemq.ActiveMQMessageConsumer'. Redelivered messages are wrongly detected as duplicates. It fails to call 'rollbackDuplicates' on messages processed by consumer on rollback call on the consumer.

Sequence: ( See: http://fisheye1.atlassian.com/browse/springframework/spring/src/org/springframework/jms/listener/AbstractPollingMessageListenerContainer.java?r=1.14 )

    * Spring creates a transaction
    * Spring creates a JMS consumer
    * Spring give message to Application MessageListener class
    * Spring closes the consumer
    * Spring try to commit
    * Commit fails due to a RuntimeException thrown in Application MessageListener class
    * Spring marks the message as RollbackOnly
    * Spring rollbacks message

When ActiveMQ closes the consumer ( org.apache.activemq.ActiveMQMessageConsumer ), it clears 'deliveredMessages' list. But this list is needed in rollback method of ActiveMQMessageConsumer to rollback duplicates ! Then consumer cannot rollback duplicates on rollback if consumer is closed before rollback action.

The only way I found, is to not clear 'deliveredMessages' list on close. It seems, there is no side effect, since after a call to 'close' method, the consumer is not used anymore.","Fuse MB 5.0.0.21, activemq-core, ActiveMQMessageConsumer.java
Spring 2.5.5 DMLC with cacheLevel=CACHE_NONE with JBoss 4.2.2 + XA transactions",,,,,,,,,,,,,,10/Dec/08 7:17 AM;joe.luo;ActiveMQMessageConsumer-5.2.0.0-fuse.patch;https://issues.jboss.org/secure/attachment/12368626/ActiveMQMessageConsumer-5.2.0.0-fuse.patch,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2032,,,,1.0,5.0,,1|hzk9u7:,178575,,,,,,,,10/Dec/08 7:17 AM;joe.luo;The patch was created against Fuse MB 5.2.0.0-fuse tag version.,"11/Dec/08 8:21 AM;garytully;I have produced a little test case for this and will commit it and a fix shortly via apache https://issues.apache.org/activemq/browse/AMQ-2032

will pull that down and deploy a 5.0.0-fuse-SNAPSHOT later today.",11/Dec/08 12:47 PM;garytully;completed the commit to the 5.0.0-fuse branch. It will be in the next snapshot and the release will follow once we do a sanity using the original complete test case.,"15/Dec/08 2:33 PM;garytully;this won't make 5.0.0.24 as I have just completed the fix today.
latest fix is at https://issues.apache.org/activemq/browse/AMQ-2034",15/Dec/08 3:59 PM;garytully;fix can be verified in tonights snapshot build,,,,,,,,,,,,,,,
There is a performance problem in Fuse Message Broker 5.2,MB-425,12515849,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,garytully,gloughna,gloughna,04/Dec/08 1:37 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,08/Dec/08 6:23 AM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,Tests run with Fuse 5.2 are taking at least 10 times as long as tests with Active MQ 5.1(Note that Active MQ 5.2 also has this delay in the tests),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk9tr:,178573,,,,,,,,05/Dec/08 8:38 AM;gloughna;As an example of the performance problems i'm seeing. the 100kSmallTest alone takes 1hour 32.5 minutes to run. The entire suite of tests take 19 minutes for me. While some of these tests including the 100kSmallTest  are failing due to MB-417 this still shows a serious performance issue.,"08/Dec/08 6:23 AM;garytully;commented on DEV-1271 - issue is improvements post 5.1 that cause transactions to force to disk. Not using transactions for a single message delivery will resolve the issue.
There is a AMQPersistenceAdaptor option, syncOnTransactions that defaults to true but which is not implemented by the store, implementing this feature would allow the relaxation of the force to disk constraint on transactions, but why do that if one wants a transaction? Reopen this issue if this is a requirement.",,,,,,,,,,,,,,,,,,
Messages are lost from queue if call QueueViewMBean.browse() when concurrently consuming messages via the stomp networkconnector,MB-420,12515844,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,dbosanac,davestanley,davestanley,02/Dec/08 1:55 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,22/Dec/08 11:18 AM,5.0.0.23-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.25-fuse,5.2.0.0-fuse,,,broker,,,0,,"I have standard jms producer sending persistent messages to a queue. I'm consuming the message using a stomp client. After a few messages are recieved, I connect via the jmx/rmi connector and browse the queue when the stomp consumer is still actively consuming.

Browsing the queue when you have an active stomp consumer seems to hose up the queue, and as a result only a portion of the messages are consumed... in my test I send 2000 messages and consumer only receives 873.

 ",Fuse Message Broker/ActiveMQ 5.0.0.23,,,,,,,,,,,,,,02/Dec/08 1:59 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368625/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,8.0,,1|hzka07:,178602,,,,,,,,"02/Dec/08 1:59 PM;davestanley;Testcase attached:

To run:
1) Start instance of broker (I used 5.0.0.23 from http://fusesource.com/downloads). Make sure stomp connector is active on 61613.

2) Start the testcase (I included the AMQ all jar in <testcase>/lib)

>ant test



","18/Dec/08 4:10 AM;dbosanac;I've verified the issue against 5.0.0.23. When run against 5.2.0.0, the test passes. I'll close the issue, but if you need a backport to 5.0 branch please reopen it.","18/Dec/08 4:20 PM;davestanley;Hi Dejan,
Yes please merge back to 5.0.0-fuse branch (also Fuse ESB needs to be bumped up to whatever version of the broker the fix goes into as we need this fix for the ESB).

Thanks,
/Dave","19/Dec/08 11:02 AM;dbosanac;Hi Dave,

I've done some more testing today. 

I observed that test is passing on fuse-5.0.0.7 and I think it is because the browsing starts after all messages are successfully stored in the broker.  You can notice the following log info

{code}
INFO: Message Count :1338
INFO: Browsing returned :2000
{code}

In subsequent versions of 5.0 branch this is not the case, so you can see this kind of log info

{code}
INFO: Message Count :1365
INFO: Browsing returned :1365
{code}

and test fails (the number of received messages varies and goes between 800 and 1800).

The 5.2 branch implemented paged browsing, where it gets browsed messages in 400 bulks, so you can see the following log

{code}
 INFO: Message Count :1368
 INFO: Browsing returned :400
{code}

So I decided to backport paged browsing to 5.0 branch and see if it will help. I haven't finished it today, so I'll do it on Monday.

If this info gives you some more ideas on the problem source, please let me know.

Regards
Dejan","19/Dec/08 11:42 AM;davestanley;Hi Dejan,
Great thanks.  I suspected this was some kind of race condition that occurs between the mbean and the enqueue/dequeue logic for the queue. If the page size was reduced perhaps it narrowed the potential for the race condition to occur? Alternatively changes in the paging code may have inadvertently fixed the problem.

As an aside: Wondering  if the page size configurable .. if not, this might be a nice feature.

Cheer's
/Dave","22/Dec/08 11:18 AM;dbosanac;Paged browsing solved the problem. Changes are merged in both 5.0 and 5.1 branches. 

I opened a Jira enhancement request for improving message browsing (https://issues.apache.org/activemq/browse/AMQ-2040)

Cheers
Dejan

 ","22/Dec/08 11:56 AM;davestanley;Hi Dejan,
Thanks very much. 

/Dave

",16/Jan/09 4:46 PM;davestanley;Verified this looks good in 5.0.0.25 release.,,,,,,,,,,,,
amq-1790 needs to be merged into Fuse MB 5.0.0.x,MB-419,12515843,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,gloughna,gloughna,28/Nov/08 1:04 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Dec/08 12:06 PM,5.0.0.23-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.24-fuse,,,,broker,,,0,,AMQ-1790 needs to be merged into Fuse MB 5.0.0.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9sv:,178569,,,,,,,,"03/Dec/08 12:06 PM;garytully;fix merged in r63720.
ready for   .24 when it is released.",,,,,,,,,,,,,,,,,,,
Messages are arriving out of sequence using Fuse Message Broker 5.1.,MB-417,12515841,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,gloughna,gloughna,21/Nov/08 10:52 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,05/Dec/08 11:08 AM,5.1.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.2.0.1-fuse,,,,,,,0,,"Messages are arriving out of sequence when Fuse Message Broker is been used. To reproduce the problem the enclosed testcase needs to be run. When the testcase is run here,  the loadTest50kLarge, loadTest100kSmall, and loadTestTwoQueues50kSmall tests are failing. However, the other tests are working successfully. ",,,,,,,,,,,,,,,24/Nov/08 1:12 PM;gloughna;TEST-com.progress.testharness.xml;https://issues.jboss.org/secure/attachment/12368624/TEST-com.progress.testharness.xml,26/Nov/08 1:39 PM;gloughna;TEST-com.progress1.testharness.LoadTester;https://issues.jboss.org/secure/attachment/12368623/TEST-com.progress1.testharness.LoadTester,,,,,,,,,,,,,,,,,,,,,,,,,2.0,4.0,,1|hzk9tj:,178572,,,,,,,,"24/Nov/08 1:15 PM;garytully;ok, thanks for the validation. 

yea, I modified the test case to produce the data store and saved it off, then repreatidly reran just the consumer part, and was only seeing the failure on 5.0.1-fuse. Will have to do some more discovery. This will take some time to get to the bottom of I think.

Gary.
","01/Dec/08 11:41 AM;garytully;The problem appears to be in the interaction with the queue memory cache and outstanding acks. I still need to figure out why the duplicate suppression is not working in this case, but in any event, a duplicate should not be produced.

A workaround is to disable the destination cache through a destination policy. There is already a policy entry that can be modified to add the useCache=false attribute.
In activemq-jmstemplate-context.xml add the useCache as follows:
{code}
<amq:policyEntry queue="">"" useCache=""false"" >
{code}
This should also hold for the 5.1.x code base and the current 5.2.",02/Dec/08 10:37 AM;garytully;relevant issue at apache: https://issues.apache.org/activemq/browse/AMQ-2020,05/Dec/08 11:08 AM;garytully;fix is on the 5.2.0-fuse branch.,,,,,,,,,,,,,,,,
"Resolve dependency divergence with FUSE - jaxb, jetty, ant",MB-416,12515840,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,garytully,garytully,21/Nov/08 10:46 AM,21/Nov/08 11:17 AM,29/Nov/16 4:17 PM,21/Nov/08 11:17 AM,,,,,,,,,,,,,,,,,,,,,5.2.0.0-fuse,,,,,,,0,,"FUSE needs consistency - 
  ant-version 1.6.5
  jaxb-api 2.1
  jaxb-impl 2.1.6

  jetty-version 6.1.14",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk9qf:,178558,,,,,,,,21/Nov/08 10:52 AM;garytully;identify the versions.,21/Nov/08 11:12 AM;garytully;move to jetty 6.1.14,,,,,,,,,,,,,,,,,,
Master Slave Configuration throwing exceptions,MB-413,12515837,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mdavis1,mdavis1,11/Nov/08 12:50 PM,08/Jan/09 9:57 AM,29/Nov/16 4:17 PM,08/Jan/09 9:57 AM,5.1.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.1.0.3-fuse,,,,broker,,30/Nov/08 12:00 AM,0,,"I tried running 2 ActiveMQ brokers in a master/slave configuration using a ""pure master/slave configuration"".  The configuration for master and slave are in the attached activemq.xml-master and activemq.xml-slave. 

I then ran 2 instances of my TestReceiver program, and then 1 TestSender program.
While TestSender is running, both master and slave ActiveMQ brokers display many exceptions similar to the error below.  I was wondering if this is the same as http://fusesource.com/issues/browse/MB-369 or the external apache listed.
ERROR Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:EAGLR5E1259-2441-1226096281072-0:0:1:1:200) was not in the pending list

javax.jms.JMSException: Slave broker out of sync with master: Dispatched message

 (ID:EAGLR5E1259-2441-1226096281072-0:0:1:1:200) was not in the pending list

        at org.apache.activemq.broker.region.PrefetchSubscription.processMessageDispatchNotification(PrefetchSubscription.java:172)

        at org.apache.activemq.broker.region.AbstractRegion.processDispatchNotification(AbstractRegion.java:414)

        at org.apache.activemq.broker.region.RegionBroker.processDispatchNotification(RegionBroker.java:585)

        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)

        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)

        at org.apache.activemq.broker.BrokerFilter.processDispatchNotification(BrokerFilter.java:202)

        at org.apache.activemq.broker.MutableBrokerFilter.processDispatchNotification(MutableBrokerFilter.java:209)

        at org.apache.activemq.broker.TransportConnection.processMessageDispatchNotification(TransportConnection.java:451)

        at org.apache.activemq.command.MessageDispatchNotification.visit(MessageDispatchNotification.java:77)

        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:290)

        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)

        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)

        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)

        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)

        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:98)

        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:36)

 

","RedHat Enterprise Linux 5.
",,,,,,,,,,,,,,11/Nov/08 12:51 PM;mdavis1;TestReceiver.java;https://issues.jboss.org/secure/attachment/12368620/TestReceiver.java,11/Nov/08 12:51 PM;mdavis1;TestSender.java;https://issues.jboss.org/secure/attachment/12368622/TestSender.java,11/Nov/08 12:50 PM;mdavis1;activemq.xml-master;https://issues.jboss.org/secure/attachment/12368619/activemq.xml-master,11/Nov/08 12:51 PM;mdavis1;activemq.xml-slave;https://issues.jboss.org/secure/attachment/12368621/activemq.xml-slave,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-1585,,,,4.0,1.0,,1|hzk9xr:,178591,,,,,,,,08/Jan/09 9:57 AM;dbosanac;In the end changes provided for https://issues.apache.org/activemq/browse/AMQ-1849 fixed the problem.,,,,,,,,,,,,,,,,,,,
shared filesystem master slave not working correctly,MB-412,12515836,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mdavis1,mdavis1,11/Nov/08 12:36 PM,10/Feb/09 4:13 PM,29/Nov/16 4:17 PM,10/Feb/09 4:13 PM,5.1.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.0-fuse,,,,broker,,30/Nov/08 12:00 AM,1,," I tried to use a ""shared filesystem master/slave"" - running two instances of ActiveMQ on the same machine out of the master's directory. 

Then I ran 2 instances of TestReceiver, and 1 instance of TestSender. 

While TestSender was sending messages, I killed the master so the slave was promoted to master.  I notice after the slave takes over, sometimes message group information seems to be lost, so that both receivers receive messages for both groups.  Is this a known issue? 

Output from TestReceiver instance 1 after killing master: 

Nov 7, 2008 4:43:23 PM org.apache.activemq.transport.failover.FailoverTransport handleTransportFailure

WARNING: Transport failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.net.SocketException: Software caused connection abort: socket write error

Nov 7, 2008 4:43:34 PM org.apache.activemq.transport.failover.FailoverTransport doReconnect

INFO: Successfully reconnected to tcp://localhost:61616

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 916'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 916'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 917'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 917'

 

Output from TestReceiver instance 2 after killing master:

 

Nov 7, 2008 4:43:23 PM org.apache.activemq.transport.failover.FailoverTransport handleTransportFailure

WARNING: Transport failed to tcp://localhost:61616 , attempting to automatically reconnect due to: java.io.EOFException

Nov 7, 2008 4:43:34 PM org.apache.activemq.transport.failover.FailoverTransport doReconnect

INFO: Successfully reconnected to tcp://localhost:61616

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 905'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 906'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 906'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 907'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 907'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 908'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 908'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 909'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 909'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG1 910'

Nov 7, 2008 4:43:34 PM TestReceiver onMessage

INFO: received 'MG2 910'

","RedHat Enterprise Linux 5.
",,,,,,,,,,,,,,11/Nov/08 12:40 PM;mdavis1;TestReceiver.java;https://issues.jboss.org/secure/attachment/12368617/TestReceiver.java,11/Nov/08 12:40 PM;mdavis1;TestSender.java;https://issues.jboss.org/secure/attachment/12368618/TestSender.java,11/Nov/08 12:39 PM;mdavis1;activemq.xml-master;https://issues.jboss.org/secure/attachment/12368615/activemq.xml-master,11/Nov/08 12:39 PM;mdavis1;activemq.xml-slave;https://issues.jboss.org/secure/attachment/12368616/activemq.xml-slave,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2016,,,,4.0,4.0,,1|hzka4f:,178621,,,,,,,,"15/Jan/09 6:03 AM;dbosanac;Hi Michelle,

I think this issue is related to AMQ-2016 which says that message grouping is not honored when there are preexisting messages in the queue. So the problem occurs when the sender reconnects faster then consumers and sends some messages in between. You can reproduce the problem much easier if you use an url like this

""failover:(tcp://localhost:61616,tcp://localhost:61617)?initialReconnectDelay=10000&randomize=false""

for conumsers (waiting 10 sec before reconnection).

I'll try to fix AMQ-2016 and see if it helps with this

Regards
Dejan","26/Jan/09 11:40 AM;dbosanac;Hi Michelle,

this issue is now fixed in the trunk. I'll merge it to the 5.2 branch right after the release (it should any day now). Do you need this fix to be merged to the 5.1 branch as well (could be a tricky one)?

Regards
Dejan","26/Jan/09 11:44 AM;dbosanac;Also, take a look at [this post|http://www.nighttale.net/activemq/message-groups-just-got-a-bit-better.html], which explains additional settings that enables message groups to work correctly in master-slave setup.",10/Feb/09 4:13 PM;dbosanac;The fix will be available in 5.3.0.0 release that is coming soon. Please reopen it if you need a port for 5.2 branch.,,,,,,,,,,,,,,,,
Closing messgage groups with JMSXGroupSeq,MB-411,12515835,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mdavis1,mdavis1,11/Nov/08 12:11 PM,26/Jan/09 1:13 PM,29/Nov/16 4:17 PM,26/Jan/09 1:13 PM,5.1.0.1-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,30/Nov/08 12:00 AM,0,,"I am having a problem resetting the message groups by setting JMSXGroupSeq to 0.  It should close the message group, and the broker should reassign the group to a new consumer.   In my investigation, I found a JIRA and forum post from 2006 indicating closing message groups using JMSXGroupSeq does not work: http://www.mail-archive.com/activemq-users@geronimo.apache.org/msg02100.html
","RedHat Enterprise Linux 5.
",,,,,,,,,,,,,,24/Dec/08 11:19 AM;dbosanac;MessageGroupTest.java;https://issues.jboss.org/secure/attachment/12368629/MessageGroupTest.java,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzka0n:,178604,,,,,,,,"24/Dec/08 11:19 AM;dbosanac;Hi Michelle,

I cannot reproduce this problem. I've implemented a test case which tries to reproduce the problem, but everything looks fine.

Note that AMQ issue 763 (and related 762) are related to the clustered broker environment.

Can you look at this test case, check if it is valid for your situation and make modifications (or create the new one) that reproduces the bug?

Regards
Dejan","15/Jan/09 8:55 AM;mdavis1;Hello Dejan.  I have received your testcase but have not had time to look at it.  I will do so shortly with the latest release.

Thanks,
Michelle","26/Jan/09 1:12 PM;dbosanac;After investigating it further, I established that negative sequence numbers are ""closing"" the groups, so try using -1 instead of 0. I modified the documentation and added some tests. I will resolve this issue for now.",,,,,,,,,,,,,,,,,
Regression in PrefetchSubscription.java in Fuse MB 5.0.0.21,MB-410,12515834,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,06/Nov/08 10:59 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,11/Dec/08 12:44 PM,5.0.0.21-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.24-fuse,,,,,,,0,,"There is a regression in class: 'PrefetchSubscription.java'

Messages should remain in dispatched until commit or rollback in transactional mode. With the actual change, it does not work anymore.

As commented in source code, messages have to remain in dispatched list up to commit or rollback.",Fuse MB 5.0.0.x-fuse branch.,,,,,,,,,,,,,,06/Nov/08 11:00 AM;davestanley;PrefetchSubscription_20081106.java.patch;https://issues.jboss.org/secure/attachment/12368614/PrefetchSubscription_20081106.java.patch,,,,,,,,,,,,,,,,,,,,,,http://fusesource.com/issues/browse/MB-428,,,,1.0,4.0,,1|hzk9un:,178577,,,,,,,,06/Nov/08 11:00 AM;davestanley;Patch attached.,"06/Nov/08 11:48 AM;garytully;am thinking a tests is like so:
one q, one message, one transacted consumer, one recieve, one close without a commit. Second consumer should see the message but will not till another message is dispatched to the q.

Does the customer describe the current 'bad' behavior?
","09/Dec/08 7:24 AM;garytully;pulling all the relevant fixes from trunk to the 5.0.0-fuse branch, Should have a build by cob today.
",11/Dec/08 12:44 PM;garytully;last bit is in http://fusesource.com/issues/browse/MB-428,,,,,,,,,,,,,,,,
Topics Delivering Duplicate Messages when have network of brokers w/multicast discovery,MB-408,12515833,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,29/Oct/08 3:28 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,12/Dec/08 5:45 AM,5.1.0.1-fuse,,,,,,,,,,,,,,,,,,,,5.2.0.1-fuse,,,,,,,0,,"We have network of brokers connected via multicast and a producer publishing to a topic.  In this configuration, the consumer always seems to receive duplicate messages.","Fuse Message Broker 5.1.0.1, 5.0.0.x(SNAPSHOT)",,,,,,,,,,,,,,29/Oct/08 3:31 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368613/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,12.0,,1|hzk9wn:,178586,,,,,,,,"29/Oct/08 3:31 PM;davestanley;Testcase attached. To run:

1) export ACTIVEMQ_HOME=/opt/iona/fuse-message-broker-5.1.0.1
2) ant compile
3) ant testProducer

","12/Nov/08 5:37 AM;garytully;Is there is a problem with the test case?  I only noticed this when I tried to produce a test case from scratch for apache. 
broker1 has two discovery NetworkConnectors. Is this the intention?

{code}broker1.setUseJmx(false);
broker1.addNetworkConnector(MULTICAST_DEFAULT).setDecreaseNetworkConsumerPriority(true);
NetworkConnector networkConnector1 = broker1.addNetworkConnector(MULTICAST_DEFAULT);{code}

Note the duplicate call to addNetworkConnector(..). Comment out the first add and the test case will work as expected. The duplicate results is two listeners for multi cast advertisements and two responses in the form of network bridges and hence duplicate consumers and duplicate messages. 
","12/Nov/08 5:56 AM;garytully;the crux of the problem seems to be networkTTL > 1. The modified test case shows duplicates with a networkTTL > 1 and works when networkTTL == 1.

I guess the default value is 1 for just this reason.

In the multicast, ""everyone connected to everyone"" topology, with a networkTTL greater that the number of brokers, it is reasonable to expect as many duplicates as there are brokers. The limiting factor is that a broker will not redispatch/bridge a message it has already dispatched.

what is the motivation for specifying a networkTTL of 1000?",12/Nov/08 5:57 AM;garytully;see networkTTL details at http://activemq.apache.org/networks-of-brokers.html,"12/Nov/08 6:12 AM;garytully;Thinking about the dynamicOnly flag which in the test case is set to true. This should mean that the networkTTL is not that relevant as the only bridge should be from the sending broker to the receiving broker. The third network broker should not see the messages as there is no subscriber on it and the network is 'dynamicOnly'

I need to do some more investigation to see why this is not the case.","12/Nov/08 11:14 AM;garytully;so DynamicOnly is about whether the set of destinations to network is pre-configured or obtained dynamically, not about subscriptions active on particular nodes. Once true, all subscriptions are valid for networking.

Hence the networkTTL is relevant as a way to restrict the extent to which a subscription is visible in the network. A value of 1 ensures that a subscription will not be visible through another broker.

In this case, B3->B2->B1 will not be allowed with networkTTL =1, but B3->B2 and B3->B1 will.

","12/Nov/08 11:51 AM;garytully;There is an underlying problem with networkTTL > 1. A networked subscription does not keep track of the original subscription so it is possible in the case where ""every broker knows about every other"" to have a subscription on B3 visible on B1 twice. Once as coming from B3 and the second coming from B2 which in turn received the subscription from B3. 
{code}B3->B2->B1 and B3->B1{code} also  {code} B3->B1->B2{code}
A consumer on B3 sees all messages, A consumer on B1 or B2 sees 2*all messages.

The solution requires a change to the wireFormat to have a consumerInfo contain the list of consumerIds it represents along the network. When a duplicate is recognised, the shortest path route should be maintained, the other dropped.
However it is not clear how an ""every broker knows about every other"" topology is good for topics where every broker should get every message by definition.","12/Nov/08 11:55 AM;garytully;setDecreaseNetworkConsumerPriority is not relevant either for topics as every consumer must get all messages.

So the question, is this issue really a feature request for ""duplicate subscription suppression for topics in a multicast (every one knows about everyone) network"" ?","12/Nov/08 12:40 PM;garytully;Another name for the topology is 'cyclic'
see: 
http://issues.apache.org/activemq/browse/AMQ-1509
and some threads from the maillists:
http://markmail.org/message/de5igbdlpem5kdmd#query:activemq%20network%20topic%20duplicate+page:1+mid:nr3lqzl4jipedc2z+state:results
http://www.nabble.com/Network-of-Brokers-configuration-limitation--td11639335s2354.html#a11639335
","10/Dec/08 11:27 AM;garytully;mirror issue for suppressing duplicate topic subscriptions in a cyclic network:
https://issues.apache.org/activemq/browse/AMQ-2030",12/Dec/08 5:45 AM;garytully;fix for duplicate messaged to topics in a cyclic network is on 5.2.0-fuse - can be validated in the latest SNAPSHOT,"22/Dec/08 2:21 PM;davestanley;Verified in 5.2.0.1 all looks good!

Cheer's,
/Dave",,,,,,,,
Protect toPageIn count from negative value due to negative value in statistics,MB-405,12515829,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,chirino,martinmurphy,martinmurphy,02/Oct/08 11:17 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:10 AM,5.0.0.20-fuse,5.1.0.1-fuse,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,broker,,,0,,"When paging in messages to be dispatched the number to be paged in is calculated based on the destination statistics. There could be a danger that these statistics could incorrectly become negative and would have a serious impact on never actually paging in any messages. This suggested patch does not address the statistics becoming negative, but does at least protect the algorithm",,,,,,,,,,,,,,,02/Oct/08 11:18 AM;martinmurphy;MB405.patch.txt;https://issues.jboss.org/secure/attachment/12368609/MB405.patch.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1957,,,,1.0,1.0,,1|hzk9nb:,178544,,,,,,,,07/Oct/08 9:10 AM;chirino;Patch applied.,,,,,,,,,,,,,,,,,,,
JMSXDeliveryCount is not being incremented correctly,MB-403,12515826,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,davestanley,davestanley,24/Sep/08 3:55 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,22/Dec/08 11:10 AM,5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"There seems to be a problem with respect to the Redelivered and JMSXDeliveryCount
properties, in that these properties are being incremented even when the message 
has never been re-delivered to the consumer (i.e. on initial message delivery).

The behavior appears to be happening when there is > 1 messages in the queue,
the second message and subsequent messages show the redelivered property set to true and
JMSXDeliverCount property with a number greater than 1, when those messages have not been 
re-delivered before.
",Fuse 5.0.0.x-fuse,,,,,,,,,,,,,,24/Sep/08 3:56 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368605/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1952,,,,1.0,7.0,,1|hzk9w7:,178584,,,,,,,,"24/Sep/08 3:56 PM;davestanley;Testcase attached:

To run:
>export ACTIVEMQ_HOME=<AMQ Home>
>ant compile
>ant test","24/Sep/08 3:58 PM;davestanley;This issue is also tracked via Apache issue: https://issues.apache.org/activemq/browse/AMQ-1730 

I initally thought this was something specific to using spring with CACHE_NONE (an enforced constraint when using jboss with XA) but the problem seems to be more fundamental than that. It happens when running with a pooled connection factory and/or spring with caching enabled too.

Cheer's
/Dave",24/Sep/08 4:18 PM;chirino;I added this test case to the CPI module.,"24/Sep/08 4:23 PM;chirino;I think we may need to extend the wire protocol a bit to gracefully handle this.  When the consumer closes, it should let the broker know the last message id that was delivered to the client.  That way the broker can mark all the messages between the last one acked and the last one delivered to the client as being redelivered and the rest would not get marked as being redelivered.",24/Sep/08 4:55 PM;chirino;Applied a fix to the 5.1.0 and 5.0.0 branch which should make the test case work if prefetch is set to 0.,"29/Sep/08 4:16 PM;davestanley;Verified  testcase works as expected with the prefetch=0 workaround (& 5.0.0-fuse branch).

",22/Dec/08 11:10 AM;davestanley;Verified this a long while back. Closing ..,,,,,,,,,,,,,
Queue.removeMessage() should add synchronization a possible IOException ,MB-402,12515827,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,martinmurphy,martinmurphy,24/Sep/08 9:38 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:10 AM,5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,broker,,,0,,"In the case of a transacted context we should catch a possible IOException on acknowledge, the message should be rolled back and state set to Acked=false.
",,,,,,,,,,,,,,,24/Sep/08 9:39 AM;martinmurphy;MB402.patch.txt;https://issues.jboss.org/secure/attachment/12368602/MB402.patch.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk9mv:,178542,,,,,,,,"24/Sep/08 9:39 AM;martinmurphy;Here is a patch for this issue, please ensure this is applied to the 5.0.0 branch",25/Sep/08 12:31 PM;chirino;We need this patch submitted by the end user into the Apache issue tracker so that proper IP management can occur.,07/Oct/08 9:10 AM;chirino;Patch applied.,,,,,,,,,,,,,,,,,
Dispatch lock in PrefetchSubscription not always applied before adding or removing dispatched messages,MB-401,12515825,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,martinmurphy,martinmurphy,23/Sep/08 9:27 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:10 AM,5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,broker,,,0,,"Dispatch lock should always be synchronized on when adding or removing dispatched messages in 'dispatched' list. If this is not the case, some messages could be missing from the 'dispatched' list when subscriptions give back undispatched messages to a Queue on removeSubscription.",,,,,,,,,,,,,,,23/Sep/08 10:44 AM;martinmurphy;MB401.patch.txt;https://issues.jboss.org/secure/attachment/12368601/MB401.patch.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk9mf:,178540,,,,,,,,"23/Sep/08 10:44 AM;martinmurphy;Here is a patch for this issue, note it also contains a TODO that raises a concern around the inflight stat",25/Sep/08 12:32 PM;chirino;We need this patch submitted by the end user into the Apache issue tracker so that proper IP management can occur.,07/Oct/08 9:10 AM;chirino;Patch applied.,,,,,,,,,,,,,,,,,
Enhancement to page in only new messages in pagedInMessages map,MB-400,12515824,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,martinmurphy,martinmurphy,19/Sep/08 11:37 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:10 AM,5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,broker,,,0,,"Only new messages from message cursor (storage) should be added to pagedInMessages, otherwise it could erase previously fetched node references in the map. The nodes in this map have states about their process like lockedOwner or ack and drop state.
Nodes references should not be overwritten in the map even if they are the same because they would lose their state and in this case, they could be resent to a subscription.
",,,,,,,,,,,,,,,19/Sep/08 11:45 AM;martinmurphy;MB400.patch.txt;https://issues.jboss.org/secure/attachment/12368599/MB400.patch.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1957,,,,1.0,4.0,,1|hzk9lr:,178537,,,,,,,,"19/Sep/08 11:45 AM;martinmurphy;Attaching a patch for this issue based on the 5.0.0 branch, this could also be added to the trunk, though I haven't tested that",25/Sep/08 12:32 PM;chirino;We need this patch submitted by the end user into the Apache issue tracker so that proper IP management can occur.,29/Sep/08 10:23 AM;martinmurphy;Patch has been submitted by the end user.,07/Oct/08 9:10 AM;chirino;Patch applied.,,,,,,,,,,,,,,,,
Reentrant lock error in IndirectMessageReference,MB-399,12515823,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,gloughna,gloughna,19/Sep/08 10:41 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:09 AM,5.0.0.19-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,,,,0,,"IndirectMessageReference allows reentrant locking for QueueSubscriptions (PreftechSubscriptions.java in 'dispatchPending' and 'dispatch' methods), but it should not because a message can be pushed to subscription from default dispatch method (method doActualDispatch from Queue.java class) and from RecoveryDispatch (in method Iterate from Queue.java class).

Because Recovery Dispatchs and 'pagedInPendingDispatch' list can share same messages, in some circumstances, one message can be pushed multiple times to subscription in the same time by multiple Recovery Dispatchs and by doActualDispatch.

Because the lock is reentrant, the same subscription can dispatch to client consumer multiple time the same message. The side effect is the delivery of duplicates to client and the process of all the dupliaces by the client.",,,,,,,,,,,,,,,19/Sep/08 11:58 AM;gloughna;ReentrantLock.patch;https://issues.jboss.org/secure/attachment/12368603/ReentrantLock.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk9lb:,178535,,,,,,,,25/Sep/08 12:32 PM;chirino;We need this patch submitted by the end user into the Apache issue tracker so that proper IP management can occur.,"30/Sep/08 6:04 AM;gloughna;Customer has logged the following issue with Apache:
    * https://issues.apache.org/activemq/browse/AMQ-1957
",07/Oct/08 9:09 AM;chirino;Patch applied.,,,,,,,,,,,,,,,,,
Broker slowing down processing messages when there a large number of messages in a queue,MB-398,12515822,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,martinmurphy,martinmurphy,19/Sep/08 10:39 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:09 AM,5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,,,,0,,"When consumers are slower than producers, doPageIn insert many duplicates in 'pagedInPendingDispatch' list. 
For instance, when there is 2000 message in 1 queues, it is possible that 'pagedInPendingDispatch' list contains 
more 30000 messages in a few minutes.",,,,,,,,,,,,,,,19/Sep/08 10:43 AM;martinmurphy;MB398.patch.txt;https://issues.jboss.org/secure/attachment/12368600/MB398.patch.txt,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1957,,,,1.0,5.0,,1|hzk9kv:,178533,,,,,,,,"19/Sep/08 10:43 AM;martinmurphy;This patch is based on the 5.0.0 branch, but could be applied to the trunk as well.","24/Sep/08 4:08 PM;chirino;Hi Martin,

Could you provide a test case the can show / reproduce the slow down?  Thanks!",25/Sep/08 12:33 PM;chirino;We need this patch submitted by the end user into the Apache issue tracker so that proper IP management can occur.,29/Sep/08 10:24 AM;martinmurphy;Patch has been submitted by end user,07/Oct/08 9:09 AM;chirino;Patch applied.,,,,,,,,,,,,,,,
Correction to MB-386 - Multiple add of pending messages in Queue.java,MB-397,12515821,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,martinmurphy,martinmurphy,19/Sep/08 9:41 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,07/Oct/08 9:09 AM,5.0.0.20-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,,,,0,,"Message should not be added to pagedInPendingDispatch if it already exists inside the list, to avoid dispatch of message multiple times. Basically in the current version 5.0.0.20, we add the message without checking to see if it was previously added before we got the lock
{code}
// make sure it gets queued for dispatched again
dispatchLock.lock();
try {
    pagedInPendingDispatch.add(node);
} finally {
    dispatchLock.unlock();
}
{code}
This should check before adding the message to avoid a duplicate:
{code}
// make sure it gets queued for dispatched again
dispatchLock.lock();
try {
    // Check if message is already present in list - different from patch in 5.0.0.20 - MB-386 modified
    // If not present, then add it to avoid multiple dispatch attempts of the same message
    if (!pagedInPendingDispatch.contains(node)) {
        pagedInPendingDispatch.add(node);
    }
} finally {
    dispatchLock.unlock();
}
{code}
",,,,,,,,,,,,,,,19/Sep/08 10:16 AM;martinmurphy;MB397.patch.txt;https://issues.jboss.org/secure/attachment/12368597/MB397.patch.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,5.0,,1|hzk9kf:,178531,,,,,,,,"19/Sep/08 10:10 AM;martinmurphy;Patch to 5.0.0 branch, please ensure that it is applied there. It should also be applied to the trunk.",22/Sep/08 3:27 PM;rajdavies;linked to https://issues.apache.org/activemq/browse/AMQ-1947,"24/Sep/08 4:06 PM;chirino;Hi Martin,

Is there a test case that can reproduce the error?  I think we need to find out the cause of the dup dispatch and address it there as this duplicate checking is going increase CPU load significantly.","01/Oct/08 12:27 PM;martinmurphy;This relates to MB-398, essentially pagedInPendingDispatch could be a Set instead of a List to avoid this duplication. This only happens with very particular configuration

Although even a Set may not be perfect. If a message is already in 'pagedInPendingDispatch' list (even if a Set is used) and in pagedInMessages LinkedHashMap, it is possible there is a problem with it: when a message is 'paged in' it is taken from the store, but it seems that it is possible to 'page in' the same message from the store multiple times.
If doPageIn method is called multiple times, in this case, when check is not done that 'pagedInPendingDispatch' List and 'pagedInMessages ' LinkedHashMap do not contain a MessageReference, then previous MessageReference is replaced in List and LinkedHashMap.
In result, on next RecoveryDispatch or doActualDispatch MessageReference have lost there state (lock, drop ack) and they are repushed to subscriber, because they have been replaced List and LinkedHashMap",07/Oct/08 9:09 AM;chirino;patch applied.,,,,,,,,,,,,,,,
Recovery of TransactionBroker fails because of missing Subscriptions (AMQ-1712) ,MB-396,12515820,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,18/Sep/08 12:13 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,24/Sep/08 4:02 PM,5.0.0.19-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,,,,,,,0,,"Placeholder to get http://issues.apache.org/activemq/browse/AMQ-1712 merged into 5.0.0-fuse branch.

Thanks
/Dave",5.0.0-fuse branch,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9jj:,178527,,,,,,,,24/Sep/08 4:02 PM;chirino;applied in rev 52186,,,,,,,,,,,,,,,,,,,
"The defaut value for the maximumActive property on the PooledConnectionFactoryBean is 0, making it unusable",MB-395,12515819,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,17/Sep/08 3:19 PM,17/Sep/08 3:26 PM,29/Nov/16 4:17 PM,17/Sep/08 3:26 PM,,,,,,,,,,,,,,,,,,,,,5.1.0.1-fuse,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9hj:,178518,,,,,,,,17/Sep/08 3:26 PM;chirino;fixed in rev: http://projects.open.iona.com/projects/trac/iona/changeset/51777,,,,,,,,,,,,,,,,,,,
"The pooled connection factory FactoryBean does not implement DisposableBean, thus leaking connections",MB-394,12515818,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,17/Sep/08 3:18 PM,17/Sep/08 3:26 PM,29/Nov/16 4:17 PM,17/Sep/08 3:26 PM,,,,,,,,,,,,,,,,,,,,,5.1.0.1-fuse,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9hz:,178520,,,,,,,,17/Sep/08 3:26 PM;chirino;fixed in rev: http://projects.open.iona.com/projects/trac/iona/changeset/51777,,,,,,,,,,,,,,,,,,,
Make activemq-ra an OSGi bundle,MB-393,12515816,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,17/Sep/08 3:17 PM,17/Sep/08 3:27 PM,29/Nov/16 4:17 PM,17/Sep/08 3:26 PM,,,,,,,,,,,,,,,,,,,,,5.1.0.1-fuse,,,,,,,0,,"Make activemq-ra an OSGi bundle
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9if:,178522,,,,,,,,17/Sep/08 3:26 PM;chirino;Fixed in rev: http://projects.open.iona.com/projects/trac/iona/changeset/51777,,,,,,,,,,,,,,,,,,,
org.apache.activemq.config.ConfigTest is failing on windows,MB-392,12515817,Bug,Open,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,,rajdavies,davestanley,davestanley,16/Sep/08 11:44 AM,16/Sep/08 11:45 AM,29/Nov/16 4:17 PM,,5.0.0.18-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Testcase is failing on windows, seems jdbc layer cannot initialize. ",Fuse Message Broker 5.0.0.18 (5.0.0-fuse branch),,,,,,,,,,,,,,16/Sep/08 11:45 AM;davestanley;configTest.patch;https://issues.jboss.org/secure/attachment/12368598/configTest.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzk9h3:,178516,,,,,,,,16/Sep/08 11:45 AM;davestanley;Patch attached (Cut from 5.0.0.18).,,,,,,,,,,,,,,,,,,,
incorrect group id for dependent tooling projects  activemq-perftest pom.xml,MB-387,12515812,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,garytully,garytully,garytully,26/Aug/08 7:48 AM,26/Aug/08 10:47 AM,29/Nov/16 4:17 PM,26/Aug/08 10:47 AM,5.0.0.19-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.20-fuse,,,,,,,0,,see: http://open.iona.com/forums/thread.jspa?messageID=1127&#1127,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9dr:,178501,,,,,,,,26/Aug/08 10:47 AM;garytully;change at apache merged to 5.1.0 and 5.0.0 fuse branchs,,,,,,,,,,,,,,,,,,,
FUSE Message Broker Client with spring jmsTemplate drops messages (if reveiveTimeout is used) or blocks (if receiveTimeout is not specified.) under heavy load.,MB-386,12515810,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,ubhole,ubhole,25/Aug/08 5:41 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,01/Sep/08 8:25 AM,5.0.0.18-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.20-fuse,,,,java client,,,0,,"spring jmsTemplate based client would either block or drop messages under heavy load. The problem is seen in FUSE ESB with Jira ref: http://open.iona.com/issues/browse/ESB-265 where servicemix-jms jmsProviderEndpoint uses spring jmsTemplate based client to talk to ActiveMQ and blocks under heavy load after certain time on receiving message. Message can be seen on the queue but sprinjms based client using receiveSelected() call to receive message based on JMSCorrelationID based selector waits for the message and eventually will timeout (if one set) or block indefinitely.

",,,,,,,,,,,MB-397,,,,25/Aug/08 5:52 AM;ubhole;msg-sequencing-jmsClient-mock.tar.gz;https://issues.jboss.org/secure/attachment/12368593/msg-sequencing-jmsClient-mock.tar.gz,25/Aug/08 5:50 AM;ubhole;springjms.tar.gz;https://issues.jboss.org/secure/attachment/12368592/springjms.tar.gz,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1917,,,,2.0,6.0,,1|hzk9j3:,178525,,,,,,,,"25/Aug/08 12:29 PM;garytully;so I have a fix that sorts out the test case, but I need to spend some more time to isolate the exact problem. I can reproduce the hang with just two threads but I cannot yet produce a simple test case with two threads that isolates the synchronization problem with dispatching so I am not 100% confident in the fix being optimal. That is, there may be a simpler fix.","25/Aug/08 12:41 PM;ubhole;Hi Gary,

Can you attach a patch here so that I can pick it up and build locally and test it with servicemix test if it fixes the original problem.

Regards,

Ulhas Bhole","25/Aug/08 6:01 PM;garytully;good idea, here is the patch:
{code}
Index: activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java	(revision 687677)
+++ activemq-core/src/main/java/org/apache/activemq/broker/region/Queue.java	(working copy)
@@ -936,6 +936,13 @@
 	                        msgContext.setMessageReference(node);
 	                            if (rd.subscription.matches(node, msgContext)) {
 	                                rd.subscription.add(node);
+	                            } else {
+	                                dispatchLock.lock();
+	                                try {
+	                                    pagedInPendingDispatch.add(node);
+	                                } finally {
+	                                    dispatchLock.unlock();
+	                                }
 	                            }
 	                    }
 	                }
{code}","28/Aug/08 9:39 AM;garytully;Ulhas, new patch that replaces the above:

{code}
+++ src/main/java/org/apache/activemq/broker/region/Queue.java	(working copy)
@@ -210,6 +210,9 @@
     LinkedList<RecoveryDispatch> recoveries = new LinkedList<RecoveryDispatch>();
 
     public void addSubscription(ConnectionContext context, Subscription sub) throws Exception {
+        // synchronize with dispatch method so that no new messages are sent
+        // while setting up a subscription. avoid out of order messages,
+        // duplicates, etc.
         dispatchLock.lock();
         try {
             sub.add(context, this);
@@ -229,18 +232,13 @@
                     dispatchSelector.setExclusiveConsumer(exclusiveConsumer);
                 }
             }
-            // synchronize with dispatch method so that no new messages are sent
-            // while
-            // setting up a subscription. avoid out of order messages,
-            // duplicates
-            // etc.
-            doPageIn(false);
 
{code}",28/Aug/08 9:40 AM;garytully;This issue is now mirrored by: https://issues.apache.org/activemq/browse/AMQ-1917 with a pure jms test case.,01/Sep/08 8:25 AM;garytully;fix merged to 5.0.0 fuse branch,,,,,,,,,,,,,,
"Messages are lost if duplex is set to ""true""",MB-385,12515809,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,pedroneveu,pedroneveu,22/Aug/08 4:05 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,10/Oct/08 11:02 AM,5.0.0.17-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,,,,broker,,,0,,"This test case demonstrates an issue when the duplex attribute of an activemq networkConnector is set to ""true"".
The problem occurs when the network fails while sending the messages from one broker to the broker specified
in the networkConenctor element.
For example:
    <networkConnectors>
       <networkConnector uri=""static:(tcp://10.1.0.12:61616)"" name=""hub1"" duplex=""true"">
        <dynamicallyIncludedDestinations>
           <queue physicalName=""TestQ"" />
        </dynamicallyIncludedDestinations>
       </networkConnector>
    </networkConnectors> 

Stes to reproduce the issue:

1. Set up two brokers (spoke1-hub1) on separate machines. The conf directory contains
samples of the activemq configuration used.
   Both machines had 2 nic cards. The communication between both servers was based on an ip subnet (10.1.0.x/255.255.255.0)
   and the communication between the load generator and spoke-1 was based on an ip subnet (192.168.1.x/255.255.255.0)
   The purpose of using 2 nic cards is so that the connection between the servers can be interrupted while the producer
   was sending messages.
 
2. Make changes to the broker url in the conf/client.properties file and run 
 the test case with: ant testProducer

3. Create a demand for these messages on the receiving broker.
   Here is a extract from conf/activemq-hub1.xml:
   
<camelContext id=""camel"" xmlns=""http://activemq.apache.org/camel/schema/spring"" >
     <route>
       <from uri=""activemq-local:TestQ"" />
       <to uri=""activemq-local:TestQ2"" />
     </route>
  </camelContext>     

    
   <bean id=""activemq-local"" class=""org.apache.camel.component.jms.JmsComponent"">
    <property name=""connectionFactory"">
      <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
        <property name=""brokerURL"" value=""vm://localhost?broker.persistent=true"" />
      </bean>
    </property>
  </bean>


4. When both brokers are brought up and the messages start to flow, 
  simply disconnect and reconnect the network cable between the two servers several times, 
  until all messages have been dequeued from the forwarding broker.
  I used vmware vms so it was easier to simulate this. Just disconnecting the nic card 
  between spoke1 and hub1. The connection between the producer and spoke1 continued connected.
  I disconnected it after message 70 was sent and reconnected it when I saw the following
  entry in the log on the hub1 server:
      INFO  DemandForwardingBridge         - Network connection between vm://hub1#2 and tcp:///10.1.0.10:42465(spoke1) has been established.
      WARN  DemandForwardingBridge         - Network connection between vm://hub1#2 and tcp:///10.1.0.10:42465 shutdown due to a remote error: org.apache.activemq.transport.InactivityIOException: Channel was inactive for too long: /10.1.0.10:42465
      INFO  TransportConnector             - Connector vm://hub1 Stopped
      INFO  DemandForwardingBridge         - hub1 bridge to spoke1 stopped
  
  Note: The log entry above only occurs when duplex=""true""
  
  I performed the disconnect and reconnect 2-3 times during the test of 500 messages at approx. 2/sec rate.
      
  The test were performed with duplex=true and duplex=false    
  Output from both servers can be found at the end of this document.
  
  I used HermesJMS to view the contents of TestQ2 in hub1 during and after the test was performed.

Results:

==========================
TEST WITH DUPLEX=TRUE
==========================

  1- 500 messages only 452 messages found in queues
  2- 500 messages only 476 messages found in queues
  3- 500 messages only 452 messages found in queues
  
======================  
TEST WITH DUPLEX=FALSE
======================

   1- 500 messages only 500 messages found in TestQ2
   2- 500 messages only 500 messages found in TestQ2
   3- 500 messages only 500 messages found in TestQ2
   
So when duplex =""true"" messages are lost.

(more details in readme)","Fuse MB 5.0.0.17, ant, jdk 1.5.0_7-b03, Linux SUSE 10",,,,,,,,,,,,,,07/Oct/08 11:49 AM;pedroneveu;Hub1-broker-TestQ.png;https://issues.jboss.org/secure/attachment/12368612/Hub1-broker-TestQ.png,07/Oct/08 11:49 AM;pedroneveu;Hub1-broker-TestQ2.png;https://issues.jboss.org/secure/attachment/12368610/Hub1-broker-TestQ2.png,07/Oct/08 11:49 AM;pedroneveu;Spoke1-broker.png;https://issues.jboss.org/secure/attachment/12368611/Spoke1-broker.png,07/Oct/08 9:46 AM;pedroneveu;activemq.xml;https://issues.jboss.org/secure/attachment/12368608/activemq.xml,03/Oct/08 1:20 PM;garytully;mb-385-scoket-proxy.tar;https://issues.jboss.org/secure/attachment/12368607/mb-385-scoket-proxy.tar,25/Sep/08 4:09 PM;pedroneveu;mb-385.jar;https://issues.jboss.org/secure/attachment/12368606/mb-385.jar,25/Aug/08 10:48 AM;pedroneveu;testcase_dev1075.jar;https://issues.jboss.org/secure/attachment/12368594/testcase_dev1075.jar,,,,,,,,,,,,,,,,,,,,7.0,9.0,,1|hzk9on:,178550,,,,,,,,"23/Sep/08 10:03 AM;chirino;I think CS should be able to create a junit test  for this test scenario.

They should be able to use the SocketProxy class in the http://projects.open.iona.com/projects/svn/iona/cpi/trunk/amq-sys-test module to simulate the network failure.","25/Sep/08 4:14 PM;pedroneveu;Hi Hiram,

I have attached a junit test for this scenario.  However, i couldn't get SocketProxy to work and instead of fighting with it any longer i am sending you the main testcase in junit style.  Once you fix the SocketProxy you should have a fully functioning testcase.

Pedro","03/Oct/08 1:20 PM;garytully;I think this captures it, even if the socketProxy is only covering one half of the duplex connection. With the disconnect every 100 messages, and sending 500 messages to spoke, the camel route on hub turning them around and consuming again from spoke, I can get message loss on occasion.

Can you verify, note the calls to proxytoHub.close and reopen.","06/Oct/08 10:28 AM;garytully;with the test case, I can see the consumer not getting messages, but the messages are not lost, they are just not delivered as the networked consumer has not reconnected. The problem is the reconnect logic for the networkconnector SimpleDiscoveryAgent. In the test case, I have a disconnect and reconnect every 500 messages, for 2 seconds. The reconnect logic sees this as problematic connection attempts and uses a backup timeout multiplier of 2 such that it can wait for quite a while to retry.

to see if this is the problem, turn on a bit more logging to see the reconnect delay.

log4j.logger.org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent=DEBUG

and try the configuration option useExponentialBackOff in the spoke config to ensure the initialConnectDelay of 1s is used to work around this.

<networkConnector uri=""static:(tcp://localhost:62616)?useExponentialBackOff=false"" name=""hub1"" duplex=""true"">

","07/Oct/08 9:58 AM;garytully;Hi Pedro,
one change from my test scenario, I did not have the discoveryUri specified as there is static networkConnector configured. So i have:
<transportConnector name=""openwire"" uri=""tcp://suse10-spoke1:61616"" />

I would have expected some additional logging, possibly the multicast discovery component is getting in the way.

I used the test case mb-385-scoket-proxy.tar, which behaves badly without the config change. However I do not see message loss, just messages remaining on the wrong broker and the receiver timeing out.",08/Oct/08 6:57 AM;garytully;I will revert to the original test case and try and reproduce what Roberto is seeing.,"08/Oct/08 12:49 PM;garytully;I have reproduced the issue using the original test case on linux and using iptables to simulate the network failure.
To stop all traffic to and from the hub on port 61616 the following works: {code} $ sudo iptables -I INPUT 1 -p tcp --sport 61616 -j DROP;sudo iptables -I INPUT 2 -p tcp --dport 61616 -j DROP{code} by dropping all packets to and from the target port. To enable again, the two rules above need to be deleted:{code}$ sudo iptables -D INPUT 1;sudo iptables -D INPUT 1{code}

It looks like mesages *are* being lost as they are being acked by the network connector even when the network is down. The culprit seems to be a bug fix a while back. 
https://issues.apache.org/activemq/browse/AMQ-1521 - change: http://svn.apache.org/viewvc/activemq/trunk/activemq-core/src/main/java/org/apache/activemq/network/DemandForwardingBridgeSupport.java?view=diff&r1=604699&r2=604700
",10/Oct/08 8:46 AM;garytully;now mirrored by https://issues.apache.org/activemq/browse/AMQ-1973,"10/Oct/08 11:02 AM;garytully;in duplex mode, bridged messages were acked before confirmation of a receipt from the target networked broker was received. For the period of time it takes for a broken network to be recognised, mesages can be acked in error. This has now been resolved. The resulting behaviour for such messages now is that they will be redelivered and may be duplicates, depending on whether or not they were consumed. There will be no messages loss on a network outage.
fix will be in 5.0.0.21-fuse",,,,,,,,,,,
Consumed messages re-appearing in the broker,MB-381,12515805,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,martinmurphy,martinmurphy,05/Aug/08 1:12 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Sep/08 2:42 PM,5.1.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.20-fuse,,,,broker,,18/Aug/08 12:00 AM,0,,"This is probably more of a problem with how the broker recovers from failures in conjunction with the database rather than a core broker failure.

The attached project clearly shows the problem where messages which have been consumed may re-appear after the broker restarts from a kill -9, forced kill in Windows, or a stop in the eclipse environment.

To run the test case in eclipse:

    # Run the JUnit test: SpringActiveMQTest.java (Explanations are given in comments of the test case) and let it run about 1 minute. It will shut-down automatically for a graceful shut-down.
    # Run the Java main class: SpringActiveMQ.java. Start jconsole from jdk6 on url: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi. As you can see, there is only 1 message on the queue, as expected from the test. Kill the broker with the stop button of eclipse. 
    # Again, run the Java main class: SpringActiveMQ.java. It will force ActiveMQ to recover. Start jconsole from jdk6 on url: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi. As you can see, there is 2 messages on the queue. One message re-pop. Explanation is given in comments of the junit test.

This is due to the fact that the deletion of a message was stored in a data file that is archived, but the fact that the message was sent to the broker is stored in another data file that remains active. So when the broker restarts it doesn't realise that the message was already removed and adds it again.
","Tested on Windows, using JDK 1.6.0_07, but  probably a problem on all platforms since it is a clear logic problem.",,,,,,,,,,,,,,05/Aug/08 1:15 PM;martinmurphy;MB-381.zip;https://issues.jboss.org/secure/attachment/12368590/MB-381.zip,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1926,,,,1.0,9.0,,1|hzk9en:,178505,,,,,,,,05/Aug/08 1:15 PM;martinmurphy;Here's a test case for this problem.,"06/Aug/08 4:42 AM;martinmurphy;I tried setting syncOnWrite to true as well, but that doesn't seem to help either. It looks like this is a problem with how the Kaha store is setup when a message send is in one data log and it's consumption is in another.

{code:xml}
<persistenceAdapter>
  <amqPersistenceAdapter directory=""${activemq.base}/activemq-data/amqstore"" maxFileLength=""4 mb"" 
archiveDataLogs=""true"" cleanupInterval=""5000"" syncOnWrite=""true""/>
</persistenceAdapter>
{code}

It might help to use JDBC instead of the Kaha store:

{code:xml}
<persistenceAdapter>
  <jdbcPersistenceAdapter dataSource=""#postgres-ds""/>
</persistenceAdapter>

<bean id=""postgres-ds"" class=""org.postgresql.ds.PGPoolingDataSource"">
    <property name=""serverName"" value=""localhost""/>
    <property name=""databaseName"" value=""activemq""/>
    <property name=""portNumber"" value=""0""/>
    <property name=""user"" value=""activemq""/>
    <property name=""password"" value=""activemq""/>
    <property name=""dataSourceName"" value=""postgres""/>
    <property name=""initialConnections"" value=""1""/>
    <property name=""maxConnections"" value=""10""/>
</bean>
{code}

You can read more on this [here|http://activemq.apache.org/persistence.html]","20/Aug/08 4:36 AM;rajdavies;There are currently two choices for the current message broker - make recovery of the reference store optional  - see 
https://issues.apache.org/activemq/browse/AMQ-1901

or use the a journal with jdbc

rob.davies@iona.com","20/Aug/08 4:51 AM;martinmurphy;If I read [AMQ-1901|https://issues.apache.org/activemq/browse/AMQ-1901] correctly :
{quote}
recoverReferenceStore - default = true - will recover if not valid
forceRecoverReferenceStore - default force - will force a recovery 
{quote}

Could setting these to false or not forcing a recovery could result in messages that were persisted to the reference store being lost?
In short if you don't want to lose messages and do not want to encounter this bug you (consumed messages re-appearing) will have to use JDBC with the Journal?","20/Aug/08 6:45 AM;rajdavies;The very, very worst that could happen is that the reference store is corrupted  and fails on start - but if that is the case - restart the broker with recoverReferenceStore or forceRecoverReferenceStore set.","20/Aug/08 8:13 AM;garytully;fix from https://issues.apache.org/activemq/browse/AMQ-1901 is on the fixes branch, r46943. will be in .19","20/Aug/08 10:18 AM;martinmurphy;I think there may still be a problem with this fix. I compiled the trunk and tested it on my side. I would appreciate feedback on my findings.

I repeated the steps of the demo as described above, but this time I had persistence adapter configured not to recover the reference store.

{code:xml}
    <persistenceAdapter>
      <amqPersistenceAdapter directory=""${activemq.base}/activemq-data/amqstore"" maxFileLength=""4 mb"" archiveDataLogs=""true"" cleanupInterval=""5000"" syncOnWrite=""true"" recoverReferenceStore=""false""/>
    </persistenceAdapter>
{code}

I found that the consumed message that was re-appearing no longer re-appears, so all seems good. However, in step 3 (when the broker, SpringActiveMQ, restarts), I can see that the non-consumed message seems to be removed:

{quote}
20-Aug-2008 14:54:08 org.apache.activemq.broker.BrokerService start
INFO: ActiveMQ JMS Message Broker (momr2, ID:csp690-2997-1219240447748-0:0) started
20-Aug-2008 14:54:12 org.apache.activemq.kaha.impl.async.AsyncDataManager forceRemoveDataFile
INFO: moved data file data-1 number = 1 , length = 4097882 refCount = 0 to C:\users\mmurphy\customers\OSS\DEV-1047\MB-381\.\target\activemq-data\amqstore\archive
{quote}

This leads to a problem where as suspected the reference store is corrupted :

{quote}
20-Aug-2008 14:55:25 org.apache.activemq.kaha.impl.KahaStore initialize
INFO: Kaha Store using data directory C:\users\mmurphy\customers\OSS\AllianceHealthcare\DEV-1047\MB-381\.\target\activemq-data\amqstore\kr-store\data
20-Aug-2008 14:55:25 org.apache.activemq.kaha.impl.async.AsyncDataManager getDataFile
SEVERE: Looking for key 1 but not found in fileMap: {4=data-4 number = 4 , length = 3074491 refCount = 3, 3=data-3 number = 3 , length = 4098264 refCount = 0}
20-Aug-2008 14:55:25 org.apache.activemq.broker.BrokerService start
SEVERE: Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Failed to read to journal for: offset = 1024738, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data-1
java.io.IOException: Failed to read to journal for: offset = 1024738, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data-1
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:643)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:529)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:93)
	at org.apache.activemq.store.amq.AMQMessageStore.recover(AMQMessageStore.java:478)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:165)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:434)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:261)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:176)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:103)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:161)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.apache.activemq.xbean.BrokerFactoryBean.afterPropertiesSet(BrokerFactoryBean.java:85)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:423)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.iona.fuse.dev1047.SpringActiveMQ.main(SpringActiveMQ.java:13)
Caused by: java.io.IOException: Could not locate data file data-1
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:306)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:616)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:526)
	... 58 more
20-Aug-2008 14:55:25 org.apache.activemq.broker.BrokerService stop
INFO: ActiveMQ Message Broker (momr2, null) is shutting down
20-Aug-2008 14:55:25 org.apache.activemq.broker.TransportConnector stop
INFO: Connector vm Stopped
20-Aug-2008 14:55:25 org.apache.activemq.broker.TransportConnector stop
INFO: Connector tcp Stopped
20-Aug-2008 14:55:25 org.apache.activemq.broker.BrokerService stop
INFO: ActiveMQ JMS Message Broker (momr2, null) stopped
20-Aug-2008 14:55:25 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons
INFO: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1112783: defining beans [org.springframework.beans.factory.config.PropertyPlaceholderConfigurer#0,org.apache.activemq.xbean.XBeanBrokerService#0]; parent: org.springframework.beans.factory.support.DefaultListableBeanFactory@6f7ce9
20-Aug-2008 14:55:25 org.springframework.beans.factory.support.DefaultSingletonBeanRegistry destroySingletons
INFO: Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6f7ce9: defining beans [broker]; root of factory hierarchy
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'broker' defined in class path resource [com/iona/fuse/dev1047/applicationContext-main.xml]: Invocation of init method failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [com/iona/fuse/dev1047/activemq.xml]: Invocation of init method failed; nested exception is java.io.IOException: Failed to read to journal for: offset = 1024738, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data-1
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:423)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at com.iona.fuse.dev1047.SpringActiveMQ.main(SpringActiveMQ.java:13)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.apache.activemq.xbean.XBeanBrokerService#0' defined in class path resource [com/iona/fuse/dev1047/activemq.xml]: Invocation of init method failed; nested exception is java.io.IOException: Failed to read to journal for: offset = 1024738, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data-1
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1336)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:471)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:409)
	at java.security.AccessController.doPrivileged(Native Method)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:380)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:264)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:261)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:185)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:429)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:729)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:381)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:88)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:76)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:72)
	at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:68)
	at org.apache.activemq.xbean.BrokerFactoryBean.afterPropertiesSet(BrokerFactoryBean.java:85)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)
	... 15 more
Caused by: java.io.IOException: Failed to read to journal for: offset = 1024738, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data-1
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:643)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:529)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:93)
	at org.apache.activemq.store.amq.AMQMessageStore.recover(AMQMessageStore.java:478)
	at org.apache.activemq.broker.region.Queue.initialize(Queue.java:165)
	at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:83)
	at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:434)
	at org.apache.activemq.broker.jmx.ManagedQueueRegion.createDestination(ManagedQueueRegion.java:56)
	at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
	at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:261)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:142)
	at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:149)
	at org.apache.activemq.broker.region.AbstractRegion.start(AbstractRegion.java:94)
	at org.apache.activemq.broker.region.RegionBroker.start(RegionBroker.java:176)
	at org.apache.activemq.broker.jmx.ManagedRegionBroker.start(ManagedRegionBroker.java:103)
	at org.apache.activemq.broker.TransactionBroker.start(TransactionBroker.java:112)
	at org.apache.activemq.broker.BrokerFilter.start(BrokerFilter.java:154)
	at org.apache.activemq.broker.MutableBrokerFilter.start(MutableBrokerFilter.java:161)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:466)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:52)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1367)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1333)
	... 34 more
Caused by: java.io.IOException: Could not locate data file data-1
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:306)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:616)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:526)
	... 58 more
{quote}

So, to recover from this I reset the persistence adapter to recover, I tried forceRecoverReferenceStore=""true"" with recoverReferenceStore=""true"" and recoverReferenceStore=""false"". 

{code:xml}
    <persistenceAdapter>
      <amqPersistenceAdapter directory=""${activemq.base}/activemq-data/amqstore"" maxFileLength=""4 mb"" archiveDataLogs=""true"" cleanupInterval=""5000"" syncOnWrite=""true"" recoverReferenceStore=""true"" forceRecoverReferenceStore=""true""/>
    </persistenceAdapter>
{code}

The problem is though, when it does recover the message that was not consumed is no longer there and the queue size is 0. It appears the message that was not consumed original is lost :(

(Note each time I stop the broker, I use the stop (red button) in eclipse)",03/Sep/08 10:45 AM;garytully;fix for : https://issues.apache.org/activemq/browse/AMQ-1926 seems relevant. Test case behaves differently. I need to investigate a bit,"03/Sep/08 2:42 PM;garytully;have run the test case with trunk and it looks like amq-1926 has killed this bird also. 
possibly build the fuse-5.0 branch (fix is now there also) and see if it is reproducible. It may be that the test case behaves a little differently now but it may also be that the bug is fixed. The data files are managed a little better now so deletion is more controlled.",,,,,,,,,,,
Persistent store journal files not being cleaned up at runtime for distributed queue,MB-380,12515804,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,05/Aug/08 5:24 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Sep/08 11:29 AM,5.0.0.17-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.20-fuse,,,,broker,,,1,,"If a network of two brokers are used and messages a continuously shuffled from a producer connected to broker A to a consumer connected to broker B, then the amq store slowly fills up with data files (in journal directory) that do not get deleted. As the producer is faster than the consumer, the testcase is designed that after a couple of minutes the producer sleeps for a while allowing the consumer to catch up with all pending messages. Still the amq store fills up.

It seems necessary to reproduce the problem on a decent and rather fast machine. Original testruns on slower Windows machines (1GHz processor) did not reproduce the bug.
",FUSE MB 5.0.0.17 running on a rather decent and fast machine,,,,,,,,,,,,,,05/Aug/08 5:24 AM;mielket;AMQ_TESTCASE.zip;https://issues.jboss.org/secure/attachment/12368589/AMQ_TESTCASE.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzk9e7:,178503,,,,,,,,"05/Aug/08 5:24 AM;mielket;To reproduce the problem, use attached testcase and follow instructions in README.txt","03/Sep/08 8:45 AM;garytully;some progress and bug identified;
this issue is now mirrored by https://issues.apache.org/activemq/browse/AMQ-1926
working through the tests to validate at the moment.",03/Sep/08 11:29 AM;garytully;Committed revision 47823 to fuse for 5.0.0.20,03/Sep/08 2:26 PM;garytully;make that revision 47841. archiving was broken with the fix.,,,,,,,,,,,,,,,,
Phantom consumer shows up in jconsole,MB-378,12515802,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Cannot Reproduce Bug,dbosanac,lcurry,lcurry,22/Jul/08 3:00 PM,05/Feb/09 9:19 AM,29/Nov/16 4:17 PM,05/Feb/09 9:19 AM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"Multiple Perl/Stomp consumers. 
This issue looks very similar to the issue documented here entitled ""Stomp client is not removed from the broker on client disconnect"":
https://issues.apache.org/activemq/browse/AMQ-724
The issue manifest itself when an ""extra"" consumer was noticed in 'jconsole'. The consumer held 3 sessions to the 'dbwrite.10.1.0.15' queue. A screenshot of the 'jconsole' output with one of the 3 mystery sessions highlighted is provided as attachment.  
The consumers for this particular queue are eight instances of the same Perl/Stomp client. To balance the load they are all contending for the same queue.  Eight were accounted for, but this ""phantom"" consumer was not. One thing to notice is that the sessionID for this is '447', whereas typically for Perl/Stomp client we see a '-1' for sessionID. The sessionID does not correspond to the typical pattern for sessionID of the other Perl clients, thus it is suspected the offender may not necessarily be a Perl process. Also, the PrefetchSize is not consistent with the PrefetchSize being set in the Perl client. The Perl client sets PrefetchSize=10 whereas the ""phantom"" consumer sets PrefetchSize=500.
It is expected that these extra consumers will go away upon restart. This is a production system and can not be restarted right away.  ","Fuse Message Broker 5.0.0.17
Ubuntu 8.04 Linux 
",,,,,,,,,,,,,,22/Jul/08 3:06 PM;lcurry;screenshot.bmp;https://issues.jboss.org/secure/attachment/12368586/screenshot.bmp,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzka1z:,178610,,,,,,,,"22/Jul/08 3:06 PM;lcurry;Snapshot of jconsole output highlighting one (of three) ""phantom"" sessions. ","05/Feb/09 9:19 AM;dbosanac;Hi,

I cannot reproduce this issue. I tried to kill the socket of my Stomp client explicitly and it still gets unsubscribed from the broker (and removed from JConsole). I believe that this is not the case of the phantom client that is left behind some client (since prefetch size, session id, etc.) does not match, but perhaps some other client that is subscribed to the queue.

Did you manage to reproduce the problem after system restart? I'll resolve this issue for now, but if you find a way to reproduce the problem, please reopen it.

Regards
Dejan",,,,,,,,,,,,,,,,,,
Using small queue prefetch sizes cause all consumers to run as fast as the slowest consumer.,MB-377,12515799,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,martinmurphy,martinmurphy,17/Jul/08 11:43 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,20/Aug/08 9:03 AM,5.0.0.17-fuse,5.1.0.0-fuse,,,,,,,,,,,,,,,,,,,5.0.0.19-fuse,,,,broker,,,0,,"If you have a JMS producer sending messages to multiple consumers and you have the cacheLevel set to 3 or higher, eventually all consumers will run as slow as the slowest consumer.
In the attached projects the SA sends messages to a MockOptimizer (JMS consumer) that has two threads. One sleeps for one second and the other sleeps for ten. Initially the thread sleeping for 1 second will consume most of the messages, but towards the end it will start to consume messages every ten seconds as well.","Servicemix 3.3.1.3 on Windows, probably on all platforms.",,,,,,,,,,,,,,07/Aug/08 11:12 AM;chirino;AMQ-1866.patch;https://issues.jboss.org/secure/attachment/12368591/AMQ-1866.patch,22/Jul/08 1:46 PM;chirino;AMQ1866.java;https://issues.jboss.org/secure/attachment/12368585/AMQ1866.java,17/Jul/08 11:49 AM;martinmurphy;ESB-343.zip;https://issues.jboss.org/secure/attachment/12368584/ESB-343.zip,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-1866,,,,3.0,10.0,,1|hzk9c7:,178494,,,,,,,,17/Jul/08 11:50 AM;martinmurphy;You can of course set the cacheLevel to 1 on the JMS producer to work around this.,22/Jul/08 12:25 PM;chirino;Martin.. that test case seems to do a lot more than what the issue is describing.  Any change you can slim it down to just the jms producers and multiple consumers?,22/Jul/08 12:33 PM;chirino;I'm going to try to slim it down.  I don't think we need any ESB bits for this test case BTW.  ,22/Jul/08 1:26 PM;chirino;Moved issue to the MB project.. I have created a new junit the confirms the problem.,22/Jul/08 1:29 PM;chirino;Changing issue title to more clearly reflect the issue.,22/Jul/08 1:46 PM;chirino;Attaching the junit case that confirms the bug.,"25/Jul/08 7:18 AM;chirino;The issue revolves around how ActiveMQ 5.x pages and dispatches messages to consumers.  Every queue keeps list of paged in messages which defaults to 100 max entires.  It round robins dispatching messages between consumers, even the slow consumers.  Once the slow consumer gets 100 dispatched messages which it has not yet acked due to it being slow, then no further messages are paged in since the page in list is full.

I am evaluating different ways to implement this but, any change to this code could have repercussions which need to get evaluated.",29/Jul/08 8:50 AM;chirino;https://issues.apache.org/activemq/browse/AMQ-1866 has the latest updates.  In short we are still looking for an optimal fix for this.  Already two different fix proposoals have been made but were found lacking.  We still continuing to to work on the problem.,07/Aug/08 11:12 AM;chirino;Update.. we are now currently evaluating and testing the attached patch. It fixes the slow producer problem but we are trying to verify that it as not caused any other regressions.,20/Aug/08 9:03 AM;garytully;fix from https://issues.apache.org/activemq/browse/AMQ-1866 is now on fuse fixes branch ready for .19 release.,,,,,,,,,,
ArrayIndexOutOfBoundsException on restart of broker with durable subscriptions,MB-376,12515801,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,rajdavies,davestanley,davestanley,21/Jul/08 3:43 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,01/Aug/08 1:44 AM,5.0.0.17-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.18-fuse,,,,,,,0,,"Mirrored by: https://issues.apache.org/activemq/browse/AMQ-1872

We have two brokers A & B, with a producer on A and durable subscriber on B. A sends 50K messages and B consumes 25K messages. Then broker B is shutdown. We then restart Broker B and restablish the durable subscription. 

We are seeing Broker B throwing the following array out of bounds exception when cleaning up the persistent adapter indexes after the consumer reconnects to the restarted broker B.

{code}
Caused by: java.lang.ArrayIndexOutOfBoundsException
        at java.lang.System.arraycopy(Native Method)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.addToBin(HashIndex.java:431)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.doLoad(HashIndex.java:497)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.doCompress(HashIndex.java:535)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.load(HashIndex.java:253)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.load(MapContainerImpl.java:107)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStoreAdapter.getMapReferenceContainer(KahaReferenceStoreAdapter.java:210)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStoreAdapter.createTopicReferenceStore(KahaReferenceStoreAdapter.java:168)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.createTopicMessageStore(AMQPersistenceAdapter.java:461)
        at org.apache.activemq.broker.region.DestinationFactoryImpl.createDestination(DestinationFactoryImpl.java:94)
        at org.apache.activemq.broker.region.AbstractRegion.createDestination(AbstractRegion.java:425)
        at org.apache.activemq.broker.jmx.ManagedTopicRegion.createDestination(ManagedTopicRegion.java:56)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:120)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:266)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:141)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:147)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:141)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:148)
        at org.apache.activemq.broker.region.AbstractRegion.lookup(AbstractRegion.java:385)
        at org.apache.activemq.broker.region.TopicRegion.addConsumer(TopicRegion.java:67)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:383)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:85)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:92)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:529)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:345)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
        at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
        ... 1 more

{code}",Fuse Message Broker 5.0.0.17 ,,,,,,,,,,,,,,28/Jul/08 10:23 AM;garytully;gtully.mods.tar.gz;https://issues.jboss.org/secure/attachment/12368587/gtully.mods.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,5.0,,1|hzk9af:,178486,,,,,,,,"23/Jul/08 4:50 PM;davestanley;

The ArrayIndexOutOfBoundsExceptions is thrown from the System.arraycopy() in HashIndex.addToBin() below.

{code} 
void addToBin(HashPage page) throws IOException {
        int index = page.getBinId();
        if (index >= numberOfBins) {
            HashBin[] newBins = new HashBin[index+1];
            System.arraycopy(this.bins, 0, newBins, 0, this.bins.length);  <==== BOOM!
            this.bins=newBins;
        }
        HashBin bin = getBin(index);
        bin.addHashPageInfo(page.getId(), page.getPersistedSize());
    }

{code}

From the code here, the only way that could happen is if this.bins.length turned out to be larger than newBins.length. In this case newBins.length == index + 1 from the construction of newBins.

We also know that numberOfBins is less than index. 

So in the case that numberOfBins is less than this.bins.length + 1, that would cause the exception to be thrown. 

Before the exception was thrown we saw the broker do a cleanup() of its indexes where they were resized down, so it looks like there is a racecondition between an index cleanup and the addToBin() method.
","25/Jul/08 8:05 AM;garytully;I spent some time on this today to try and understand it. It seems to be a real edge case. None of the existing amq tests exercise the case where index >= numberOfBins. numberOfBins has always been incremented by a previous resize.
We really need a reproducible test case to evaluate changes.

I wonder about the need for numberOfBins here, code could read:
{code}
   if (index >= this.bins.length) { 
{code}
which would also remove the aiob. Is is possible for the customer to evaluate code changes on their test case or provide a reduced version to us so we can reproduce?
","28/Jul/08 10:23 AM;garytully;we need to get a test case for this. I have tried to modify the newtest case to make it more like the detail in MB-376.
The idea is to load B before a restart of B and delay the reconnect of the consumer so that it can coincide with a cleanup or resize of something. Not sure what it should coincide with yet :-(",28/Jul/08 11:47 AM;rajdavies;tracked in ActiveMQ by https://issues.apache.org/activemq/browse/AMQ-1872,01/Aug/08 1:44 AM;garytully;merged this to the fixes branch. customer is evaluating the snapshot.,,,,,,,,,,,,,,,
ConcurrentModificationException during AMQPersistenceAdapter cleanup,MB-375,12515800,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,davestanley,davestanley,17/Jul/08 2:37 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,05/Sep/08 12:32 PM,5.0.0.17-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.18-fuse,,,,,,,0,,"We have a broker that uses the AmqPersistenceAdapter. Seeing the following exception when running a heavy load test:

{code}
java.util.ConcurrentModificationException
	at java.util.HashMap$HashIterator.nextEntry(HashMap.java:793)
	at java.util.HashMap$KeyIterator.next(HashMap.java:828)
	at java.util.AbstractCollection.addAll(AbstractCollection.java:305)
	at java.util.HashSet.<init>(HashSet.java:100)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.cleanup(AMQPersistenceAdapter.java:418)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter$3.run(AMQPersistenceAdapter.java:270)
	at org.apache.activemq.thread.SchedulerTimerTask.run(SchedulerTimerTask.java:33)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)

{code}


Synchronizing on the referenceStoreAdapter in persistenceAdapter.cleanup() seems to fix the issue. 

{code}
public void cleanup() {
        try {
            Set<Integer>inProgress = new HashSet<Integer>();
            for (Set<Integer> set: dataFilesInProgress.values()) {
                inProgress.addAll(set);
            }
            Integer lastDataFile = asyncDataManager.getCurrentDataFileId();   
            inProgress.add(lastDataFile);
            Set<Integer> inUse;
            synchronized(referenceStoreAdapter){
                inUse = new HashSet<Integer>(referenceStoreAdapter.getReferenceFileIdsInUse());
            }
            asyncDataManager.consolidateDataFilesNotIn(inUse, inProgress);
        } catch (IOException e) {
            LOG.error(""Could not cleanup data files: "" + e, e);
        }
    }
{code}",Fuse 5.0.0.17. Please fix for 5.0.0.18,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9f3:,178507,,,,,,,,08/Aug/08 10:45 AM;garytully;the fixes from http://issues.apache.org/activemq/browse/AMQ-1795 resolve this issue. These are  5.0.0.18,,,,,,,,,,,,,,,,,,,
InFlightCount JMX MBean property does not decrement with a Consumer batch Session commit,MB-373,12515798,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,02/Jul/08 10:11 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,24/Sep/08 4:03 PM,5.0.0.16-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.21-fuse,5.1.0.2-fuse,,,,,,0,,"Our consumer does batch processing, and therefore a Session commit rather than a single message acknowledge. Using jconsole to look at the broker's Queue MBean, the InFlightCount property increments with each message that is dispatched to the consumer, but the number never decrements when the session is committed and those messages are dequeued.



",Fuse Message Broker/ActiveMQ 5.0.0.16,,,,,,,,,,,,,,24/Sep/08 10:19 AM;chirino;DEV995Testcase.java;https://issues.jboss.org/secure/attachment/12368604/DEV995Testcase.java,18/Sep/08 11:57 AM;davestanley;PrefetchSubscription.java.patch;https://issues.jboss.org/secure/attachment/12368596/PrefetchSubscription.java.patch,02/Jul/08 10:14 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368581/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,3.0,4.0,,1|hzk9jz:,178529,,,,,,,,"02/Jul/08 10:14 PM;davestanley;Testcase attached. 

Description:

Starts an embedded broker with a producer and transactional consumer. Pauses at the end so you can connect to the process via jmx and view the inflight stats.  Note the inflight count is the number of messages sent even though the consumer has consumed all the messages.

Running:

>ant compile
>ant test
>jconsole (view stats)

Testcase has a boolean transacted flag. Set that to false and you will see inflight count works as expected.","18/Sep/08 11:57 AM;davestanley;Patch attached. Can we get this merged into 5.0.0-fuse branch.

Thanks
/Dave",24/Sep/08 10:19 AM;chirino;Attaching an updated test case that is fully automated.  It does not require the manual jconsole verification step.,24/Sep/08 4:03 PM;chirino;fix applied.,,,,,,,,,,,,,,,,
java.lang.NoClassDefFoundError: org/osgi/framework/Bundle,MB-371,12515795,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,mielket,mielket,02/Jul/08 4:46 AM,12/Feb/09 11:37 AM,29/Nov/16 4:17 PM,12/Feb/09 11:37 AM,5.1.0.0-fuse,,,,,,,,,,,,,,,,,,,,5.1.0.3-fuse,,,,broker,,,0,,"FUSE MB 5.1.0-fuse-SNAPSHOT does not startup but raises:

Caused by: java.lang.NoClassDefFoundError: org/osgi/framework/Bundle
        at org.apache.camel.spring.RouteBuilderFinder.<init>(RouteBuilderFinder.java:41)
        at org.apache.camel.spring.CamelContextFactoryBean.findRouteBuiders(CamelContextFactoryBean.java:404)
        at org.apache.camel.spring.CamelContextFactoryBean.afterPropertiesSet(CamelContextFactoryBean.java:189)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableB
eanFactory.java:1367)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBean
Factory.java:1333)
        ... 43 more

FUSE MR 1.4.0.0 has a dependency on felix but the corresponding jar is not provided to the runtime.
Workaround is to copy org.apache.felix.framework-1.0.0.jar (e.g. from local maven repo) to AMQ_HOME/lib but we should rather fix this error.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzka53:,178624,,,,,,,,02/Jul/08 5:16 AM;mielket;Related to [CAMEL-577|http://issues.apache.org/activemq/browse/CAMEL-577].,12/Feb/09 11:37 AM;dbosanac;This has been fixed in the meantime,,,,,,,,,,,,,,,,,,
ArrayIndexOutOfBoundsException when resizing AMQ Message Store indexes and syncOnWrite=false,MB-370,12515796,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,rajdavies,davestanley,davestanley,27/Jun/08 10:13 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Jul/08 3:52 PM,5.0.0.16-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.17-fuse,,,,,,,0,,"We have two brokers A & B, with a topic producer on broker A and topic consumer on broker B.  Both brokers are sending persistent messages and using the AMQ Message Store.

With syncOnWrite=true, everything works fine. The consumer easily keeps up with the producer and millions of messages can be processed. 


With syncOnWrite=""false"" the behaviour is different. 

1) The consumer quickly falls behind the producer. The consumer continues to consume messages but at a much slower rate than the producer is producing. 
2) Broker B's message store uses much more diskspace and indexes are much larger (expected as we have a backlog of messages)
3) Once all messages have been sent, the consumer starts to pick up speed. Periodically I see the broker log a message that its resizing its indexes/bin's.
4) Periodically during resizing I see the following stackk trace  ( & remaining messages cannot be processed due to corrupted indexes)

{code}
[java] INFO  - HashIndex                      - Resize hash bins umer1#3aconsumer1_tsntopic#3a#2f#2fTEST.FOOconsumer1#3aconsumer1 from 2048 to 269
     [java] ERROR - Service                        - Async error occurred: java.lang.ArrayIndexOutOfBoundsException
     [java] java.lang.ArrayIndexOutOfBoundsException
     [java]     at java.lang.System.arraycopy(Native Method)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.addToBin(HashIndex.java:431)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.doLoad(HashIndex.java:497)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.resize(HashIndex.java:579)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.remove(HashIndex.java:312)
     [java]     at org.apache.activemq.kaha.impl.container.MapContainerImpl.remove(MapContainerImpl.java:428)
     [java]     at org.apache.activemq.store.kahadaptor.TopicSubContainer.remove(TopicSubContainer.java:70)
     [java]     at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(KahaTopicReferenceStore.java:141)
     [java]     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:163)
     [java]     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:91)
     [java]     at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:441)
     [java]     at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:223)
     [java]     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229)
     [java]     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
     [java]     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
     [java]     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     [java]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java]     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
     [java]     at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:444)
     [java]     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     [java]     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     [java]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
     [java]     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
     [java]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
     [java]     at java.lang.Thread.run(Thread.java:595)
     [java] javax.jms.JMSException: java.lang.ArrayIndexOutOfBoundsException
     [java] INFO  - HashIndex                      - Resize hash bins topic-data_TEST.FOO from 2048 to 269
     [java]     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:49)
     [java]     at org.apache.activemq.ActiveMQConnection.onAsyncException(ActiveMQConnection.java:1684)
     [java]     at org.apache.activemq.ActiveMQConnection$2$1.run(ActiveMQConnection.java:1629)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
     [java]     at java.lang.Thread.run(Thread.java:595)
     [java] Caused by: java.lang.ArrayIndexOutOfBoundsException
     [java]     at java.lang.System.arraycopy(Native Method)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.addToBin(HashIndex.java:431)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.doLoad(HashIndex.java:497)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.resize(HashIndex.java:579)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.remove(HashIndex.java:312)
     [java]     at org.apache.activemq.kaha.impl.container.MapContainerImpl.remove(MapContainerImpl.java:428)
     [java]     at org.apache.activemq.store.kahadaptor.TopicSubContainer.remove(TopicSubContainer.java:70)
     [java]     at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(KahaTopicReferenceStore.java:141)
     [java]     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:163)
     [java]     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:91)
     [java]     at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:441)
     [java]     at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:223)
     [java]     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229)
     [java]     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
     [java]     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
     [java]     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     [java]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java]     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
     [java]     at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:444)
     [java]     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     [java]     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     [java]     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
     [java]     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
     [java]     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
     [java]     ... 1 more
     [java] WARN  - AMQMessageStore                - Message could not be removed from long term store: null
     [java] java.lang.ArrayIndexOutOfBoundsException
     [java]     at java.lang.System.arraycopy(Native Method)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.addToBin(HashIndex.java:431)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.doLoad(HashIndex.java:497)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.resize(HashIndex.java:579)
     [java]     at org.apache.activemq.kaha.impl.index.hash.HashIndex.remove(HashIndex.java:312)
     [java]     at org.apache.activemq.kaha.impl.container.MapContainerImpl.remove(MapContainerImpl.java:328)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.removeMessage(KahaReferenceStore.java:178)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.removeMessage(KahaReferenceStore.java:170)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore$4.execute(AMQMessageStore.java:403)
     [java]     at org.apache.activemq.util.TransactionTemplate.run(TransactionTemplate.java:44)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.doAsyncWrite(AMQMessageStore.java:374)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.asyncWrite(AMQMessageStore.java:341)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore$1.iterate(AMQMessageStore.java:95)
     [java]     at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
     [java]     at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
     [java]     at java.lang.Thread.run(Thread.java:595)
     [java] ERROR - RecoveryListe
{code}

",Fuse Message Broker 5.0.0.16,,,,,,,,,,,,,,27/Jun/08 10:17 AM;davestanley;arrayoutofbounds.tar.gz;https://issues.jboss.org/secure/attachment/12368582/arrayoutofbounds.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,6.0,,1|hzk96n:,178469,,,,,,,,"27/Jun/08 10:17 AM;davestanley;Testcase attached. You will need to let it run for a bit (maybe 10-20 mins depending on speed of machine)

>export ACTIVEMQ_HOME=<ActiveMQ Home>
>ant compile
>ant test

Regards
/Dave
","30/Jun/08 4:55 PM;davestanley;The problem is originating from a resize() in the remove()
{code}
public synchronized StoreEntry remove(Object key) throws IOException {
        load();
        StoreEntry result = null;
        HashEntry entry = new HashEntry();
        entry.setKey((Comparable)key);
        HashEntry he = getBin(key).remove(entry);
        if (he != null) {
            this.size--;
            result = this.indexManager.getIndex(he.getIndexOffset());
        }

	// Problem is being triggered by this resize logic ...
        if (this.highestSize > LOW_WATER_MARK &&  this.highestSize > (this.size *2)) {
            int newSize = this.size/this.keysPerPage;
            newSize = Math.max(128, newSize);
            this.highestSize=0;
---->            resize(newSize);
            
        }
        return result;
    }
{code}

So we resize() which in turn calls doLoad() which in turn calls addToBin() 

Note: In addToBin() we are not resetting the size of numberOfBins when we resize the bin. 

{code}
void addToBin(HashPage page) throws IOException {
        int index = page.getBinId();
        if (index >= numberOfBins) {
            HashBin[] newBins = new HashBin[index+1];
            System.arraycopy(this.bins, 0, newBins, 0, this.bins.length);
            this.bins=newBins;

	    // Dave: Added a reset for the numberOfBins here
-->	    numberOfBins=index;
        }
        HashBin bin = getBin(index);
        bin.addHashPageInfo(page.getId(), page.getPersistedSize());
    }
{code}

Tried setting the numberOfBins so we don't get the ArrayOutOfBounds anymore, but I still think there's something else off as the index cleanup fix for MB-368 no longer works when I do this.

","01/Jul/08 9:06 AM;garytully;I think the following will help, HashTest works with 40000 at least.
{code}
Index: activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/hash/HashIndex.java
===================================================================
--- activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/hash/HashIndex.java (revision 672726)
+++ activemq-core/src/main/java/org/apache/activemq/kaha/impl/index/hash/HashIndex.java (working copy)
@@ -542,6 +542,7 @@
                 while (capacity < newCapacity) {
                     capacity <<= 1;
                 }
+               newCapacity = capacity;
                 if (newCapacity != numberOfBins) {
                     LOG.info(""Resize hash bins "" + this.name + "" from "" + numberOfBins + "" to "" + newCapacity);

{code}","01/Jul/08 4:31 PM;davestanley;Hi Gary,
I tried it here but when I run my attached testcase it seems as though all of the messages are not being dispatched when syncOnWrite=""false"". I see maybe 49900 our of 50000 are dispatched, although the queue size stat is correct. As a result I cannot verify that the index cleanup issue from MB-368 is fixed. Can you try the testcase attached to this issue with your snapshot with the fix and let me know if you can see the problem too?

Thanks
/Dave","02/Jul/08 10:49 PM;davestanley;I figured out the problem. It was user error in my testcase. This looks good so closing it.

Cheer's
/Dave",03/Jul/08 3:51 PM;davestanley;Reopen to set fix version,,,,,,,,,,,,,,
"""Slave broker out of sync with master"" error when running broker pair in pure master slave",MB-369,12515794,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,garytully,davestanley,davestanley,26/Jun/08 12:34 PM,07/Nov/13 5:43 AM,29/Nov/16 4:17 PM,03/Jul/08 3:52 PM,5.0.0.16-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.17-fuse,,,,,,,0,,"We have two brokers setup in a pure master slave configuration. Sending messages through the broker causes the slave to fail with the following stack trace:

{code}

     [java] ERROR - MasterBroker                   - Slave Failed
     [java] javax.jms.JMSException: Slave broker out of sync with master: Acknowledgment (MessageAck {commandId = 105, responseRequired = true, ackType = 2, con
sumerId = ID:dstanley9400-1589-1214498035340-15:1:1:5, firstMessageId = null, lastMessageId = ID:dstanley9400-1589-1214498035340-4:7:1:1:2, destination = queue:
//TOPIC0, transactionId = null, messageCount = 1}) was not in the dispatch list: []
     [java]     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:370)
     [java]     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
     [java]     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
     [java]     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     [java]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java]     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     [java]     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
     [java]     at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:444)
     [java]     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     [java]     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
     [java]     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
     [java]     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     [java]     at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
     [java]     at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
     [java]     at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
     [java]     at java.lang.Thread.run(Thread.java:595)
     [java] ERROR - Service                        - Async error occurred: javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:
dstanley9400-1589-1214498035340-4:2:1:1:3) was not in the pending list
     [java] javax.jms.JMSException: Slave broker out of sync with master: Dispatched message (ID:dstanley9400-1589-1214498035340-4:2:1:1:3) was not in the pendi
ng list

{code}",Fuse MB 5.0.0.16,,,,,,,,,,PROD-30,,,,26/Jun/08 12:36 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368580/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,12.0,,1|hzk97b:,178472,,,,,,,,"26/Jun/08 12:36 PM;davestanley;Testcase attached. Testcase just uses two embedded brokers, in pure master slave. 

Env:
>export ACTIVEMQ_HOME=<activemq-home>

To run:
1) ant compile
2) ant test

Should see the slave error within 30 seconds.","30/Jun/08 9:54 AM;garytully;quick update, test case looks good, thanks.
I have not yet tracked down the exact problem but have a few good leads as the failure is quite deterministic. hope to have good news this time tomorrow.

Gary.","01/Jul/08 8:31 AM;garytully;so I have a fix for this, this seems to be a duplicate of https://issues.apache.org/activemq/browse/AMQ-1585 to which I attached a patch. This fix will shortly be on the Fuse MB 5.0.0.17 branch once it gets merged at apache and I can sync it up with the fixes branch.","01/Jul/08 8:37 AM;davestanley;Great stuff Gary, thanks. I will give it a try.","01/Jul/08 2:15 PM;garytully;rob merged to apache, I will merge to 5.0.0-fuse in the morning.","02/Jul/08 12:39 AM;davestanley;Thanks gary, will verify once merged.","02/Jul/08 12:23 PM;garytully;Dave,
your test case has a problem: you need to comment out like the following:

        //setup network connector from broker1 to broker2
        
        //connector = broker2.addNetworkConnector(networkConnectorURL);
        //connector.setBrokerName(broker2.getBrokerName());
        //connector.setDuplex(true);
        //connector.start();
        //logger.info(""Network connector created."");  

with master slave, the network connector between the two brokers is automatic.

With this commented out I was still able to reproduce the error before the fix but not now.

Also, today I found an issue with a transacted producer and master slave failover, it may not be relevant to the customer use case but I would like to include it. Won't be there till tomorrow though. There is another patch added to AMQ-1585.",02/Jul/08 12:25 PM;garytully;A good snapshot for non transacted failover can be found at http://repo.open.iona.com/maven2-snapshot/com/iona/fuse/fuse-message-broker/5.0.0-SNAPSHOT/,"02/Jul/08 3:06 PM;davestanley;Tricky about the network connector! but great news there's a solution for it. I will verify and add a doc enhancement to make sure this makes it into the docs.

Cheer's
/Dave ","02/Jul/08 4:09 PM;davestanley;The fix looks good. Logged MB-372 for the doc enahancement.
","02/Jul/08 4:10 PM;davestanley;{quote}
A good snapshot for non transacted failover can be found at http://repo.open.iona.com/maven2-snapshot/com/iona/fuse/fuse-message-broker/5.0.0-SNAPSHOT/ 
{quote}

It seems the source was deployed but not the installers. I used my own snapshot to verify ..",03/Jul/08 3:52 PM;davestanley;Reopen to set fix version,,,,,,,,
Persistent store indexes not being cleaned up at runtime (when using durable subscriber connected to a downstream broker),MB-368,12515793,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,davestanley,davestanley,19/Jun/08 1:51 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,23/Jun/08 2:21 PM,5.0.0.15-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.16-fuse,,,,broker,,,0,,"We have two persistent brokers A & B. A produces and B consumes via a durable subscriber. 

The persistent store indexes for the durable subscriber (broker B) do not appear to be cleaned up at runtime. Over time (if the broker is not restarted) the indexes will use excessively large amounts of diskspace. In my tests its about 5mb for every 20,000 messages.

Note: The indexes are compacted to <1mb when the consuming broker is restarted. 

It was expected that http://issues.apache.org/activemq/browse/AMQ-1797 would resolve this issue but that fix doesn't seem to affect this usecase.

This issue is tracked in Apache by http://issues.apache.org/activemq/browse/AMQ-1814",5.0.0.15 + http://issues.apache.org/activemq/browse/AMQ-1814,,,,,,,,,,MB-366,,,,19/Jun/08 1:56 PM;davestanley;indexcleanup.tar.gz;https://issues.jboss.org/secure/attachment/12368579/indexcleanup.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk93r:,178456,,,,,,,,"19/Jun/08 1:56 PM;davestanley;Testcase attached.

Tried with the [lastest snapshot|http://repo.open.iona.com/maven2-snapshot/com/iona/fuse/fuse-message-broker/5.0.0-SNAPSHOT/] which should contain the AMQ-1797 fix.

To run:

1) set ACTIVEMQ_HOME to activemq install root
2) ant compile
3) ant test

What happens when test runs:

The test will create two directories for the brokers respective persistent stores. Note:
1) The consumer keeps up with the producer 
2) The indexes for <testcase>\broker2\data\kr-store\data continue to grow.
  ","20/Jun/08 5:11 AM;rajdavies;If the number of unconsumed messages held in the store is always anticipated to be low - as a work around
set the persistentIndex property to false on the AMQPersistenceAdaptor

e.g.

<broker brokerName=""broker"" persistent=""true"" useShutdownHook=""false"">
    <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616""/>
    </transportConnectors>
    <persistenceAdapter>
      <amqPersistenceAdapter directory=""activemq-data"" maxFileLength=""32mb"" persistentIndex=""false""/>
    </persistenceAdapter>
  </broker>","20/Jun/08 9:30 AM;davestanley;Thanks Rob. I tried it but that doesn't seem to help. I get NullPointer exceptions when enabling this flag.

{code}
Caused by: java.lang.NullPointerException
     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     at org.apache.activemq.kaha.impl.index.VMIndexLinkedList.remove(VMIndexLinkedList.java:265)
     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:314)
     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:695)
     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(KahaTopicReferenceStore.java:148
     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:163)
     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:91)
     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:441)
     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
     at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:223)
     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229)
     at java.lang.Thread.run(Thread.java:595)
     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
 ERROR - Service                        - Async error occurred: java.lang.NullPointerException
     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
 java.lang.NullPointerException
     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     at org.apache.activemq.kaha.impl.index.VMIndexLinkedList.remove(VMIndexLinkedList.java:265)
     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:314)
     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     at org.apache.activemq.kaha.impl.container.ListContainerImpl.remove(ListContainerImpl.java:695)
     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
     at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.acknowledgeReference(KahaTopicReferenceStore.java:148
     at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:444)
     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:163)
     at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
     at org.apache.activemq.store.amq.AMQTopicMessageStore.acknowledge(AMQTopicMessageStore.java:91)
     at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
     at org.apache.activemq.broker.region.Topic.acknowledge(Topic.java:441)
     at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
     at org.apache.activemq.broker.region.DurableTopicSubscription.acknowledge(DurableTopicSubscription.java:223)
     at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
     at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:229)
     at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
     at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:364)
     at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
     at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
     at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
     at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
     at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
     at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
     ... 1 more
     at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
{code}

Regards
/Dave",,,,,,,,,,,,,,,,,
Persistent message store indexes for durable subscribers are not purged from disc storage,MB-366,12515790,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,davestanley,davestanley,16/Jun/08 2:31 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,17/Jun/08 3:20 PM,5.0.0.15-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.16-fuse,,,,,,,0,,"Bug to track runtime cleanup of AMQ Message Store indexes.

http://issues.apache.org/activemq/browse/AMQ-1797 should resolve the issue. 

Can we get this merged to Fuse MessageBroker branch.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk93b:,178454,,,,,,,,17/Jun/08 3:19 PM;garytully;merged to activemq-5.0.0-fuse branch. r42965,,,,,,,,,,,,,,,,,,,
Queues hangs after a while on the scalability test,MB-363,12515788,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Out of Date,chirino,pedroneveu,pedroneveu,04/Jun/08 5:02 PM,12/Aug/14 1:00 PM,29/Nov/16 4:17 PM,12/Aug/14 1:00 PM,5.0.0.14-fuse,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"When running the scalability test some of the queues hang.  This tends to happen after a failover occurs.
The test:
The destination topology is as follows:
layer1 contains queues S1 S2 S3 ... S20
layer2 contains queues T1 T2 T3 ... T20
layer3 contains queues E1 E2 E3 ... E20
layer4 contains queues M1 M2 M3 ... M20
layer5 contains queues H1 H2 H3 ... H20
ack layer contains queues: ack1 ack2 ack3 ... ack20

There are the same number of queues in each layer
When the test starts messages are sent to layer 1 queues in parallel
Each queue then forwards the messages to the next queue in layer 2 and each queue in in layer 2 forwards the messages to the next one in layer 3 etc. (for example a typical message would start somewhere in layer1 (S1 - S20) and if it start at S1 the trail is as follows: S1 -> T2 -> E3 -> M4 -> H5 -> ack6)
The last layer just consumes the messages.

Typically a client will contain a producer, several consumers/producers to catch and throw messages, and a final consumer that consumes messages from the ack# queues.

Usually the test will finish with no problem if maxInactivityDuration is set to a large enough number to prevent failover (eg. 15000).  If it is set to 8000 or less failover will occur after a few hours or days (depending on how large maxInactivityDuration is set to).  After failover(s) occur then at some point in the message trails in the system messages will not go through.","JDK 1.6.0.3, Linux 2.6.16-xenU Fedora, EC2, fuse activemq-SNAPSHOT (May 28th)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9bb:,178490,,,,,,,,12/Aug/14 1:00 PM;chirino;closing old issues.,,,,,,,,,,,,,,,,,,,
Acknowledgment of Messages consumed from VirtualTopic consumer queues fails,MB-361,12515787,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,mielket,mielket,03/Jun/08 9:58 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,10/Jul/08 1:30 PM,5.0.0.13-fuse,5.0.0.14-fuse,,,,,,,,,,,,,,,,,,,5.0.0.15-fuse,,,,broker,,18/Jul/08 12:00 AM,0,,"The Message Broker throws an exception each time a client tries to acknowledge a message consumed from a VirtualTopic consumer queue:

ERROR Service - Async error occurred: java.lang.IllegalArgumentException: The subscription does not exist: ID:seautpc271-1314-1212495185267-0:0:1:1
java.lang.IllegalArgumentException: The subscription does not exist: ID:seautpc271-1314-1212495185267-0:0:1:1
at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:357)
at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:470)
at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:194)
at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:73)
at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:84)
at org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:443)
at org.apache.activemq.command.MessageAck.visit(MessageAck.java:196)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:292)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:180)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
at java.lang.Thread.run(Thread.java:619)

Consequently the message gets re-delivered as soon as the client connects to the queue again (and fails again on aknowledgement). Strangely enough the subscription mentioned in the exception is visible in the JMX console. I can reproduce this error every time I try to consume from VirtualTopic consumer queues.
",using virtual topics,,,,,,,,,,,,,,10/Jul/08 12:59 PM;chirino;DEV-927-Test-2.zip;https://issues.jboss.org/secure/attachment/12368583/DEV-927-Test-2.zip,03/Jun/08 9:59 AM;mielket;DEV-927-Test.zip;https://issues.jboss.org/secure/attachment/12368576/DEV-927-Test.zip,,,,,,,,,,,,,,,,,,,,,http://issues.apache.org/activemq/browse/AMQ-1763,,,,2.0,6.0,,1|hzk987:,178476,,,,,,,,03/Jun/08 9:59 AM;mielket;Use attached testcase and follow steps given in README.txt,10/Jul/08 12:43 PM;chirino;Pom in test case was missing repositories def so dependencies did not auto download.  Attaching new version.,10/Jul/08 12:44 PM;chirino;Updated test case shell script so that it works on non-cygwin systems.,10/Jul/08 12:59 PM;chirino;Made some more updates to the DEV-927-Test-2.zip.. the test case now works the same if run from maven or the included shell script.,10/Jul/08 1:30 PM;chirino;The 5.0.0.15-fuse release fixed this issue.  I ran this test case against all subsequent versions and they also did now show the problem.,14/Jul/08 5:12 AM;mielket;Confirmed fix in MB 5.0.0.15-fuse and 5.0.0.17-fuse.,,,,,,,,,,,,,,
Error in directory.mkdirs is masked and can result in FileNotFoundException when creating tmp_storage directory,MB-360,12515784,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,29/May/08 3:22 PM,29/May/08 3:47 PM,29/Nov/16 4:17 PM,29/May/08 3:47 PM,,,,,,,,,,,,,,,,,,,,,5.0.0.15-fuse,,,,,,,0,,"During initialization of the AMQ Message Store you can see an error like this:

{code}
java.io.FileNotFoundException:
activemq-data/activemq.iona/tmp_storage/lock (No such file or directory) 
java.lang.RuntimeException: java.lang.RuntimeException:
java.io.FileNotFoundException:
activemq-data/activemq.iona/tmp_storage/lock (No such file or directory)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:199)
	at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:93)
	at org.apache.activemq.broker.region.policy.StrictOrderDispatchPolicy.dispatch(StrictOrderDispatchPolicy.java:57)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:581)
	at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:421)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:363)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:340)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:445)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:224)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:125)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:95)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:132)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:438)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:624)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:181)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:205)
	at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:122)
	at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:43)
	at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
	at java.lang.Thread.run(Thread.java:619)
Caused by: java.lang.RuntimeException: java.io.FileNotFoundException:
activemq-data/activemq.iona/tmp_storage/lock (No such file or directory)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:387)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.addMessageLast(FilePendingMessageCursor.java:194)
	... 23 more
Caused by: java.io.FileNotFoundException:
activemq-data/activemq.iona/tmp_storage/lock (No such file or directory)
	at java.io.RandomAccessFile.open(Native Method)
	at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
	at org.apache.activemq.kaha.impl.KahaStore.initialize(KahaStore.java:476)
	at org.apache.activemq.kaha.impl.KahaStore.getListContainer(KahaStore.java:287)
	at org.apache.activemq.broker.region.cursors.FilePendingMessageCursor.getDiskList(FilePendingMessageCursor.java:383)
	... 24 more
{code}

This is probably happening because the directory creation fails for some reason in the KahaStore constructor and then the attempt to create the lock file fails because its parent directory doesn't exist. 

The reason that is allowed to happen is that in the KahaStore constructor and in many other places in the code the method File.mkdirs() is used and the return value is never checked. The implementation of File.mkdirs() returns true if the directory was created, false if it already existed AND ... false if an IOException was thrown while attempting the operation including permission errors or anything like that. This causes the persistent store to be created in a potentially unknown state because the directory may or may not have been created and then the lock assumption when creating the lock file that its parent directory exists is not necessarily true. 

This enhancement is to tighten up the KahaStore mkdirs logic such that ..

{code}
public KahaStore(File directory, String mode, AtomicLong storeSize) throws IOException {
        this.mode = mode;
        this.storeSize = storeSize;
        this.directory = directory;
        this.directory.mkdirs();
    }
{code}

might become ..

{code}
public KahaStore(File directory, String mode, AtomicLong storeSize) throws IOException {
        this.mode = mode;
        this.storeSize = storeSize;
        this.directory = directory;
        if( ! this.directory.exists() )
            if ( ! this.directory.mkdirs() )
                throw new IOException (""failed to create directory "" + directory);
    }
{code}


We should also check this pattern of calling File.mkdirs() elsewhere in the code so that we handle the mkdir failure case.
",Fuse MB 5.x,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk91j:,178446,,,,,,,,"29/May/08 3:47 PM;chirino;Fix applied to the 5.0.0 branch.
When directories cannot be created, the error will get reported via an IOException.",,,,,,,,,,,,,,,,,,,
Wrapper scripts for Linux and Windows are missing ,MB-358,12515785,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,bsnyder1,bsnyder1,28/May/08 11:55 AM,30/Dec/08 9:21 AM,29/Nov/16 4:17 PM,30/Dec/08 9:21 AM,5.0.0.14-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.25-fuse,,,,,,,0,,"The platform-specific Wrapper script for Linux was available in apache-activemq-5.0.0.13-fuse but is missing in apache-activemq-5.0.0.14-fuse. Also, the Wrapper for Windows seems to be completely missing and has been for some time. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9x3:,178588,,,,,,,,"30/Dec/08 9:21 AM;dbosanac;The problem was in merging the change for [http://issues.apache.org/activemq/browse/AMQ-1728] without moving linux scripts to the desired folders first. 
I merged changes for [http://issues.apache.org/activemq/browse/AMQ-1691] and [http://issues.apache.org/activemq/browse/AMQ-1691], so now the distribution contains both 32 and 64 bit wrappers. The windows wrapper is not present in a linux distribution, but it is there in the windows one (.zip).",,,,,,,,,,,,,,,,,,,
When consuming using springs DMLC with cacheLevel=1 messages can be lost,MB-355,12515782,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,20/May/08 2:15 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,22/May/08 3:46 PM,5.0.0.14-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.15-fuse,,,,,,,0,,"In the attached test we are using springs DefaultMessageListenerContainer with the cacheLevel=""1"" (i.e. set to CACHE_CONNECTION)

We send 1000 messages but the broker does not send all 1000msgs to the consumer. 

Setting the cacheLevel=""3"" (i.e. CACHE_CONSUMER) allows the testcase to pass.

","ActiveMQ 5.x, All platforms.",,,,,,,,,,,,,,20/May/08 2:24 PM;davestanley;AMQSpringDMLCIssue.zip;https://issues.jboss.org/secure/attachment/12368570/AMQSpringDMLCIssue.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk8zz:,178439,,,,,,,,20/May/08 2:16 PM;davestanley;See https://issues.apache.org/activemq/browse/AMQ-1738  for more info,"20/May/08 2:24 PM;davestanley;Testcase attached:

1) SET ACTIVEMQ_HOME=<path to FuseMB root directory>
2) >ant compile
3) >ant test

Workarounds:
1) Change broker URL to set the prefetch limit to 1 (line 58)
2) Change the cacheLevel=3 (line 102)",22/May/08 3:46 PM;chirino;fixed.,,,,,,,,,,,,,,,,,
JMX MBeans for network connector connections not being cleaned up properly,MB-354,12515781,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,garytully,mielket,mielket,19/May/08 8:33 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,10/Jul/08 9:27 AM,5.0.0.13-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.18-fuse,,,,broker,,,0,,"Every connection between two networked brokers is represented as an MBean in JMX. If a network bridge shuts down, the tcp connection needs to be closed and the corresponding MBean must be removed from JMX. This however is not happening and these JMX MBeans remain active although the actual connection they represent got closed down already. 


To reproduce use testcase provided and run mvn test. Ensure localhost:61616 is not already in use!
","FUSE MB 5.0.0.13, network of brokers",,,,,,,,,,,,,,19/May/08 8:34 AM;mielket;dev-426-JUnit.zip;https://issues.jboss.org/secure/attachment/12368571/dev-426-JUnit.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk97j:,178473,,,,,,,,"09/Jul/08 1:51 PM;garytully;is fixed by https://issues.apache.org/activemq/browse/AMQ-1848, will merge over once committed.","10/Jul/08 9:29 AM;garytully;now on 5.0.0-fuse branch, r44117, will be in 5.0.0.18","10/Jul/08 10:54 AM;davestanley;Tracking ..

This also resolves following NPE in DemandForwardingBridge:

{code}
java.lang.NullPointerException
	at org.apache.activemq.network.DemandForwardingBridgeSupport.doCreateDemandSubscription(DemandForwardingBridgeSupport.java:862)
	at org.apache.activemq.network.DurableConduitBridge.createDemandSubscription(DurableConduitBridge.java:98)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.addConsumerInfo(DemandForwardingBridgeSupport.java:845)
	at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBridgeSupport.java:430)
	at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport.java:154)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:104)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:68)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:206)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:196)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:183)
	at java.lang.Thread.run(Thread.java:619)
{code}",,,,,,,,,,,,,,,,,
The Message Broker does not shutdown if the JDBC persistent database fails,MB-352,12515780,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,joe.luo,joe.luo,joe.luo,13/May/08 4:55 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,15/May/08 10:29 AM, 5.0.0.11-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.14-fuse,,,,broker,,,0,,"The Message Broker does not shutdown if the message broker uses JDBC persistent adapter AND connection between the message broker and the persistent database is down (say, due to the persistent database fails). Below is my test scenario:

1). Configure a Message Broker to use JDBC persistent adapter. I was using MySQL DataSource Setup using the c3p0 pooler from %ACTIVEMQ_HOME%\conf\activemq.xml, i.e.

<bean id=""mysql-ds"" class=""com.mchange.v2.c3p0.ComboPooledDataSource"" destroy-method=""close"">
    <property name=""driverClass"" value=""com.mysql.jdbc.Driver""/>
    <property name=""jdbcUrl"" value=""jdbc:mysql://localhost:3306/activemq""/>
    <property name=""user"" value=""activemq""/>
    <property name=""password"" value=""activemq""/>
    <property name=""minPoolSize"" value=""5""/>
    <property name=""maxPoolSize"" value=""10""/>
    <property name=""acquireIncrement"" value=""3""/>
  </bean>

And I also kept the rest of the activemq configuration as default. 

2). Start the persistent DB;
3). Start the Message Broker and wait for it's initialization to finish so the Message Broker will connect to MySQL database;
4). Shutdown the persistent DB;

Then the Message Broker was failing at DefaultDatabaseLocker.keepAlive() as it returns false due to the fact that the connection to DB was down. As a result, it also caused the JDBCPersistenceAdapter to shutdown the message broker.

However, the message broker was just hanging there and did not exit.

Please have a look at attached console.log file for the log captured. 

Further analysis: 
The default message broker configuration has a few more bits running that adds extra threads and it had caused the message broker not being shutdown. If disable them, the message broker would shutdown properly.",Fuse MB 5.0.0.11 + any DB (i.e. MySQL),,,,,,,,,,,,,,13/May/08 4:56 AM;joe.luo;console.log;https://issues.jboss.org/secure/attachment/12368573/console.log,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzk8xj:,178428,,,,,,,,"14/May/08 1:50 PM;chirino;Fix implemented and ported to the 5.0.0 branch.  I kicked of a deploy build[1].  Once it's done please validate it against the test case.  It will be deployed to the repo[2].

[1] http://teamcity.boston.amer.iona.com:8111/viewLog.html?tab=buildResultsDiv&buildTypeId=bt242&buildId=53481
[2] http://repo.open.iona.com/maven2-snapshot/org/apache/activemq/apache-activemq/5.0.0-fuse-SNAPSHOT",,,,,,,,,,,,,,,,,,,
Slow leak in AmqPersistenceAdapter DataFileAppender.inflightWrites Map,MB-346,12515775,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,01/May/08 11:59 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,02/May/08 9:46 AM,5.0.0.13-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.14-fuse,,,,,,,0,,"There is a race condition between DataFileAppender and NIODataFileAppender, that can periodically cause the broker to leak entries in the DataFileAppender inflightWrites Map.

Summary of the problem:

We have two separate threads (T1 in DataFileAppender and T2  in NIODataFileAppender)

1) T1 (DataFileAppender) creates a new WriteBatch and notifies the enqueueMutex

{code}
if (nextWriteBatch == null) {
                nextWriteBatch = new WriteBatch(dataFile, write);
                rc = nextWriteBatch;
                enqueueMutex.notify();
            } else {
{code}

2) T2 (NIODataFileAppender) is waiting on the mutex and wakes up in NIODataFileAppender.processQueue()

{code}
synchronized (enqueueMutex) {
                    while (true) {
                        if (nextWriteBatch != null) {
                            o = nextWriteBatch;
                            nextWriteBatch = null;
                            break;
                        }
                        if (shutdown) {
                            return;
                        }
                        enqueueMutex.wait();
                    }
                    enqueueMutex.notify();
                }
{code}

and works away until it gets to approx NIODataFileAppender line 167 and tries to cleanup inflightWrites cache:

{code}
// Now that the data is on disk, remove the writes from the in
                // flight
                // cache.
                write = wb.first;
                while (write != null) {
                    if (!write.sync) {

// Note we don't check the return code for the remove
// Line 167
-------------->                        inflightWrites.remove(new WriteKey(write.location));
                    }
                    if (write.onComplete != null) {
						try {
							write.onComplete.run();
						} catch (Throwable e) {
							e.printStackTrace();
						}
					}
                    write = (WriteCommand)write.getNext();
                }
{code}

3) Meanwhile, T1 in DataFileAppender returns the writeBatch from the enqueue and store the entry in the inflightWrites map..

{code}
batch = enqueue(dataFile, write);
        }
        location.setLatch(batch.latch);
        if (sync) {
            try {
                batch.latch.await();
            } catch (InterruptedException e) {
                throw new InterruptedIOException();
            }
        } else {
            inflightWrites.put(new WriteKey(location), write);
        }

{code}

The problem is that, we can get to line 167 of NIODataFileAppender  (i.e. remove the key from the map) before the key has been written to the inflightWrites map by the DataFileAppender thread. This doesn't happen all the time, but it can occur and hence causes a slow leak over time.

","Fuse Message Broker/Activemq 5.0.x, All platforms",,,,,,,,,,DEV-874,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk8vr:,178420,,,,,,,,,,,,,,,,,,,,,,,,,,,
AmqPersistenceAdapter race condition results in java.io.FileNotFoundException: (File exists),MB-345,12515774,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,davestanley,davestanley,01/May/08 10:39 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,01/May/08 3:02 PM,5.0.0.13-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.14-fuse,,,,broker,,,0,,"This is somewhat difficult to reproduce. When the AmqPersistenceAdapter is processing a high volume of writes from multiple threads, its possible to hit a race condition in org.apache.activemq.kaha.impl.async.DataFile.openRandomAccessFile.

If both threads try to open a file that doesn't exist yet, one will win and the other will throw an exception like the following.

{code}
Caused by: java.io.FileNotFoundException: /opt/iona/activemq-data/journal/data-29 (File exists)
at java.io.RandomAccessFile.open(Native Method)
at java.io.RandomAccessFile.<init>(RandomAccessFile.java:212)
at org.apache.activemq.kaha.impl.async.DataFile.openRandomAccessFile(DataFile.java:89)
at org.apache.activemq.kaha.impl.async.NIODataFileAppender.processQueue(NIODataFileAppender.java:95)
at org.apache.activemq.kaha.impl.async.DataFileAppender$2.run(DataFileAppender.java:230)
{code}

This is quite rare but it still means both openRandomAccessFile and closeRandomAccessFile need to be synchronized.
","Fuse Message Broker 5.x, All platforms ",,,,,,,,,,DEV-822,,,,01/May/08 10:42 AM;davestanley;patch.txt;https://issues.jboss.org/secure/attachment/12368567/patch.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzk8uv:,178416,,,,,,,,01/May/08 10:42 AM;davestanley;Patch attached.,,,,,,,,,,,,,,,,,,,
memoryLimit causes spooling to fail with persistent messages with no consumers. Queue fills up.,MB-344,12515773,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Out of Date,chirino,rohan1,rohan1,30/Apr/08 10:58 AM,12/Aug/14 12:53 PM,29/Nov/16 4:17 PM,12/Aug/14 12:53 PM,5.1.0.0-fuse,,,,,,,,,,,,,,,,,,,,,,,,broker,,,0,,"If you run a producer which primes a queue it will fill up and lock the queue. Would expect the messages to be spooled off to disk.

Can reproduce the problem by:

Set the queue memoryLimit:

<policyEntry queue="">"" memoryLimit=""5mb""/> 

Then prime the queue.

>ant producer -Durl=tcp://localhost:61616 -DmessageSize=100 -Ddurable=true -Dmax=40000

The producer will stop when memory runs out. 

Work around is to remove memoryLimit attribute. Setting systemUsage memory to 5mg doesn't cause a problem.

Might be related to:

https://issues.apache.org/activemq/browse/AMQ-1606","windows XP, java 1.5+, dell laptop.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk9nj:,178545,,,,,,,,12/Aug/14 12:53 PM;chirino;closing old issues.,,,,,,,,,,,,,,,,,,,
broker looses messages using multiple consumers accessing persistent messages from a queue,MB-343,12515772,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Incomplete Description,garytully,rohan1,rohan1,30/Apr/08 10:42 AM,24/Jun/09 3:42 PM,29/Nov/16 4:17 PM,24/Jun/09 3:42 PM,5.0.0.6-fuse,,,,,,,,,,,,,,,,,,,,5.3.0.2-fuse,,,,broker,,,4,,"The broker seems to locked up and gets confused as to the messages it needs to deliver. Basically the following test case reproduces the problem:

run broker, then feed the broker to 40,000 messages:

>ant producer -Durl=tcp://localhost:61616 -DmessageSize=100 -Ddurable=true -Dmax=40000

after the broker is primed, run 2 consumers in parallel

>ant consumer -Dmax=10000
>ant consumer -Dmax=10000

okay, nothing happens,

run the consumers again, and again.

After 2 or 3 runs you will see the problem. It doesn't pull all the messages off the queue. Using jconsole you will see the messages still on the queue and restarting the consumer doesn't pull them off. Putting new messages on the queue will slowly get process processed by the consumers however. Seems to be some kind of indexing problem. Restarting the broker will 'free' these messages. Slow consumer problem? 

Also tested with latest 5.1 trunk from Apache with the same result.","windows XP, java 1.5+",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzkarz:,178727,,,,,,,,"06/Mar/09 9:43 AM;garytully;Where do we stand on this? Does this behavior show up on trunk or with the latest 5,3 release? Is there any Junit test case that can demonstrate?",24/Jun/09 3:42 PM;garytully;5.3.0.3 should be a lot better. If problem persists on 5.3.0.2 please reopen,,,,,,,,,,,,,,,,,,
activemq-admin create behaves differently on Linux and Windows,MB-341,12515770,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davidcporter,davidcporter,29/Apr/08 9:35 AM,02/May/08 3:38 PM,29/Nov/16 4:17 PM,02/May/08 3:38 PM,5.0.0.13-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.14-fuse,,,,broker,,,0,,"On Linux, run 

./activemq-admin create ~/data/broker1

Result:

Creating directory /home/dporter/data/broker1
Creating directory /home/dporter/data/broker1/bin
Creating directory /home/dporter/data/broker1/conf
Creating file /home/dporter/data/broker1/bin/broker1.bat
Creating file /home/dporter/data/broker1/bin/broker1

In the generated activemq.xml, the brokerName is ""broker1"", as expected.

However, on Windows run the following:

activemq-admin create \data\broker1

Result:

Creating directory: F:\data\broker1
Creating directory: F:\data\broker1\bin
Creating directory: F:\data\broker1\conf
Creating new file: F:\data\broker1\bin\databroker1.bat
Creating new file: F:\data\broker1\bin\databroker1

In the generated activemq.xml, the brokerName is ""_data_broker1"".

Expected:

The generated directory structure and brokerName should be the same in Windows and Linux. The Linux output is what I expected.","Ubuntu 8.04, Windows XP, FUSE Message Broker 5.0.0.13",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk8w7:,178422,,,,,,,,02/May/08 3:38 PM;chirino;fixed.,,,,,,,,,,,,,,,,,,,
"DefaultDatabaseLocker causes Oracle to throw an exception ""maximum open cursors exceeded"" under heavy load",MB-340,12515769,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Done,rajdavies,joe.luo,joe.luo,29/Apr/08 7:41 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,02/May/08 3:43 AM,5.0.0.14-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.14-fuse,,,,broker,,,0,,"The API document for the java.sql.Statement class (http://java.sun.com/j2se/1.4.2/docs/api/java/sql/Statement.html#close()) says that statement objects are automatically closed during garbage collection, however, under heavy load (i.e. for an application that is processing multiple messages per second) you will quickly run out of cursors even before garbage collection gets to reclaiming prepared statements. Also any application that deals with huge volume is going to use a connection pool that also pools the statements, which means that the statement you created are referenced by the pool, thus they won't be garbage collected and closed. Just like the connection.close triggers the connection to be marked as available in the pool, statement.close will trigger the statement to be available in the pool for whoever needs a statement for this connection.

As a result of running out of statements, DefaultDatabaseLocker causes Oracle to throw an exception ""maximum open cursors exceeded"". And the broker looses the DB lock and shuts down. 

One solution would be to add a finally block onto the DefaultDatabaseLocker.keepAlive() method to close statement explicitly.","Message Broker 5.0.0.12, any version of Oracle DB.",,,,,,,,,,,,,,29/Apr/08 9:31 AM;joe.luo;MB-340-patch.patch;https://issues.jboss.org/secure/attachment/12368566/MB-340-patch.patch,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,1.0,,1|hzk8vb:,178418,,,,,,,,29/Apr/08 9:31 AM;joe.luo;This patch MB-340-patch.patch was created for activemq-5.0.0-fuse branch.,,,,,,,,,,,,,,,,,,,
The <storeUsage> setting for limiting the persistent storage size does not work,MB-339,12515768,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,joe.luo,joe.luo,24/Apr/08 6:26 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Feb/09 12:59 PM, 5.0.0.10-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.26-fuse,,,,broker,,,0,,"The <storeUsage> setting for limiting the persistent storage size does not seem to work. By examining into the source code, it looks like that it is not implemented yet. 

The StoreUsage.java is main class to calculate the size of the AMQ storage and it calculates all individual storage (such as Journal, kr-store etc) size of PersistenceAdapter type. However, the size() method of all implementation classes for different storage always return 0 which means ""@return disk space used in bytes of 0 if not implemented"" from PersistenceAdapter.java javadoc.",,,,,,,,,,,,,,,24/Apr/08 6:39 AM;joe.luo;MB-339.zip;https://issues.jboss.org/secure/attachment/12368565/MB-339.zip,03/Feb/09 12:51 PM;dbosanac;activemq-persistent-original.xml;https://issues.jboss.org/secure/attachment/12368630/activemq-persistent-original.xml,03/Feb/09 12:51 PM;dbosanac;activemq-persistent.xml;https://issues.jboss.org/secure/attachment/12368632/activemq-persistent.xml,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2064,,,,3.0,2.0,,1|hzka1j:,178608,,,,,,,,"24/Apr/08 6:39 AM;joe.luo;1. Invoke ""mvn install"" to start a broker, a producer and a consumer and a thread that measures the directory size every second;
2. In the console you can see DIRSIZE= xxxxx number that grows all the way.","03/Feb/09 12:59 PM;dbosanac;The main cause of this problem was in the fact that storeUsage was not associated with the appropriate persistence adapter. There is a workaround for this issue as explained in the following article [http://open-source-adventures.blogspot.com/2009/01/limiting-disk-store-usage-with-active.html]. I've uploaded activemq-peristent.xml that demonstrate how to configure broker with this workaround.

However, this workaround does not work for 5.0.0.10, but 5.0.012 onwards (so there must had been some more issues that were fixed in the meantime).

I've merged a patch provided for [https://issues.apache.org/activemq/browse/AMQ-2064] and now it works with default settings as shown in activemq-peristent-original.xml

 ",,,,,,,,,,,,,,,,,,
Issues with NetworkBridgeViewMBean,MB-335,12515764,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,dgreco,dgreco,18/Apr/08 9:08 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,02/May/08 2:47 PM,,,,,,,,,,,,,,,,,,,,, 5.0.0.11-fuse,,,,,,,0,,"I am testing with two brokers. After shutting one down (and confirming the process is no longer running) it still shows up in the NetworkBRidgeViewMBean. Please note this does not happen in 5.0.0.9. 

It fails on the following line:
			Assert.assertEquals(0, checkNumberOfNetworkBridges(broker1)); // line 70

We are expecting there to be 0 because we stopped the 2nd broker. 
Assert.assertEquals(0, checkNumberOfNetworkBridges(broker1));
",,,,,,,,,,,,,,,18/Apr/08 9:15 AM;dgreco;DEV-848.zip;https://issues.jboss.org/secure/attachment/12368564/DEV-848.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk99j:,178482,,,,,,,,18/Apr/08 9:15 AM;dgreco;The zipped file contains a self contained maven project that shows the bug. In the pom file there is the property activemq-version and then I tried with different AMQ versions. It doesn't work also with the latests snapshots: 5.0.0 and 5.1.0  It only works with the version 5.0.0.9-fuse.,"18/Apr/08 3:22 PM;chirino;Looks like a recent change in the Inactivity Monitor was blocking exceptions form the transports to get forwarded on.

If you waited long enough eventually the bridge was removed due to an inactivity timeout.  I'm now testing the fix which allows the EOF exception that occurs when the remote broker is shutdown to more quickly shutdown the bridge.",02/May/08 2:47 PM;chirino;issue fixed.  Inactivity monitor was not propagating socket exceptions up.,,,,,,,,,,,,,,,,,
activemq-admin journal-tool does not add new lines between records when the message format options are specified.,MB-334,12515763,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,15/Apr/08 4:05 PM,15/Apr/08 4:42 PM,29/Nov/16 4:17 PM,15/Apr/08 4:42 PM, 5.0.0.11-fuse,,,,,,,,,,,,,,,,,,,, fuse-4.1.0.12,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk8rb:,178400,,,,,,,,15/Apr/08 4:42 PM;chirino;Fixed.,,,,,,,,,,,,,,,,,,,
activemq-admin journal-tool Message format options do not work on windows.,MB-333,12515762,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,15/Apr/08 4:03 PM,15/Apr/08 4:04 PM,29/Nov/16 4:17 PM,15/Apr/08 4:04 PM, 5.0.0.11-fuse,,,,,,,,,,,,,,,,,,,, fuse-4.1.0.12,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk8qn:,178397,,,,,,,,15/Apr/08 4:04 PM;chirino;The activemq-admin.bat file was not properly passing command line arguments to the the tool.,,,,,,,,,,,,,,,,,,,
Out of Order message deliver to a Consumer using a MessageListener,MB-311,12515743,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,27/Mar/08 10:18 PM,03/Apr/08 8:05 PM,29/Nov/16 4:17 PM,03/Apr/08 8:05 PM,5.0.0.9-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.10-fuse,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk8n3:,178381,,,,,,,,"27/Mar/08 10:22 PM;chirino;Occurs only with a previously started connection and when the destination has several messages that get prefetched to the consumer.
When the consumer's listener is set, the first few messages may get delivered out of order.",03/Apr/08 8:05 PM;chirino;Fix made it into 5.0.0.10,,,,,,,,,,,,,,,,,,
Using message expiration feature can cause a queue to stop sending messages to consumers,MB-310,12515741,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,26/Mar/08 3:09 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,03/Apr/08 8:06 PM,5.0.0.9-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.10-fuse,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk8nj:,178383,,,,,,,,03/Apr/08 8:06 PM;chirino;Fix made it into 5.0.0.10,,,,,,,,,,,,,,,,,,,
Messages not being delivered if one out of two consumers get closed.,MB-307,12515738,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,mielket,mielket,20/Mar/08 11:00 AM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,31/Mar/08 10:09 AM,5.0.0.9-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.10-fuse,,,,broker,,,0,,"The attached testcase reveals a problem in FUSE MB whereby if one out of two consumers get closed before all messages got consumed, some of the messages will never be consumed and remain on the JMS queue, even though there is still one consumer active and ready to consume the messages. 

The unit test simply starts an in-VM broker and connects two consumers as well as one producer to the same JMS queue. The producer then sends 10000 msgs and thereafter the second consumer gets closed. The consumers are slower due to a Thread.sleep(). The testcase then waits another minute before generating the report (one min is enough for all messages to be consumed). You will notice that pretty much every run there will be between 498 and 500 messages unconsumed. 
No matter whether you play with 
- the total number of messages (10000), 
- the sleep timeout in the consumers onMessage() implementation or 
- the delay before closing the second consumer

the number of unconsumed messages should stay within 498-500.

However all messages should have got consumed in this test. So this behavior exhibits a bug in FUSE MB 5.0.0.9. 
FUSE MB 5.0.0.8 does not show this behavior.","FUSE MB 5.0.0.9, Windows (or other OS), JDK 1.5 (or 1.6).",,,,,,,,,,,,,,20/Mar/08 11:02 AM;mielket;testcase.zip;https://issues.jboss.org/secure/attachment/12368563/testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk8kn:,178370,,,,,,,,20/Mar/08 11:02 AM;mielket;Use this testcase to reproduce the problem. Follow instructions in README.txt,25/Mar/08 9:52 AM;chirino;Test looks good.  I also see the messages getting dropped.  Will investigate further.,31/Mar/08 10:09 AM;chirino;Bug has been fixed.  Will be released in 5.0.0.10.,,,,,,,,,,,,,,,,,
web console doesn't start when running bin/activemq ,MB-305,12515736,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,jastrachan,jastrachan,jastrachan,12/Mar/08 8:46 AM,12/Mar/08 10:01 AM,29/Nov/16 4:17 PM,12/Mar/08 10:01 AM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"INFO  log                            - jetty-6.1.0.1-fuse
INFO  WebConsoleStarter              - ActiveMQ WebConsole initialized.
WARN  log                            - EXCEPTION 
java.lang.ClassNotFoundException: org.springframework.web.servlet.DispatcherServlet
        at java.net.URLClassLoader$1.run(URLClassLoader.java:200)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.net.URLClassLoader.findClass(URLClassLoader.java:188)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:316)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:251)
        at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:375)
        at org.mortbay.jetty.webapp.WebAppClassLoader.loadClass(WebAppClassLoader.java:337)
        at org.mortbay.util.Loader.loadClass(Loader.java:91)
        at org.mortbay.util.Loader.loadClass(Loader.java:71)
        at org.mortbay.jetty.servlet.Holder.doStart(Holder.java:73)
        at org.mortbay.jetty.servlet.ServletHolder.doStart(ServletHolder.java:233)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
        at org.mortbay.jetty.servlet.ServletHandler.initialize(ServletHandler.java:612)
        at org.mortbay.jetty.servlet.Context.startContext(Context.java:139)
        at org.mortbay.jetty.webapp.WebAppContext.startContext(WebAppContext.java:1217)
        at org.mortbay.jetty.handler.ContextHandler.doStart(ContextHandler.java:500)
        at org.mortbay.jetty.webapp.WebAppContext.doStart(WebAppContext.java:448)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
        at org.mortbay.jetty.handler.HandlerCollection.doStart(HandlerCollection.java:147)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
        at org.mortbay.jetty.handler.HandlerWrapper.doStart(HandlerWrapper.java:117)
        at org.mortbay.jetty.Server.doStart(Server.java:222)
        at org.mortbay.component.AbstractLifeCycle.start(AbstractLifeCycle.java:40)
        at org.mortbay.jetty.xbean.JettyFactoryBean.run(JettyFactoryBean.java:47)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeCustomInitMethod(AbstractAutowireCapableBeanFactory.java:1325)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1294)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1257)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:438)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory$1.run(AbstractAutowireCapableBeanFactory.java:383)
        at java.security.AccessController.doPrivileged(Native Method)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:353)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:169)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:164)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:400)
        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:736)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:369)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:64)
        at org.apache.xbean.spring.context.ResourceXmlApplicationContext.<init>(ResourceXmlApplicationContext.java:52)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createApplicationContext(XBeanBrokerFactory.java:91)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:51)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:71)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:54)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:112)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:74)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:51)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:106)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:51)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:77)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:222)
        at org.apache.activemq.console.Main.main(Main.java:106)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk8jr:,178366,,,,,,,,12/Mar/08 10:01 AM;jastrachan;fixed in apache trunk: see http://svn.apache.org/viewvc?rev=636330&view=rev,,,,,,,,,,,,,,,,,,,
Sending persistent messages to a broker who has persistence disabled hangs the broker after a short period of time. ,MB-300,12515730,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,davestanley,davestanley,davestanley,05/Mar/08 12:45 PM,03/Apr/08 3:46 PM,29/Nov/16 4:17 PM,03/Apr/08 3:46 PM,5.0.0.9-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.10-fuse,,,,broker,,,1,,"Sending messages to a TOPIC with a durable susbscriber hangs the broker after a short period of time. 

This is because the MemoryPercentageUsage counter is being calculated incorrectly and its optimistically kicking in ""producer flow control"" - even though the consumer is keeping up with the producer, message for message.

There is a workaround, which is to disable producer flow control - by adding the following to your activemq.xml file.

{code}
<destinationPolicy>
      <policyMap>
        <policyEntries>

          <policyEntry topic="">"" producerFlowControl=""false"">
            <dispatchPolicy>
              <strictOrderDispatchPolicy/>
            </dispatchPolicy>
            <subscriptionRecoveryPolicy>
              <lastImageSubscriptionRecoveryPolicy/>
            </subscriptionRecoveryPolicy>
          </policyEntry>

        </policyEntries>
      </policyMap>
     </destinationPolicy>
{code}
","5.0.0.9, All platforms",,,,,,,,,,,,,,05/Mar/08 1:08 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368562/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,5.0,,1|hzk8mn:,178379,,,,,,,,"05/Mar/08 1:08 PM;davestanley;Testcase attached. 

To run:

>export ACTIVEMQ_HOME=<fuse-5.0.0.9>
>grep for ""csdatastore"" and change occurences to your hostname
>ant compile
>ant testcase

Connect using jconsole to:
service:jmx:rmi:///jndi/rmi://yourhost:1099/jmxrmi 

Look at the Topic stats on Broker2. The MemoryPercentageUsage counter will increment, even though the consumer is keeping up with the producer. When it hits 100% all message flow stops.



 




","02/Apr/08 6:17 PM;chirino;The test case is using an invalid configuration setup.  Persistent messages are being sent to broker1 which has persistence enabled (this is valid)... but then broker 1 is networked to a broker 2 which has persistence disabled.  This results in invalid scenario of so sending persistent messages to a non persistent broker.  While this works for simple unit tests, it does not provide proper flow control.

Does this failure only happen using this invalid configuration?  Does it fail you test the brokers independently? What about if you use non-persistent messages?

I have checked int the test case into:
http://projects.open.iona.com/projects/svn/iona/cpi/trunk/amq-sys-test

Please update the case if you get chance to resolve the invalid configuration.","03/Apr/08 11:47 AM;chirino;I have simplified the test case at http://projects.open.iona.com/projects/svn/iona/cpi/trunk/amq-sys-test
Error happens now with only 1 broker.  It only occurs if you send persistent messages to a broker that is configured in a non-persistent mode.

Like I have stated earlier this is not a valid configuration.. but I'll look into it some more to see if we can at least treat the persistent messages like if they were non-persistent.","03/Apr/08 3:29 PM;chirino;Test case failure was due to bad usage account code in the message cursoring bits of the code.  

I have now fixed this and the test case is passing.  I have also improved the reference counting so that Memory based message store increments the message reference while the message is in the Memory store.  This should avoid an OutOfMemoryException getting generated due to the messages getting spooled the the Memory Store without bound.

Commit went into trunk in rev 644447.",03/Apr/08 3:46 PM;chirino;Fix will make it into 5.0.0.10,,,,,,,,,,,,,,,
Deadlock consuming persistent messages when using AmqPersistenceAdapter,MB-298,12515729,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,27/Feb/08 1:35 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,16/Dec/08 7:43 AM,5.0.0.9-fuse,,,,,,,,,,,,,,,,,,,,5.2.0.0-fuse,,,,,,,1,,"The message broker is deadlocking when you have a large amount of concurrency reading/writing messages to persistent Topics. The testcase is very similar to MB-297 but this time, I've added a staggered 10ms sleep in Line 62 of Producer.java.

Scenario:

- Two brokers connected via network connector 
- 60 topics with 1 durable consumer per topic
- Sending 512byte messages
- Producer process has 60 threads  (6 threads per connection, 1 thread per topic)
- Consumer process has 60 threads  (6 threads per connection, 1 thread per topic)
 
I've tried to simplify the testcase but after about 20-30 different test runs with varying numbers of threads/ack windows etc .. but I've had to revert back to something close to what originally allowed me to reproduce the issue. The consumer is using CLIENT_ACK but the ACK rate doesn't seem to make any difference. It seems to be related to message size and number of topics/msgs per second that we are sending, and interactions with the message store.

To reproduce, with attached testcase:

Modify the env.sh script to suit your environment
Modify <testcase>/runtime/conf/activemq.xml - store directory
Modify <testcase>/reporter/conf/activemq.xml - store directory

// Start brokers
>source env.sh
>ant broker1
>ant broker2

>cd producer_consumer
producer_consumer>ant compile
producer_consumer>ant consumer
producer_consumer>ant producer

The testcase should reproduce the deadlock within 10-15 minutes. The brokers can continue to enqueue messages but you should see dispatch and dequeue are deadlocked in the consuming broker


",https://projects.open.iona.com/projects/svn/iona/activemq/trunk Revision: 35071 ,,,,,,,,,,MB-297,,,,27/Feb/08 1:40 PM;davestanley;amq_trunk_broker_thread_dumps_after_deadlock.zip;https://issues.jboss.org/secure/attachment/12368558/amq_trunk_broker_thread_dumps_after_deadlock.zip,27/Feb/08 1:44 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368559/testcase.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,2.0,10.0,,1|hzk9v3:,178579,,,,,,,,27/Feb/08 1:40 PM;davestanley;Captured thread dumps using kill -3 on the deadlocked brokers.,"04/Apr/08 9:18 AM;chirino;Hey Dave, I think the root cause of this problem might be the same as MB-300 Could you re-run your tests against ActiveMQ 5.0.0.10 and let me know if it resolved this issue too?

Regards,
Hiram","04/Apr/08 9:28 AM;chirino;I does look similar.




","04/Apr/08 10:05 AM;davestanley;I'll check it an let you know.

Cheer's
/Dave","04/Apr/08 11:20 AM;davestanley;Unfortunately, it looks like this problem still exists in 5.0.0.10 :-(",04/Apr/08 11:44 AM;davestanley;I think this might be related to MB-297. When I looked in the log of the producing broker I see the same stack trace.,"09/Apr/08 9:24 AM;rajdavies;Hi Dave,

can you check against the latest from trunk ?

thanks,

Rob","09/Apr/08 11:49 AM;davestanley;Rob, 
I'll give it a try and let you know.

Cheer's
/Dave","24/Apr/08 2:30 PM;davestanley;Thisis a side effect of MB-297, but just retried it and problem still occurs in todays build from trunk/rev 37851. 

Cheer's
/Dave","16/Dec/08 7:43 AM;dbosanac;I've just run the test for about half an hour against 5.2.0.0 and everything seems to be working fine. Consumer receives messages and all counters (enqueue, dequeue and dispatch) are updated.

If anyone see this issue still recurring, please reopen the issue.

Regards
Dejan",,,,,,,,,,
AmqPersistenceAdapter throws java.io.IOException: Failed to read to journal for: offset  ,MB-297,12515728,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Done,garytully,davestanley,davestanley,27/Feb/08 1:17 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,22/Aug/08 2:52 PM, 5.0.0.11-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.18-fuse,,,,,,,1,,"The AmqPersistenceAdapter is throwing IOException's when hit will a large number of concurrent producers.

Scenario:
-------------
- Producer process has 60 threads  (6 threads/sessions per connection and 1 thread per topic)
- You need a fairly fast machine - I'm using a dell poweredge 1800 (2 x 3.8 ghz w dual core's ) & 4GB ram.


Shortly after starting the producer you should see some stack traces like the following:

{code}
Caused by: java.io.IOException: Failed to read to journal for: offset = 17883251, file = 2, size = 0, type = 0. Reason: java.io.IOException: Invalid location: offset = 17883251, file = 2, size = 0, type = 0, : java.lang.NegativeArraySizeException
	at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:597)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:483)
	at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:431)
	at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
	at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:80)
	at org.apache.activemq.store.kahadaptor.KahaTopicReferenceStore.recoverNextMessages(KahaTopicReferenceStore.java:285)
	at org.apache.activemq.store.amq.AMQTopicMessageStore.recoverNextMessages(AMQTopicMessageStore.java:62)
	at org.apache.activemq.broker.region.cursors.TopicStorePrefetch.doFillBatch(TopicStorePrefetch.java:106)
	at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:185)
	... 27 more
Caused by: java.io.IOException: Invalid location: offset = 17883251, file = 2, size = 0, type = 0, : java.lang.NegativeArraySizeException
	at org.apache.activemq.kaha.impl.async.DataFileAccessor.readRecord(DataFileAccessor.java:95)
	at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:585)
	at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:480)
	... 34 more
{code}

","URL: https://projects.open.iona.com/projects/svn/iona/activemq/trunk Revision: 35071
",,,,,,,,,,,,,,27/Feb/08 1:25 PM;davestanley;testcase.tar.gz;https://issues.jboss.org/secure/attachment/12368557/testcase.tar.gz,24/Jun/08 4:55 PM;davestanley;testcase016.tar.gz;https://issues.jboss.org/secure/attachment/12368578/testcase016.tar.gz,,,,,,,,,,,,,,,,,,,,,,,,,2.0,11.0,,1|hzk9db:,178499,,,,,,,,"27/Feb/08 1:25 PM;davestanley;Testcase attached. 

To reproduce:

Modify the env.sh script to suit your environment
Modify <testcase>/runtime/conf/activemq.xml - store directory
Modify <testcase>/reporter/conf/activemq.xml - store directory
 

// Start brokers
>source env.sh
>ant broker1
>ant broker2

>cd producer_consumer
producer_consumer>ant compile
producer_consumer>ant producer

You should see the IOException stack traces within a minute of the producers kicking off.","27/Feb/08 1:47 PM;davestanley;I just realized in the testcase I attached you will need to comment out the sleep on Line 62 of Producer.java to see the probem

{code}

	        // Backoff send rate for each extra thread
	        //	sleep = sleep+10;
	    	threads[index].start();

{code}",09/Apr/08 9:23 AM;rajdavies;This is mirrored by https://issues.apache.org/activemq/browse/AMQ-1650,"24/Apr/08 2:28 PM;davestanley;Just ran with todays latest from 5.1 trunk.

{code}
URL: https://projects.open.iona.com/projects/svn/iona/activemq/trunk
Revision: 37851
Last Changed Date: 2008-04-24 12:19:59 -0400 (Thu, 24 Apr 2008)
Properties Last Updated: 2008-04-24 12:41:42 -0400 (Thu, 24 Apr 2008)
{code}

Unfortunately still see the same problem :-(

/Dave","24/Jun/08 4:55 PM;davestanley;Reproduced with 5.0.0.16. Standalone testcase attached, easier to setup than original one. 

Notes:

1) Export ACTIVEMQ_HOME=<AMQ home>
2) ant test

You need to let it run for a while on a fast machine with a fast disk.","11/Aug/08 1:37 PM;pedroneveu;Dave was able to reproduce this over the weekend with the following stacktrace:
=======================
     [java] ERROR - AbstractStoreCursor            - Failed to fill batch
     [java] java.io.IOException: Failed to read to journal for: offset = 90298, file = 825, size = -1, type = 0. Reason: java.io.IOException
: Could not locate data file data--825
     [java]     at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:625)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:511)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
     [java]     at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:530)
     [java]     at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:104)
     [java]     at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:136)
     [java]     at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1096)
     [java]     at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1186)
     [java]     at org.apache.activemq.broker.region.Queue.iterate(Queue.java:956)
     [java]     at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
     [java]     at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
     [java]     at java.lang.Thread.run(Thread.java:619)
     [java] Caused by: java.io.IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:301)
     [java]     at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:609)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:508)
     [java]     ... 17 more
     [java] ERROR - AbstractStoreCursor            - Failed to fill batch
     [java] java.lang.RuntimeException: java.io.IOException: Failed to read to journal for: offset = 90298, file = 825, size = -1, type = 0.
 Reason: java.io.IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:191)
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:104)
     [java]     at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:136)
     [java]     at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1096)
     [java]     at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1186)
     [java]     at org.apache.activemq.broker.region.Queue.iterate(Queue.java:956)
     [java]     at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
     [java]     at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
     [java]     at java.lang.Thread.run(Thread.java:619)
     [java] Caused by: java.io.IOException: Failed to read to journal for: offset = 90298, file = 825, size = -1, type = 0. Reason: java.io.
IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:625)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:511)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
     [java]     at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:530)
     [java]     at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
     [java]     ... 10 more
     [java] Caused by: java.io.IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:301)
     [java]     at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:609)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:508)
     [java]     ... 17 more
     [java] ERROR - Queue                          - Failed to page in more queue messages
     [java] java.lang.RuntimeException: java.lang.RuntimeException: java.io.IOException: Failed to read to journal for: offset = 90298, file
 = 825, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:107)
     [java]     at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:136)
     [java]     at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1096)
     [java]     at org.apache.activemq.broker.region.Queue.pageInMessages(Queue.java:1186)
     [java]     at org.apache.activemq.broker.region.Queue.iterate(Queue.java:956)
     [java]     at org.apache.activemq.thread.DeterministicTaskRunner.runTask(DeterministicTaskRunner.java:84)
     [java]     at org.apache.activemq.thread.DeterministicTaskRunner$1.run(DeterministicTaskRunner.java:41)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
     [java]     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
     [java]     at java.lang.Thread.run(Thread.java:619)
     [java] Caused by: java.lang.RuntimeException: java.io.IOException: Failed to read to journal for: offset = 90298, file = 825, size = -1
, type = 0. Reason: java.io.IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:191)
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.hasNext(AbstractStoreCursor.java:104)
     [java]     ... 9 more
     [java] Caused by: java.io.IOException: Failed to read to journal for: offset = 90298, file = 825, size = -1, type = 0. Reason: java.io.
IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:33)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:625)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:511)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:432)
     [java]     at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:54)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverReference(KahaReferenceStore.java:82)
     [java]     at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:120)
     [java]     at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:530)
     [java]     at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.doFillBatch(QueueStorePrefetch.java:75)
     [java]     at org.apache.activemq.broker.region.cursors.AbstractStoreCursor.fillBatch(AbstractStoreCursor.java:188)
     [java]     ... 10 more
     [java] Caused by: java.io.IOException: Could not locate data file data--825
     [java]     at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:301)
     [java]     at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:609)
     [java]     at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:508)
     [java]     ... 17 more

=======================","15/Aug/08 7:57 AM;garytully;hi,
one question: Is this problem particular to the 5.0.0 fuse branch. Ie: can it be reproduced with 5.0.0-branch trunk and not with apache trunk?

the reason I ask is cause we have been selectively merging to the 5.0.0-fuse branch and we may have missed something, in which case the problem can be fixed by reapplying fixes and applying more fixes.

otherwise we need to work on getting this 12 hour test case down to something manageable, once we know on which code base there is a failure. ","17/Aug/08 12:01 AM;pedroneveu;When running with 5.0.0.17 (no patch) i had the producer stop after a few hours 
snipet of producer output:
==============
...
     [java] WARN  - ProducerWorker                 - TOPIC9 sent 19000
     [java] WARN  - ProducerWorker                 - TOPIC5 sent 19000
     [java] WARN  - ProducerWorker                 - TOPIC5 sent 19000
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java] WARN  - ProducerWorker                 - TOPIC7 sent 19000
     [java] WARN  - ProducerWorker                 - TOPIC1 sent 19000
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java] ERROR - ProducerWorker                 - Problem closing down JMS ob
jects: org.apache.activemq.ConnectionClosedException: The connection is already
closed
     [java]
     [java] Time: 18,394.157
     [java]
     [java] OK (1 test)
     [java]

BUILD SUCCESSFUL
Total time: 307 minutes 1 second
C:\users\dstanley\dev985>
==============

broker/consumer output:
==============
...
             - TOPIC4 received 28000 messa
ges
     [java] WARN  - Consumer                       - TOPIC7 received 28000 messa
ges
     [java] WARN  - Consumer                       - TOPIC2 received 28000 messa
ges
     [java] WARN  - Consumer                       - TOPIC3 received 28000 messa
ges
     [java] WARN  - Consumer                       - TOPIC0 received 28000 messa
ges
     [java] WARN  - Consumer                       - TOPIC9 received 28000 messa
ges

==============","18/Aug/08 5:30 AM;garytully;pedro, great work, this looks like really good news.

but to be conclusive (and to have more concrete information for the customer), is there any more error information from the .17 run, exceptions in the log for example. It looks from the output that it exited sort of normally.
Possibly the ""patches"" (what ever they are) are the difference.

Also, is there a platform difference here, I think the customer runs on Linux. Did you do the successful .18 run on Linux?

thanks.

","19/Aug/08 10:33 AM;garytully;yea. That is the best we can do unless we can get a better test case that can actually demonstrate the problem on trunk or .18.

lets recommend that they try .18.

thanks,
Gary.",19/Aug/08 10:35 AM;garytully;the test case cannot reproduce on .18 and is flaky on .17 so it appears tht this is fixed. There were a bunch of merges that fixes this on trunk and they are now all merged to the fuse fixes branch. 17 did not have all of the fixes and .18 does so there is a dissernable difference in the code.,,,,,,,,,
Chat web demo HTML page doesn't render correctly in IE or Firefox on Win32 or Linux,MB-296,12515725,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,pdmackinnon1,pdmackinnon1,25/Feb/08 5:39 PM,16/Jan/09 11:25 AM,29/Nov/16 4:17 PM,25/Dec/08 9:04 AM,5.0.0.8-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.25-fuse,,,,,,,0,,"The Chat HTML page from the web demos doesn't render the input boxes and buttons when accessed from http://localhost:8161/demo

When I asked Hiram about this, he mentioned that the REST connector is broken, though I don't quite understand why that would affect how the HTML looks in the browser...

A CSS problem???","Win XP SP2, CentOS 4.6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,https://issues.apache.org/activemq/browse/AMQ-2014,,,,0.0,4.0,,1|hzk9zr:,178600,,,,,,,,04/Apr/08 2:42 PM;chirino;James.. could you check into this?,15/Dec/08 10:19 AM;dbosanac;This one should be solved with this issue: https://issues.apache.org/activemq/browse/AMQ-2014,"25/Dec/08 9:04 AM;dbosanac;The change is now merged in fuse branches 5.0, 5.1 and 5.2.",16/Jan/09 11:25 AM;martinmurphy;Sorry assigned to myself in error :),,,,,,,,,,,,,,,,
HTTP Discovery agent does not recover from a connection error\,MB-293,12515726,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,15/Feb/08 8:41 PM,15/Feb/08 8:45 PM,29/Nov/16 4:17 PM,15/Feb/08 8:45 PM,,,,,,,,,,,,,,,,,,,,,5.0.0.9-fuse,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk8j3:,178363,,,,,,,,15/Feb/08 8:45 PM;chirino;The agent will now continue to raise periodic discovery events for connections that have failed until the http service registry unlists the broker.,,,,,,,,,,,,,,,,,,,
Clients do not shutdown due to non-daemon threads hanging around.,MB-290,12515721,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,06/Feb/08 9:43 AM,01/Apr/08 12:43 PM,29/Nov/16 4:17 PM,06/Feb/08 10:59 AM, 5.0.0.7-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.8-fuse,,,,java client,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk8kv:,178371,,,,,,,,06/Feb/08 10:59 AM;chirino;Fixed.,01/Apr/08 12:43 PM;chirino;fix went in rev [34388|http://projects.open.iona.com/projects/trac/iona/changeset/34388],,,,,,,,,,,,,,,,,,
Deadlock when dequeueing messages from a Queue (when have pool of producers and pool of consumers),MB-287,12515718,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,davestanley,davestanley,24/Jan/08 4:51 PM,26/Mar/08 3:43 PM,29/Nov/16 4:17 PM,26/Mar/08 3:43 PM,5.0.0.6-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.9-fuse,,,,,,,0,,"I have a pool of producers and consumers publishing and consuming from the same queue. Broker deadlocks trying to dequeue a message with the following stack trace.

""DefaultMessageListenerContainer-1021"" prio=6 tid=0x26f7b008 nid=0x15e4 in Object.wait() [0x2c1cf000..0x2c1cfb68]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x02ae3978> (a java.lang.Object)
        at org.apache.activemq.MessageDispatchChannel.dequeue(MessageDispatchChannel.java:77)
        - locked <0x02ae3978> (a java.lang.Object)
        at org.apache.activemq.ActiveMQMessageConsumer.dequeue(ActiveMQMessageConsumer.java:404)
        at org.apache.activemq.ActiveMQMessageConsumer.receive(ActiveMQMessageConsumer.java:516)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveMessage(AbstractPollingMessageListenerContainer.j
ava:375)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContai
ner.java:300)
        at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContaine
r.java:254)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListene
rContainer.java:871)
        at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.
java:818)
        at java.lang.Thread.run(Thread.java:595)

The producer's send all their messages but the consumers deadlock trying to consume the messages in the queue.

",Fuse 5.0.0.7,,,,,,,,,,,,,,24/Jan/08 4:54 PM;davestanley;producer_consumer.zip;https://issues.jboss.org/secure/attachment/12368552/producer_consumer.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzk8k7:,178368,,,,,,,,"24/Jan/08 4:54 PM;davestanley;Testcase attached .. the zip also contains the full thread dump from my broker.

To run the testcase:

1) export ACTIVEMQ_HOME=<activemq home>
2) Run 'ant consumer ' to start the consumer. It will create 20 consumer connections to QUEUE (1 per thread)

3) Run 'ant producer' to start the producer ","13/Feb/08 2:24 PM;pedroneveu;I can confirm that ActiveMQ 5.0.0.8 does not show the deadlock while ActiveMQ 5.0.0.7 does.  This is through running the testcase that Dave created 

Regards,
Pedro
","15/Feb/08 5:00 PM;davestanley;Perhaps we maybe be able to close this one if its been fixed in 5.0.0.8. I will verify it next week  ..

Cheer's
/Dave",26/Mar/08 3:43 PM;davestanley;Verified this is fixed in 5.0.0.9,,,,,,,,,,,,,,,,
Using PropertyPlaceHolderConfigurer to set the SystemUsage size limit property causes parsing error on startup,MB-283,12515714,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,08/Jan/08 11:55 AM,09/Jan/08 2:16 PM,29/Nov/16 4:17 PM,09/Jan/08 2:16 PM,5.0.0.6-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.7-fuse,,,,,,,0,,"I've added the following to my activemq.xml file to specify a property config file:

{code}
<bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"">
	<property name=""location"" value=""usage.properties"" />
</bean>  
{code}

Where 'usage.properties' is a properties file:

{code}
usage.limit=20mb
{code}

Then SystemUsage/MemoryUsage is configured as follows:
{code}
<systemUsage>
	            <systemUsage>
		            <memoryUsage>
	    	            	<memoryUsage limit=""${usage.limit}"" percentUsageMinDelta=""20""/>
		            </memoryUsage>
                                 </systemUsage>
	    </systemUsage>

{code}

On startup the org.apache.activemq.util.MemoryPropertyEditor setAsText() method is called to parse the limit property but its being passed the ${} form vs the actual property - which MemoryPropertyEditor is unable to handle. ",,,,,,,,,,,,,,,08/Jan/08 11:58 AM;davestanley;memory_usage_property_config.zip;https://issues.jboss.org/secure/attachment/12368551/memory_usage_property_config.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,4.0,,1|hzk6zr:,178114,,,,,,,,08/Jan/08 11:58 AM;davestanley;Testcase attached. Just unzip below the root of your source tree.,08/Jan/08 2:20 PM;chirino;Verified that test case shows a bug.  Looks like it's in the xbean module.  Will make a test case for xbean and try to get resolved.,09/Jan/08 9:07 AM;chirino;Confirmed that it was an xbean issues and have developed the fix.  Fix should make it into the next patch release.,09/Jan/08 2:16 PM;chirino;fixed xbean module has been released and will be included in the next 5.0.0.7-fuse release.,,,,,,,,,,,,,,,,
The activemq-all jar file is missing the required dependency on commons-logging.,MB-282,12515713,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,04/Jan/08 1:47 PM,04/Jan/08 5:11 PM,29/Nov/16 4:17 PM,04/Jan/08 5:11 PM,5.0.0.6-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.7-fuse,,,,java client,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6zj:,178113,,,,,,,,04/Jan/08 5:11 PM;chirino;fixed in rev 33679,,,,,,,,,,,,,,,,,,,
Error message in broker log: ERROR - org.apache.activemq.broker.TransportConnection.Service - Async error occurred: java.lang.IllegalStateException,MB-279,12515710,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,08/Dec/07 11:31 AM,08/Dec/07 2:01 PM,29/Nov/16 4:17 PM,08/Dec/07 2:01 PM, 5.0.0.5-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.7-fuse,,,,java client,,,0,,"If you have a multi-threaded client which share 1 connection to the broker it is possible you may have seen errors like:

{code}
2007-12-05 14:14:52,606 [VMTransport] ERROR - org.apache.activemq.broker.TransportConnection.Service - Async error occurred: java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:bubba-38184-1196882086290-2:1
java.lang.IllegalStateException: Cannot lookup a connection that had not been registered: ID:bubba-38184-1196882086290-2:1
at org.apache.activemq.broker.SingleTransportConnectionStateRegister.lookupConnectionState(SingleTransportConnectionStateRegister.java:113)
at org.apache.activemq.broker.TransportConnection.lookupConnectionState(TransportConnection.java:1313)
at org.apache.activemq.broker.TransportConnection.processRemoveConsumer(TransportConnection.java:538)
at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:64)
at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:281)
at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:100)
at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
at org.apache.activemq.transport.vm.VMTransport.iterate(VMTransport.java:202)
at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:118)
at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:42)
at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:885)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:907)
at java.lang.Thread.run(Thread.java:619)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk6yn:,178109,,,,,,,,"08/Dec/07 11:44 AM;chirino;root cause is that the client side has multiple threads calling close() on consumer/session and the connection objects.  If the timing of those concurrent calls was just right, it is possible for the client to send the connection close message followed by a session or consumer close message which is invalid and would result in IllegalStateException reported by the broker.",08/Dec/07 2:01 PM;chirino;Fix will be in the 5.0.07-fuse release.,,,,,,,,,,,,,,,,,,
Stopped broker connections not getting cleaned up when broker thread hung on a memory limit,MB-278,12515709,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,30/Nov/07 10:26 AM,08/Dec/07 11:28 AM,29/Nov/16 4:17 PM,08/Dec/07 11:28 AM, 5.0.0.5-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.6-fuse,,,,broker,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk6yf:,178108,,,,,,,,"30/Nov/07 5:41 PM;chirino;Also noticed that it's possible that the Scheduler could get stuck due to the InactivityMonitor trying to shutdown a connection and that action blocking.  We should make that close async so that it does not block.
{code}
""ActiveMQ Scheduler"" daemon prio=10 tid=0x00002aaaf5059400 nid=0x76c3 waiting on condition [0x0000000042f29000..0x0000000042f2a470]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x00002aaab54641d8> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:712)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:870)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1182)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)
	at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:440)
	at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:66)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
	at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:78)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
	at org.apache.activemq.broker.TransportConnection.disposeTransport(TransportConnection.java:1239)
	at org.apache.activemq.broker.TransportConnection.doStop(TransportConnection.java:917)
	at org.apache.activemq.broker.jmx.ManagedTransportConnection.doStop(ManagedTransportConnection.java:74)
	at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:876)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:40)
	at org.apache.activemq.broker.TransportConnection.serviceTransportException(TransportConnection.java:206)
	at org.apache.activemq.broker.TransportConnection$1.onException(TransportConnection.java:185)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:157)
	at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:100)
	- locked <0x00002aaab54649c0> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:50)
	at org.apache.activemq.thread.Scheduler$SchedulerTimerTask.run(Scheduler.java:36)
	at java.util.TimerThread.mainLoop(Timer.java:512)
	at java.util.TimerThread.run(Timer.java:462)
{code}",08/Dec/07 11:28 AM;chirino;fixed.,,,,,,,,,,,,,,,,,,
"Persistent messages for queue still browsable in JMX console, although all messages were consumed. ",MB-276,12515707,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,dbosanac,davestanley,davestanley,28/Nov/07 5:00 PM,30/Jan/09 8:57 AM,29/Nov/16 4:17 PM,30/Jan/09 8:57 AM,5.0.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.9-fuse,,,,,,,0,,"This is an addon to [MB-275|http://open.iona.com/issues/browse/MB-275]. Once all messages are consumed from a persistent queue, the messages are still browseable by clicking on ""Operations/BrowseMessages()"".",Activemq 5.0.0.5 snapshot,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzka13:,178606,,,,,,,,28/Nov/07 5:00 PM;davestanley;Use the same testcase from MB-275.,16/Jan/08 1:10 PM;janstey;Has this been fixed? 5.0.0.7-fuse has been released as of today.,30/Jan/09 8:57 AM;dbosanac;Just verified that this has been fixed in 5.0.0.9,,,,,,,,,,,,,,,,,
JMX console displays negative QueueSize on broker restart (when have persisted messages in queue),MB-275,12515706,Bug,Closed,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,davestanley,davestanley,28/Nov/07 4:54 PM,07/Nov/13 5:17 AM,29/Nov/16 4:17 PM,26/Mar/08 3:57 PM,5.0.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.9-fuse,,,,,,,0,,"Its possible to cause the JMX console to display incorrect/negative values for QueueSize and also an incorrect dispatch count.

How to reproduce:
1. Configure the amq persistence adapter as follows:

{code}
  <persistenceAdapter>
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
    </persistenceAdapter>
{code}

2. Send 100 persistent/durable messages to a queue.
3. Consume some of the messages (e.g. 30). Open the jmx console and verify the queue statistics are correct.
4. Ctrl-c the broker and restart it.
5. Note on restart that the queueSize is 0, also dispatchCount=0 also
6. Consume some more messages (e.g. 30)
7. Note the negative queue size, although dispatch count has been updated to the number of remaining queued persistent messages.

",ActiveMQ 5.0.0.5,,,,,,,,,,,,,,28/Nov/07 5:03 PM;davestanley;producer_consumer.zip;https://issues.jboss.org/secure/attachment/12368550/producer_consumer.zip,28/Nov/07 4:55 PM;davestanley;step1_initial_consume_70_persistent_remaining.png;https://issues.jboss.org/secure/attachment/12368545/step1_initial_consume_70_persistent_remaining.png,28/Nov/07 4:55 PM;davestanley;step2_broker_restart_queue_counts_0.PNG;https://issues.jboss.org/secure/attachment/12368546/step2_broker_restart_queue_counts_0.PNG,28/Nov/07 4:55 PM;davestanley;step2_broker_restart_queue_counts_0_msgs_browsable_and_persisted.PNG;https://issues.jboss.org/secure/attachment/12368548/step2_broker_restart_queue_counts_0_msgs_browsable_and_persisted.PNG,28/Nov/07 4:55 PM;davestanley;step3_consumer_another30message_now_negative.PNG;https://issues.jboss.org/secure/attachment/12368547/step3_consumer_another30message_now_negative.PNG,28/Nov/07 4:56 PM;davestanley;step4_consume_all_remaining_messages.PNG;https://issues.jboss.org/secure/attachment/12368549/step4_consume_all_remaining_messages.PNG,,,,,,,,,,,,,,,,,,,,,6.0,5.0,,1|hzk8kf:,178369,,,,,,,,28/Nov/07 5:01 PM;davestanley;Added MB-276 for the browseMessages() problem.,"28/Nov/07 5:03 PM;davestanley;JMS producer and consumer. Change the activemq.home directory and then should just need to run 

# this will add 100 persistent messages to queue TEST.FOO.
>ant producer  

# this will consume 30 messages at a time.
>ant consumer
","17/Dec/07 12:09 PM;davestanley;Please note: Negative message counts are also possible with persistence DISABLED. When fix is commited, can you clarify the fix covers the non-persistent case also (If not I will try and provide a testcase that illustrates the non-persistent case).

Thanks!
/Dave",16/Jan/08 1:10 PM;janstey;Has this been fixed? 5.0.0.7-fuse has been released as of today.,26/Mar/08 3:57 PM;davestanley;Verified this is fixed in latest released version (5.0.0.9),,,,,,,,,,,,,,,
Documentation for amqPersistenceAdapter's maxDataFileLength/maxFileLength setting,MB-274,12515705,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,emjohnson,davestanley,davestanley,28/Nov/07 12:25 PM,10/Dec/07 2:50 PM,29/Nov/16 4:17 PM,10/Dec/07 2:50 PM,,,,,,,,,,,,,,,,,,,,, 5.0.0.7-fuse,,,,Documentation,,,0,,"In the document ""Using FUSE Message Broker's Persistence Features"" the following is provided as a way to configure the amqPersistenceAdapter (see page 30 in the September 07 draft)

<persistenceAdapter>
<amqPersistenceAdapter directory=""activemq-data"" maxDataFileLength=""32mb""/>
</persistenceAdapter>
</broker>

However, maxDataFileLength does not appear to be a valid property and a matching set method does not appear in the code.  This looks to be a carryover from the old Kaha configuration.  It looks like it should be:

<persistenceAdapter>
<amqPersistenceAdapter directory=""activemq-data"" maxFileLength=""32mb""/>
</persistenceAdapter>
</broker>

Also, In terms of the allowed number formats, the ""32mb"" is an XBean nicety (see the XBean propertyEditor implementation at:
<activemq>/activemq-core/src/main/java/org/apache/activemq/util/MemoryPropertyEditor.java).

The following formats should also be valid when configuring the persistence adapter:
maxFileLength=""20 MB""
maxFileLength=""20M""
maxFileLength=""20000 kb""
maxFileLength=""20000 k""
maxFileLength=""1G""
maxFileLength=""1 gb""
maxFileLength=""100000000""

(I think it would be worth adding the formatting info also)

",NA,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6z3:,178111,,,,,,,,"10/Dec/07 2:50 PM;emjohnson;Updated the example to fix the typo. Agree that the formating should be documented, but don't think this is the place for it. I'll raise a JIRA to have it put in a better location.",,,,,,,,,,,,,,,,,,,
Bad default location for console install,MB-273,12515704,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,janstey,hzbarcea1,hzbarcea1,20/Nov/07 10:43 AM,10/Dec/07 9:00 AM,29/Nov/16 4:17 PM,10/Dec/07 9:00 AM,5.0.0.4-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.6-fuse,,,,broker,,,0,,"Where would you like to install?

  Default Install Folder: /opt/iona/fuse-message-broker-5.0.0-SNAPSHOT
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk6yv:,178110,,,,,,,,"04/Dec/07 7:33 AM;janstey;Was this a snapshot installer or one from the open.iona.com/downloads? If it was one from the downloads site, then this has been fixed in 5.0.0.5-fuse.",10/Dec/07 8:59 AM;janstey;This has been fixed in the latest MB release http://repo.open.iona.com/maven2/com/iona/fuse/fuse-message-broker/5.0.0.6/,,,,,,,,,,,,,,,,,,
Durable subscription messages not properly being acked,MB-262,12515692,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,26/Oct/07 4:47 PM,26/Oct/07 5:02 PM,29/Nov/16 4:17 PM,26/Oct/07 5:02 PM,5.0.0.2-fuse,5.0.0.3-fuse,5.0.0.4-fuse,fuse-4.1.0.0,fuse-4.1.0.1,fuse-4.1.0.10,fuse-4.1.0.11,fuse-4.1.0.2,fuse-4.1.0.3,fuse-4.1.0.4,fuse-4.1.0.6,fuse-4.1.0.7,fuse-4.1.0.8,fuse-4.1.0.9,fuse-4.1.2.0,fuse-4.1.2.1, fuse-4.1.2.2, fuse-4.1.2.3,fuse-4.1.2.4,fuse-4.1.2.5, 5.0.0.5-fuse, fuse-4.1.2.6,,,,,,0,,"This affects JDBC stores only.
see: http://www.nabble.com/Is-this-a-bug-in-DefaultJDBCAdapter.java--tf1890445s2354.html#a5170127",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6vb:,178094,,,,,,,,26/Oct/07 5:02 PM;chirino;Resolved.,,,,,,,,,,,,,,,,,,,
"MarshallingSupport.unmarshalPrimitive is throwing ""Unknown primitive type: 0"" when nested map contains a null",MB-261,12515691,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,davestanley,davestanley,davestanley,26/Oct/07 12:36 PM,26/Oct/07 1:32 PM,29/Nov/16 4:17 PM,26/Oct/07 12:40 PM,,,,,,,,,,,,,,,,,,,,, 5.0.0.5-fuse,,,,,,,0,,"Problem occurs when using a MapMessages that contains a nested Map.

When this message is marshalled it goes though MarshallingSupport.marshalPrimitiveMap(). MarshalPrimitiveMap is called recursively to marshall the nested Map calling marshalPrimitive on each entry in the map. If one of the values in the nested Map is null it is marshalled properly by the first case in the switch statement of MarshallingSupport.marshalPrimitive()

The problem occurs as in the unmarshal, there is no case statement for null in MarshallingSupport.unmarshallPrimitive(). In AMQ4 there was no default case so it fell through and returned null, but in AMQ5 there is now a default which throws an exception.
",ActiveMQ 5.x,,,,,,,,,,,,,,26/Oct/07 12:39 PM;davestanley;unmarshallPrimitivePatch.txt;https://issues.jboss.org/secure/attachment/12368542/unmarshallPrimitivePatch.txt,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,2.0,,1|hzk6v3:,178093,,,,,,,,26/Oct/07 12:39 PM;davestanley;Patch attached.,26/Oct/07 1:32 PM;chirino;patch ported to apache.,,,,,,,,,,,,,,,,,,
AcitveMQMapMessage leaking objects held in org.apache.activemq.store.memory.MemoryTopicMessageStore,MB-259,12515689,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Won't Fix,chirino,davestanley,davestanley,19/Oct/07 9:41 PM,05/Nov/07 2:17 PM,29/Nov/16 4:17 PM,05/Nov/07 2:17 PM,fuse-4.1.2.1,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"
Setup:
Two Brokers, A&B. Broker A is set to persist messages sent to Broker B which is configured to have persistence disabled. B has a durable subscription to the topic where A is sending persistent messages. 

A - persistent=true, port 61621
B - persistence=false, port 61622

We have a static tcp NetworkConnector between A & B.

Problem:
While debugging OutOfMemoryErrors on Broker B (the non persistent one) we dumped the heap using jmap and found that there 200k instances of ActiveMQMapmessages in HashMap$Entry objects held by org.apache.activemq.store.memory.MemoryTopicMessageStore. 

We are using the explicit Session.receive() method of receiving messages on several sessions on Broker B. Each one has the ack_mode set to CLIENT_ACK so we can manually acknowledging the latest message every thousand messages or so. Since acking a message acks all messages received on a topic at that point we aren't acking each individual message.

It looks like athough messages are being acknowledged they are not getting cleaned up from MemoryTopicMessageStore.

Testcase and jconsole output attached.

 

",apache-activemq-fuse-4.1.2.1.zip,,,,,,,,,,,,,,19/Oct/07 9:45 PM;davestanley;MemoryTopicMessageStoreTestcase.zip;https://issues.jboss.org/secure/attachment/12368541/MemoryTopicMessageStoreTestcase.zip,19/Oct/07 9:42 PM;davestanley;java_heap.JPG;https://issues.jboss.org/secure/attachment/12368540/java_heap.JPG,,,,,,,,,,,,,,,,,,,,,,,,,2.0,4.0,,1|hzk6wv:,178101,,,,,,,,19/Oct/07 9:42 PM;davestanley;Jconsole summary showing heap memory usage on BrokerB,"19/Oct/07 9:45 PM;davestanley;Testcase
========

1. Modify .\src\Consumer.java and .\src\Producer.java

Set the send\recieve broker to the approapriate location:

private final String broker=""tcp://localhost:61622"";
    
2.  Compile

>ant compile

3. Run consumer and producer (separate shells)

>ant consumer
>ant producer

4. Start Jconsole, connect to broker B

Note the memory will continually climb in Broker B. ",23/Oct/07 6:04 PM;davestanley;Problem does not look like it appears in ActiveMQ 5.x and later.,"05/Nov/07 2:17 PM;chirino;This is not a bug.  This is behaving as expected.

Disabling persistence on the broker means that the broker will not store messages on disk.  Instead it keeps them in an 'in memory' store.  If you send persistent message to a broker that has had persistence disabled, those message will be held in memory.  You MUST allocate enough JVM memory to hold all the persistent messages that get queued on to the broker.  There is no Flow Control on the message stores.  Therefore it is possible to get an OOM error if you send persistent messages to a broker that has been configured with persistence disabled.

I would only recommend disabling persistence on broker that is either:
 * only receiving non-persistent messages.
 * being used in a unit test

Regards,
Hiram",,,,,,,,,,,,,,,,
Deadlock in Failover transport will hang a connection.,MB-258,12515688,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,15/Oct/07 10:45 AM,15/Oct/07 11:05 AM,29/Nov/16 4:17 PM,15/Oct/07 11:05 AM,5.0.0.3-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.5-fuse,,,,,,,0,,"If the timing is just right and you stop() a JMS connection that is using the failover transport at the same time that a transport failure is detected, a deadlock can occur where the connection does not shutdown and all call against it block.  You will see stack traces similar to:

{code}
#tmielke, this thread waits for lock <0x7be71090>. 
#Is this client trying to failover?
""ActiveMQ Transport: tcp://localhost:61616"" prio=10 tid=0x54defc00 nid=0x7bf6 waiting for monitor entry [0x6162d000..0x6162e1c0]
   java.lang.Thread.State: BLOCKED (on object monitor)
	at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:236)
	- waiting to lock <0x7be71090> (a java.lang.Object)
	at org.apache.activemq.transport.failover.FailoverTransport$2.onException(FailoverTransport.java:209)
	at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:98)
	at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:143)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:125)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:124)
	- locked <0x7be75728> (a org.apache.activemq.transport.InactivityMonitor$1)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:83)
	at org.apache.activemq.transport.tcp.TcpTransport.doRun(TcpTransport.java:189)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:176)
	at java.lang.Thread.run(Thread.java:619)

""Main"" daemon prio=10 tid=0x6386fc00 nid=0x7965 waiting on condition [0x6347e000..0x6347f0c0]
   java.lang.Thread.State: WAITING (parking)
	at sun.misc.Unsafe.park(Native Method)
	- parking to wait for  <0x7be751d0> (a java.util.concurrent.CountDownLatch$Sync)
	at java.util.concurrent.locks.LockSupport.park(LockSupport.java:158)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.parkAndCheckInterrupt(AbstractQueuedSynchronizer.java:712)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireSharedInterruptibly(AbstractQueuedSynchronizer.java:870)
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireSharedInterruptibly(AbstractQueuedSynchronizer.java:1182)
	at java.util.concurrent.CountDownLatch.await(CountDownLatch.java:207)
	at org.apache.activemq.transport.tcp.TcpTransport.stop(TcpTransport.java:456)
	at org.apache.activemq.transport.InactivityMonitor.stop(InactivityMonitor.java:66)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
	at org.apache.activemq.transport.WireFormatNegotiator.stop(WireFormatNegotiator.java:78)
	at org.apache.activemq.transport.failover.FailoverTransport.stop(FailoverTransport.java:270)
	- locked <0x7be71090> (a java.lang.Object)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
	at org.apache.activemq.transport.TransportFilter.stop(TransportFilter.java:63)
	at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:40)
	at org.apache.activemq.ActiveMQConnection.close(ActiveMQConnection.java:587) 
        ....
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6uf:,178090,,,,,,,,15/Oct/07 11:05 AM;chirino;Fixed in [rev 21909|https://projects.open.iona.com/projects/trac/iona/changeset/21909],,,,,,,,,,,,,,,,,,,
"Enabling memoryManager in activemq.xml causes ""java.lang.ClassNotFoundException: usageManager""",MB-257,12515687,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,09/Oct/07 4:58 PM,05/Nov/07 2:10 PM,29/Nov/16 4:17 PM,05/Nov/07 2:10 PM,5.0.0.2-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.5-fuse,,,,,,,0,,"The activemq.xml shipped with the Fuse MessageBroker contains an incorrect reference to memoryManager:

{code:xml}
    <!--  Use the following to set the broker memory limit
    <memoryManager>  
        <usageManager id=""memory-manager"" limit=""20 MB""/>
    </memoryManager>
    -->
{code]    

Enabling the memoryManager results in a spring/classNotFound error:

org.springframework.
beans.factory.BeanDefinitionStoreException: Failed to load type: usageManager. R
eason: java.lang.ClassNotFoundException: usageManager; nested exception is java.
lang.ClassNotFoundException: usageManager

This bug is just to correct activemq.xml.

Workaround
==========

As memoryManager has been replaced by usageManager, the workaround for the issue is to replace the <memoryManager><memoryManager/>  element with the following:

{code:xml}
<systemUsage>
            <systemUsage>
	            <memoryUsage>
    	            	<memoryUsage limit=""10 mb"" percentUsageMinDelta=""20""/>
	            </memoryUsage>
	            <tempUsage>
    	            	<tempUsage limit=""100 mb""/>
	            </tempUsage>
	            <storeUsage>
    	            	<storeUsage limit=""1 gb"" name=""foo""/>
	            </storeUsage>
            </systemUsage>
    </systemUsage>

{code}",Fuse MessageBroker 5.0.0.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6wn:,178100,,,,,,,,05/Nov/07 2:10 PM;chirino;The config example has been updated for the 5.0.0.5-fuse release.,,,,,,,,,,,,,,,,,,,
Activemq.bat ACTIVEMQ_BASE fix,MB-256,12515686,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,jlim1,davestanley,davestanley,01/Oct/07 1:00 PM,03/Nov/07 4:32 AM,29/Nov/16 4:17 PM,03/Nov/07 4:32 AM,,,,,,,,,,,,,,,,,,,,, 5.0.0.5-fuse,,,,,,,0,,"If you use %ACTIVEMQ_BASE%, and start broker using <activemq>\bin\activemq.bat, the broker is picking up the activemq.xml from the %ACTIVEMQ_HOME%


Changing

set ACTIVEMQ_CLASSPATH=%ACTIVEMQ_HOME%/conf;%ACTIVEMQ_CLASSPATH%


to: 

REM Setup ActiveMQ Classpath. Default is the conf directory.
set ACTIVEMQ_CLASSPATH=%ACTIVEMQ_BASE%/conf;%ACTIVEMQ_CLASSPATH%

looks to fix the problem",Windows 5.0.0.2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6vr:,178096,,,,,,,,"03/Nov/07 4:32 AM;jlim1;Thanks! trunk and 5.0.0-fuse branch are now updated with the fix :
trunk :  r22779
branch:  r22780",,,,,,,,,,,,,,,,,,,
Memory leak in Network Connector reconnect logic,MB-255,12515685,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,28/Sep/07 4:41 PM,08/Nov/07 10:56 AM,29/Nov/16 4:17 PM,08/Nov/07 10:56 AM,5.0.0.2-fuse,,,,,,,,,,,,,,,,,,,, 5.0.0.5-fuse,,,,,,,1,,"Summary: Looks like theres an agressive memory leak in the network connector reconnect logic.

1) Setup a cluster of 4 brokers (using ACTIVEMQ_BASE) where each broker connects to its three neighbours statically.
2) Start all 4 brokers ..they should all connect to each other and memory usage should be stable.
3) Kill one of the brokers.
4) Note the memory start to climb in the remaining brokers:
5) You will start to see messages like the following in the leaking brokers:


INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://broker3 to tcp://localhost:61616
WARN  DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker3 and: tcp://localhost:61616 due to: java.net.Conn
ectException: Connection refused: connect
INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
WARN  DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker3 and: tcp://localhost:61618 due to: java.net.Conn
ectException: Connection refused: connect
INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://broker3 to tcp://localhost:61616
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://broker3 to tcp://localhost:61618
WARN  DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker3 and: tcp://localhost:61618 due to: java.net.Conn
ectException: Connection refused: connect
INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://broker3 to tcp://localhost:61618
WARN  DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker3 and: tcp://localhost:61616 due to: java.net.Conn
ectException: Connection refused: connect
INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://broker3 to tcp://localhost:61616
WARN  DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker3 and: tcp://localhost:61616 due to: java.net.Conn
ectException: Connection refused: connect
WARN  DiscoveryNetworkConnector      - Could not start network bridge between: vm://broker3 and: tcp://localhost:61618 due to: java.net.Conn
ectException: Connection refused: connect
INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
INFO  DemandForwardingBridge         - broker3 bridge to Unknown stopped
INFO  DiscoveryNetworkConnector      - Establishing network connection between from vm://broker3 to tcp://localhost:61618  

Testcase attached: ","Win XP, IONA Fuse MB 5.0.0.2

",,,,,,,,,,,,,,28/Sep/07 4:46 PM;davestanley;brokers.zip;https://issues.jboss.org/secure/attachment/12368543/brokers.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,5.0,,1|hzk6xb:,178103,,,,,,,,"28/Sep/07 4:46 PM;davestanley;
1) Modify or add .sh file to each of the 4 brokers /bin directories
2) Change activemq_home and activemq_base to valid directory on your system
3) Run start script at top level to launch all 4 brokers.
",24/Oct/07 2:41 PM;davestanley;Hmm .. Does not seem to be fixed in 5.0.0.4. I still see the leak.,05/Nov/07 1:57 PM;chirino;Revision [22845|https://projects.open.iona.com/projects/trac/iona/changeset/22845] fixes the issue.  Errors at startup() were leaking resources that were not getting cleaned up since a subsequent stop() would not get invoked.,08/Nov/07 10:13 AM;chirino;A small memory leak still appears to happen when multiple brokers are in use.,"08/Nov/07 10:56 AM;chirino;The memory leak was a thread leak due to redesign of the VMTransport.  This has now been corrected in 
revision [22939|http://projects.open.iona.com/projects/trac/iona/changeset/22939].",,,,,,,,,,,,,,,
Network Connector issue in ActiveMQ.xml,MB-253,12515683,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Won't Fix,chirino,terranotsoferma,terranotsoferma,27/Sep/07 4:34 PM,16/Oct/07 12:36 PM,29/Nov/16 4:17 PM,16/Oct/07 12:36 PM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"1) In activemq.xml , if a <networkConnector> definition includes the
failover=true value, it  causes activeMq to throw an exception at start
up.   -- ""undefined element""  ???","Unbuntu Linux, JDK 1.5, FUSE-Message Broker 5.0.0.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk6un:,178091,,,,,,,,"16/Oct/07 12:35 PM;chirino;Hi Jack, this not a bug.  The failover=""true"" element should no longer be configured in ActiveMQ 5.0 This is related to issue:
http://issues.apache.org/activemq/browse/AMQ-734",16/Oct/07 12:36 PM;chirino;Expected behavior.,,,,,,,,,,,,,,,,,,
"On the Queue Views page on the Web ActiveMQ console, when you select browse a queue with either atom or RSS an error is displayed",MB-252,12515682,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Done,jastrachan,terranotsoferma,terranotsoferma,27/Sep/07 4:32 PM,17/Dec/08 11:09 AM,29/Nov/16 4:17 PM,17/Dec/08 11:09 AM,,,,,,,,,,,,,,,,,,,,,5.2.0.0-fuse,,,,,,,0,,"On the Queue Views page on the Web ActiveMQ console, when you select
to browse a queue with either  atom or rss a page showing an exception
is displayed.

Error - 

ava.lang.IllegalStateException: missing ConnectionFactory in
QueueBrowserServlet
	at org.apache.activemq.web.QueueBrowseServlet.getConnectionFactory(QueueBrowseServlet.java:80)
	at org.apache.activemq.web.QueueBrowseServlet.getConnection(QueueBrowseServlet.java:64)
	at org.apache.activemq.web.QueueBrowseServlet.createSession(QueueBrowseServlet.java:158)
	at org.apache.activemq.web.QueueBrowseServlet.borrowSession(QueueBrowseServlet.java:141)
	at org.apache.activemq.web.QueueBrowseServlet.doGet(QueueBrowseServlet.java:95)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:487)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1093)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:63)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:46)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.apache.activemq.web.filter.ApplicationContextFilter.doFilter(ApplicationContextFilter.java:81)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at com.opensymphony.module.sitemesh.filter.PageFilter.parsePage(PageFilter.java:118)
	at com.opensymphony.module.sitemesh.filter.PageFilter.doFilter(PageFilter.java:52)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1084)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:360)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:216)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:712)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:405)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:324)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:506)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:829)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:514)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:211)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:381)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:396)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442) 


","Unbuntu Linux, JDK 1.5, FUSE 5.0.0.2 from the open.iona.com downloads page",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk9vj:,178581,,,,,,,,04/Apr/08 2:43 PM;chirino;James.. could you look into this?,17/Dec/08 11:09 AM;dbosanac;This has been fixed in succeeding versions. Do you want to backport it?,,,,,,,,,,,,,,,,,,
Update to activeio-3.1.0.0-fuse,MB-251,12515681,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,25/Sep/07 12:06 PM,25/Sep/07 12:07 PM,29/Nov/16 4:17 PM,25/Sep/07 12:07 PM,fuse-4.1.2.5,,,,,,,,,,,,,,,,,,,, fuse-4.1.2.6,,,,,,,0,,see: http://open.iona.com/issues/browse/DEV-25,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6tz:,178088,,,,,,,,25/Sep/07 12:07 PM;chirino;fix in rev 579301,,,,,,,,,,,,,,,,,,,
TransportDisposedIOException exception loop when adding NetworkConnector with invalid URL,MB-250,12515680,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,21/Sep/07 10:51 PM,05/Nov/07 12:13 PM,29/Nov/16 4:17 PM,05/Nov/07 12:13 PM,,,,,,,,,,,,,,,,,,,,, 5.0.0.5-fuse,,,,,,,0,,"Scenario:

- using spring to load the broker with a org.apache.activemq.xbean.PooledBrokerFactoryBean. 

- Modified the EmbeddedBroker.java sample as follows:

{code:java}
  String config = ""spring-embedded-pooled.xml"";

        Thread.currentThread().setContextClassLoader(EmbeddedBroker.class.getClassLoader());
        ClassPathXmlApplicationContext context1 = new ClassPathXmlApplicationContext(config);

        BrokerService broker = (BrokerService) context1.getBean(""broker1"");
		broker.setUseJmx(true);
		//broker.addConnector(""tcp://localhost:61626"");
		broker.addNetworkConnector(""multicast://default"");
		broker.addNetworkConnector(""static://(tcp://host1:61616,tcp://host2:61616)"");
		broker.start();

{code}

The broker will startup and everything appears to be working as expected.

Wait for 1 minute and then you will start to see a steady stream of exceptions like the following (1 per second):

     [java] org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#48) disposed.
     [java]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:88)
     [java]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
     [java]     at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1175)
     [java]     at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:794)
     [java]     at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:875)
     [java]     at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:152)
     [java] 22:39:54 INFO  Establishing network connection between from vm://localhost to tcp://host2:61616
     [java] 22:39:54 INFO  Connector vm://localhost Started
     [java] 22:39:54 INFO  Establishing network connection between from vm://localhost to tcp://host1:61616
     [java] 22:39:54 WARN  Could not start network bridge between: vm://localhost and: tcp://host1:61616 due to: java.net.UnknownHostExcepti
on: host1
     [java] 22:39:54 INFO  localhost bridge to Unknown stopped
     [java] 22:39:54 ERROR Could not accept connection : org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#52
) disposed.
     [java] org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#52) disposed.
     [java]     at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:88)
     [java]     at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:40)
     [java]     at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:59)
     [java]     at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:1175)
     [java]     at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:794)
     [java]     at org.apache.activemq.broker.TransportConnection.start(TransportConnection.java:875)
     [java]     at org.apache.activemq.broker.TransportConnector$1$1.run(TransportConnector.java:152)
     [java] 22:39:55 INFO  Establishing network connection between from vm://localhost to tcp://host1:61616
     [java] 22:39:55 WARN  Could not start network bridge between: vm://localhost and: tcp://host1:61616 due to: java.net.UnknownHostExcepti
on: host1
     [java] 22:39:55 INFO  localhost bridge to Unknown stopped
     [java] 22:39:55 ERROR Could not accept connection : org.apache.activemq.transport.TransportDisposedIOException: Peer (vm://localhost#54
) disposed.

Testcase also attached.","Visible on Windows XP and Linux, JDK 1.5 & JDK 1.6",,,,,,,,,,,,,,21/Sep/07 10:52 PM;davestanley;testcase.zip;https://issues.jboss.org/secure/attachment/12368544/testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,5.0,,1|hzk6w7:,178098,,,,,,,,22/Sep/07 4:41 AM;rajdavies;This is expected behaviour - why is it raised as a bug?,"28/Sep/07 3:50 PM;davestanley;Really this bug is for the case where your trying to setup a cluster of network brokers:

The broker is trying to be helpful, but its creating way too much noise. This current log message should be logged at DEBUG level or have some kind of backoff for the frequency that it logs the message. 

I think it would be nice if the broker logged a connected summary at INFO (with a default of once every 30 seconds/60 seconds) but the frequency of this message should be configurable. Maybe it should only log if one or more brokers is not contactable.

Example:
[java] 22:39:55 INFO  Cannot connect to the following brokers:
 broker1: (no cx for 2 hours 10 minutes, 200 retries) broker12 (no cx for 5 minutes, 20 retries)
[java] 22:39:55 INFO  Connected to the following brokers:
 broker2, broker3, broker4, broker5, broker6, broker9 

In general is there a backoff ratio/retry configuration for network connectors. If not this would also be helpful when building larger activemq clusters.

 

",28/Sep/07 4:09 PM;davestanley;It looks like there is a significant memory leak each time it cannot connect also.,28/Sep/07 4:42 PM;davestanley;Added http://open.iona.com/issues/browse/MB-255 for the leak,"05/Nov/07 12:13 PM;chirino;Logging has been reduced.  The Exception is now only showing if DEBUG logging is enabled.
The static discovery agent now has the reconnect back-off enabled.  It will initialy try to reconnect every 1 second be slow down to every 30 seconds as more reconnect failures occur.",,,,,,,,,,,,,,,
 Programmatic TransportConnector with JMX,MB-249,12515679,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Cannot Reproduce Bug,chirino,davestanley,davestanley,13/Sep/07 10:48 PM,19/Sep/07 12:36 PM,29/Nov/16 4:17 PM,18/Sep/07 12:38 PM,fuse-4.1.2.5,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,"(Logged on Behalf of PedroNeveu)

Description: 
 
If a connector is added to the broker programmatically using the addConnector() API then even though the connector starts it is not visible in JMX.  It looks like it cannot be managed if started that way.  Using netstat it can be seen that the connector has started and is listening on the right port.
 
connector = brokerService.addConnector(url);
 
As a testcase i have have removed the ""stomp"" connector from the activemq.xml file.  Then i changed the \example\src\EmbeddedBroker.java to:
========================
public class EmbeddedBroker {
    public static void main(String[] args) throws Exception {
        BrokerService broker = new BrokerService();
        broker.setUseJmx(true);
        broker.addConnector(""stomp://localhost:61626"");
        broker.start();
 
        // now lets wait forever to avoid the JVM terminating immediately
        Object lock = new Object();
        synchronized (lock) {
            lock.wait();
        }
    }
========================
 
After i start activemq (using activemq.bat) i can confirm using jconsole that the ""stomp"" connector is not started.  Then i ran the embededBroker example and using netstat i can see that ""stomp"" is started and listening.  However, jconsole doesn't reflect that.
 
","ActiveMQ 4.1, Windows XP, JDK 1.5",,,,,,,,,,,,,,18/Sep/07 1:57 PM;davestanley;EmbeddedBroker.java;https://issues.jboss.org/secure/attachment/12368538/EmbeddedBroker.java,18/Sep/07 12:51 PM;chirino;Picture 2.png;https://issues.jboss.org/secure/attachment/12368536/Picture+2.png,18/Sep/07 1:57 PM;davestanley;activemq.xml;https://issues.jboss.org/secure/attachment/12368539/activemq.xml,18/Sep/07 1:57 PM;davestanley;spring-embedded-pooled.xml;https://issues.jboss.org/secure/attachment/12368537/spring-embedded-pooled.xml,,,,,,,,,,,,,,,,,,,,,,,4.0,6.0,,1|hzk6tb:,178085,,,,,,,,"18/Sep/07 12:38 PM;chirino;Hi if you are trying to run the \example\src\EmbeddedBroker.java example please do not use the activemq.bat.

change directory to the \example directory and run:
ant embedBroker

Regards,
Hiram",18/Sep/07 12:51 PM;chirino;Attaching Picture of my jconsole.  Shows that it does show up.,"18/Sep/07 1:55 PM;davestanley;Hiram,
Apologies. The testcase is not sufficient. It looks like the problem is specific to starting the broker with spring. I have attached a modified embeded broker and spring config file.

To reproduce:
1) Copy spring config file to <examples>\conf
2) Overwrite embeded broker with attached.
3) Remove stomp connector from example activemq.xml as shown:

   <transportConnectors>
      <transportConnector uri=""tcp://localhost:61616""/>
      
      <!--transportConnector uri=""stomp://localhost:61613""/ -->
    </transportConnectors>

4) Run ant embededBroker 
5) Connect with jconsole.

6) Note the tcp connector is visible in jconsole, but the stomp connector that was added in dynamically in embededBroker.java is not visible.

Thanks
/Dave","19/Sep/07 10:16 AM;chirino;Hi Dave,

The problem is occuring because the spring broker hooks into the spring application context lifecycle so that it can start the broker once spring configure the broker.  So in your java code the broker had already been started up by the time you do an addConnector() call.

To avoid this from happening you should add a start=""false"" attribute to the broker configuration.  Something like:
  <broker xmlns=""http://activemq.org/config/1.0"" useJmx=""true"" start=""false"">

This way the broker is not automatically started and you can continue to configure it in java code before manually starting it.",19/Sep/07 10:49 AM;davestanley;Thanks Hiram.. will test it out.,19/Sep/07 12:36 PM;davestanley;That was it. Thanks.,,,,,,,,,,,,,,
Temp queue creation and use race condition,MB-248,12515678,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,davestanley,davestanley,13/Sep/07 5:20 PM,19/Sep/07 1:02 PM,29/Nov/16 4:17 PM,19/Sep/07 1:02 PM,5.0.0.2-fuse,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"There appears to be a race condition between the creation of a temp queue on one connection, and having another connection send a message to that same temp queue. 

How to reproduce:

1. Create a Connection1, Session1, and Producer1
2. Create Connection2, Session2, and TempQueue
3. Send to TempQueue from Producer

This usually works, but sometimes it fails with a stack trace like the following:

JUnit version 4.4
.Sep 13, 2007 5:18:06 PM org.apache.activemq.broker.BrokerService start
INFO: Using Persistence Adapter: MemoryPersistenceAdapter
Sep 13, 2007 5:18:06 PM org.apache.activemq.broker.BrokerService getBroker
INFO: ActiveMQ null JMS Message Broker (localhost) is starting
Sep 13, 2007 5:18:06 PM org.apache.activemq.broker.BrokerService getBroker
INFO: For help or more information please see: http://activemq.apache.org/
Sep 13, 2007 5:18:06 PM org.apache.activemq.broker.BrokerService start
INFO: ActiveMQ JMS Message Broker (localhost, ID:DSTANLEY505R-1417-1189718286493-0:0) started
Sep 13, 2007 5:18:06 PM org.apache.activemq.broker.TransportConnector start
INFO: Connector vm://localhost Started
Failed on iteration 86
E
Time: 1.479
There was 1 failure:
1) testCreateTempQueueAndSend(TempQueueMissingTest)
javax.jms.JMSException: Cannot publish to a deleted Destination: temp-queue://ID:DSTANLEY505R-1417-1189718286493-2:87:1
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1572)
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:226)
        at org.apache.activemq.ActiveMQMessageProducerSupport.send(ActiveMQMessageProducerSupport.java:299)
        at TempQueueMissingTest.testCreateTempQueueAndSend(TempQueueMissingTest.java:50)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at junit.framework.TestCase.runTest(TestCase.java:168)
        at junit.framework.TestCase.runBare(TestCase.java:134)
        at junit.framework.TestResult$1.protect(TestResult.java:110)
        at junit.framework.TestResult.runProtected(TestResult.java:128)
        at junit.framework.TestResult.run(TestResult.java:113)
        at junit.framework.TestCase.run(TestCase.java:124)
        at junit.framework.TestSuite.runTest(TestSuite.java:232)
        at junit.framework.TestSuite.run(TestSuite.java:227)
        at org.junit.internal.runners.JUnit38ClassRunner.run(JUnit38ClassRunner.java:81)
        at org.junit.internal.runners.CompositeRunner.runChildren(CompositeRunner.java:33)
        at org.junit.internal.runners.CompositeRunner.run(CompositeRunner.java:28)
        at org.junit.runner.JUnitCore.run(JUnitCore.java:130)
        at org.junit.runner.JUnitCore.run(JUnitCore.java:109)
        at org.junit.runner.JUnitCore.run(JUnitCore.java:100)
        at org.junit.runner.JUnitCore.runMain(JUnitCore.java:81)
        at org.junit.runner.JUnitCore.main(JUnitCore.java:44)

FAILURES!!!
Tests run: 1,  Failures: 1

My best guess is that the temp queue has not yet shown up in the ActiveMQConnection's activeTempDestinations map, so it throws this error.

Attached is a TestCase that reproduces it. It will try to send 10,000 times, it always seems to fail before it can complete.


","Fuse 5.0, trunk",,,,,,,,,,,,,,13/Sep/07 8:36 PM;davestanley;Testcase.zip;https://issues.jboss.org/secure/attachment/12368535/Testcase.zip,,,,,,,,,,,,,,,,,,,,,,,,,,1.0,3.0,,1|hzk6tj:,178086,,,,,,,,"13/Sep/07 8:36 PM;davestanley;Testcase attached.

To reproduce:

1. Set junit.jar, activemq jar and commons logging on classpath.

2. Run
    java org.junit.runner.JUnitCore TempQueueMissingTest 

3. Should see stack trace after a couple of seconds.","18/Sep/07 9:16 AM;chirino;This is a known issue.  Usually not seen in the wild because a temp queue from Connection2 cannot usually be accessed by Connection1 until Connection2 has sent a message to a consumer on  Connection1 where the reply to has been set to be the temp destination.  By the time Connection1 receives that message it's activeTempDestinations will be properly filled out.

But if there is a flag that can be enabled that will disable validating that the temp destination exists.  Just set the watchTopicAdvisories property on the connection factory to false.  either:

{code}
ActiveMQConnectionFactory factory = new ActiveMQConnectionFactory(""tcp://localhost:61616?jms.watchTopicAdvisories=false"");
{code}

or 

{code}
ActiveMQConnectionFactory factory = ...
factory.setWatchTopicAdvisories(true);
{code}","19/Sep/07 1:02 PM;davestanley;Hiram, thanks this setting fixed the problem. ",,,,,,,,,,,,,,,,,
Closed STOMP connection are not properly being released by the broker / JMS Clients hang at initial connection,MB-247,12515677,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,15/Aug/07 1:04 PM,28/Aug/07 6:26 PM,29/Nov/16 4:17 PM,15/Aug/07 1:55 PM,fuse-4.1.0.0,fuse-4.1.0.1,fuse-4.1.0.10,fuse-4.1.0.2,fuse-4.1.0.3,fuse-4.1.0.4,fuse-4.1.0.6,fuse-4.1.0.7,fuse-4.1.0.8,fuse-4.1.0.9,fuse-4.1.2.0,fuse-4.1.2.1, fuse-4.1.2.2, fuse-4.1.2.3,fuse-4.1.2.4,,,,,,5.0.0.2-fuse,fuse-4.1.0.11,fuse-4.1.2.5,,broker,,,0,,,STOMP client connections,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk6t3:,178084,,,,,,,,"15/Aug/07 1:14 PM;chirino;This problem can be reproduced if the 

StompTest.testSubscribeWithClientAck() test case is updated so that instead of sending a graceful ""DISCONNECT"" message, the stomp socket is just closed.","28/Aug/07 6:26 PM;chirino;If a socket exception occurs before the InactivityMonitor negociates a wireformat (in the STOMP case it never is negociated), exceptions from the socket layer are blocked from reaching the JMS client/Broker.

The results are broker will not release the failed STOMP connections and JMS clients who fail before the wire format is negotiated will become blocked and never finish initiating the connection.",,,,,,,,,,,,,,,,,,
Destination statistics message count is not decremented after message expired,MB-179,12515643,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-879|https://issues.apache.org/activemq/browse/AMQ-879]

After consuming an expired message from a queue, the destination statistics messages count is not decremented. See also the included test case.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5xr:,177943,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Bug in STOMP transport unsubscribe,MB-178,12515600,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1077|https://issues.apache.org/activemq/browse/AMQ-1077]

After several ubscribe/unsubscribe commands to activemq, subscribtions are not removed and there's error log in the broker: 
java.lang.IllegalStateException: Cannot remove a consumer that had not been registered: ID:das-32775-1164773607925-3:1881:-1:2
        at org.apache.activemq.broker.AbstractConnection.processRemoveConsumer(AbstractConnection.java:551)
        at org.apache.activemq.command.RemoveInfo.visit(RemoveInfo.java:64)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:61)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:70)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:112)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompUnsubscribe(ProtocolConverter.java:376)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:144)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:60)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)

The problem is that there's internal map of subscriptions in ProtocolConverter class. On unsubscribe command, subscription is not removed from this internal map. Attached patch (against ProtocolConverter.java) fixes this bug
","linux 2.6, java 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5y7:,177945,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Failing to acquire exclusive lock - MySQL and other strange errors,MB-177,12515535,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1236|https://issues.apache.org/activemq/browse/AMQ-1236]

The issue prevents us from using AMQ 
discussion http://www.nabble.com/Failing-to-acquire-exclusive-lock---MySQL-t3598830s2354.html#a10051767

I'm new to ActiveMQ so probably I misconfigure it somehow.
Problem: I'm trying to setup jdbcPersistenceAdapter in AMQ 4.1.1 to store journal into the MySQL 5.0.24 with Connector mysql-connector-java-5.0.4 under Windows XP
My config file is very simple

------------------------CONFIG-------------------------------

<beans>

  <!-- Allows us to use system properties as variables in this configuration file -->
  <bean class=""org.springframework.beans.factory.config.PropertyPlaceholderConfigurer""/>
 
  <broker brokerName=""localhost"" useJmx=""true"" xmlns=""http://activemq.org/config/1.0"">
 
    <!--  Use the following to set the broker memory limit
    <memoryManager>  
        <usageManager id=""memory-manager"" limit=""20 MB""/>
    </memoryManager>
    -->
   
    <!-- Use the following to configure how ActiveMQ is exposed in JMX
    <managementContext>
       <managementContext connectorPort=""1099"" jmxDomainName=""org.apache.activemq""/>
    </managementContext>
    -->

 
 
    <persistenceAdapter>
      <jdbcPersistenceAdapter dataSource=""#mysql-ds""/>
    </persistenceAdapter>
 
    <transportConnectors>
       <transportConnector name=""openwire"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>
       <transportConnector name=""ssl""     uri=""ssl://localhost:61617""/>
       <transportConnector name=""stomp""   uri=""stomp://localhost:61613""/>
    </transportConnectors>
   
    <networkConnectors>
      <!-- by default just auto discover the other brokers -->
      <networkConnector name=""default-nc"" uri=""multicast://default""/>
      <!--
      <networkConnector name=""host1 and host2"" uri=""static://(tcp://host1:61616,tcp://host2:61616)"" failover=""true""/>
      -->
    </networkConnectors>
   
  </broker>
 
  <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
    <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
    <property name=""url"" value=""jdbc:mysql://localhost/sonoportal?relaxAutoCommit=true&profileSQL=true""/>
    <property name=""username"" value=""root""/>
    <property name=""password"" value=""""/>
    <property name=""poolPreparedStatements"" value=""true""/>
  </bean>

</beans>
------------------------ END CONFIG-------------------------------

I've also set profileSQL=true to be able to debug the reason of the problem
As a result I have following error log in ActiveMQ window console


---------------------------- LOG ---------------------------------


D:\java\tools\apache-activemq-4.1.1\bin>activemq.bat
ACTIVEMQ_HOME: D:\java\tools\apache-activemq-4.1.1\bin\..
ACTIVEMQ_BASE: D:\java\tools\apache-activemq-4.1.1\bin\..
Loading message broker from: xbean:activemq.xml
INFO  BrokerService                  - ActiveMQ 4.1.1 JMS Message Broker (localhost) is starting
INFO  BrokerService                  - For help or more information please see: http://incubator.apache.org/activemq/
INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET NAMES latin1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 47 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET character_set_results = NULL
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1, message: SHOW VARIABLES
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 1, resultset-id: 1, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW VARIABLES

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.loadServerVariables(Connection.java:4317)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3936)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:881)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:855)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2, message: SHOW COLLATION
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 2, resultset-id: 2, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW COLLATION

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.buildCollationMapping(Connection.java:1645)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3938)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.dbcp.BasicDataSource.validateConnectionFactory(BasicDataSource.java:881)
        at org.apache.commons.dbcp.BasicDataSource.createDataSource(BasicDataSource.java:855)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 312, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 16 ms, connection-id: 312, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET NAMES latin1
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET character_set_results = NULL
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3, message: SHOW VARIABLES
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 3, resultset-id: 3, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW VARIABLES

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.loadServerVariables(Connection.java:4317)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3936)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4, message: SHOW COLLATION
Wed Apr 25 14:38:19 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4
Wed Apr 25 14:38:19 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 4, resultset-id: 4, message: The following query was executed with a bad index, use 'EXPLAIN' for more deta
ils: SHOW COLLATION

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.Connection.buildCollationMapping(Connection.java:1645)
        at com.mysql.jdbc.Connection.initializePropsFromServer(Connection.java:3938)
        at com.mysql.jdbc.Connection.createNewIO(Connection.java:2683)
        at com.mysql.jdbc.Connection.<init>(Connection.java:1531)
        at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:266)
        at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java:37)
        at org.apache.commons.dbcp.PoolableConnectionFactory.makeObject(PoolableConnectionFactory.java:290)
        at org.apache.commons.pool.impl.GenericObjectPool.borrowObject(GenericObjectPool.java:771)
        at org.apache.commons.dbcp.PoolingDataSource.getConnection(PoolingDataSource.java:95)
        at org.apache.commons.dbcp.BasicDataSource.getConnection(BasicDataSource.java:544)
        at org.apache.activemq.store.jdbc.TransactionContext.getConnection(TransactionContext.java:55)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.createAdapter(JDBCPersistenceAdapter.java:297)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.getAdapter(JDBCPersistenceAdapter.java:251)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:152)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DriverConnectionFactory.createConnection(DriverConnectionFactory.java
:37) duration: 0 ms, connection-id: 0, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
INFO  JDBCPersistenceAdapter         - Database driver recognized: [mysql-ab_jdbc_driver]
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET SESSION TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setTransactionIsolation(DelegatingConnection.jav
a:224) duration: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5, message: SHOW FULL TABLES FROM `sonoportal` LIKE 'ACTIVEMQ_MSGS'
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5
Wed Apr 25 14:38:20 EEST 2007 WARN: Profiler Event: [WARN]      at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.j
ava:72) duration: 0 ms, connection-id: 313, statement-id: 5, resultset-id: 5, message: The following query was executed with a bad index, use 'EXPLAIN' for more
 details: SHOW FULL TABLES FROM `sonoportal` LIKE 'ACTIVEMQ_MSGS'

Full stack trace of location where event occurred:



** BEGIN NESTED EXCEPTION **

java.lang.Throwable

STACKTRACE:

java.lang.Throwable
        at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:1785)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3170)
        at com.mysql.jdbc.Connection.execSQL(Connection.java:3099)
        at com.mysql.jdbc.Statement.executeQuery(Statement.java:1169)
        at com.mysql.jdbc.DatabaseMetaData$9.forEach(DatabaseMetaData.java:4379)
        at com.mysql.jdbc.DatabaseMetaData$IterateBlock.doForAll(DatabaseMetaData.java:76)
        at com.mysql.jdbc.DatabaseMetaData.getTables(DatabaseMetaData.java:4357)
        at org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doCreateTables(DefaultJDBCAdapter.java:72)
        at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:159)
        at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
        at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
        at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:202)
        at org.apache.activemq.console.Main.main(Main.java:91)


** END NESTED EXCEPTION **



Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: commit
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.commit(DelegatingConnection.java:203) duration:
0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220) duration
: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: rollback
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.rollback(DelegatingConnection.java:220) duration
: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=1
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0, message: SET autocommit=0
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingConnection.setAutoCommit(DelegatingConnection.java:221) dur
ation: 0 ms, connection-id: 313, statement-id: 999, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:20 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:21 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:21 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:22 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:22 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0
INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
Wed Apr 25 14:38:23 EEST 2007 INFO: Profiler Event: [QUERY]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0, message: LOCK TABLE ACTIVEMQ_LOCK WRITE
Wed Apr 25 14:38:23 EEST 2007 INFO: Profiler Event: [FETCH]     at org.apache.commons.dbcp.DelegatingPreparedStatement.execute(DelegatingPreparedStatement.java:
117) duration: 0 ms, connection-id: 313, statement-id: 8, resultset-id: 0



---------------------------- END LOG ---------------------------------


All mentioned in errors commands are easily executed from MySQL Console. Tables are get created in the schema, I've no idea about what problem is. Has anyone tried to run it with MySQL persistence?

Thanks in advance for any help.

",AMQ 4.1.1 MySQL 5.0.24 mysql-connector-java-5.0.4 under Windows XP,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5w7:,177936,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"Kaha crashes after database recovery looking for ""data--2""",MB-176,12515521,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1264|https://issues.apache.org/activemq/browse/AMQ-1264]

  There is a problem when using the default persistence settings, and ActiveMQ is shutdown uncleanly with messages in a queue.  After a restart (and log recovery), and attempt to read a message out of the queue, generates the following error (and ActiveMQ hangs).

  It appears that there are too many ""-"" in a concatenation somewhere, as the logfiles are ""data-1"", ""data-2"", etc, not ""data--1"", which is probably is what is generating the exception.

  This is with 4.2-SNAPSHOT-20070602.


ERROR AsyncDataManager               - Looking for key 1 but not found in fileMap: {3=data-3 number = 3 , length = 9051046 refCount = 3}
ERROR QueueStorePrefetch             - Failed to fill batch
java.io.IOException: Failed to read to journal for: offset = 20785811, file = 1, size = -1, type = 0. Reason: java.io.IOException: Could not locate data file data--1
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.createReadException(AMQPersistenceAdapter.java:529)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:409)
        at org.apache.activemq.store.amq.AMQMessageStore.getMessage(AMQMessageStore.java:382)
        at org.apache.activemq.store.amq.RecoveryListenerAdapter.recoverMessageReference(RecoveryListenerAdapter.java:52)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recover(KahaReferenceStore.java:63)
        at org.apache.activemq.store.kahadaptor.KahaReferenceStore.recoverNextMessages(KahaReferenceStore.java:89)
        at org.apache.activemq.store.amq.AMQMessageStore.recoverNextMessages(AMQMessageStore.java:477)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.fillBatch(QueueStorePrefetch.java:159)
        at org.apache.activemq.broker.region.cursors.QueueStorePrefetch.hasNext(QueueStorePrefetch.java:110)
        at org.apache.activemq.broker.region.cursors.StoreQueueCursor.hasNext(StoreQueueCursor.java:122)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1007)
        at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:992)
        at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:215)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:241)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:341)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:79)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:87)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:97)
        at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:566)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:313)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:282)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.stomp.StompTransportFilter.sendToActiveMQ(StompTransportFilter.java:81)
        at org.apache.activemq.transport.stomp.ProtocolConverter.sendToActiveMQ(ProtocolConverter.java:119)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompSubscribe(ProtocolConverter.java:351)
        at org.apache.activemq.transport.stomp.ProtocolConverter.onStompCommad(ProtocolConverter.java:149)
        at org.apache.activemq.transport.stomp.StompTransportFilter.onCommand(StompTransportFilter.java:71)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Could not locate data file data--1
        at org.apache.activemq.kaha.impl.async.AsyncDataManager.getDataFile(AsyncDataManager.java:259)
        at org.apache.activemq.kaha.impl.async.AsyncDataManager.read(AsyncDataManager.java:477)
        at org.apache.activemq.store.amq.AMQPersistenceAdapter.readCommand(AMQPersistenceAdapter.java:406)
        ... 30 more","apache-activemq-4.2-20070602

tom@light:~/activemq$ java -version
java version ""1.5.0""
Java(TM) 2 Runtime Environment, Standard Edition (build diablo-1.5.0-b01)
Java HotSpot(TM) Server VM (build diablo-1.5.0_07-b01, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5wf:,177937,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
JMX Registration Issue,MB-175,12515659,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-680|https://issues.apache.org/activemq/browse/AMQ-680]

After creating a new destination, rapid multithreaded MessageProducer.send's cause JMX registration conflict.  Two or more MessageProducers attempt to register the newly created destination with JMX, hence raising the InstanceAlreadyExistsException.

16:05:57,609 ERROR [ManagedRegionBroker] Failed to register destination topic://
clientRecordQuery-1144357557593-41
javax.management.InstanceAlreadyExistsException: org.apache.activemq:BrokerName=
localhost,Type=Topic,Destination=clientRecordQuery-1144357557593-41 already regi
stered.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5wn:,177938,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Deadlock in ActiveMQ Failover Worker,MB-174,12515640,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-897|https://issues.apache.org/activemq/browse/AMQ-897]



Full thread dump Java HotSpot(TM) Client VM (1.5.0_06-b05 mixed mode, sharing):

""ActiveMQ Transport: tcp://XXX/XXX:61616"" prio=1 tid=0x08091510 nid=0x2f4c waiting for monitor entry [0xafdc9000..0xafdca130]
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportInterupted(DemandForwardingBridgeSupport.java:134)
        - waiting to lock <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:53)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:111)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
        at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:100)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:156)
        at java.lang.Thread.run(Thread.java:595)

""Thread-7"" daemon prio=1 tid=0x085263d8 nid=0x2f4b waiting for monitor entry [0xafe4b000..0xafe4b1b0]
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:335)
        - waiting to lock <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startRemoteBridge(DemandForwardingBridgeSupport.java:235)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$4.run(DemandForwardingBridgeSupport.java:197)

""ActiveMQ Transport: tcp:///127.0.0.1:40496"" daemon prio=1 tid=0x0851c070 nid=0x2f3c runnable [0xafac3000..0xafac3fb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 9847682"" daemon prio=1 tid=0x0851bc30 nid=0x2f3b in Object.wait() [0xafb44000..0xafb45030]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x37849a98> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///127.0.0.1:40386"" daemon prio=1 tid=0x0855b060 nid=0x2b0e runnable [0xb06db000..0xb06dc1b0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 11854491"" daemon prio=1 tid=0x085110d8 nid=0x2b0d in Object.wait() [0xafbc5000..0xafbc5e30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36406180> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36406180> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///127.0.0.1:40385"" daemon prio=1 tid=0x0855bfe0 nid=0x2b09 runnable [0xb0af6000..0xb0af6eb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 14732323"" daemon prio=1 tid=0x085822e8 nid=0x2b07 in Object.wait() [0xb0bf8000..0xb0bf8f30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36408358> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36408358> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///127.0.0.1:40381"" daemon prio=1 tid=0x0855aec0 nid=0x2af1 runnable [0xb0a75000..0xb0a75fb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 2804837"" daemon prio=1 tid=0x0850ad00 nid=0x2af0 in Object.wait() [0xb0cfc000..0xb0cfd030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x3640a530> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x3640a530> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///10.7.93.117:47626"" daemon prio=1 tid=0x08092be8 nid=0x2ad9 runnable [0xafcc7000..0xafcc81b0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 5165021"" daemon prio=1 tid=0x08092600 nid=0x2ad8 in Object.wait() [0xafd48000..0xafd48e30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x3640c708> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x3640c708> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///XXX:49524"" daemon prio=1 tid=0x08094ef0 nid=0x2a9d runnable [0xafecb000..0xafecbfb0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 10884088"" daemon prio=1 tid=0x08093c20 nid=0x2a9c in Object.wait() [0xaff4c000..0xaff4d030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x3640e8e0> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x3640e8e0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport: tcp:///XXX:49523"" daemon prio=1 tid=0x08093e90 nid=0x2a9b runnable [0xaffcd000..0xaffce0b0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 30810736"" daemon prio=1 tid=0x08526ca8 nid=0x2a9a in Object.wait() [0xb004e000..0xb004f130]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36410ab8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36410ab8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x08524730 nid=0x2a99 waiting for monitor entry [0xb00cf000..0xb00d01b0]
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportInterupted(DemandForwardingBridgeSupport.java:134)
        - waiting to lock <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:98)
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:223)
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:53)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:111)
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:94)
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:120)
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:149)
        at org.apache.activemq.transport.InactivityMonitor.readCheck(InactivityMonitor.java:101)
        at org.apache.activemq.transport.InactivityMonitor.access$000(InactivityMonitor.java:35)
        at org.apache.activemq.transport.InactivityMonitor$1.run(InactivityMonitor.java:51)
        at edu.emory.mathcs.backport.java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:431)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.runAndReset(FutureTask.java:198)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.runPeriodic(ScheduledThreadPoolExecutor.java:189)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:213)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp:///XXX:49522"" daemon prio=1 tid=0x08520f28 nid=0x2a98 runnable [0xb0150000..0xb0150e30]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 9363478"" daemon prio=1 tid=0x0851d400 nid=0x2a97 in Object.wait() [0xb01d1000..0xb01d1eb0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36412dd0> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36412dd0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x08527a88 nid=0x2a96 in Object.wait() [0xb0252000..0xb0252f30]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x08527360 nid=0x2a95 in Object.wait() [0xb02d3000..0xb02d3fb0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp:///XXX:49521"" daemon prio=1 tid=0x0851fc98 nid=0x2a94 runnable [0xb0354000..0xb0355030]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Connection Dispatcher: 15779934"" daemon prio=1 tid=0x0851f950 nid=0x2a93 in Object.wait() [0xb04d7000..0xb04d80b0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x364150a8> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x364150a8> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x083acc68 nid=0x2a90 in Object.wait() [0xb03d5000..0xb03d61b0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Scheduler"" daemon prio=1 tid=0x083ac700 nid=0x2a8f in Object.wait() [0xb0456000..0xb0456e30]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:432)
        at edu.emory.mathcs.backport.java.util.concurrent.TimeUnit.timedWait(TimeUnit.java:301)
        at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:156)
        - locked <0x36410b38> (a java.lang.Object)
        at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:590)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:477)
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:674)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport: tcp://XXX/10.7.93.117:61616"" prio=1 tid=0x083ad3d0 nid=0x2a8d runnable [0xb0558000..0xb0558f30]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Failover Worker: 2891371"" daemon prio=1 tid=0xb0e0f1c0 nid=0x2a8c in Object.wait() [0xb05d9000..0xb05d9fb0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36417380> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36417380> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Connection Dispatcher: 21350489"" daemon prio=1 tid=0xb0e0d788 nid=0x2a8b in Object.wait() [0xb065a000..0xb065b030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36417400> (a java.lang.Object)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:91)
        - locked <0x36417400> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Failover Worker: 5862378"" daemon prio=1 tid=0xb0e0ea00 nid=0x2a89 waiting for monitor entry [0xb076f000..0xb0770130]
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:43)
        - waiting to lock <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportResumed(DemandForwardingBridgeSupport.java:164)
        - locked <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:175)
        - locked <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Connection Dispatcher: 12115695"" daemon prio=1 tid=0xb0e0a718 nid=0x2a88 in Object.wait() [0xb07f0000..0xb07f11b0]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:474)
        at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:179)
        - locked <0x382fb880> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.waitStarted(DemandForwardingBridgeSupport.java:836)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:462)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:116)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:97)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
        at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x36417648> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:211)
        at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:581)
        at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:597)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)

""ActiveMQ Transport Status Monitor: vm://localhost"" daemon prio=1 tid=0xb0e08090 nid=0x2a87 waiting on condition [0xb0871000..0xb0871e30]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Status Monitor: stomp"" daemon prio=1 tid=0xb0e01fb0 nid=0x2a86 waiting on condition [0xb08f2000..0xb08f2eb0]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Server: tcp://XXX:61613?wireFormat=stomp"" daemon prio=1 tid=0xb0e01ab0 nid=0x2a85 runnable [0xb0973000..0xb0973f30]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36417840> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:123)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Status Monitor: default"" daemon prio=1 tid=0xb0e00f48 nid=0x2a84 waiting on condition [0xb09f4000..0xb09f4fb0]
        at java.lang.Thread.sleep(Native Method)
        at org.apache.activemq.broker.TransportStatusDetector.run(TransportStatusDetector.java:98)
        at java.lang.Thread.run(Thread.java:595)

""ActiveMQ Transport Server: tcp://XXX:61616"" daemon prio=1 tid=0xb0e01630 nid=0x2a83 runnable [0xb1061000..0xb1062030]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36417a10> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at org.apache.activemq.transport.tcp.TcpTransportServer.run(TcpTransportServer.java:123)
        at java.lang.Thread.run(Thread.java:595)

""RMI LeaseChecker"" daemon prio=1 tid=0x08586318 nid=0x2a80 waiting on condition [0xb0b78000..0xb0b781b0]
        at java.lang.Thread.sleep(Native Method)
        at sun.rmi.transport.DGCImpl$LeaseChecker.run(DGCImpl.java:310)
        at java.lang.Thread.run(Thread.java:595)

""RMI RenewClean-[XXX:40355]"" daemon prio=1 tid=0x0850cd08 nid=0x2a7e in Object.wait() [0xb0c79000..0xb0c79eb0]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x36417bc0> (a java.lang.ref.ReferenceQueue$Lock)
        at sun.rmi.transport.DGCClient$EndpointEntry$RenewCleanThread.run(DGCClient.java:500)
        at java.lang.Thread.run(Thread.java:595)

""GC Daemon"" daemon prio=1 tid=0x0857f9d0 nid=0x2a7c in Object.wait() [0xb0d7d000..0xb0d7dfb0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x364035b8> (a sun.misc.GC$LatencyLock)
        at sun.misc.GC$Daemon.run(GC.java:100)
        - locked <0x364035b8> (a sun.misc.GC$LatencyLock)

""RMI Reaper"" prio=1 tid=0x0857ea58 nid=0x2a7b in Object.wait() [0xb0dfe000..0xb0dff030]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x363ffae8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x363ffae8> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at sun.rmi.transport.ObjectTable$Reaper.run(ObjectTable.java:336)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-0"" daemon prio=1 tid=0x0857b1c8 nid=0x2a7a runnable [0xb0fe0000..0xb0fe10b0]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36403220> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:334)
        at java.lang.Thread.run(Thread.java:595)

""RMI TCP Accept-1099"" daemon prio=1 tid=0x084fae08 nid=0x2a78 runnable [0xb10e2000..0xb10e31b0]
        at java.net.PlainSocketImpl.socketAccept(Native Method)
        at java.net.PlainSocketImpl.accept(PlainSocketImpl.java:384)
        - locked <0x36400498> (a java.net.SocksSocketImpl)
        at java.net.ServerSocket.implAccept(ServerSocket.java:450)
        at java.net.ServerSocket.accept(ServerSocket.java:421)
        at sun.rmi.transport.tcp.TCPTransport.run(TCPTransport.java:334)
        at java.lang.Thread.run(Thread.java:595)

""Timer-0"" daemon prio=1 tid=0x084fa780 nid=0x2a77 in Object.wait() [0xb1163000..0xb1163e30]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x363ffc10> (a java.util.TaskQueue)
        at java.lang.Object.wait(Object.java:474)
        at java.util.TimerThread.mainLoop(Timer.java:483)
        - locked <0x363ffc10> (a java.util.TaskQueue)
        at java.util.TimerThread.run(Timer.java:462)

""Low Memory Detector"" daemon prio=1 tid=0x080a3688 nid=0x2a75 runnable [0x00000000..0x00000000]

""CompilerThread0"" daemon prio=1 tid=0x080a20e0 nid=0x2a74 waiting on condition [0x00000000..0xb1e52998]

""Signal Dispatcher"" daemon prio=1 tid=0x080a1168 nid=0x2a73 runnable [0x00000000..0x00000000]

""Finalizer"" daemon prio=1 tid=0x0809a3d8 nid=0x2a72 in Object.wait() [0xb2154000..0xb21550b0]
        at java.lang.Object.wait(Native Method)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:116)
        - locked <0x36390738> (a java.lang.ref.ReferenceQueue$Lock)
        at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:132)
        at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:159)

""Reference Handler"" daemon prio=1 tid=0x08099680 nid=0x2a71 in Object.wait() [0xb21d6000..0xb21d6130]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Object.java:474)
        at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:116)
        - locked <0x36390680> (a java.lang.ref.Reference$Lock)

""main"" prio=1 tid=0x0805cac8 nid=0x2a68 in Object.wait() [0xbfffc000..0xbfffd1a8]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x36417cd0> (a [Z)
        at java.lang.Object.wait(Object.java:474)
        at org.apache.activemq.console.command.StartCommand.waitForShutdown(StartCommand.java:106)
        - locked <0x36417cd0> (a [Z)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:67)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:49)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:81)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:49)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:45)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:135)
        at org.apache.activemq.console.Main.main(Main.java:67)

""VM Thread"" prio=1 tid=0x08096ae8 nid=0x2a70 runnable 

""VM Periodic Task Thread"" prio=1 tid=0x080a4b70 nid=0x2a76 waiting on condition 


Found one Java-level deadlock:
=============================
""ActiveMQ Failover Worker: 5862378"":
  waiting to lock monitor 0x0809c22c (object 0x36579610, a java.lang.Object),
  which is held by ""Thread-7""
""Thread-7"":
  waiting to lock monitor 0x0809c2ac (object 0x365793b0, a java.lang.Object),
  which is held by ""ActiveMQ Failover Worker: 5862378""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Failover Worker: 5862378"":
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:43)
        - waiting to lock <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.transportResumed(DemandForwardingBridgeSupport.java:164)
        - locked <0x3654b290> (a org.apache.activemq.network.DemandForwardingBridgeSupport$2)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.TransportFilter.transportResumed(TransportFilter.java:102)
        at org.apache.activemq.transport.failover.FailoverTransport$2.iterate(FailoverTransport.java:175)
        - locked <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:87)
        at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
        at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)
""Thread-7"":
        at org.apache.activemq.transport.failover.FailoverTransport.oneway(FailoverTransport.java:335)
        - waiting to lock <0x365793b0> (a java.lang.Object)
        at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
        - locked <0x36579610> (a java.lang.Object)
        at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:60)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.startRemoteBridge(DemandForwardingBridgeSupport.java:235)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$4.run(DemandForwardingBridgeSupport.java:197)

Found 1 deadlock.
","Linux 2.6.9-34.ELsmp #1 SMP Fri Feb 24 16:54:53 EST 2006 i686 i686 i386 GNU/Linux
Dell PE 850 with 4 GB RAM and 1x dual core 3GHz Pentium D
Java HotSpot(TM) Client VM (build 1.5.0_06-b05, mixed mode, sharing)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5x3:,177940,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Upgrade to xbean 3.0 breaks build,MB-173,12515526,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1259|https://issues.apache.org/activemq/browse/AMQ-1259]

commit r542418 upgraded the xbean dependency in the activemq parent pom to 3.0.  However, the released xbean parent pom still contains SNAPSHOT references leading to a failure to build activemq unless you have the snapshots locally built.

Need to re-release the xbean pom without snapshots.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5wv:,177939,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
ActiveIO compromises java.lang.System.properties,MB-172,12515658,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-704|https://issues.apache.org/activemq/browse/AMQ-704]

When using the ActiveIO journal, it's putting a java.util.HashSet into the System.properties (using a properties.put() call that circumvents the  normal System.putProperty() method, that only allows strings).   This isn't allowed, according to java.util.Properties' contract, and therefore breaks other packages that rely on System.properties adhering to its contract.  Most notably, it chokes Hibernate; however, anything that iterates through the System properties will fail after ActiveIO has compromised it with a non-String value.

Honestly, I don't know why Properties doesn't allow non-String values, but oh well.  From the java.lang.Properties docs: 

""Because Properties inherits from Hashtable, the put and putAll methods can be applied to a Properties object. Their use is strongly discouraged as they allow the caller to insert entries whose keys or values are not Strings. The setProperty method should be used instead. If the store or save method is called on a ""compromised"" Properties object that contains a non-String key or value, the call will fail.""

The call is being made in org.apache.activeio.journal.active.ControlFile; I suppose a hack could be created that stringifies the HashSet before placing it in the properties and recreates it before getting it out again; atlernately, a simple singleton or static set could be used.  I'd be happy to implement either one, if you'd like. 

","ActiveMQ 4.0RC2 (confirmed still around in the current ActiveIO SVN),  Java 1.5 on Windows (but should be a problem anywhere).",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5vb:,177932,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
RemoveSubscriptionInfo has incorrect openwire annotation in its header,MB-171,12515513,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1284|https://issues.apache.org/activemq/browse/AMQ-1284]

The RemoveSubscriptionInfo Openwire command has the wrong annotation in its header for the type of openwire command.

Currently its

@openwire:marshaller command=""9""

Should be:

@openwire:marshaller code=""9""

This affects the clients that have commands generated using the openwire generator as they send in a command with an invalid command ID.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5vr:,177934,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Remove reference to LogicBlaze from ActiveMQ --version command ,MB-170,12515504,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1306|https://issues.apache.org/activemq/browse/AMQ-1306]

Running {{bin/activemq --version}} renders the following output: 

{quote}
ACTIVEMQ_HOME: /Users/bsnyder/apache-activemq-4.1.1
ACTIVEMQ_BASE: /Users/bsnyder/apache-activemq-4.1.1

ActiveMQ 4.1.1
For help or more information please see: http://www.logicblaze.com
{quote} 

Attached is a patch that changes the output to the following:  

{quote}
ACTIVEMQ_HOME: /Users/bsnyder/apache-activemq-4.1.1
ACTIVEMQ_BASE: /Users/bsnyder/apache-activemq-4.1.1

ActiveMQ 4.1.1
For help or more information please see: http://activemq.apache.org/
{quote} ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5vj:,177933,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Unexpected IllegalStateException when using the VMPendingQueueMessageStoragePolicy,MB-169,12515492,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1346|https://issues.apache.org/activemq/browse/AMQ-1346]

{code}
2007-07-26 21:17:19,349 [enerContainer-1] ERROR efaultMessageListenerContainer - Setup of JMS message listener invoker failed - trying to recover
javax.jms.JMSException: java.lang.IllegalStateException
	at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:46)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1229)
	at org.apache.activemq.ActiveMQSession.syncSendPacket(ActiveMQSession.java:1804)
	at org.apache.activemq.ActiveMQMessageConsumer.<init>(ActiveMQMessageConsumer.java:197)
	at org.apache.activemq.ActiveMQSession.createConsumer(ActiveMQSession.java:927)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createConsumer(AbstractPollingMessageListenerContainer.java:437)
	at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.createListenerConsumer(AbstractPollingMessageListenerContainer.java:216)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.initResourcesIfNecessary(DefaultMessageListenerContainer.java:887)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:870)
	at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:811)
	at java.lang.Thread.run(Thread.java:613)
Caused by: java.lang.IllegalStateException
	at java.util.LinkedList$ListItr.remove(LinkedList.java:590)
	at org.apache.activemq.broker.region.cursors.VMPendingMessageCursor.remove(VMPendingMessageCursor.java:88)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:1015)
	at org.apache.activemq.broker.region.Queue.doPageIn(Queue.java:996)
	at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:216)
	at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:240)
	at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:344)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:83)
	at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:86)
	at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:96)
	at org.apache.activemq.broker.TransportConnection.processAddConsumer(TransportConnection.java:561)
	at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:313)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:279)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
	at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:126)
	at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:85)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
	... 1 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5vz:,177935,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
PooledConnectionFactory / PooledSession generates UnsupportedOperationException when publishing to a topic,MB-168,12515567,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1161|https://issues.apache.org/activemq/browse/AMQ-1161]

PooledSession does not appear to use the Topic supplied to the createPublisher(topic) method. When the publish(Message) method is called on the returned TopicPublisher instance, an UnsupportedOperationException is thrown (""A destination must be specified."").
Some simple digging turns up the fact that the ActiveMQTopicPublisher instance nested inside PooledTopicPublisher gets initialized with a ProducerInfo whose destination is null. Looks like PooledSession.getTopicPublisher() is responsible for creating the publisher from the contained ActiveMQSession, but does not supply a destination (explicitly passes null).

Sample code to recreate issue (also attached is Junit test case):
		ActiveMQTopic topic = new ActiveMQTopic(""test"");
		PooledConnectionFactory pcf = new PooledConnectionFactory();
		pcf.setConnectionFactory(new ActiveMQConnectionFactory(""vm://test""));

		TopicConnection conn = (TopicConnection)pcf.createConnection();
		TopicSession session = conn.createTopicSession(false, Session.AUTO_ACKNOWLEDGE);
		TopicPublisher publisher = session.createPublisher(topic);
		publisher.publish(session.createMessage());
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5v3:,177931,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
multi-threaded issues with failover transport,MB-167,12515654,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-750|https://issues.apache.org/activemq/browse/AMQ-750]

Modified ProducerTool.java into multi-threaded test code:

This is the peudo code:

For ( thread 1 to 30 ) 
{ 
    Connection connection = createConnection(); 
    Session session = createSession(connection); 
   Producer producer = createProducer(session); 
   sendMessages(producer, 10); //each thread send 10 messages to broker, using url = failover:tcp://localhost:61616
} 

Please turn on Debug info for log4j, otherwise you will hit other threading issue before this one, when client shutting down, this exception will be thrown:
Thread-13 Sending total message: 10 Total time: 203 DONE !!!

[                     Thread-13] FailoverTransport              DEBUG Stopped.
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)
[            ActiveMQ Scheduler] InactivityMonitor              DEBUG Message sent since last write check, resetting flag
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: Connection reset
	at java.net.SocketInputStream.read(SocketInputStream.java:168)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)
[                 ActiveMQ Task] FailoverTransport              DEBUG Attempting connect to: tcp://localhost:61616


Thread-17 Sending total message: 10 Total time: 109 DONE !!!
[                     Thread-17] FailoverTransport              DEBUG Stopped.
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)


Thread-14 Sending total message: 10 Total time: 328 DONE !!!
[cp://localhost/127.0.0.1:61616] FailoverTransport              DEBUG Transport failed, starting up reconnect task
java.net.SocketException: socket closed
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.read(SocketInputStream.java:129)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:48)
	at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:55)
	at java.io.DataInputStream.readInt(DataInputStream.java:353)
	at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:274)
	at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:142)
	at java.lang.Thread.run(Thread.java:595)



","Got the June 6 code using svn, and test is run on Windows",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5uv:,177930,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"Ack range checking, etc.",MB-166,12515597,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1081|https://issues.apache.org/activemq/browse/AMQ-1081]

I'm not sure if this is serious; if not please reduce its severity.

There seem to be some confusing things happening with acknowledgments.

1. PrefetchSubscription.java does a ""range check"" on the acknowledgement.  However, when the acknowledgment gets to the JDBC or Memory TOPIC store (possibly other stores as well), it is assumed that all acknowledgements up to the last are counted.  This seems to suggest that the ""first"" part of the range should NOT be verified for >= (in other words, it should acknowledge everything from the beginning of the dispatched LinkedList to ack.getLastMessageId -- this means taking out the inAckRange variable, or acting like it is always true).  I believe this may need to happen ONLY when the prefetch is doing a topic (DurableTopicSubscription) , not a queue (QueueSubscription), but I'm totally not sure.

2. When kahaadaptor.KahaTopicMessageStore is called to do an acknowledge, it blindly does a removeFirst on the container, and never uses the MessageId parameter to do anything.  I believe it should do a getFirst, verify that that the MessageId of the ConsumerMessageRef matches the parameter, if it does not match, cancel the acknowledgement (not clear how to do this because the PrefetchSubscription.acknowledge has already done work).  In any event, crashing the subscription might be better than risking goofing up which messages have been acknowledged. (Another possibility is to walk the LinkedList looking for a match, but this doesn't seem to make sense given how PrefetchSubscription tracks the acknowledgments; I haven't fully thought this through).

3. Looks like TopicSubscription.java is ignoring all of the ID info in the ack parameter (this is the non-durable subscriber case).  Is this right?  Seems like client could just send extraneous ack messages with arbitrary IDs on a non-durable subscription and goof this up.

4.  In either durable or non-durable case, attempt by the client to ack out of sequence should error out on the client and not mess up any of the subscription state.  Most worried about the case where the messageis > than what has been delivered, not sure if the < case is a problem as long as it is just ignored without impact (which certainly does not look like the current impl in TopicSubscription.java; not sure about PrefetchSubscription.java).  It looks like this isn't being enforced, or did I miss something?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5un:,177929,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Deadlock in Queue.java,MB-165,12515606,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1070|https://issues.apache.org/activemq/browse/AMQ-1070]

It is possible to have a deadlock as follows:

""ActiveMQ Transport: tcp:///127.0.0.1:53335"":
        at org.apache.activemq.broker.region.PrefetchSubscription.add(PrefetchSubscription.java:66)
        - waiting to lock <0x90786240> (a org.apache.activemq.broker.region.QueueSubscription)
        at org.apache.activemq.broker.region.Queue.addSubscription(Queue.java:192)
        - locked <0x908fa480> (a java.util.LinkedList)
        at org.apache.activemq.broker.region.AbstractRegion.addDestination(AbstractRegion.java:93)
        - locked <0x903b9b40> (a java.lang.Object)
        at org.apache.activemq.broker.region.RegionBroker.addDestination(RegionBroker.java:221)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:130)
        at org.apache.activemq.advisory.AdvisoryBroker.addDestination(AdvisoryBroker.java:142)
        at org.apache.activemq.broker.BrokerFilter.addDestination(BrokerFilter.java:130)
        at org.apache.activemq.broker.MutableBrokerFilter.addDestination(MutableBrokerFilter.java:143)
        at org.apache.activemq.broker.region.AbstractRegion.addConsumer(AbstractRegion.java:182)
        - locked <0x908e6cb8> (a java.lang.Object)
        at org.apache.activemq.broker.region.RegionBroker.addConsumer(RegionBroker.java:297)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:74)
        at org.apache.activemq.advisory.AdvisoryBroker.addConsumer(AdvisoryBroker.java:78)
        at org.apache.activemq.broker.BrokerFilter.addConsumer(BrokerFilter.java:74)
        at org.apache.activemq.broker.MutableBrokerFilter.addConsumer(MutableBrokerFilter.java:87)
        at org.apache.activemq.broker.AbstractConnection.processAddConsumer(AbstractConnection.java:538)
        at org.apache.activemq.command.ConsumerInfo.visit(ConsumerInfo.java:296)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:138)
        at java.lang.Thread.run(Thread.java:595)
""ActiveMQ Transport: tcp:///127.0.0.1:53315"":
        at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:321)
        - waiting to lock <0x908fa480> (a java.util.LinkedList)
        at org.apache.activemq.broker.region.Queue.dropEvent(Queue.java:315)
        at org.apache.activemq.broker.region.QueueSubscription.acknowledge(QueueSubscription.java:54)
        at org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:125)
        - locked <0x90786240> (a org.apache.activemq.broker.region.QueueSubscription)
        at org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:265)
        at org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:366)
        at org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:177)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:66)
        at org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:66)
        at org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:79)
        at org.apache.activemq.broker.AbstractConnection.processMessageAck(AbstractConnection.java:445)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:179)
        at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:237)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:138)
        at java.lang.Thread.run(Thread.java:595)


The simple solution is in AbstractReagion.java:
@@ -89,10 +89,12 @@
             // Add all consumers that are interested in the destination.
             for (Iterator iter = subscriptions.values().iterator(); iter.hasNext();) {
                 Subscription sub = (Subscription) iter.next();
+                synchronized (sub) {
                 if( sub.matches(destination) ) {
                     dest.addSubscription(context, sub);
                 }
             }
+            }
             return dest;
         }
     }
@@ -104,11 +106,13 @@
         if( timeout == 0 ) {
             for(Iterator iter=subscriptions.values().iterator();iter.hasNext();){
                 Subscription sub=(Subscription) iter.next();
+                synchronized (sub) {
                 if(sub.matches(destination)){
                     throw new JMSException(""Destination still has an active subscription: ""+destination);
                 }
             }
         }
+        }

         if( timeout > 0 ) {
             // TODO: implement a way to notify the subscribers that we want to take the down
@@ -125,10 +129,12 @@
                 // timeout<0 or we timed out, we now force any remaining subscriptions to un-subscribe.
                 for(Iterator iter=subscriptions.values().iterator();iter.hasNext();){
                     Subscription sub=(Subscription) iter.next();
+                    synchronized (sub) {
                     if(sub.matches(destination)){
                         dest.removeSubscription(context, sub);
                     }
                 }
+                }

                 destinationMap.removeAll(destination);
                 dest.dispose(context);
@@ -173,7 +179,8 @@
             // broker will not see a destination that exists in persistent store.  We may want to
             // eagerly load all destinations into the broker but have an inactive state for the
             // destination which has reduced memory usage.
-            //
+            synchronized (sub)
+            {
             if( persistenceAdapter!=null ) {
                 Set inactiveDests = getInactiveDestinations();
                 for (Iterator iter = inactiveDests.iterator(); iter.hasNext();) {
@@ -183,6 +190,7 @@
                     }
                 }
             }
+            }

             subscriptions.put(info.getConsumerId(), sub);

@@ -193,16 +201,16 @@
             // no mutex held. Remove is only essentially run once
             // so everything after this point would be leaked.

+            synchronized (sub) {
             // Add the subscription to all the matching queues.
             for (Iterator iter = destinationMap.get(info.getDestination()).iterator(); iter.hasNext();) {
                 Destination dest = (Destination) iter.next();
                 dest.addSubscription(context, sub);
             }
-
             if( info.isBrowser() ) {
                 ((QueueBrowserSubscription)sub).browseDone();
             }
-
+            }
             return sub;
         }
     }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5uf:,177928,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Warning when using  multicast discoveryUri,MB-164,12515593,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1089|https://issues.apache.org/activemq/browse/AMQ-1089]

When using a transportconnector with a multicast discoveryagent a warning is shown.

config: <transportConnector  name=""default"" uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/>

WARN  MulticastDiscoveryAgent          -brokerName not set

When the transportconnector is started the MulticastDiscoveryAgent is created if it does not exist,
but the brokerName for this MulticastDiscoveryAgent is not set by the transportconnector.

See the code and the suggested modification to prevent this warning:

org.apache.activemq.broker.TransportConnector.java

<snip>
public void start() throws Exception {
        getServer().start();
        DiscoveryAgent da = getDiscoveryAgent();
        if( da!=null ) {
            da.registerService(getConnectUri().toString());
            //suggested modification start
            if(da.getBrokerName() == null || da.getBrokerName().length == 0) {
                   da.setBrokerName(this.getBroker().getBrokerName());
            }
            //suggested modification end
            da.start();
        }
        this.statusDector.start();
        log.info(""Connector ""+getName()+"" Started"");
    }
<snap>",reproduced on Windows XP Pro and SuSE Linux Enterprise 9.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5tj:,177924,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Upgrade to xbean 2.8 to fix invalid generated schemas,MB-163,12515584,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1107|https://issues.apache.org/activemq/browse/AMQ-1107]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5sv:,177921,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
ConduitBridge can malfunction when first of a set of consumers goes away,MB-162,12515651,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-776|https://issues.apache.org/activemq/browse/AMQ-776]

When the following scenario is followed, any of the subsequent consumers will stop receiving messages.  I've reproduced this using the ConsumerTool, and ProducerTool supplied in the example area of the distribution.

+++++++++++++++++++++++
Start Broker A

Start Broker B

Start Consumer 1, connecting to Broker B, consuming FOO

Start Consumer 2, connecting to Broker B, consuming FOO

Start Publisher, connecting to Broker A, publishing FOO

Ctl-C out of Consumer 1

Consumer 2 stops receiving messages
+++++++++++++++++++

Seems to me that ConduitBridge is supposed to track all consumers for a given subscription, by way of DemandSubscription.  It is seeding DemandSubscription with the originating consumer, but when subsequent consumers are added, the ConduitBridge::addToAlreadyInterestedConsumers re-adds the original subscriber to the DemandSubscription's map - so the map only ever has the original subscription.

I've attached a patch.  Hope the change is good.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5u7:,177927,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Using a selector provides invalid output,MB-161,12515589,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1097|https://issues.apache.org/activemq/browse/AMQ-1097]

When consuming messages with a selector, the consumer consumes invalid messages. (Both queue and topic).  

","Windows XP Professional, jdk 1.5",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5t3:,177922,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
createTemporaryQueue hangs,MB-160,12515514,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1278|https://issues.apache.org/activemq/browse/AMQ-1278]

When we attempt to create a temporary queue, the connection hangs:

""http-8080-Processor1"" daemon prio=10 tid=0x00127650 nid=0xd in Object.wait() [0x340fe000..0x340ffc28]
        at java.lang.Object.wait(Native Method)
        at java.lang.Object.wait(Unknown Source)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.waitFor(FutureTask.java:267)
        at edu.emory.mathcs.backport.java.util.concurrent.FutureTask.get(FutureTask.java:117)
        - locked <0x4cfc65c0> (a org.apache.activemq.transport.FutureResponse)
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:44)
        - locked <0x4cfc65c0> (a org.apache.activemq.transport.FutureResponse)
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:69)
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1108)
        at org.apache.activemq.ActiveMQConnection.createTempDestination(ActiveMQConnection.java:1453)
        at org.apache.activemq.ActiveMQSession.createTemporaryQueue(ActiveMQSession.java:1103)
        at es.tid.geremias.planb.QueryTask.getTask(QueryTask.java:198)
        at es.tid.geremias.planb.QueryTask.doGet(QueryTask.java:157)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:689)
        at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
        at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:237)
        at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:157)
        at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:214)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardContextValve.invokeInternal(StandardContextValve.java:198)
        at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:152)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:540)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:137)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:118)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:102)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)
        at org.apache.catalina.core.StandardValveContext.invokeNext(StandardValveContext.java:104)
        at org.apache.catalina.core.StandardPipeline.invoke(StandardPipeline.java:520)
        at org.apache.catalina.core.ContainerBase.invoke(ContainerBase.java:929)
        at org.apache.coyote.tomcat5.CoyoteAdapter.service(CoyoteAdapter.java:160)
        at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:799)
        at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.processConnection(Http11Protocol.java:705)
        at org.apache.tomcat.util.net.TcpWorkerThread.runIt(PoolTcpEndpoint.java:577)
        at org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:683)
        at java.lang.Thread.run(Unknown Source)",Solaris,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5tz:,177926,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
RegionBroker resets JMS Timestamp,MB-159,12515565,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1165|https://issues.apache.org/activemq/browse/AMQ-1165]

The RegionBroker contains the following logic, which overwrites the JMSTimestamp.   FWIU, the message timestamp should be set once at send and never changed by the broker.

        if (message.getTimestamp() > 0 && (message.getBrokerPath() == null || message.getBrokerPath().length == 0)) { 
            //timestamp not been disabled and has not passed through a network
            message.setTimestamp(System.currentTimeMillis());
        }

Attached is a simple test case and patch that changes the '>' in the if statement above to '<='.  I'm not sure if that is the proper fix, but it did make my problem go away.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5tb:,177923,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Wrong message removed from store when using composite destinations,MB-158,12515633,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-959|https://issues.apache.org/activemq/browse/AMQ-959]

When sending messages to composite destinations, for each simple destination a copy of the original message is created an sent. However, it's internal messageId is reused. As the messageId carries the brokerSequenceId, which is used as primary key in the jdbc message store, this is overwritten by the last send. All messages refer to the same store row so that the first acknowledge removes the content for all MessageReferences in memory.

The attached patch creates a copy of the messageId when copying a message.

Regards,
Holger


",AMQ4.0.2 using jdbc-persistence,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5tr:,177925,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Deadlock in PrefetchSubscription,MB-157,12515586,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1108|https://issues.apache.org/activemq/browse/AMQ-1108]

see: http://www.nabble.com/Another-deadlock-showing-up-tf2874106.html#a8033006

The deadlock is as follows:

Found one Java-level deadlock:
=============================
""ActiveMQ Task"":
  waiting to lock monitor 0x080e4f3c (object 0x92b60db0, a
java.util.LinkedList),
  which is held by ""ActiveMQ Transport: tcp:///127.0.0.1:37496""
""ActiveMQ Transport: tcp:///127.0.0.1:37496"":
  waiting to lock monitor 0x080e4f7c (object 0x92b60d98, a
org.apache.activemq.broker.region.cursors.VMPendingMessageCursor),
  which is held by ""ActiveMQ Task""

Java stack information for the threads listed above:
===================================================
""ActiveMQ Task"":
        at
org.apache.activemq.broker.region.PrefetchSubscription.dispatch(PrefetchSubscription.java:414)
        - waiting to lock <0x92b60db0> (a java.util.LinkedList)
        at
org.apache.activemq.broker.region.QueueSubscription.dispatch(QueueSubscription.java:172)
        at
org.apache.activemq.broker.region.PrefetchSubscription.dispatchMatched(PrefetchSubscription.java:397)
        - locked <0x92b60d98> (a
org.apache.activemq.broker.region.cursors.VMPendingMessageCursor)
        at
org.apache.activemq.broker.region.PrefetchSubscription.onDispatch(PrefetchSubscription.java:451)
        at
org.apache.activemq.broker.region.QueueSubscription.onDispatch(QueueSubscription.java:192)
        at
org.apache.activemq.broker.region.PrefetchSubscription$3.run(PrefetchSubscription.java:429)
        at
org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:778)
        at
org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:791)
        at
org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111)
        at
org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
        at
org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
        at
java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
        at
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
        at java.lang.Thread.run(Thread.java:595)
""ActiveMQ Transport: tcp:///127.0.0.1:37496"":
        at
org.apache.activemq.broker.region.PrefetchSubscription.dispatchMatched(PrefetchSubscription.java:383)
        - waiting to lock <0x92b60d98> (a
org.apache.activemq.broker.region.cursors.VMPendingMessageCursor)
        at
org.apache.activemq.broker.region.PrefetchSubscription.acknowledge(PrefetchSubscription.java:219)
        - locked <0x92b60db0> (a java.util.LinkedList)
        at
org.apache.activemq.broker.region.AbstractRegion.acknowledge(AbstractRegion.java:299)
        at
org.apache.activemq.broker.region.RegionBroker.acknowledge(RegionBroker.java:397)
        at
org.apache.activemq.broker.TransactionBroker.acknowledge(TransactionBroker.java:177)
        at
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at
org.apache.activemq.broker.BrokerFilter.acknowledge(BrokerFilter.java:74)
        at
org.apache.activemq.broker.MutableBrokerFilter.acknowledge(MutableBrokerFilter.java:88)
        at
org.apache.activemq.broker.TransportConnection.processMessageAck(TransportConnection.java:491)
        at org.apache.activemq.command.MessageAck.visit(MessageAck.java:179)
        at
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:287)
        at
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:178)
        at
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
        at
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
        at
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)

Found 1 deadlock.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5qv:,177912,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"Setting ""time to live"" to >0 fails delivery from linux to window",MB-156,12515630,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-975|https://issues.apache.org/activemq/browse/AMQ-975]

I found this problem on 4.0 and 4.0.1 running on Linux. 

Problem reproduction steps: 
1. start activemq server on a linux server 
2. start a consumer client on a window XP 
3. start a producer client on same linux machine, setting timeToLive to any value > 0 
4. consumer client will not receive any messages 

5. set the time to live to 0, the consumer client will receive messages, or 
6. set time to live to 0 or not, consumer client running on linux will receive messages too, or 
7. no problem too if producer runs on xp and consumer runs on linux 

And apparently it does not really matter where the activemq server runs, linix or xp. 
","Linux, window XP",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5sf:,177919,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
transportConnector using multicast,MB-155,12515634,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-944|https://issues.apache.org/activemq/browse/AMQ-944]

It seems that one can nto use multicast in a transportConnector.

Description of the test:
In the distribution, go into /example
Edit the build.xml in order to use multicast. for instance
Change the URL in the build.xml to :
<property name=""url"" value=""multicast://225.0.0.1:61620"" />
Start the producer: ant producer

Here is the output:
    [echo] Running producer against server at $url = multicast://225.0.0.1:61620 for subject $subject = Syntheses
    [java] Connecting to URL: multicast://225.0.0.1:61620
    [java] Publishing a Message with size 1000 to queue: Syntheses
    [java] Using non-durable publishing
    [java] Sleeping between publish 0 ms
    [java] DEBUG MulticastTransport             - Joining multicast address: /225.0.0.1
    [java] DEBUG UdpTransport                   - Consumer thread starting for: multicast://225.0.0.1:61620@0
    [java] DEBUG UdpTransport                   - Sending oneway from: multicast://225.0.0.1:61620@0 to target: /225.0.
0.1:61620 command: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:
0, clientId = ID:ZOZMA-2042-1159347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnecto
r = false, manageable = true}
    [java] DEBUG DefaultReplayBuffer            - Adding command ID: 1 to replay buffer: org.apache.activemq.transport.
reliable.DefaultReplayBuffer@1b3f829 object: [B@698403
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 sending datagram: 1 to: /225.0
.0.1:61620
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 about to process: ConnectionIn
fo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:0, clientId = ID:ZOZMA-2042-115
9347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, manageable = true}
    [java] DEBUG ReliableTransport              - Still waiting for response on: multicast://225.0.0.1:61620@0 to comma
nd: ConnectionInfo {commandId = 1, responseRequired = true, connectionId = ID:ZOZMA-2042-1159347487015-0:0, clientId = I
D:ZOZMA-2042-1159347487015-1:0, userName = null, password = null, brokerPath = null, brokerMasterConnector = false, mana
geable = true} sending replay message
    [java] DEBUG UdpTransport                   - Sending oneway from: multicast://225.0.0.1:61620@0 to target: /192.9.
211.39:61620 command: ReplayCommand {commandId = 2, firstNakNumber = 1, lastNakNumber = 1}
    [java] DEBUG DefaultReplayBuffer            - Adding command ID: 2 to replay buffer: org.apache.activemq.transport.
reliable.DefaultReplayBuffer@1b3f829 object: [B@d02b51
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 sending datagram: 2 to: /192.9
.211.39:61620
    [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 about to process: ReplayComman
d {commandId = 2, firstNakNumber = 1, lastNakNumber = 1}
    [java] DEBUG ReliableTransport              - Processing replay command: ReplayCommand {commandId = 2, firstNakNumb
er = 1, lastNakNumber = 1}
    [java] DEBUG DefaultReplayBuffer            - Buffer: org.apache.activemq.transport.reliable.DefaultReplayBuffer@1b
3f829 replaying messages from: 1 to: 1
*     [java] DEBUG CommandDatagramSocket          - Channel: multicast://225.0.0.1:61620@0 REDELIVERING datagram: 1 to: /
225.0.0.1:61620*
",A network that supports multicast,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5rb:,177914,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
activemq-web module fails in maven-build with test enabled,MB-154,12515619,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1039|https://issues.apache.org/activemq/browse/AMQ-1039]

It appears the activemq-version property defined in the parent pom.xml still points to 4.1-incubator-SNAPSHOT. I believe this should already be 4.2-incubator-SNAPSHOT. 

Also need to update the activecluster version to point to the latest snapshot",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5rj:,177915,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
got an exception when running AMQStackOverFlowTest which causes the test suite to hang!,MB-153,12515512,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1291|https://issues.apache.org/activemq/browse/AMQ-1291]

 Running org.apache.activemq.usecases.AMQStackOverFlowTest
22-Jun-2007 15:45:48 	Exception in thread ""ActiveMQ Task"" java.util.ConcurrentModificationException
22-Jun-2007 15:45:48 	        at java.util.LinkedList$ListItr.checkForComodification(LinkedList.java:617)
22-Jun-2007 15:45:48 	        at java.util.LinkedList$ListItr.next(LinkedList.java:552)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.fireEvent(UsageManager.java:330)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.setPercentUsage(UsageManager.java:312)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.decreaseUsage(UsageManager.java:172)
22-Jun-2007 15:45:48 	        at org.apache.activemq.memory.UsageManager.decreaseUsage(UsageManager.java:166)
22-Jun-2007 15:45:48 	        at org.apache.activemq.command.Message.decrementReferenceCount(Message.java:569)
22-Jun-2007 15:45:48 	        at org.apache.activemq.broker.region.TopicSubscription$2.run(TopicSubscription.java:403)
22-Jun-2007 15:45:48 	        at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:774)
22-Jun-2007 15:45:48 	        at org.apache.activemq.broker.TransportConnection.iterate(TransportConnection.java:805)
22-Jun-2007 15:45:48 	        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:115)
22-Jun-2007 15:45:48 	        at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26)
22-Jun-2007 15:45:48 	        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44)
22-Jun-2007 15:45:48 	        at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650)
22-Jun-2007 15:45:48 	        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675)
22-Jun-2007 15:45:48 	        at java.lang.Thread.run(Thread.java:595) ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5rz:,177917,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"InactivityMonitor: Transport connection disconnected ""Channel was inactive for too long.""",MB-152,12515572,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1146|https://issues.apache.org/activemq/browse/AMQ-1146]

Sometimes (when the transport is idle for long) the transport gets disconnected with the message ""Channel was inactive for too long."" 

        Apparently this is same as reported in http://www.nabble.com/Channel-was-inactive-for-too-long-t1463069.html#a3971744 and http://www.nabble.com/Durable-consumer-reconnect-problem-tf1716817.html#a6147014 

Version: 4.1 

Background: 

        The class org.apache.activemq.transport.InactivityMonitor runs monitoring threads to check the read and write of the transport(TCP for example). If it hasn't sent the message during the given period, it sends a KeepAliveInfo to ensure the connectivity. If it doesn't receive the message for a given duration, then it disconnects the transport. 

        By default, the maximumInactivityDuration is 30000 milliseconds. This is the time interval between the check for read. That is if an end of the transport doesn't receive any message for this period, then it will close the connection. For the read check, the time interval is half of maximumInactivityDuration i.e. 15000 millisecond. That is if a message was not sent during this period, it will send a KeepAliveInfo to ensure the connectivity. 


Problem and the recommended fix: 

        The InactivityMonitor class uses the flags inReceive and commandReceived variables in methods readCheck and onCommand. Typically these two methods are called from different threads. Also, the flags inSend and commandSent are used in methods oneway and writeCheck. Again these two methods are called from different threads. But, the synchronization was missing for these. This seems to be a potential cause for the problem. So, synchronization has been incorporated for these flag usages. 

        The same class InactivityMonitor is used at both client and server side. In general, the write check (which sends KeepAliveInfo) happens twice during the time when the read check happens once. Probably the client and server machines have performance differences and just to be safer, now the write check is made to happen thrice during the time when the read check happens once. 


        The original and the changed source files are attached here. 

http://www.nabble.com/file/5958/InactivityMonitor_changed.java

http://www.nabble.com/file/5957/InactivityMonitor_Original.java
",Windows Server 2003 running broker and Windows XP running client. Java 1.5.0_08 ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5sn:,177920,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
MulticastDiscoveryAgent heart beast may stop of machine clock jumps around.,MB-151,12515562,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1173|https://issues.apache.org/activemq/browse/AMQ-1173]

Surprisingly, many high end machines now days have a hard time keeping a consistent clock.  The clocks may run fast and user tend to use a periodic cron job to sync the time on the local machine to the correct time.  When this happens the time looks like it went backwards and this was delaying the sending of Mutlicast heartbeats.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5rr:,177916,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Durable topic message delivery to restarted consumer results in messages out of order.,MB-150,12515549,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1201|https://issues.apache.org/activemq/browse/AMQ-1201]

While testing AMQ 4.2 SNAPSHOT from 3/9, I can create the situation wherein a consumer that was killed and then restarted will get the ""prefetchLimit"" # of messages last, which means they are out of order.

setup:
1 Broker
Consumer on Durable topic, prefetchSize=20
Publisher publishes to Durable topic

Let some messages flow, then kill off Consumer.  Let a few thousand messages queue up, then restart the consumer.

The Broker begins redelivery of messages, and then when it gets down to the end of the queue, the very first 20 messages from when the Consumer first went down are delivered.  This means that those messages come out of order.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5r3:,177913,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Thread.currentThread().getContextClassLoader() null in FactoryFinder.newInstance,MB-149,12515538,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1229|https://issues.apache.org/activemq/browse/AMQ-1229]

org.apache.activemq.util.FactoryFinder.doFindFactoryProperies() correctly consults the current class's loader if Thread.currentThread().getContextClassLoader() is null:

        ClassLoader classLoader = Thread.currentThread().getContextClassLoader();
        if (classLoader == null) classLoader = getClass().getClassLoader();

newInstance(), however, generates a null pointer exception if Thread.currentThread().getContextClassLoader() is null:

        Class clazz;
        try {
            clazz = Thread.currentThread().getContextClassLoader().loadClass(className);
        } catch (ClassNotFoundException e) {
            clazz = FactoryFinder.class.getClassLoader().loadClass(className);
        }",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5s7:,177918,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
spelling error,MB-148,12515505,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Trivial,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1305|https://issues.apache.org/activemq/browse/AMQ-1305]

Near the bottom of the page at http://activemq.apache.org/stomp.html activemq.subcriptionName should be activemq.subscriptionName",http://activemq.apache.org/stomp.html,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5pr:,177907,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Spring AspectJ autoproxying breaks ActiveMQManagedConnectionFactory injection,MB-147,12515571,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1147|https://issues.apache.org/activemq/browse/AMQ-1147]

The cast to the concrete class at ActiveMQManagedConnectionFactory:50 fails:

    public void setResourceAdapter(ResourceAdapter adapter) throws ResourceException {
        this.adapter = (ActiveMQResourceAdapter) adapter;

org.springframework.beans.TypeMismatchException: Failed to convert property value of type [$Proxy63] to required type [javax.resource.spi.ResourceAdapter] for property 'resourceAdapter'; nested exception is java.lang.ClassCastException: $Proxy63 cannot be cast to org.apache.activemq.ra.ActiveMQResourceAdapter
Caused by: java.lang.ClassCastException: $Proxy63 cannot be cast to org.apache.activemq.ra.ActiveMQResourceAdapter
    at org.apache.activemq.ra.ActiveMQManagedConnectionFactory.setResourceAdapter(ActiveMQManagedConnectionFactory.java:50)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.springframework.beans.BeanWrapperImpl.setPropertyValue(BeanWrapperImpl.java:786)
[...]

Spring (2.0.3 build 66) config:

	<aop:aspectj-autoproxy />

	<aop:spring-configured />

	<bean id=""jms.managedConnectionFactory"" class=""org.apache.activemq.ra.ActiveMQManagedConnectionFactory"">
		<property name=""resourceAdapter"">
			<ref local=""jms.resourceAdapter"" />
		</property>
	</bean>

	<bean id=""jms.resourceAdapter"" class=""org.apache.activemq.ra.ActiveMQResourceAdapter"">
		<property name=""serverUrl"">
			<value>${amq.serverUrl}</value>
		</property>
	</bean>

There's probably a workaround for this, but it's still annoying.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5q7:,177909,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Thread gets stuck in a WAIT and never returns,MB-146,12515496,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1340|https://issues.apache.org/activemq/browse/AMQ-1340]

The thread that gets stuck in the wait is:

{code}
ActiveMQ Connection Dispatcher: 8012937"" daemon prio=6 tid=0x04565400 nid=0xb4 in Object.wait() [0x051bf000..0x051bfd18]
  java.lang.Thread.State: WAITING (on object monitor)
       at java.lang.Object.wait(Native Method)
       - waiting on <0x0a71db28> (a java.lang.Object)
       at java.lang.Object.wait(Object.java:485)
       at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:70)
       - locked <0x0a71db28> (a java.lang.Object)
       at org.apache.activemq.broker.AbstractConnection.stop(AbstractConnection.java:190)
       at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:95)
       at org.apache.activemq.broker.AbstractConnection.processShutdown(AbstractConnection.java:389)
       at org.apache.activemq.command.ShutdownInfo.visit(ShutdownInfo.java:35)
       at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:315)
       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
       at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:91)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
       at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
       at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
       at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:296)
       at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:39)
       at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceRemove(DiscoveryNetworkConnector.java:154)
       at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.serviceFailed(SimpleDiscoveryAgent.java:117)
       at org.apache.activemq.network.DiscoveryNetworkConnector$2.fireServiceFailed(DiscoveryNetworkConnector.java:254)
       at org.apache.activemq.network.DiscoveryNetworkConnector$2.serviceLocalException(DiscoveryNetworkConnector.java:241)
       at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:536)
       at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:118)
       at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:91)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
       at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
       - locked <0x0a71de08> (a java.lang.Object)
       at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
       at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:213)
       at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:842)
       at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:879)
       at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:100)
       at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
       at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5pz:,177908,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Maven build doesn't fail even when maven plugin fails to start broker,MB-145,12515540,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1224|https://issues.apache.org/activemq/browse/AMQ-1224]

Original post here: http://www.nabble.com/Maven-build-doesn%27t-fail-even-when-maven-plugin-fails-to-start-broker-tf3537412s2354.html

If the maven plugin fails to start the broker for whatever reason (e.g. there is already a process listening on the broker port) the error is logged but the maven build proceeds.  I would have expected the maven build to error out.

It would appear that this is because the class that the plugin invokes (org.apache.activemq.console.Main) sucks up all throwables. 

Reproduce by simply starting something on port 61616 then trying to run the broker via the maven plugin.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5pj:,177906,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
TransportConnector get duplicated when used with JMX,MB-144,12515623,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1029|https://issues.apache.org/activemq/browse/AMQ-1029]

The BrokerService keeps the configured TransportConnectors in a list called transportConnectors. In startAllConnectors, the list is traversed and each connector is started through startTransportConnector(). This method checks if JMX is configured, and if so, it called connector.asManagedConnector() which returns a new instance of a TransportConnector. This instance is started.

But in the  transportConnectors list of BrokerService, the old, unstarted object is still existent. Since a TransportConnector starts a TransportServiceDetector thread, the old, unstarted instance contains a TSD that is not active. But the started TSD isn't referenced anymore.

On shutdown, the old, unstarted TC and subsequently TSD are stopped. The ""lost"" instance can't be touched anymore.

My patch does this: During spin-up, startTransportConnector() returns the instance that is started. The started instances are collected in an arraylist, this list replaces transportConnectors after startup.

Thanks to jstrachan for being patient on irc.
","Linux, ActiveMQ broker in a custom servlet, running on Tomcat 5.5.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5qn:,177911,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Missing pom.xml,MB-143,12515523,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1262|https://issues.apache.org/activemq/browse/AMQ-1262]

The source tar.gz for 4.1.1 seems to lack (at least) pom.xml, so it won't build.",Gentoo x86_64,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5ov:,177903,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
bug in reading temp queue using the tempDestinationAuthorizationEntry  feature,MB-142,12515564,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1163|https://issues.apache.org/activemq/browse/AMQ-1163]



> Folks,
>
> I've been trying to use the tempDestinationAuthorizationEntry feature in 4.2
> and I think I've found a problem. If I set up a consumer of the temp queue
> and add it to the read permission, it always reports that I don't have
> permission to read the queue. However, if I add that consumer to the write
> permission on the queue it works like a charm.
>
> Looking at the source I think I have discovered a bulk copy/paste problem.
> If you look at
> org.apache.activemq.security.AuthorizationBroker.addConsumer() in the source
> trunk, you will see this little piece of code a couple of lines from the top
> of the method:
>
>         if(!info.getDestination().isTemporary()) {
>             allowedACLs =
> authorizationMap.getReadACLs(info.getDestination());
>         }else {
>         	allowedACLs = authorizationMap.getTempDestinationWriteACLs();
>         }
>
> Note that it gets the TempDestinationWriteACLs(), even though if we are not
> a temp queue it gets the ReadACLs().  If you look in addProducer() you can
> see a similar piece of code that might be where this copy originated.
>
> I am using what looks to be the latest 4.2 SNAPSHOT (file:
> apache-activemq-4.2-20070214.034812-3.zip).
>
>    lorne
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5qf:,177910,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
activem.conf: Use ${activemq.base} instead of ..,MB-141,12515579,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Trivial,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1122|https://issues.apache.org/activemq/browse/AMQ-1122]

In activemq.xml:

<persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""../activemq-data"" dataSource=""#postgres-ds""/>
       -->
    </persistenceAdapter>


should be changed to 

<persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
      <!-- To use a different datasource, use the following syntax : -->
      <!-- 
      <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data"" dataSource=""#postgres-ds""/>
       -->
    </persistenceAdapter>

, shouldn't it?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5p3:,177904,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
web-console broken (queue browsing).,MB-140,12515621,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1036|https://issues.apache.org/activemq/browse/AMQ-1036]

I managed to build and launch the web-console from svn, but the queue browsing page is broken - queue.jsp uses properties of Queue e.g. ${row.size} that do not exist.  When I hacked queue.jsp to remove references to those properties I got another error on trying to purge a queue:

RequestURI=/activemq-web-console/purgeDestination.action
Caused by:

java.lang.IllegalArgumentException: Target bean must not be null
	at org.springframework.util.Assert.notNull(Assert.java:113)
	at org.springframework.validation.BeanPropertyBindingResult.(BeanPropertyBindingResult.java:58)
	at org.springframework.validation.DataBinder.initBeanPropertyAccess(DataBinder.java:167)
	at org.springframework.validation.DataBinder.getInternalBindingResult(DataBinder.java:186)
	at org.springframework.validation.DataBinder.getPropertyAccessor(DataBinder.java:196)
	at org.springframework.validation.DataBinder.applyPropertyValues(DataBinder.java:515)
	at org.springframework.validation.DataBinder.doBind(DataBinder.java:417)
	at org.springframework.web.bind.WebDataBinder.doBind(WebDataBinder.java:146)
	at org.springframework.web.bind.ServletRequestDataBinder.bind(ServletRequestDataBinder.java:108)
	at org.apache.activemq.web.handler.BindingBeanNameUrlHandlerMapping.getHandlerInternal(BindingBeanNameUrlHandlerMapping.java:43)
...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5pb:,177905,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Problem with subscription passing with network of brokers in AMQ 4.0.2,MB-139,12515632,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-961|https://issues.apache.org/activemq/browse/AMQ-961]

There's an occasional problem with subscription propagation when using a network of brokers.  Test scenario uses ConsumerTool and PublisherTool in examples area of distribution.

1) Start broker A (has a network connection to broker B)
2) Start broker B (has a network connection to broker A)
3) start consumer C against broker A, on FOO
4) start publisher P against broker B, on FOO

Messages do not flow to consumer C.  In the broker B log, there's no indication it got any subscriptions from broker A.  Again, this is occasional.

I've taken a kill-3 on the brokers, both when this condition appears, and when everything is fine.  There's an obvious difference in one of the threads that hopefully will bring light to the problem.  I've not gone into the code yet to try and find the issue, but figured I would open this issue first.

Stack trace of broker A when subscriptions did NOT pass, and message flow is broken:
""ActiveMQ Transport: tcp://perfgc1a/170.137.15.169:5112"" prio=10 tid=0x0030e160 nid=0x3f in Object.wait() [0x8
e2ff000..0x8e2ff8f0]
        at java.lang.Object.wait(Native Method)
        - waiting on <0x9b2b00d0> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
        at java.lang.Object.wait(Object.java:474)
        at edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch.await(CountDownLatch.java:179)
        - locked <0x9b2b00d0> (a edu.emory.mathcs.backport.java.util.concurrent.CountDownLatch)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.waitStarted(DemandForwardingBridgeSupport
.java:830)
        at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceRemoteCommand(DemandForwardingBrid
geSupport.java:329)
        at org.apache.activemq.network.DemandForwardingBridgeSupport$2.onCommand(DemandForwardingBridgeSupport
.java:130)
        at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:92)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:67)
        at org.apache.activemq.transport.failover.FailoverTransport$1.onCommand(FailoverTransport.java:117)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:124)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:123)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:88)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)


Stack trace of broker A when everything works correctly:

""ActiveMQ Transport: tcp://perfgc1a/170.137.15.169:5112"" prio=10 tid=0x01955fc8 nid=0x3f runnable [0x8e2cf000..0x8e2cfaf0]
        at java.net.SocketInputStream.socketRead0(Native Method)
        at java.net.SocketInputStream.read(SocketInputStream.java:129)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.fill(TcpBufferedInputStream.java:49)
        at org.apache.activemq.transport.tcp.TcpBufferedInputStream.read(TcpBufferedInputStream.java:56)
        at java.io.DataInputStream.readInt(DataInputStream.java:353)
        at org.apache.activemq.openwire.OpenWireFormat.unmarshal(OpenWireFormat.java:275)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:136)
        at java.lang.Thread.run(Thread.java:595)

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5o7:,177900,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Fix FindBugs issues,MB-138,12515507,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1293|https://issues.apache.org/activemq/browse/AMQ-1293]

FindBugs 1.2.1 find various issues in the ActiveMQ code that look like they need some attention. While we sort out FindBugs in the Maven build, using the Eclipse plugin for FindBugs is a quick way to get going:

http://findbugs.sourceforge.net/downloads.html

I'm attaching a first patch that addresses some basic issues.

The other major the FindBugs points out is ""inconsistent synchronization"" in various cursor and Kaha and other org.apache.activemq.store classes.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5nj:,177897,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
ActiveMQ is not JMS 1.1 compliant regarding supporting foreign messages,MB-137,12515515,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1275|https://issues.apache.org/activemq/browse/AMQ-1275]

See Wish AMQ-1232 for description: ActiveMQ needs to move the setting of JMSDestination to _after_ the transformation to an internal format is done.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5on:,177902,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Sending messages to a topic with an inactive durable subscription will hang producers,MB-136,12515646,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-845|https://issues.apache.org/activemq/browse/AMQ-845]

If you have a durable subsciber that is not on-line, and you have producers sending message, eventually the server will hang on that topic.

I have attached a zip file with a junit test case and my activemq configuration.  The test case has two tests, one that creates a durable subscription, that will succeed, and a second that starts publishing up to 100000 events, which will hang.  I don't really know how to interrupt the all, so the test case never finishes.  Anyway, it does show the problem and is 100% repeatable on my system.

The config file is set to use a SQLServer database, but the stock journal or a derby persistence manager will do the same thing.  I just switched to mssql server because I can then see what is going on in the database.  And records are being added to the database all the way up to when the server hangs. I also doubled the memory manager limit and moved the jmx rmi port to 1080 since I have another server running at 1099.

","Linux Red Hat Enterprise 4
java jdk 1.4.2-b28  (or 1.5.0_06-b05)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5of:,177901,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Service Wrapper Installer does not work when ActiveMQ is installed on path that contains a spaces,MB-135,12515516,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1274|https://issues.apache.org/activemq/browse/AMQ-1274]

If Active MQ is installed in a directory that contains spaces (i.e. E:\Program Files\apache-activemq-4.2-SNAPSHOT) the win32 service wrapper installer does not work.

Just need to add quotes around path variables in bin\win32\wrapper.conf",windows 2003,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5nz:,177899,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
browse -QTopic=* does not seem to return anything...,MB-134,12515616,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 10:57 AM,29/Nov/16 4:17 PM,03/Aug/07 10:57 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1050|https://issues.apache.org/activemq/browse/AMQ-1050]

I think there's something funny going on in the regex stuff. I tried from the SimpleConsole typing

  query -QTopic=*

and I get nothing. 

  query 

returns tons of stuff though.

I wonder if it might be simpler to have specific arguments for topic and queues? 

query -topic=*
queyr -queue=*

to avoid the complex regex of ObjectName etc?",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5nr:,177898,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Broker fails to deliver messages after restart,MB-133,12515644,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-870|https://issues.apache.org/activemq/browse/AMQ-870]

We're running two networked brokers, B1 and B2, with a producer connected to B1 and a consumer to B2. Forwarding messages through this initially works fine.
If we re-start broker B2, everything seems to re-connect, but we no longer get any messages to the consumer.
If we instead re-start broker B1, everything works fine.

I've attached a JUnit test-case illustrating the two scenarios, a working re-start of B1 and a breaking re-start of B2.
Also attached is parts of a log from running the unit test.

I'm suspicious about log lines like these, but don't know if they are related to the problem:

[2006-08-08 14:36:16] DEBUG: [DemandForwardingBridge] Ignoring sub ConsumerInfo
{commandId = 4, responseRequired = true, consumerId = ID:descartes-49241-1155040510241-5:2:1:1, destination = topic://SOME.TOPIC, prefetchSize = 32766, maximumPendingMessageLimit = 0, browser = false, dispatchAsync = false, selector = null, subcriptionName = null, noLocal = false, exclusive = false, retroactive = false, priority = 0, brokerPath = [ID:descartes-49241-1155040510241-1:5], optimizedAcknowledge = false, noRangeAcks = false, additionalPredicate = null} already subscribed to matching destination
","java version ""1.5.0_07"", Ubuntu Linux 6.06
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6rr:,178078,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"java.lang.ClassCastException: org.apache.activemq.ActiveMQConnectionConsumer, when trying to publish to a topic",MB-132,12515553,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1189|https://issues.apache.org/activemq/browse/AMQ-1189]

When publishing to a topic, a ClassCastException occurs:

----
Caused by: java.lang.ClassCastException: org.apache.activemq.ActiveMQConnectionConsumer
	at org.apache.activemq.broker.TransportConnection.processDispatch(TransportConnection.java:810)
	at org.apache.activemq.broker.TransportConnection.dispatchSync(TransportConnection.java:769)
	at org.apache.activemq.broker.region.TopicSubscription.dispatch(TopicSubscription.java:360)
	at org.apache.activemq.broker.region.TopicSubscription.add(TopicSubscription.java:83)
	at org.apache.activemq.broker.region.policy.SimpleDispatchPolicy.dispatch(SimpleDispatchPolicy.java:51)
	at org.apache.activemq.broker.region.Topic.dispatch(Topic.java:417)
	at org.apache.activemq.broker.region.Topic.send(Topic.java:264)
	at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:292)
	at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:385)
	at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:193)
	at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
	at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
	at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
	at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:497)
	at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
	at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:293)
	at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:184)
	at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:95)
	at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
	at org.apache.activemq.transport.vm.VMTransport.syncOneWay(VMTransport.java:96)
	at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:83)
	at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
	at org.apache.activemq.transport.ResponseCorrelator.asyncRequest(ResponseCorrelator.java:69)
	at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:74)
	at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1175)
	... 7 more
----

The problem seems to stem in the processDispatch() method of the org.apache.activemq.broker.TransportConnection class.  Specifically, it happens during the line:

Runnable sub=(Runnable) md.getConsumer();

It doesn't appear that ActiveMQConnectionConsumer implements the Runnable interface, so this is why the ClassCastException occurs.",Windows XP SP2,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6rz:,178079,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Network conntions not shutdown propertly when a InvalidClientIDException occurs,MB-131,12515495,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1343|https://issues.apache.org/activemq/browse/AMQ-1343]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6rj:,178077,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Topic destination created for channel:// destination name,MB-130,12515629,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-977|https://issues.apache.org/activemq/browse/AMQ-977]

in activemq-web/src/main/java/org/apache/activemq/web/MessageServletSupport.java, the following method is used to create a JMS Topic or Queue Destination. However, note that the topic:// and channel:// blocks both set is_topic=true, so effectively those two blocks do exactly the same thing:

protected Destination getDestination(WebClient client, HttpServletRequest request, String destinationName) throws JMSException {

        // TODO cache destinations ???
       
        boolean is_topic=defaultTopicFlag;
        if (destinationName.startsWith(""topic://""))
        {
            is_topic=true;
            destinationName=destinationName.substring(8);
        }
        else if (destinationName.startsWith(""channel://""))
        {
            is_topic=true;
            destinationName=destinationName.substring(10);
        }
        else
            is_topic=isTopic(request);
       
        if( destinationOptions!=null ) {
            destinationName += ""?"" + destinationOptions;
        }
       
        if (is_topic) {
            return client.getSession().createTopic(destinationName);
        }
        else {
            return client.getSession().createQueue(destinationName);
        }
    }
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6sv:,178083,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Deadlock on ServerSessionImpl that hangs all connection consumers,MB-129,12515519,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1267|https://issues.apache.org/activemq/browse/AMQ-1267]

We are encountering regularly the deadlock mentioned below hours into program execution. It has been correlated with the exhaustion of the JVM heap, though it is unclear if running out of memory is a cause or consequence of this deadlock. At the least, system memory usage seems stable otherwise. We well be taking further thread dumps of the system to try to pinpoint which occurs first.

Is this a known issue in AMQ 4.0.2, or do you have any other insights?

Found one Java-level deadlock:
=============================
""Thread-20"":
  waiting to lock monitor 0x5f80a2bc (object 0x73145af0, a java.lang.Object),
  which is held by ""Thread-18""
""Thread-18"":
  waiting to lock monitor 0x5f80a27c (object 0x73124630, a org.apache.activemq.ra.ServerSessionPoolImpl),
  which is held by ""Thread-20""

Java stack information for the threads listed above:
===================================================
""Thread-20"":
	at org.apache.activemq.ra.ServerSessionImpl.start(ServerSessionImpl.java:118)
	- waiting to lock <0x73145af0> (a java.lang.Object)
	at org.apache.activemq.ra.ServerSessionPoolImpl.dispatchToSession(ServerSessionPoolImpl.java:149)
	at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:176)
	- locked <0x73124630> (a org.apache.activemq.ra.ServerSessionPoolImpl)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:178)
	- locked <0x731460e8> (a java.lang.Object)
	- locked <0x73145fe0> (a org.apache.activemq.ra.ServerSessionImpl)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:732)
	at java.lang.Thread.run(Thread.java:595)
""Thread-18"":
	at org.apache.activemq.ra.ServerSessionPoolImpl.removeFromPool(ServerSessionPoolImpl.java:171)
	- waiting to lock <0x73124630> (a org.apache.activemq.ra.ServerSessionPoolImpl)
	at org.apache.activemq.ra.ServerSessionImpl.run(ServerSessionImpl.java:178)
	- locked <0x73145af0> (a java.lang.Object)
	- locked <0x731459e8> (a org.apache.activemq.ra.ServerSessionImpl)
	at org.apache.geronimo.connector.work.WorkerContext.run(WorkerContext.java:291)
	at EDU.oswego.cs.dl.util.concurrent.PooledExecutor$Worker.run(PooledExecutor.java:732)
	at java.lang.Thread.run(Thread.java:595)

Found 1 deadlock.",Java 1.5.0_11,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6s7:,178080,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Topics allways created from the activemq-web module,MB-128,12515520,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1266|https://issues.apache.org/activemq/browse/AMQ-1266]

Posted at: http://www.nabble.com/Bug-in-activemq-web-while-Topic-Queue-Creation-tf3851374s2354.html#a10909909

Here's a little bug while creating Topic/Queue in activemq-web. Whether you
create Topic or Queue, the result always end up in creation of a Topic. This
problem lies in ActiveMQ in version 4.1 and 4.1.1.

I'm attaching the patch along with this post. Hope it helps.
( http://www.nabble.com/file/p10909909/MessageListenerServlet.patch
MessageListenerServlet.patch )

Regards,
Muhammad Ali",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6sn:,178082,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Deadlock in MutexTransport on shutdown with high volume of messages,MB-127,12515581,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1119|https://issues.apache.org/activemq/browse/AMQ-1119]

I ran into a deadlock in the MutextTransport.oneway(Command command) function when processing very high message volume (100% cpu utilization) at the time of a shutdown.  I'm running 4.0.2 on WinXP and within a demand forwarding environment with failover = true.
 
I did trap this deadlock in the debugger and it looks like two commands are crossing paths in opposite directions through the MutexTransport. One of the commands is a MessageDispatch and the other is a ShutdownInfo.  Now, when the ShutdownInfo gets through the MutexTransport first, it tries to shutdown the background thread of the TcpTransport.  However, this thread is currently servicing the MessageDispatch and is blocked on the MutexTransport.  Deadlock.
 
So, my patch was simply to avoid entering the synchronized(writeMutex) block in the oneway(Command command) function of MutexTransport if
command.isShutdownInfo() returns true:
 
if (command.isShutdownInfo())
   next.oneway(command);
else
   synchronized(writeMutex)  {
      next.oneway(command);
   }","Windows XP, demand forwarding, failover == true",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6sf:,178081,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Invalid XSD (according to XML Spy),MB-126,12515636,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-929|https://issues.apache.org/activemq/browse/AMQ-929]

XmlSpy reports http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd is invalid with the following message:

<xs:element ref='tns:topic'> makes the content model non-deterministic. Possible causes: name equality, overlapping occurance or substitution groups.

It's complaining because it has no way to validate whether it should validate against tns:topic/tns:queue or the xs:any for the following element

<xs:element name='destination' minOccurs='0' maxOccurs='1'>
   <xs:complexType>
      <xs:choice minOccurs='0' maxOccurs='1'>
         <xs:element ref='tns:queue'/>
         <xs:element ref='tns:topic'/>
         <xs:any/>
      </xs:choice>
   </xs:complexType>
</xs:element>

Possible fix adapted from http://www.thescripts.com/forum/threadedpost1605613.html:

<xs:element name=""destination"" minOccurs=""0"" maxOccurs=""1"">
	<xs:complexType>
		<xs:choice minOccurs=""0"" maxOccurs=""1"">
			<xs:element name=""extensions"">
				<xs:sequence maxOccurs=""1"">
					<xs:any/>				
				</xs:sequence>
			</xs:element>
			<xs:element ref=""tns:queue""/>
			<xs:element ref=""tns:topic""/>
		</xs:choice>
	</xs:complexType>
</xs:element>

But I suspect difficult to fix as the XSD is autogenerated + you'll lose backwards compatability with previous documents. The problem occurs repeatedly throughout the schema.

",N/A,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6rb:,178076,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
consumer queue is empty when running requester,MB-125,12515612,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1057|https://issues.apache.org/activemq/browse/AMQ-1057]


    consumer queue is empty when running requester, producer and consumer. The reply destination also results into an empty string.  ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6pr:,178069,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
StompSubscriptionRemoveTest hangs,MB-124,12515500,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1323|https://issues.apache.org/activemq/browse/AMQ-1323]

StompSubscriptionRemoveTest hangs on windows in a native write so one can never do a mvn install.

The cause is that the message-id is not properly retrieved from the message and the queue name is sent back as message id in acks and hell breaks loose from there.",win32,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6r3:,178075,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Connection leak in the PooledConnectionFactory,MB-123,12515558,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1178|https://issues.apache.org/activemq/browse/AMQ-1178]

The connection pool actually kept creating connections instead of pooling them!  Opps.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6qf:,178072,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Invalid Schema URL for example config file,MB-122,12515625,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1014|https://issues.apache.org/activemq/browse/AMQ-1014]

The config file https://svn.apache.org/repos/asf/incubator/activemq/trunk/activemq-core/src/test/resources/spring-embedded-xbean.xml should ise http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd as schema URL for Spring 2.0. Moreover and more worse the used schema URL (http://activemq.org/config/1.0 http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd) for ActiveMQ points to a schema file which is not valid. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6pj:,178068,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"JDBC Master/Slave: After database failure, stale db connections are reused in DefaultdatabaseLocker",MB-121,12515522,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1263|https://issues.apache.org/activemq/browse/AMQ-1263]

Start two brokers in a JDBC master/slave configuration.  One will become master, the other slave.
Shutdown the database.
The slave will immediately begin emitting emitting database connection exceptions messages from the DefaultdatabaseLocker.
Bring up the database again.
The slave continues to emit database error messages and all subsequent attempts by the DefaultdatabaseLocker to issue its locking query will fail.

The problem is that the DefaultdatabaseLocker grabs one db connection at startup and never releases it.  Therefore unless the JDBC connection has an auto-reconnect feature, the slave broker is dead in the water, because its Connection is bad.  The fix is to allocate a new Connection and PreparedStatement on every iteration of the database locker loop, and free the statement/connection on any Exception.

","Linux x86, Postgresql 8.1",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6qv:,178074,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Activemq connection factory silently ignores the erroneous arguments in broker url,MB-120,12515605,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1071|https://issues.apache.org/activemq/browse/AMQ-1071]

When an erroneous argument is passed to the broker url with failover, activemq connection factory ignores the error. However if failover is removed, it does throw exception. 

Here is the example

1. failover:(tcp://localhost:62012)?jms.prefetchPolicy.all=10&amp;wireFormat.maxInactivityDuration=0&amp;jms.optimizeAcknowledge=false

2. tcp://localhost:62012?jms.prefetchPolicy.all=10&amp;wireFormat.maxInactivityDuration=0&amp;jms.optimizeAcknowledge=false

Only the # 2 throws exception as jms.prefetchPolicy.all is an invalid argument here",Linux,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6pb:,178067,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
activemq-ra pom.xml's xbean plugin missing version,MB-119,12515543,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1218|https://issues.apache.org/activemq/browse/AMQ-1218]

Simple enough to fix...",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6qn:,178073,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
activemq-rar-4.1.0-incubator.rar contains spring twice: spring-1.2.4.jar and spring-2.0.jar,MB-118,12515578,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1124|https://issues.apache.org/activemq/browse/AMQ-1124]

Seems like AMQ-1004 was not solved.

Deploying the .rar containing both spring versions lead to:
11:06:06,531 WARN  [ServiceController] Problem starting service jboss.jca:service=RARDeployment,name='activemq-rar-4.1.0-incubator.rar'
javax.resource.spi.ResourceAdapterInternalException: Failed to startup an embedded broker: xbean:broker-config.xml, due to: java.lang.Illega
lStateException: Could not find valid implementation for: 2.0
        at org.apache.activemq.ra.ActiveMQResourceAdapter.start(ActiveMQResourceAdapter.java:83)
...
Caused by: java.lang.NoSuchMethodError: org.springframework.beans.factory.xml.XmlBeanDefinitionReader.setValidationMode(I)V
        at org.apache.xbean.spring.context.v2.XBeanXmlBeanDefinitionReader.<init>(XBeanXmlBeanDefinitionReader.java:58)
...

Workaround: manual deletion of spring-1.2.4.jar ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6ov:,178065,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Start Broker SQL Exception,MB-117,12515583,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1109|https://issues.apache.org/activemq/browse/AMQ-1109]

1. Create DB for ActiveMQ
2. Start broker using jtds SQL 2005 driver. 
3. Exception: 
2006-12-27 11:08:48,796 [main           ] INFO  JDBCPersistenceAdapter         - Database driver recognized: [jtds_type_4_jdbc_driver_for_ms_sql_server_and_sybase]
2006-12-27 11:08:48,983 [main           ] INFO  DefaultDatabaseLocker          - Attempting to acquire the exclusive lock to become the Master broker
2006-12-27 11:08:48,983 [main           ] ERROR DefaultDatabaseLocker          - Failed to acquire lock: java.sql.SQLException: Line 1: FOR UPDATE clause allowed only for DECLARE CURSOR.
java.sql.SQLException: Line 1: FOR UPDATE clause allowed only for DECLARE CURSOR.
	at net.sourceforge.jtds.jdbc.SQLDiagnostic.addDiagnostic(SQLDiagnostic.java:365)
	at net.sourceforge.jtds.jdbc.TdsCore.tdsErrorToken(TdsCore.java:2781)
	at net.sourceforge.jtds.jdbc.TdsCore.nextToken(TdsCore.java:2224)
	at net.sourceforge.jtds.jdbc.TdsCore.getMoreResults(TdsCore.java:628)
	at net.sourceforge.jtds.jdbc.JtdsStatement.processResults(JtdsStatement.java:525)
	at net.sourceforge.jtds.jdbc.JtdsStatement.executeSQL(JtdsStatement.java:487)
	at net.sourceforge.jtds.jdbc.JtdsPreparedStatement.execute(JtdsPreparedStatement.java:475)
	at org.apache.activemq.store.jdbc.DefaultDatabaseLocker.start(DefaultDatabaseLocker.java:59)
	at org.apache.activemq.store.jdbc.JDBCPersistenceAdapter.start(JDBCPersistenceAdapter.java:175)
	at org.apache.activemq.broker.BrokerService.createRegionBroker(BrokerService.java:1251)
	at org.apache.activemq.broker.BrokerService.createBroker(BrokerService.java:1209)
	at org.apache.activemq.broker.BrokerService.getBroker(BrokerService.java:508)
	at org.apache.activemq.broker.BrokerService.start(BrokerService.java:394)
	at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
	at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
	at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
	at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
	at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
	at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
	at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
	at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:65)
	at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
	at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.activemq.console.Main.runTaskClass(Main.java:159)
	at org.apache.activemq.console.Main.main(Main.java:91)
","Windows 2000, SQL 2005",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6on:,178064,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Non-persistent messages on a Queue expire prior to TimeToLive for small values ,MB-116,12515566,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1162|https://issues.apache.org/activemq/browse/AMQ-1162]

In ActiveMQ3.2.1 non-persistent messages on a Queue expire prior to TimeToLive for relatively small values. 
I assume the cause is clock discrepancies between the client and broker machines.. 

The objective of timeToLive is to determine how long the Broker retains a message before discarding it. 

Since clock differences can be significant and since the original message TimeToLive and the original message timeStamp do have a common reference(clock), it would seem to make sense for the Broker to recalculate the timeToLive based on the difference of these two values.

SEE ALSO: Bug AMQ-975","AMQ - 3.2.1; Client - Windows XP SP 2; JRE1.5.0_06 
Broker - Windows XP SP 2 or Linux RedHat 8.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6p3:,178066,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Unused import sun.security.x509.IssuerAlternativeNameExtension prevents using IBM JDK for building ActiveMQ,MB-115,12515510,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1279|https://issues.apache.org/activemq/browse/AMQ-1279]

Unused import sun.security.x509.IssuerAlternativeNameExtension in org.apache.activemq.broker.region.AbstractRegion.java prevents using IBM JDK 1.5.0 for building ActiveMQ.  Is there any reason to retain this unused import?",WinXP IBMJDK1.5.0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6q7:,178071,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Compression not working ,MB-114,12515574,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1140|https://issues.apache.org/activemq/browse/AMQ-1140]

When setting compression from the message producer side using the {{ActiveMQConnectionFactory.setUseCompression(true)}} method, a call to the {{ActiveMQConnectionFactory.isUseCompression()}} method then returns true. However, when using [Ethereal|http://www.ethereal.com/] to sniff the packets between brokers, the message bodies are not compressed - they're just plain text. This appears to be a bug. 

I'll try to create a test for this. ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6pz:,178070,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Spelling error in examples directory,MB-113,12515511,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1289|https://issues.apache.org/activemq/browse/AMQ-1289]

There is a spelling error inside ""example/src"" directory. The file ""CommnadLineSupport.java "" should be ""CommandLineSupport.java"" and inside the file, ""public class CommnadLineSupport"" should be changed to ""public class CommandLineSupport""","Windows version, didn't check others",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6nr:,178060,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
ActiveMQConnection memory leaks,MB-112,12515559,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1177|https://issues.apache.org/activemq/browse/AMQ-1177]

klas eriksson: Commented on AMQ-847 

I think this issue is actually two (or more memory leaks.
One in createConnection() and one in close().
I tried a very similar program with the following results:

apache-activemq-4.2-incubator-20061204.023752-14:
1. 'createConnection' followed by 'close' when activeMq-server is UP:
outOfmemory after ~1800 createConnection-close.

2. 'createConnection' without close when activeMq server is not started.
outOfmemory after < 1800 failed 'createConnection'.

I have also tried 4.0.x and 4.1.x. The leak memory too.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6nz:,178061,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Slow consumer terminally blocks both client and broker,MB-111,12515622,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1020|https://issues.apache.org/activemq/browse/AMQ-1020]

I have a multi-threaded client (client1) which is acting as both a publisher (Topic1) and subscriber (Topic2) using a single session.  There is another client process (client2) which publishes on Topic2.

I have witnessed the following repeatable scenario where both clients get stuck, which can only be rectified by restarting the broker! :-

Client1 publishes messages to Topic1 (rate = about 30 msgs/sec).
Client2 publishes bursts of messages to Topic2 (rate = 500 msgs/sec) 
Client1 is a slow subscriber on Topic2

After running in this scenario for a couple of seconds, Client1 and Client2 become stuck.  Looking at a stack trace for Client1 I can see that it's read_loop is stuck waiting for input, and it's publisher thread is stuck waiting for an acknowledgement to the synchronous message send (the acknowledgement never arrives because the broker won't sent any more messages).

Client2 is also stuck waiting for an acknowledgement to a synchronous send.

My perception is that it appears the broker is throttling the connection because the consumer is running slowly, but for some reason it gets into a state where all message flow stops (even though the consumer is automatically acknowledging messages, albeit slowly).  Furthermore, if I kill Client1 the broker doesn't recover (using a JMX console the connection remains visible).

The broker uses a vanilla configuration (i.e. no policies are set for the topics in quedtion).
 ","Broker: Windows XP, Sun JDK1.5  Client: activemq-dotnet (Trunk)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6o7:,178062,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Memory usage jumps > 100% with durable subscription and stays there,MB-110,12515610,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1061|https://issues.apache.org/activemq/browse/AMQ-1061]

Using the store pending cursor, activemq.xml configured to use 200M of RAM and Kaha store.  JVM started with options -Xms512M -Xmx512M -Xmn100M.  Messages are 10KB in size, prefetch is default. 

I am seeing the memory usage immediately jump up really high (>100) as soon as a durable consumer is activated when a large number of messages are waiting for that consumer. 

The producer hangs under this situation. 

If the consumer is killed before memory usage drops to normal, memory usage does not drop (i.e., the server locks forever).

Sometimes, it is possible to exhaust the Java heap and actually crash the server.

Here is the kind of things I'm seeing in the DEBUG log: 

2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 10, to: 9 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 9, to: 8 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 8, to: 7 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 7, to: 6 
2006-11-19 13:51:53,046 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 6, to: 5 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 5, to: 4 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 4, to: 3 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 3, to: 2 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 2, to: 1 
2006-11-19 13:51:53,062 [ata File Writer] DEBUG UsageManager                   - Memory usage change.  from: 1, to: 0 
2006-11-19 13:51:53,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 58, to: 59 
2006-11-19 13:51:53,593 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 59, to: 60 
2006-11-19 13:51:53,812 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 60, to: 61 
2006-11-19 13:51:53,843 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 61, to: 62 
2006-11-19 13:51:53,890 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 62, to: 63 
2006-11-19 13:51:54,015 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 63, to: 64 
2006-11-19 13:51:54,015 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 64, to: 65 
2006-11-19 13:51:54,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 65, to: 66 
2006-11-19 13:51:54,062 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 66, to: 67 
2006-11-19 13:51:54,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 67, to: 68 
2006-11-19 13:51:54,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 68, to: 69 
2006-11-19 13:51:54,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 69, to: 70 
2006-11-19 13:51:54,125 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 70, to: 71 
2006-11-19 13:51:54,171 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 71, to: 72 
2006-11-19 13:51:54,171 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 72, to: 73 
2006-11-19 13:51:54,171 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 73, to: 74 
2006-11-19 13:51:54,187 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 74, to: 75 
2006-11-19 13:51:54,234 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 75, to: 76 
2006-11-19 13:51:54,234 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 76, to: 77 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 77, to: 78 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 78, to: 79 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 79, to: 80 
2006-11-19 13:51:54,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 80, to: 81 
2006-11-19 13:51:54,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 81, to: 82 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 82, to: 83 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 83, to: 84 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 84, to: 85 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 85, to: 86 
2006-11-19 13:51:54,312 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 86, to: 87 
2006-11-19 13:51:54,359 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 87, to: 88 
2006-11-19 13:51:54,390 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 88, to: 89 
2006-11-19 13:51:54,390 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 89, to: 90 
2006-11-19 13:51:54,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 90, to: 91 
2006-11-19 13:51:54,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 91, to: 92 
2006-11-19 13:51:54,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 92, to: 93 
2006-11-19 13:51:54,421 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 93, to: 94 
2006-11-19 13:51:54,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 94, to: 95 
2006-11-19 13:51:54,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 95, to: 96 
2006-11-19 13:51:54,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 96, to: 97 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 97, to: 98 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 98, to: 99 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 99, to: 100 
2006-11-19 13:51:54,468 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 100, to: 101 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 101, to: 102 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 102, to: 103 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 103, to: 104 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 104, to: 105 
2006-11-19 13:51:54,500 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 105, to: 106 
2006-11-19 13:51:54,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 106, to: 107 
2006-11-19 13:51:54,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 107, to: 108 
2006-11-19 13:51:54,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 108, to: 109 
2006-11-19 13:51:54,593 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 109, to: 110 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 110, to: 111 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 111, to: 112 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 112, to: 113 
2006-11-19 13:51:54,609 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 113, to: 114 
2006-11-19 13:51:54,625 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 114, to: 115 
2006-11-19 13:51:54,687 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 115, to: 116 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 116, to: 117 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 117, to: 118 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 118, to: 119 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 119, to: 120 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 120, to: 121 
2006-11-19 13:51:54,718 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 121, to: 122 
2006-11-19 13:51:54,734 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 122, to: 123 
2006-11-19 13:51:54,734 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 123, to: 124 
2006-11-19 13:51:54,750 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 124, to: 125 
2006-11-19 13:51:54,765 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 125, to: 126 
2006-11-19 13:51:54,781 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 126, to: 127 
2006-11-19 13:51:54,781 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 127, to: 128 
2006-11-19 13:51:54,812 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 128, to: 129 
2006-11-19 13:51:54,828 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 129, to: 130 
2006-11-19 13:51:54,828 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 130, to: 131 
2006-11-19 13:51:54,828 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 131, to: 132 
2006-11-19 13:51:54,843 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 132, to: 133 
2006-11-19 13:51:54,984 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 133, to: 134 
2006-11-19 13:51:54,984 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 134, to: 135 
2006-11-19 13:51:54,984 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 135, to: 136 
2006-11-19 13:51:55,031 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 136, to: 137 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 137, to: 138 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 138, to: 139 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 139, to: 140 
2006-11-19 13:51:55,046 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 140, to: 141 
2006-11-19 13:51:55,062 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 141, to: 142 
2006-11-19 13:51:55,062 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 142, to: 143 
2006-11-19 13:51:55,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 143, to: 144 
2006-11-19 13:51:55,109 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 144, to: 145 
2006-11-19 13:51:55,234 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 145, to: 146 
2006-11-19 13:51:55,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 146, to: 147 
2006-11-19 13:51:55,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 147, to: 148 
2006-11-19 13:51:55,265 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 148, to: 149 
2006-11-19 13:51:55,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 149, to: 150 
2006-11-19 13:51:55,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 150, to: 151 
2006-11-19 13:51:55,281 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 151, to: 152 
2006-11-19 13:51:55,375 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 152, to: 153 
2006-11-19 13:51:55,390 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 153, to: 154 
2006-11-19 13:51:55,406 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 154, to: 155 
2006-11-19 13:51:55,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 155, to: 156 
2006-11-19 13:51:55,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 156, to: 157 
2006-11-19 13:51:55,437 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 157, to: 158 
2006-11-19 13:51:55,453 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 158, to: 159 
2006-11-19 13:51:55,453 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 159, to: 160 
2006-11-19 13:51:55,453 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 160, to: 161 
2006-11-19 13:51:55,484 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 161, to: 162 
2006-11-19 13:51:55,484 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 162, to: 163 
2006-11-19 13:51:55,531 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 163, to: 164 
2006-11-19 13:51:55,562 [/127.0.0.1:1999] DEBUG UsageManager                   - Memory usage change.  from: 164, to: 165","Windows XP Professional, JVM 1.5.0_09",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6of:,178063,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Network connections do not reconnect when using static: with failover=true,MB-109,12515655,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-734|https://issues.apache.org/activemq/browse/AMQ-734]

If I pull out RJ45 port from net card ,waiting a time ,then put  RJ45 port net card .Network is resume.Other computer always throw errors and net channel can't work.",winxp java1.5.6,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6nb:,178058,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Scheduler.cancel uses incorrect argument to shutdown threads,MB-108,12515536,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1235|https://issues.apache.org/activemq/browse/AMQ-1235]

looking at the code from 4.1.1 in org.apache.activemq.thread.Scheduler, in the cancel method:

the Runnable task argument is passed to clockDaemon.remove(). i think this is incorrect. ScheduledFuture ticket should be passed to clockDaemon.remove().

the javadocs of ScheduledThreadPoolExecutor.remove discuss the possibility that Runnables might be stored in some other form internally, so calling remove with a plain Runnable might not do anything. I think the solution is to call remove with a ScheduledFuture, which is how they are stored internally in ScheduledThreadPoolExecutor.


i came across this bug after upgrading to the java 5 version of backport-util-concurrent 3.0. that version makes more assumptions about the types that are passed into ScheduledThreadPoolExecutor.remove, so when you pass in a regular Runnable you'll get a ClassCastException.


this is trivial to fix, so i don't think a patch is necessary. also i think this might address the memory leak mentioned in AMQ-1205",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6n3:,178057,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Admin code has a minor bug - blank page in IE,MB-107,12515533,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:37 AM,29/Nov/16 4:17 PM,03/Aug/07 11:37 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1245|https://issues.apache.org/activemq/browse/AMQ-1245]

need to add</script> to the end of main.jsp decorator in the admin app like this below, IE shows a blank page otherwise

<SCRIPT type='text/javascript' src='/admin/js/common.js'/></script>
<script type='text/javascript' src='/admin/js/css.js'/></script>
<script type='text/javascript' src='/admin/js/standardista-table-sorting.js'/></script>
",Admin code has a minor bug,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6nj:,178059,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
4.0 M4 NullPointerException while shutting down,MB-106,12515666,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:17 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-528|https://issues.apache.org/activemq/browse/AMQ-528]

Setup: 

3 networked brokers, B1, B2, and B3, on 3 servers, connected using multicast discovery. activemq.xml: 

 <broker useJmx=""false"" brokerName=""B1""> 
  
 <persistenceAdapter> 
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""foo"" dataSource=""#mysql-ds""/> 
 </persistenceAdapter> 
  
 <transportConnectors> 
 <transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/> 
 </transportConnectors> 
  
 <networkConnectors> 
 <networkConnector uri=""multicast://default""/> 
 </networkConnectors> 
  
 </broker> 
  
 <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close""> 
           <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/> 
           <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/> 
                 <property name=""username"" value=""activemqUser""/> 
                 <property name=""password"" value=""activemqPwd""/> 
                 <property name=""poolPreparedStatements"" value=""true""/> 
 </bean> 

Similar for B2 and B3. 

Two queues: Q1 and Q2. 

Two producers, one for each queue, both producers connected to B1. 

One Q1 cosumer connected to B1, another Q1 consumer on B2. 

One Q2 consumer connected to B2, another Q2 consumer connected to B3. 

Steps: 

Start the brokers and start sending messages to the queue. 

After a while, stop the brokers (Sequence does not matter) 

See the errors in catalina.out of the Tomcat that has a broker with both producers and consumers connected 

The problems:

1. 

Exception in thread ""ActiveMQ Scheduler"" java.lang.NullPointerException
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfProvider.nanoTime(Utils.java:219)
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime(Utils.java:99)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor.now(ScheduledThreadPoolExecutor.java:88)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:137)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""      at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:154)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
         at java.lang.Thread.run(Thread.java:595)
 java.lang.NullPointerException
         at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils$SunPerfProvider.nanoTime(Utils.java:219)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""      at edu.emory.mathcs.backport.java.util.concurrent.helpers.Utils.nanoTime(Utils.java:99)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor.now(ScheduledThreadPoolExecutor.java:88)
         at edu.emory.mathcs.backport.java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.getDelay(ScheduledThreadPoolExecutor.java:137)
         at edu.emory.mathcs.backport.java.util.concurrent.DelayQueue.take(DelayQueue.java:154)
         at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:470)
 Exception in thread ""ActiveMQ Scheduler"" Exception in thread ""ActiveMQ Scheduler""       at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:667)
         at java.lang.Thread.run(Thread.java:595)

2. The same exception is logged to the log file (in my case catalina.out) for hundreds of times, resulting a log file exceeding 150 MB in 2 minutes. ","RedHat Linux Enterprise Server 3, Tomcat 5.5.15, MySQL 5.0.18 for Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6lb:,178049,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Sporatic ArrayOutOfBoundsException with Kaha persistence (in org.apache.activemq.kaha.impl.index.hash.HashPage.addHashEntry),MB-105,12515531,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:17 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1246|https://issues.apache.org/activemq/browse/AMQ-1246]

This error just started occurring after restarting activemq after its memory got fairly high (we've been running our app with this same ActiveMQ 4.2 build for several months without ever seeing this).  It's happening on a persistent topic and doesn't happen after each message is added to the topic but happens every 20 - 30 messages (the occurrence isn't very consistent).

java.lang.IndexOutOfBoundsException: Index: 25, Size: 22
        at java.util.ArrayList.add(ArrayList.java:368)
        at org.apache.activemq.kaha.impl.index.hash.HashPage.addHashEntry(HashPage.java:197)
        at org.apache.activemq.kaha.impl.index.hash.HashPageInfo.addHashEntry(HashPageInfo.java:65)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.addHashEntry(HashBin.java:181)
        at org.apache.activemq.kaha.impl.index.hash.HashBin.put(HashBin.java:144)
        at org.apache.activemq.kaha.impl.index.hash.HashIndex.store(HashIndex.java:230)
        at org.apache.activemq.kaha.impl.container.MapContainerImpl.place(MapContainerImpl.java:389)
        at org.apache.activemq.store.kahadaptor.KahaTopicMessageStore.addMessage(KahaTopicMessageStore.java:62)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore.addMessage(KahaTransactionStore.java:133)
        at org.apache.activemq.store.kahadaptor.KahaTransactionStore$2.addMessage(KahaTransactionStore.java:68)
        at org.apache.activemq.broker.region.Topic.doMessageSend(Topic.java:349)
        at org.apache.activemq.broker.region.Topic.send(Topic.java:341)
        at org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:306)
        at org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:407)
        at org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:203)
        at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:127)
        at org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:97)
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:137)
        at org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:474)
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:618)
        at org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:282)
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:188)
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:121)
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
        at java.lang.Thread.run(Thread.java:595)",4.2-SNAPSHOT (build from 3/26/2007),,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6lr:,178051,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
MessageServletSupport does not compile,MB-104,12515509,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:17 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1292|https://issues.apache.org/activemq/browse/AMQ-1292]

commit for 549845 took out the logger imports but it left the logger",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6m7:,178053,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Use of Temporary Destinations over broker networks can cause the network bridges to die.,MB-103,12515649,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:17 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-804|https://issues.apache.org/activemq/browse/AMQ-804]

And when the bridge dies, it is not re-established.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6mv:,178056,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Slow consumer causes producer to block on UsageManager.waitForSpace indefinately,MB-102,12515575,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1136|https://issues.apache.org/activemq/browse/AMQ-1136]

The issue is described in this thread:

http://www.nabble.com/Blocking-on-UsageManager.waitForSpace-again-tf3031460.html

Basically, a slow consumer can cause a producer to block on UsageManager.waitForSpace indefinately.

A basic code sample to reproduce the problem is provided here:

http://www.nabble.com/Re%3A-Blocking-on-UsageManager.waitForSpace-again-p8521205.html

Note that the reproducibility of the bug depends on the initial and maximum size of the VM's heap.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6lz:,178052,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
DestinationMap seems to use up lots of RAM if using deep hierarchies,MB-101,12515607,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1068|https://issues.apache.org/activemq/browse/AMQ-1068]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6lj:,178050,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Failed to register MBean error.,MB-100,12515618,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1044|https://issues.apache.org/activemq/browse/AMQ-1044]

If async error such as a inactivity IO exception is detected while a subscription is being created, then that subscription is not fully cleaned up when the connection is disposed.  If the client is using failover and reconnects, then it gets a ""Failed to register MBean error.""  Since the subscription is still registered in JMX.  This is also a source of a memory leak since subscriptions are are left registered in JMX.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6mf:,178054,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
JMS to JMS Bridge fails with Number format exception on physical name,MB-99,12515585,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1110|https://issues.apache.org/activemq/browse/AMQ-1110]

Maybe this is just some missconfiguration from my site but ...

I'm trying to use activemq to integrate some c++ code with the j2ee world. My task is to forward messages generated on the c++ side to the JMS of Bea Weblogic 8.1. ActiveMQ is running outside the WLS in a separate process. The startup looks fine as the wls context can be used to get references to the ConnectionFactory and the configured test destination WLSTestQ. On sending a message to the local queue of the bridge i get the following stacktrace:

 java.lang.NumberFormatException: For input string: ""WLSTESTQ""
at java.lang.NumberFormatException.forInputString(NumberFormatException.java:48)
at java.lang.Integer.parseInt(Integer.java:447)
at java.lang.Integer.parseInt(Integer.java:497)
at org.apache.activemq.command.ActiveMQTempDestination.setPhysicalName(ActiveMQTempDestination.java:66)
at org.apache.activemq.command.ActiveMQDestination.<init>(ActiveMQDestination.java:142)
at org.apache.activemq.command.ActiveMQTempDestination.<init>(ActiveMQTempDestination.java:38)
at org.apache.activemq.command.ActiveMQTempQueue.<init>(ActiveMQTempQueue.java:36)
at org.apache.activemq.command.ActiveMQDestination.transform(ActiveMQDestination.java:107)
at org.apache.activemq.command.ActiveMQMessage.setJMSDestination(ActiveMQMessage.java:219)
at weblogic.jms.client.JMSProducer.sendInternal(JMSProducer.java:428)
at weblogic.jms.client.JMSProducer.send(JMSProducer.java:152)
at weblogic.jms.client.JMSProducer.send(JMSProducer.java:215)
at org.apache.activemq.network.jms.QueueBridge.sendMessage(QueueBridge.java:87)
at org.apache.activemq.network.jms.DestinationBridge.onMessage(DestinationBridge.java:134)
at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:840)
at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:96)
at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:165)
at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:88)
at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:25)
at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:39)

ERROR DestinationBridge - failed to forward message on attempt: 1 
reason: java.lang.NumberFormatException: 
For input string: ""WLSTESTQ"" message: 
ActiveMQTextMessage {
commandId = 14, 
responseRequired = false, 
messageId = ID:KStanke-1523-1167310376227-0:0:1:1:10, 
originalDestination = null, 
originalTransactionId = null, 
producerId = ID:KStanke-1523-1167310376227-0:0:1:1, 
destination = queue://TEST.FOO, 
transactionId = null, 
expiration = 0, 
timestamp = 1167310385795, 
arrival = 0, 
correlationId = null, 
replyTo = null, 
persistent = false, 
type = null, 
priority = 4, 
groupID = null, 
groupSequence = 0, 
targetConsumerId = null,
compressed = false, 
userID = null, 
content = null, 
marshalledProperties = null,
dataStructure = null, 
redeliveryCounter = 0, 
size = 0, 
properties = null, 
readOnlyProperties = true, 
readOnlyBody = true, 
droppable = false, 
text = Message: 9 sent at: Thu Dec 28 13:53:05 CET 2006
[Skipped some blank lines]
}

I'm using the message producer from the example to test the routing to wls JMS.  I also attached my activemq.xml configuration for you reference.","Using Windows XP SP2, JDK 1.6.0, Bea Weblogic Server 8.1 SP6",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6kn:,178046,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Kaha DB hangs on restart,MB-98,12515580,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1121|https://issues.apache.org/activemq/browse/AMQ-1121]

I run a bunch or messages through AMQ, then restarted AMQ and it hangs. Following are the last messages that I see. AMQ is not listening on the configured port.

2007-01-06 01:35:29,723 [main           ] DEBUG DataManager                    - End of data file reached at (header was invalid): offset = 810, file = 1, size = 219
2007-01-06 01:35:29,754 [JMX connector  ] INFO  ManagementContext              - JMX consoles can connect to service:jmx:rmi:///jndi/rmi://localhost:11099/jmxrmi
2007-01-06 01:35:32,660 [main           ] DEBUG DataManager                    - End of data file reached at (header was invalid): offset = 88244949, file = 5, size = 100856","Windows XP, NetApp",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6kv:,178047,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
SimpleNetworkTest hangs,MB-97,12515664,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-594|https://issues.apache.org/activemq/browse/AMQ-594]

The SimpleNetworkTest appears to be hanging in Linux platform",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6kf:,178045,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Bad quotes on web page,MB-96,12515527,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1258|https://issues.apache.org/activemq/browse/AMQ-1258]

The page at http://activemq.apache.org/getting-started.html#GettingStarted-StartingActiveMQ in the testing installation section I find the following in the windows instructions:

netstat -an|find &quot;61616&quot;

Obviously a double-escaped ampersand in the HTML. It should of course be

netstat -an|find ""61616""",http://activemq.apache.org/getting-started.html#GettingStarted-StartingActiveMQ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6mn:,178055,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
IllegalStateException thrown from QueueBrowserServlet,MB-95,12515524,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1261|https://issues.apache.org/activemq/browse/AMQ-1261]

I get this from the demo app when I go to the queue browser pages ...

java.lang.IllegalStateException: missing ConnectionFactory in QueueBrowserServlet
	at org.apache.activemq.web.QueueBrowseServlet.getConnectionFactory(QueueBrowseServlet.java:75)
	at org.apache.activemq.web.QueueBrowseServlet.getConnection(QueueBrowseServlet.java:63)
	at org.apache.activemq.web.QueueBrowseServlet.createSession(QueueBrowseServlet.java:158)
	at org.apache.activemq.web.QueueBrowseServlet.borrowSession(QueueBrowseServlet.java:140)
	at org.apache.activemq.web.QueueBrowseServlet.doGet(QueueBrowseServlet.java:89)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:707)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)
	at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:467)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1075)
	at org.apache.activemq.web.SessionFilter.doFilter(SessionFilter.java:47)
	at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1066)
	at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:365)
	at org.mortbay.jetty.security.SecurityHandler.handle(SecurityHandler.java:185)
	at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:181)
	at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:715)
	at org.mortbay.jetty.webapp.WebAppContext.handle(WebAppContext.java:402)
	at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)
	at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:139)
	at org.mortbay.jetty.Server.handle(Server.java:285)
	at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:469)
	at org.mortbay.jetty.HttpConnection$RequestHandler.headerComplete(HttpConnection.java:791)
	at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:500)
	at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:209)
	at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:358)
	at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:365)
	at org.mortbay.thread.BoundedThreadPool$PoolThread.run(BoundedThreadPool.java:442)","apache-activemq-4.2-SNAPSHOT as of june 2, 2007",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6l3:,178048,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"Closing consumer does not free server memory, server heap overflows",MB-94,12515608,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1062|https://issues.apache.org/activemq/browse/AMQ-1062]

I am using the store durable pending cursor.

Create a producer for a topic and let it run continuously for the remainder of the test.
Create a durable consumer and kill it immediately.  (So now messages are piling up for the consumer, but memory usage is low thanks to the store cursor.)
Wait a few minutes.
Now, start the same durable consumer again.
Memory usage will increase considerably at this point (I get it around 20%).
Now, stop the consumer.
Memory usage DOES NOT go down.
Now, reconnect the same durable consumer.  It is possible to get a heap overrun that nukes the server!

This is a problem when there are many consumers, and  the general use case is that many of them are not active at the same time.  I am classifying this as ""critical bug"" due to the heap overflow whenI try to reconnect, but it would be great if the memory usage went down as soon as disconnect.

I image there may also be problems like this with queues, but did not test.

2006-11-19 17:24:20,015 [/127.0.0.1:3278] DEBUG PrefetchSubscription           - Prefetch limit.
2006-11-19 17:24:21,281 [/127.0.0.1:3278] DEBUG Service                        - Error occured while processing sync command: java.lang.OutOfMemoryError: Java heap space
java.lang.OutOfMemoryError: Java heap space
","Windows XP Professional, Java HotSpot(TM) Client VM version 1.5.0_09-b01",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6k7:,178044,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"""TimeToLive"" doesn't work on MessageListener",MB-93,12515604,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1072|https://issues.apache.org/activemq/browse/AMQ-1072]

When a queue message is consumed using MessageListener throught the setMessageListener method,
it could recieve the messages even if they are expired. (While using consumer.receive() will discard them).

Reproduce Steps:
1. deliver a number of message to a queue with a short expire time.
2. wait until the message should be expired.
3. use MessageConsumer.receive() method to receive the messages,
     -- You should not receive any messages, and through the monitor console, you should see some
         messages are left and not discarded.
4. stop the receive() method.
5. add a MessageListener to the same queue, the messages which found left is received by the
     onMessage() method.

ps. if step3 is skipped, likely you would receive all the expired message.

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6jb:,178040,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"4.1 RC1: META-INF/spring.schemas refers to building user ""file:/Users/chirino/""",MB-92,12515624,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1016|https://issues.apache.org/activemq/browse/AMQ-1016]

Referring to the 4.1 RC1 posted by Hiram Chirino  Oct 06, here:
  http://www.nabble.com/ActiveMQ-4.1-RC-1-tf2397970.html#a6686974

The META-INF file spring.schemas have the single line.
""http\://activemq.org/config/1.0=file:/Users/chirino/sandbox/activemq-4.1/activemq-core/target/activemq.xsd""

Notice ""file:/"" and ""Users/chirino"". Referring to org.springframework.beans.factory.xml.PluggableSchemaResolver's javadoc: ""schema-location should also be a schema file in the classpath"", and that no-one can tell what structure I will have on my fs, this must be wrong. In addition, I most probably won't have a user name ""chirino"".

PS: In addition, the doc at
  http://www.activemq.org/site/how-do-i-embed-a-broker-inside-a-connection.html
refers as such:

xmlns:amq=""http://activemq.org/config/1.0""
 .. and ..
xsi:schemaLocation=""http://activemq.org/config/1.0 http://people.apache.org/repository/org.apache.activemq/xsds/activemq-core-4.1-incubator-SNAPSHOT.xsd""

Wouldn't it be nice if this was put at a better place than such a snapshot-build URI? It could be put where it will reside when 4.1 actually is out, w/o anyone being to angry about changes during the finalization period, I personally believe.",n/a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6iv:,178038,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Messages are read from queue but not removed,MB-91,12515631,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-962|https://issues.apache.org/activemq/browse/AMQ-962]

Using Spring, configured a VM message broker (non-persistant) and a message consumer that reads messages from queue.

Messages are read from queue, but despite calling message.acknowledge(); messages remain on the queue (and consume memory).

I turned off optimiseAcknowledge.

May be related to bug# AMQ-716.

	  <amq:broker id=""broker"" useJmx=""true"" persistent=""false"">
	    <amq:transportConnectors>
	      <amq:transportConnector uri=""tcp://localhost:0"" />
	    </amq:transportConnectors>
	  </amq:broker>

	 <!-- a pooling based JMS provider -->
	  <bean id=""jmsFactory"" class=""org.apache.activemq.pool.PooledConnectionFactory"">
	    <property name=""connectionFactory"">
	      <bean class=""org.apache.activemq.ActiveMQConnectionFactory"">
	        <property name=""brokerURL"">
	          <value>vm://localhost</value>
	        </property>
	        <property name=""optimizeAcknowledge"">
	          <value>false</value>
	        </property>	        
	      </bean>
	    </property>
	  </bean>

	  <bean id=""simpleJmsTemplate"" class=""org.springframework.jms.core.JmsTemplate"">
	    <property name=""connectionFactory"">
	    	<ref local=""jmsFactory"" />
	    </property>
	  </bean>

","Java Virtual Machine: Java HotSpot(TM) Server VM version 1.5.0_06-b05JIT 
compiler:  HotSpot Server Compiler
Operating System:  Windows XP 5.1
Architecture: x86
Number of processors:  1
Total physical memory:  �1,048,048 kbytes
Free physical memory:  ���107,240 kbytes
Committed virtual memory:  ���374,048 kbytes
Total swap space:  �2,518,944 kbytes
Free swap space:  ���721,416 kbytes
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6hz:,178034,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Kaha can't be completely disabled in activemq-5.0,MB-90,12515508,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1294|https://issues.apache.org/activemq/browse/AMQ-1294]

Kaha can't be completely disabled in activemq-5.0-20070621.

With this config:

 <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""${activemq.base}/activemq-data""/>
 </persistenceAdapter>

ActiveMQ should just use JDBC/Derby+Journal, as soon as the first consumer gets a message, ActiveMQ logs this:

INFO  KahaStore                      - Kaha Store successfully deleted data directory activemq-data/localhost/tmp_storage
INFO  BrokerService                  - Successfully deleted temporary storage

So ActiveMQ is trying to delete temporary files belong to a persistence engine that isn't used.

It seems odd that Kaha purges temporary files during consumer startup, rather than ActiveMQ startup when Kaha would normally (if I was using it), be recovering/checking its database.


","java version ""1.5.0""
Java(TM) 2 Runtime Environment, Standard Edition (build diablo-1.5.0-b01)
Java HotSpot(TM) Server VM (build diablo-1.5.0_07-b01, mixed mode)
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6jr:,178042,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Client deadlock during failover,MB-89,12515590,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1093|https://issues.apache.org/activemq/browse/AMQ-1093]

In 4.1.0 there's deadlock on connection failover. There is the scenario: 
1. Client consumes message using message listener 
2. Conection is lost 
3. Client sends message to another queue from messagle listener and waits until connection is restored. 
4. Reconnect task blocks on reconnecting. 
 
This bug is new to 4.1.0. The problem is in ActiveMQMessageConsumre.dispatch . There is new lock on unconsumedMessages.getMutex() . So the reconnect task cannot invoke ActiveMQMessageConsumre.clearMessagesInProgress(), because lock is acquired by message listener, which waits untill message is sent (untill connection is resumed). Here is stack traces: 
 
""ActiveMQ Session Task"" daemon prio=1 tid=0x0000002b27774260 nid=0x4778 in Object.wait() [0x0000000040ef3000..0x0000000040ef4db0] 
        at java.lang.Object.wait(Native Method) 
        - waiting on <0x0000002b0020a7c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar) 
        at java.lang.Object.wait(Object.java:474) 
        at edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar.await(CondVar.java:75) 
        - locked <0x0000002b0020a7c8> (a edu.emory.mathcs.backport.java.util.concurrent.locks.CondVar) 
        at edu.emory.mathcs.backport.java.util.concurrent.ArrayBlockingQueue.take(ArrayBlockingQueue.java:318) 
        at org.apache.activemq.transport.FutureResponse.getResult(FutureResponse.java:42) 
        at org.apache.activemq.transport.ResponseCorrelator.request(ResponseCorrelator.java:75) 
        at org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1171) 
        at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1548) 
        at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465) 
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:75) 
        - locked <0x0000002b173fa480> (a org.apache.activemq.ActiveMQMessageProducer) 
        at org.apache.activemq.pool.PooledProducer.send(PooledProducer.java:60) 
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:537) 
        at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:513) 
        at org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:479) 
        at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:430) 
        at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:477) 
        at lt.elitnet.dbp.das.impl.storage.HI2StorageImpl.storeHI2Message(HI2StorageImpl.java:57) 
        at lt.elitnet.dbp.das.impl.hi2.HI2PersistanceBase.saveIRIContent(HI2PersistanceBase.java:77) 
        at sun.reflect.GeneratedMethodAccessor185.invoke(Unknown Source) 
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25) 
        at java.lang.reflect.Method.invoke(Method.java:585) 
        at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:318) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:203) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:162) 
        at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:107) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at org.springframework.orm.hibernate3.HibernateInterceptor.invoke(HibernateInterceptor.java:104) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at lt.elitnet.dbp.das.impl.alarming.DataBaseConnectionAlarmsPublisher.invoke(DataBaseConnectionAlarmsPublisher.java:59) 
        at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) 
        at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:209) 
        at $Proxy24.saveIRIContent(Unknown Source) 
        at lt.elitnet.dbp.das.impl.hi2.HI2MessageListener.onMessage(HI2MessageListener.java:40) 
        at lt.elitnet.dbp.commons.messaging.TextMessageListener.deliverMessage(TextMessageListener.java:84) 
        at lt.elitnet.dbp.commons.messaging.TextMessageListener.onMessage(TextMessageListener.java:50) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:854) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:793) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:763) 
        at org.springframework.jms.listener.AbstractMessageListenerContainer.executeListener(AbstractMessageListenerContainer.java:743) 
        at org.springframework.jms.listener.SimpleMessageListenerContainer$2.onMessage(SimpleMessageListenerContainer.java:190) 
        at org.apache.activemq.ActiveMQMessageConsumer.dispatch(ActiveMQMessageConsumer.java:840) 
        - locked <0x0000002b1771ddc0> (a java.lang.Object) 
        at org.apache.activemq.ActiveMQSessionExecutor.dispatch(ActiveMQSessionExecutor.java:96) 
        at org.apache.activemq.ActiveMQSessionExecutor.iterate(ActiveMQSessionExecutor.java:165) 
        at org.apache.activemq.thread.PooledTaskRunner.runTask(PooledTaskRunner.java:111) 
        at org.apache.activemq.thread.PooledTaskRunner.access$100(PooledTaskRunner.java:26) 
        at org.apache.activemq.thread.PooledTaskRunner$1.run(PooledTaskRunner.java:44) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:650) 
        at edu.emory.mathcs.backport.java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:675) 
        at java.lang.Thread.run(Thread.java:595) 
 
""ActiveMQ Transport: tcp:///192.168.2.55:61616"" prio=1 tid=0x0000002b2e814660 nid=0x4773 waiting for monitor entry [0x0000000040e82000..0x0000000040e82c30] 
        at org.apache.activemq.MessageDispatchChannel.clear(MessageDispatchChannel.java:135) 
        - waiting to lock <0x0000002b1771ddc0> (a java.lang.Object) 
        at org.apache.activemq.ActiveMQMessageConsumer.clearMessagesInProgress(ActiveMQMessageConsumer.java:546) 
        at org.apache.activemq.ActiveMQSession.clearMessagesInProgress(ActiveMQSession.java:524) 
        at org.apache.activemq.ActiveMQConnection.transportInterupted(ActiveMQConnection.java:1547) 
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:100) 
        at org.apache.activemq.transport.TransportFilter.transportInterupted(TransportFilter.java:100) 
        at org.apache.activemq.transport.failover.FailoverTransport.handleTransportFailure(FailoverTransport.java:236) 
        at org.apache.activemq.transport.failover.FailoverTransport.access$300(FailoverTransport.java:55) 
        at org.apache.activemq.transport.failover.FailoverTransport$1.onException(FailoverTransport.java:120) 
        at org.apache.activemq.transport.TransportFilter.onException(TransportFilter.java:96) 
        at org.apache.activemq.transport.WireFormatNegotiator.onException(WireFormatNegotiator.java:147) 
        at org.apache.activemq.transport.InactivityMonitor.onException(InactivityMonitor.java:150) 
        at org.apache.activemq.transport.TransportSupport.onException(TransportSupport.java:97) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:150) 
        at java.lang.Thread.run(Thread.java:595)","Linux 2.6, java 1.5.0",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6jz:,178043,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
NullPointerException when using MasterConnector and specifying the broker name with space in it.,MB-88,12515645,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-841|https://issues.apache.org/activemq/browse/AMQ-841]

I've got a hard time trying to figure out why I got a null pointer trying to use the Master/slave configuration for ActiveMQ. 

Finnally by looking at the code I've saw the following:
In BrokerService.java 
public void initializeMasterConnector(URI remoteURI) throws Exception { 
...
URI localURI = getVmConnectorURI();
...
}

public URI getVmConnectorURI() {
        if (vmConnectorURI == null) {
            try {
                vmConnectorURI = new URI(""vm://"" + getBrokerName());
            }
            catch (URISyntaxException e) {
            }
        }
        return vmConnectorURI;
}

My problem is that I've specified a broker name with space in it  ""Slave Broker"". So I the new URI() here throw a URISyntaxException that was badly absorb. And this leads to a null pointer at line:159 of TransportFactory.java.
   String scheme = location.getScheme(); when location is null du to the previous exception.

The link between the error and the cause was not clear at the first sigth. 

A precondition on the setBrokerName could do the job.","Linux, jdk1.5.0_06",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6hr:,178033,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
create=false for vm://localhost causes Exception,MB-87,12515577,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1128|https://issues.apache.org/activemq/browse/AMQ-1128]

When setting create=false in ActiveMQConnectionFactory.brokerUrl, the VMTransportFactory's doCompositeConnect method fails with:

Invalid connect parameters: {create=false}

Removing this option from the options map when retrieving it fixes this bug.  Patch attached.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6jj:,178041,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
UsageManager leak when topic consumers are disconnected.,MB-86,12515563,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1172|https://issues.apache.org/activemq/browse/AMQ-1172]

The usage on the usage manager associated with a topic will have a usage leak without the corresponding memory leak if consumer connections continually connection and disconnect.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6if:,178036,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
StoreTest.testLock() fails due to java.io.IOException: The process cannot access the file because another process has locked a portion of the file on Windows,MB-85,12515491,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1348|https://issues.apache.org/activemq/browse/AMQ-1348]

{code}
java.io.IOException: The process cannot access the file because another process has locked a portion of the file
	at java.io.RandomAccessFile.readBytes(Native Method)
	at java.io.RandomAccessFile.read(Unknown Source)
	at java.io.RandomAccessFile.readFully(Unknown Source)
	at java.io.RandomAccessFile.readFully(Unknown Source)
	at org.apache.activemq.kaha.impl.index.StoreIndexReader.readItem(StoreIndexReader.java:46)
	at org.apache.activemq.kaha.impl.index.IndexManager.initialize(IndexManager.java:177)
	at org.apache.activemq.kaha.impl.index.IndexManager.<init>(IndexManager.java:55)
	at org.apache.activemq.kaha.impl.KahaStore.getIndexManager(KahaStore.java:358)
	at org.apache.activemq.kaha.impl.KahaStore.initialize(KahaStore.java:428)
	at org.apache.activemq.kaha.impl.KahaStore.doesListContainerExist(KahaStore.java:250)
	at org.apache.activemq.kaha.impl.KahaStore.doesListContainerExist(KahaStore.java:246)
	at org.apache.activemq.kaha.StoreTest.testLock(StoreTest.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at junit.framework.TestCase.runTest(TestCase.java:154)
	at junit.framework.TestCase.runBare(TestCase.java:127)
	at junit.framework.TestResult$1.protect(TestResult.java:106)
	at junit.framework.TestResult.runProtected(TestResult.java:124)
	at junit.framework.TestResult.run(TestResult.java:109)
	at junit.framework.TestCase.run(TestCase.java:118)
	at org.eclipse.jdt.internal.junit.runner.junit3.JUnit3TestReference.run(JUnit3TestReference.java:130)
	at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:460)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:673)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:386)
	at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:196)

{code}",Windows.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6j3:,178039,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
oracle jdbc adapter has issues storing messages greater than 64k,MB-84,12515544,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1216|https://issues.apache.org/activemq/browse/AMQ-1216]


 <bean id=""oracle-ds"" class=""org.apache.commons.dbcp.BasicDataSource""
destroy-method=""close"">
   <property name=""driverClassName""
value=""oracle.jdbc.driver.OracleDriver""/>
   <property name=""url"" value=""jdbc:oracle:thin:@dev.abc.com:1521:dev10g""/>
   <property name=""username"" value=""abc""/>
   <property name=""password"" value=""abc""/>
   <property name=""poolPreparedStatements"" value=""true""/>
 </bean>


org.springframework.jms.UncategorizedJmsException: Uncategorized exception
occured during JMS processing; nested exception is javax.jms.JMSException:
Failed to broker message: ID:abc2-2257-1175204828244-0:8:1:1:1 in container:
java.sql.SQLException: Data size bigger than max size for this type: 63268
Caused by:
javax.jms.JMSException: Failed to broker message:
ID:abc2-2257-1175204828244-0:8:1:1:1 in container: java.sql.SQLException:
Data size bigger than max size for this type: 63268
       at
org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:46)
       at
org.apache.activemq.ActiveMQConnection.syncSendPacket(ActiveMQConnection.java:1177)
       at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1548)
       at
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
       at
org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:356)
       at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:537)
       at org.springframework.jms.core.JmsTemplate.doSend(JmsTemplate.java:513)
       at org.springframework.jms.core.JmsTemplate$2.doInJms(JmsTemplate.java:479)
       at org.springframework.jms.core.JmsTemplate.execute(JmsTemplate.java:430)
       at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:477)
       at org.springframework.jms.core.JmsTemplate.send(JmsTemplate.java:469)
       at
com.abc.jump.jdm.service.jms.AsynchronousTaskManagerImpl.createDeploymentTasks(AsynchronousTaskManagerImpl.java:67)
       at
com.abc.jump.process.view.plan.wizard.DeploymentTasksWizard.createDeploymentTasksAsynchronously(DeploymentTasksWizard.java:465)
       at
com.abc.jump.process.view.plan.wizard.DeploymentTasksWizard.onFinish(DeploymentTasksWizard.java:424)
       at
com.abc.jump.process.view.wizard.WizardScreen.onNavigation(WizardScreen.java:504)
       at echopoint.WizardPane.fireOnNavigation(WizardPane.java:416)
       at echopoint.WizardPane.actionPerformed(WizardPane.java:292)
       at nextapp.echo.AbstractButton.fireActionPerformed(AbstractButton.java:256)
       at
nextapp.echo.AbstractButton$EventForwarder.actionPerformed(AbstractButton.java:135)
       at
nextapp.echo.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:98)
       at nextapp.echo.DefaultButtonModel.doAction(DefaultButtonModel.java:87)
       at nextapp.echo.AbstractButton.doAction(AbstractButton.java:245)
       at
nextapp.echoservlet.ui.AbstractButtonUI.clientAction(AbstractButtonUI.java:86)
       at echopoint.ui.PushButtonUI.clientAction(PushButtonUI.java:86)
       at
nextapp.echoservlet.ControllerInputProcessor.doAction(ControllerInputProcessor.java:157)
       at
nextapp.echoservlet.ControllerInputProcessor.<init>(ControllerInputProcessor.java:126)
       at
nextapp.echoservlet.ControllerInputProcessor.process(ControllerInputProcessor.java:54)
       at nextapp.echoservlet.Controller.service(Controller.java:609)
       at nextapp.echoservlet.Connection.process(Connection.java:459)
       at nextapp.echoservlet.EchoServer.process(EchoServer.java:314)
       at com.abc.jump.process.view.PortalServlet.process(PortalServlet.java:162)
       at nextapp.echoservlet.EchoServer.doPost(EchoServer.java:234)
       at javax.servlet.http.HttpServlet.service(HttpServlet.java:709)
       at javax.servlet.http.HttpServlet.service(HttpServlet.java:802)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:252)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.jump.process.view.web.filter.TemporaryAssetContentIntegrationFilter.doFilter(TemporaryAssetContentIntegrationFilter.java:76)
       at
org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.common.view.util.ThreadLocalResourceFilter.doFilter(ThreadLocalResourceFilter.java:58)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.springframework.orm.hibernate3.support.OpenSessionInViewFilter.doFilterInternal(OpenSessionInViewFilter.java:174)
       at
org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:77)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
com.abc.common.util.filter.AuditUserDetailsFilter.doFilter(AuditUserDetailsFilter.java:64)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.acegisecurity.context.HttpSessionContextIntegrationFilter.doFilter(HttpSessionContextIntegrationFilter.java:195)
       at
org.acegisecurity.util.FilterToBeanProxy.doFilter(FilterToBeanProxy.java:90)
       at
org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:202)
       at
org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:173)
       at
org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:213)
       at
org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:178)
       at
org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:126)
       at
org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:105)
       at
org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:107)
       at
org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:148)
       at
org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:869)
       at
org.apache.coyote.http11.Http11BaseProtocol$Http11ConnectionHandler.processConnection(Http11BaseProtocol.java:664)
       at
org.apache.tomcat.util.net.PoolTcpEndpoint.processSocket(PoolTcpEndpoint.java:527)
       at
org.apache.tomcat.util.net.LeaderFollowerWorkerThread.runIt(LeaderFollowerWorkerThread.java:80)
       at
org.apache.tomcat.util.threads.ThreadPool$ControlRunnable.run(ThreadPool.java:684)
       at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Failed to broker message:
ID:abc2-2257-1175204828244-0:8:1:1:1 in container: java.sql.SQLException:
Data size bigger than max size for this type: 63268
       at
org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:31)
       at
org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:74)
       at
org.apache.activemq.store.memory.MemoryTransactionStore.addMessage(MemoryTransactionStore.java:224)
       at
org.apache.activemq.store.memory.MemoryTransactionStore$1.addMessage(MemoryTransactionStore.java:117)
       at org.apache.activemq.broker.region.Queue.send(Queue.java:345)
       at
org.apache.activemq.broker.region.AbstractRegion.send(AbstractRegion.java:305)
       at
org.apache.activemq.broker.region.RegionBroker.send(RegionBroker.java:378)
       at
org.apache.activemq.broker.TransactionBroker.send(TransactionBroker.java:197)
       at org.apache.activemq.broker.BrokerFilter.send(BrokerFilter.java:126)
       at
org.apache.activemq.broker.CompositeDestinationBroker.send(CompositeDestinationBroker.java:98)
       at
org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilter.java:136)
       at
org.apache.activemq.broker.TransportConnection.processMessage(TransportConnection.java:449)
       at
org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.java:604)
       at
org.apache.activemq.broker.TransportConnection.service(TransportConnection.java:258)
       at
org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:164)
       at
org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:65)
       at
org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireFormatNegotiator.java:133)
       at
org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityMonitor.java:122)
       at
org.apache.activemq.transport.TransportSupport.doConsume(TransportSupport.java:84)
       at
org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java:137)
       ... 1 more
Caused by: java.sql.SQLException: Data size bigger than max size for this
type: 63268
       at oracle.jdbc.dbaccess.DBError.throwSqlException(DBError.java:134)
       at oracle.jdbc.dbaccess.DBError.throwSqlException(DBError.java:179)
       at oracle.jdbc.ttc7.TTCItem.setArrayData(TTCItem.java:95)
       at
oracle.jdbc.dbaccess.DBDataSetImpl.setBytesBindItem(DBDataSetImpl.java:2413)
       at
oracle.jdbc.driver.OraclePreparedStatement.setItem(OraclePreparedStatement.java:1166)
       at
oracle.jdbc.driver.OraclePreparedStatement.setBytes(OraclePreparedStatement.java:2208)
       at
org.apache.commons.dbcp.DelegatingPreparedStatement.setBytes(DelegatingPreparedStatement.java:105)
       at
org.apache.commons.dbcp.DelegatingPreparedStatement.setBytes(DelegatingPreparedStatement.java:105)
       at
org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.setBinaryData(DefaultJDBCAdapter.java:56)
       at
org.apache.activemq.store.jdbc.adapter.DefaultJDBCAdapter.doAddMessage(DefaultJDBCAdapter.java:175)
       at
org.apache.activemq.store.jdbc.JDBCMessageStore.addMessage(JDBCMessageStore.java:71)
       ... 19 more
--
View this message in context: http://www.nabble.com/Data-size-bigger-than-max-size-for-this-type-tf3489299s2354.html#a9744357",--I'm using ojdbc14-10g-10.2.0.1.0.jar driver.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6in:,178037,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"duplicate delivery, already consumed messages are reconsumed after server restart",MB-83,12515672,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-361|https://issues.apache.org/activemq/browse/AMQ-361]

I am running an embedded activemq broker inside jboss server, I send 1000 messages with ~10K size each to a queue, these messages are consumed by MDBs. After all the messages are consumed, I check the queue via hermes, it also shows no message in the queue. Everything works perfect up to this point. I observe the problem after I stop the jboss server. I connect to derby database via networkserver, I still see some messages in activemq_msgs table. I shutdown derby networkserver and start jboss again, I see from the log that some of the messages which were consumed previously, are being consumed again. If I start the server without deploying the MDB and check the queue via hermes, I see some but not all the messages which were consumed previously still in the queue, before restart hermes was showing no messages. ","windows xp, jdk 1.5, embedded activemq 3.1 broker, jboss 4.02, persistent messages with  derby db.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6i7:,178035,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Misbehaving consumer can affect message delivery to other consumers for a given topic.,MB-82,12515671,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-349|https://issues.apache.org/activemq/browse/AMQ-349]

If you have a supplier publishing to a topic, with two consumers both consuming that topic, a problem with one of the consumers can eventually stop message flow to the other consumer.  The consumer-problem is specifically categorized as some sort of freeze-up, such that the broker eventually blocks on the socket write to that consumer.  The freeze-up could be the process itself (perhaps a problem with the JVM), the network, or perhaps the machine that the consumer is running on panics and goes away.

Once the socket becomes blocked, the broker will queue (upto maxOutstandingMessages) to the consumer.  The properly behaving consumer continues to receive events at this point.  However, once the queue size reaches maxOutstandingMessages, the broker (the session dispatcher thread for the given topic) will block on the PooledExecutor.execute method.  This now prohibits any further message delivery for the given topic to the properly behaving consumer.

I'm wondering why the ""waitWhenBlocked"" policy on the PooledExecutor is used?  These are NON_PERSISTENT messages, so what would be the problem with potentially using one of the discard policies, such as ""discardOldestWhenBlocked"" (or ""discardWhenBlocked"")?  Seems like one of these two policies should be used by default, and the ""waitWhenBlocked"" would be a configurable option.  Our preference would be to use ""discardOldestWhenBlocked"".  I changed TcpTransportServerChannel.java to use ""discardOldestWhenBlocked"", which gave us our desired functionality.

From our point of view, having the broker affect all consumers on behalf of one misbehaving one is bad.  So, what might we be missing with regards to using ""discardOldestWhenBlocked""?","Solaris, JDK 1.4",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6fb:,178022,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
TemporaryQueue communication not working,MB-81,12515573,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1142|https://issues.apache.org/activemq/browse/AMQ-1142]

Assume a (old legacy, yes this is out of date and better solutions are available) point to point architecture:

Client creates temporary queues and send the queuename to the server by a fixed queue ('command queue')
Server uses the received queue names to send messages to the client.

See the attached Code snippets:

* Start the Server
* Start the Client
* The Client creates a temporary queue and sends the name to the server
* Server receives message and sends a test message back.
* Client NEVER receives the test message

This works 100% on IBM MQSeries (the only source diff is the line that has a MQSerie getQueue API call, instead a createQueue, because queus are defined, and not dynamical as in ActiveMQ)

ActiveMQ LOG information:

The temporary queue is logged, but later it says that there are no subscriptions

(..)
DEBUG AbstractRegion                 - Adding destination: topic://ActiveMQ.Advisory.Consumer.Queue.ID:TIGER-2615-1170064714906-1:0:1
DEBUG JournalPersistenceAdapter      - Checkpoint done.
DEBUG TIGER-2615-1170064714906-1:0:1 - No subscriptions registered, will not dispatch message at this time.
(...)

Can this bug be fixed?

Thank you, Jos

","WinXP, Java 1.4.2",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6hj:,178032,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"Deadlock when ActiveMQ 4.X is run as an embedded broker inside JBoss 4.X with ""<config-property-value>vm://localhost</config-property-value>"" configured in the ra.xml file.",MB-80,12515591,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1092|https://issues.apache.org/activemq/browse/AMQ-1092]

Deadlock occurs when ActiveMQ 4.X is run as an embedded broker inside JBoss 4.X with ""<config-property-value>vm://localhost</config-property-value>"" configured in the ra.xml file.  If ""tcp://localhost:61616"" is used instead of ""vm://localhost"" then everything works fine.

The deadlock seems to occur when two messages are being handled (one is being produced and one being consumed).  If I prevent two messages from being handled at the same time (one produced and one consumed) then the deadlock does not occur.

This situation can be reproduced every single time tested.

","Tested OSes:  Windows 2000 Pro, Window XP Pro x64, Linux 
Java: 1.5 SDK & 1.4 SDK
J2EE Server: JBoss 4.03.S1 & 4.0.4GA",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6gn:,178028,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Kaha Store puts a non-string into System properties,MB-79,12515530,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1254|https://issues.apache.org/activemq/browse/AMQ-1254]

KahaStore puts a hashmap into SystemProperties, which causes problems with programs that expect only strings as properties.  In particular some versions of Hibernate assume all system properties are strings: this is causing difficulties running roller in geronimo 2.0

Attached is a proposed solution.  I have no idea how to test it.  I get the same 7 failures and one error building amq with and without the change.

The proposal stores the list of locked directories in a string and converts it back and forth to a map whenever it is accessed.  I use a constant string as the vm-wide lock monitor formerly provided by the HashSet.  According to the String javadoc constant strings are intern()ed and the same instance is provided in any classloader: this makes it suitable for a vm-wide lock monitor.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6gf:,178027,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Expired Messages being delivered,MB-78,12515635,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-936|https://issues.apache.org/activemq/browse/AMQ-936]

I have a sample app that sends a message to a queue, that has producer.setTimeToLive(5000);

I take this to mean that any message sent via this producer will expire after 5 seconds

When I attach a consumer and try to consume after ay 10 seconds the messages are delivered. ",Win XP. ActiveMQ 4.0.1,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6fr:,178024,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
hasSpace call looks like it may cause messages to be skipped,MB-77,12515598,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1080|https://issues.apache.org/activemq/browse/AMQ-1080]

DefaultJDBCAdapter makes calls back to JDBCMessageRecoveryListener.recoverMessage.  This is done in a loop and the loop unconditionally goes through the messages until the end of the ResultSet or the specified maximum is processed.  However JDBCMessageStore's implementation of the listener can ""ignore"" the message if a call to hasSpace fails.  However, nothing tells the calling loop to stop, so there are two issues:

1.  The loop keeps running, which is slightly inefficient (could be more than slightly for non-JDBC stores).
2.  If hasSpace suddenly reports it has space during this loop, messages have been skipped and the sequence ID is set after the point so those skipped messages are not going to be recovered.

At first glance, it looks like the Kaha store is written better, but it might be a good idea to make recoverMessage / recoverMessageReference (in RecoveryMessageListener) return a boolean and ensure that the loop is terminated in the event that False was returned.  As currently written, there seems to be no ""air tight"" way for recovery to fail gracefully, maybe throwing an exception is ""safe"" and does all that is needed but I'm not sure.

As a separate, related issue, suppose the hasSpace eventually returns False, as this can be due to a usageManager reporting that there is no space.  Suppose that all the space is used by consumers other than one specific one.  What ""prods"" the messages to begin flowing again to that one consumer once the UsageManager indicates that space is available?
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6gv:,178029,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Pure Master/Slave configuration doesn't work,MB-76,12515528,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1257|https://issues.apache.org/activemq/browse/AMQ-1257]

From the discussion board. Please fix this issue as it is happening for us also and is a showstopper.

----------------------------------------------------------------------------------------------------------------------------------------------

Hi everybody, 

I made this post: 

http://www.nabble.com/Master-Slaver-persistent--t3681637s2354.html 

in the user Forum. Now I looked myself in the source to find out the mistake. It seems that the method 

protected void sendSyncToSlave(Command command){ 
        try{ 
        
            Response response=(Response) slave.request(command); 
            if (response.isException()){ 
                ExceptionResponse er=(ExceptionResponse)response; 
                log.error(""Slave Failed"",er.getException()); 
            } 

        }catch(Throwable e){ 
            log.error(""Slave Failed"",e); 
            
        } 
    } 

of the ""org.apache.activemq.broker.ft.MasterBroker"" will always throw an Exception. The next thing is that the method ""sendAsyncToSlave"" is called more than one time, if I just send one Message: 


INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendSync 
ERROR MasterBroker                - Slave Failed 
java.lang.AssertionError: Unsupported Method 
        at org.apache.activemq.transport.TransportSupport.request(TransportSuppo 
rt.java:71) 
        at org.apache.activemq.transport.TransportFilter.request(TransportFilter 
.java:92) 
        at org.apache.activemq.transport.TransportFilter.request(TransportFilter 
.java:92) 
        at org.apache.activemq.transport.MutexTransport.request(MutexTransport.j 
ava:55) 
        at org.apache.activemq.broker.ft.MasterBroker.sendSyncToSlave(MasterBrok 
er.java:364) 
        at org.apache.activemq.broker.ft.MasterBroker.sendToSlave(MasterBroker.j 
ava:333) 
        at org.apache.activemq.broker.ft.MasterBroker.send(MasterBroker.java:307 
) 
        at org.apache.activemq.broker.MutableBrokerFilter.send(MutableBrokerFilt 
er.java:136) 
        at org.apache.activemq.broker.TransportConnection.processMessage(Transpo 
rtConnection.java:498) 
        at org.apache.activemq.command.ActiveMQMessage.visit(ActiveMQMessage.jav 
a:604) 
        at org.apache.activemq.broker.TransportConnection.service(TransportConne 
ction.java:294) 
        at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportC 
onnection.java:185) 
        at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilt 
er.java:68) 
        at org.apache.activemq.transport.WireFormatNegotiator.onCommand(WireForm 
atNegotiator.java:133) 
        at org.apache.activemq.transport.InactivityMonitor.onCommand(InactivityM 
onitor.java:122) 
        at org.apache.activemq.transport.TransportSupport.doConsume(TransportSup 
port.java:84) 
        at org.apache.activemq.transport.tcp.TcpTransport.run(TcpTransport.java: 
137) 
        at java.lang.Thread.run(Thread.java:595) 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
INFO  MasterBroker                   - SendASync 
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6fj:,178023,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
avoid use of XHTML in activemq-web-console so things work great in IE 6,MB-75,12515653,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-767|https://issues.apache.org/activemq/browse/AMQ-767]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6g7:,178026,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Messages consumed with the Resource Adapter are intermittently not delivered,MB-74,12515599,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1078|https://issues.apache.org/activemq/browse/AMQ-1078]

The cause is that the ActiveMQSessionExecutor was starting and using it's dispatch thread instead of the Thread managed by the resource adapter.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6fz:,178025,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Deadlock can occur when cerating and deleting many destinations concurrently,MB-73,12515493,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1344|https://issues.apache.org/activemq/browse/AMQ-1344]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6f3:,178021,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
4.0 M4 Persistent Issue with network brokers,MB-72,12515667,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-527|https://issues.apache.org/activemq/browse/AMQ-527]

Setup: 

3 networked brokers, B1, B2, and B3, on 3 servers, connected using multicast discovery. activemq.xml: 

 <broker useJmx=""false"" brokerName=""B1""> 
 
 <persistenceAdapter>
        <journaledJDBC journalLogFiles=""5"" dataDirectory=""foo"" dataSource=""#mysql-ds""/>
 </persistenceAdapter>
 
 <transportConnectors> 
 <transportConnector uri=""tcp://localhost:61616"" discoveryUri=""multicast://default""/> 
 </transportConnectors> 
 
 <networkConnectors> 
 <networkConnector uri=""multicast://default""/> 
 </networkConnectors> 
 
 </broker> 
 
 <bean id=""mysql-ds"" class=""org.apache.commons.dbcp.BasicDataSource"" destroy-method=""close"">
           <property name=""driverClassName"" value=""com.mysql.jdbc.Driver""/>
           <property name=""url"" value=""jdbc:mysql://localhost/activemq?relaxAutoCommit=true""/>
                 <property name=""username"" value=""activemqUser""/>
                 <property name=""password"" value=""activemqPwd""/>
                 <property name=""poolPreparedStatements"" value=""true""/>
 </bean>

Similar for B2 and B3. 

Two queues: Q1 and Q2. 

Two producers, one for each queue, both producers connected to B1. 

One Q1 cosumer connected to B1, another Q1 consumer on B2. 

One Q2 consumer connected to B2, another Q2 consumer connected to B3. 

The problems:

Problem 1: 
Q1 messages are all consumed on B1, never delivered to B2, although there is a Q1 consumer on B2. I understand this is probably the expected behavior, although this definitely looks like a load balancing issue. 

Problem 2: 
All Q2 messages remain persistented in the MySQL DB on B1, even after being successfully forwarded to B2 and B3 and consumed there. 

Problem 3: 
When all the JMS entities are stoped and restarted, Q1 works fine after a while, but all Q2 messages are no longer forwarded to B2 and B3. This means that all Q2 messages are not consumed but persisted instead, further increase the size of the persistent store. 
","RadHat Linux Enterprise Server 3, Tomcat 5.5.15, MySQL 5.0.18 for Linux",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6hb:,178031,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
XA recover fails for 4.0.1,MB-71,12515614,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1054|https://issues.apache.org/activemq/browse/AMQ-1054]

XAResource.recover seems to fail for 4.x of ActiveMQ:

ERROR IN RECOVERY [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
[Lorg.apache.activemq.command.DataStructure; [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: org.apache.activemq.TransactionContext.recover(TransactionContext.java:508) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.datasource.xa.XATransactionalResource.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.datasource.xa.XATransactionalResource.endRecovery(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,152 
at: com.atomikos.icatch.imp.TransactionServiceImp.recover(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.datasource.xa.XATransactionalResource.setRecoveryService(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.icatch.system.Configuration.addResource(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.checkSetup(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.createQueueConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 
at: com.atomikos.jms.QueueConnectionFactoryBean.createConnection(Unknown Source) [thread: SimpleAsyncTaskExecutor-3] on: 06-11-16 08:43:35,153 

Also see http://www.atomikos-support.com/forums/viewtopic.php?t=351 (where I borrowed this stack trace from). We have seen similar things in other applications that tried to use ActiveMQ. I think this is a class cast error in ActiveMQ...

With 3.1 there is no problem. ","Java, JDK 1.4, Windows, Atomikos TransactionsEssentials for the JTA/XA part",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6ev:,178020,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
org.apache.activemq.broker.TransportConnection::stop should not attempt to send a message over the connection.,MB-70,12515652,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-771|https://issues.apache.org/activemq/browse/AMQ-771]

Especially when using ""failover"", there can be a problem with respect to TransportConnection::stop attempting to send a ""shutdown"" message over the connection.  If another thread is sending messages to the connection, and it gets stuck for some reason, such as a network freeze, the target machine panics, or the target process freezes for some reason, the TransportConnection::dispatch will eventually block, locking the MutextTransport object.  When the InactivityMonitor wakes up and detects that the connection is dead, it will go through the process of stopping the connection.  This goes back into TransportConnection, and calls stop, which attemtps to lock the MutexTransport so it can send the ""shutdown"" command.  Now, both threads are stuck, potentially for a long time, as a box panic will not cleanly close the tcp connection.

I'm not sure the rationale for wanting to send a shutdown command to the other side of the connection, since the target has to handle the connection going down hard anyway.  Seems to me, if you are intending on closing the connection, just close it - don't try to be nice to the other side.  Especially in this code path, there is something wrong with the other side anyway.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6h3:,178030,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
TransactionContext class cast exception,MB-69,12515595,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1088|https://issues.apache.org/activemq/browse/AMQ-1088]

The class org.apache.activemq.TransactionContext throws a class cast exception on the recover(int flag) method on the line (or at least it does with jdk1.4) return (XATransactionId[]) receipt.getData();
 
It cannot cast the list of DataStructure[] to XATransactionId[]. I just unpacked it locally as a fix (as seen below) and it worked fine. Have not checked it in though in case others with more experience on this one disagree.

DataStructure[] x = receipt.getData(); 
 
if (x.length > 0)
{
      XATransactionId xaId[] = new XATransactionId[x.length];
      int count = 0;
      for (count =0; count < x.length; count++)
                    xaId[count] = (XATransactionId)x[count]; 
                    
      return xaId;
}
else
      return null;
",XP - jre 1.4,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6en:,178019,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
PooledBrokerFactoryBean incorrectly compares broker config resources,MB-68,12515587,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1106|https://issues.apache.org/activemq/browse/AMQ-1106]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6ef:,178018,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Broker Connection Shutdown is prone to lockup/deadlock,MB-67,12515557,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1179|https://issues.apache.org/activemq/browse/AMQ-1179]

There are several scenarios (timing related) where the broker does not properly shutdown it's connections to a client.",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6e7:,178017,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
OutOfMemoryError,MB-66,12515638,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-914|https://issues.apache.org/activemq/browse/AMQ-914]

I was doing some testing with a single MDP listening to a queue which had about 247300 messages, with a postgres backend. ActiveMQ server was started using the default activemq startup script (on Linux). In this configuration the cpu normally stays mostly idle and I described this behaviour in another bug report.

Another issue came to surface when I tried to profile the client application with EclipseColorer to see why a single MDP can't hog my machine. But when I tried so, 4 OutOfMemoryError messages were logged by ActiveMQ server. Note that I was *not* profiling the server, but the client which is a totally different process.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6dj:,178014,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Active MQ is creating great number of Oracle processes,MB-65,12515657,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:13 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-728|https://issues.apache.org/activemq/browse/AMQ-728]

We migrated from derby to Oracle as message persistence layer. We discoverd now, that ActiveMQ is creating a lot of Oracle resource intensive processes. Please see attached diagrams:

OracleBefore.png = Orace processes with derby as persistence layer
OraceAfter.png = Oracle processes with Oracele as persistence layer

Any help is much appreciated. If you need any additional information, pls don't hesitate to contact me

Best regards, Hans Huber","Sun Solaris 8, Oracle 9i2, Java 1.4.2_08",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6db:,178013,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Some tools from Command line not works properly,MB-64,12515620,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Critical,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1048|https://issues.apache.org/activemq/browse/AMQ-1048]

Some command line not works properly, just return de prompt 
Example: 
query -QQueue=* 

query --objname Type=Connect,BrokerName=localhost -xQNetworkConnector=* 

etc...",Tested in Windows XP Professional and Linux Debian Sarge,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6dz:,178016,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
"Publishing to temporary Queues and advisorySupport=""false""",MB-63,12515529,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Blocker,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:11 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1256|https://issues.apache.org/activemq/browse/AMQ-1256]

On the bulletin board I was told that I can turn off advisory topics because the advisory topics don't disappear for temporary queues and it was impacting performance. Turning off advisory queues DISABLES access to temporary queues. When advisorySupport=""false"" any publishing to a temporary queue results in the following exception (even though the queue is open & available):

javax.jms.JMSException: Cannot publish to a deleted Destination: temp-queue://ID:rpc9-4350-1180554015568-0:0:1
	at org.apache.activemq.ActiveMQSession.send(ActiveMQSession.java:1498)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:465)
	at org.apache.activemq.ActiveMQMessageProducer.send(ActiveMQMessageProducer.java:415)",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6dr:,178015,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
ActiveMQConsumer can catch an error in dispatch but logs it as a warning,MB-62,12515582,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1113|https://issues.apache.org/activemq/browse/AMQ-1113]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6d3:,178012,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Illegal character in hostname error on hosts with underscores in their host names,MB-61,12515554,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Minor,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1188|https://issues.apache.org/activemq/browse/AMQ-1188]

On a machine where the hostname contains underscores (e.g. HS_RH64_A3_1) ActiveMQ fails to initialize with the stack trace below. This seems to be a problem with the TCP protocol handler since doing new URL(""http://HS_RH64_A3_1.godzilla.local:61616"") works fine.

2007-03-05 08:30:20,076 [WrapperSimpleAppMain] ERROR (BrokerService.java:412) - Failed to start ActiveMQ JMS Message Broker. Reason: java.io.IOException: Transp
ort Connector could not be registered in JMX: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
java.io.IOException: Transport Connector could not be registered in JMX: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:25)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1079)
        at org.apache.activemq.broker.BrokerService.startTransportConnector(BrokerService.java:1508)
        at org.apache.activemq.broker.BrokerService.startAllConnectors(BrokerService.java:1468)
        at org.apache.activemq.broker.BrokerService.start(BrokerService.java:402)
        at org.apache.activemq.xbean.XBeanBrokerService.afterPropertiesSet(XBeanBrokerService.java:47)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1062)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1029)
        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:420)
        at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:245)
        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:141)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:242)
        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:156)
        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:290)
        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:348)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:161)
        at org.apache.xbean.spring.context.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:51)
        at org.apache.activemq.xbean.XBeanBrokerFactory.createBroker(XBeanBrokerFactory.java:41)
        at org.apache.activemq.broker.BrokerFactory.createBroker(BrokerFactory.java:57)
        at org.apache.activemq.console.command.StartCommand.startBroker(StartCommand.java:82)
        at org.apache.activemq.console.command.StartCommand.runTask(StartCommand.java:47)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.runTask(ShellCommand.java:82)
        at org.apache.activemq.console.command.AbstractCommand.execute(AbstractCommand.java:50)
        at org.apache.activemq.console.command.ShellCommand.main(ShellCommand.java:46)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.apache.activemq.console.Main.runTaskClass(Main.java:159)
        at org.apache.activemq.console.Main.main(Main.java:91)
        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
        at java.lang.reflect.Method.invoke(Method.java:585)
        at org.tanukisoftware.wrapper.WrapperSimpleApp.run(WrapperSimpleApp.java:197)
        at java.lang.Thread.run(Thread.java:595)
Caused by: java.io.IOException: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at org.apache.activemq.util.IOExceptionSupport.create(IOExceptionSupport.java:43)
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:94)
        at org.apache.activemq.transport.tcp.TcpTransportFactory.doBind(TcpTransportFactory.java:56)
        at org.apache.activemq.transport.TransportFactory.bind(TransportFactory.java:109)
        at org.apache.activemq.broker.TransportConnector.createTransportServer(TransportConnector.java:270)
        at org.apache.activemq.broker.TransportConnector.getServer(TransportConnector.java:122)
        at org.apache.activemq.broker.TransportConnector.asManagedConnector(TransportConnector.java:100)
        at org.apache.activemq.broker.BrokerService.registerConnectorMBean(BrokerService.java:1072)
        ... 35 more
Caused by: java.net.URISyntaxException: Illegal character in hostname at index 8: tcp://HS_RH64_A3_1.godzilla.local:61616
        at java.net.URI$Parser.fail(URI.java:2816)
        at java.net.URI$Parser.parseHostname(URI.java:3355)
        at java.net.URI$Parser.parseServer(URI.java:3204)
        at java.net.URI$Parser.parseAuthority(URI.java:3123)
        at java.net.URI$Parser.parseHierarchical(URI.java:3065)
        at java.net.URI$Parser.parse(URI.java:3021)
        at java.net.URI.<init>(URI.java:663)
        at org.apache.activemq.transport.tcp.TcpTransportServer.bind(TcpTransportServer.java:91)
        ... 41 more
","RHEL4 Update 4 ES x86_64
Sun JDK 1.4.2_08",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6cv:,178011,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
stomp connections in the broker don't get cleared up if the socket dies,MB-60,12515576,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Resolved at Apache,chirino,chirino,chirino,02/Aug/07 5:12 PM,03/Aug/07 11:36 AM,29/Nov/16 4:18 PM,03/Aug/07 11:36 AM,,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,"Original reported at [AMQ-1134|https://issues.apache.org/activemq/browse/AMQ-1134]

it looks like there's a bug causing the connection to keep around ",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6cn:,178010,,,,,,,,02/Aug/07 5:27 PM;chirino;Resolving as a duplicate of an issues that has been resolved in the ActiveMQ jira.,,,,,,,,,,,,,,,,,,,
Make PooledBrokerFactoryBean work with spring 2.0,MB-56,12515486,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,20/Jul/07 11:34 AM,24/Jul/07 2:09 PM,29/Nov/16 4:18 PM,20/Jul/07 11:35 AM,fuse-4.1.2.0,,,,,,,,,,,,,,,,,,,, fuse-4.1.2.2,,,,,,,0,,In spring 2.0 the ClassPathResource being used as a key in the broker service map also take the classloader into consideration when doing an equals comparison and multiple classloaders are being used.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk5lj:,177888,,,,,,,,20/Jul/07 11:35 AM;chirino;fixed in [7915|http://projects.open.iona.com/projects/trac/iona/changeset/7915],24/Jul/07 2:09 PM;chirino;fix is in trunk,,,,,,,,,,,,,,,,,,
AMQ reports 'Async exception with no exception listener' upon shutdown of SMX,MB-55,12515485,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Duplicate Issue,rajdavies,bsnyder1,bsnyder1,19/Jul/07 8:50 PM,05/Oct/07 5:27 AM,29/Nov/16 4:18 PM,05/Oct/07 5:27 AM,fuse-4.1.2.4,,,,,,,,,,,,,,,,,,,,5.0.0.2-fuse,,,,,,,0,,This problem manifests itself in the Fuse ESB. See issue [ESB-5] for more info. ,,,,,,,,,,ESB-5,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk6u7:,178089,,,,,,,,05/Oct/07 5:27 AM;rajdavies;Duplicates ESB-5,,,,,,,,,,,,,,,,,,,
The ActiveMQ thread Scheduler leaks threads.,MB-52,12515482,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 2:01 PM,19/Jul/07 2:02 PM,29/Nov/16 4:18 PM,19/Jul/07 2:02 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.9,,,,,,,0,,"When the scheduled threads are canceled the wrong API call was being used.  Fixed in: [10511|http://projects.open.iona.com/projects/trac/iona/changeset/10511]

",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5in:,177875,,,,,,,,,,,,,,,,,,,,,,,,,,,
Multicast Discovery Agent can get into a tight loop reconnecting if the network connection fails to get established,MB-50,12515480,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 1:52 PM,24/Jul/07 1:44 PM,29/Nov/16 4:18 PM,24/Jul/07 1:44 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.9,,,,,,,0,,"Fixed in [10314|http://projects.open.iona.com/projects/trac/iona/changeset/10314]

The multicast agent now tracks failures generated by the network connectors and uses a delayed backoff strategy before generating another discovery event so that you don't get into a tight loop doing reconnects.
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk5l3:,177886,,,,,,,,23/Jul/07 3:38 PM;chirino;re-open so that we can port this fix to trunk.,24/Jul/07 1:44 PM;chirino;ported to trunk see: [AMQ-1342|https://issues.apache.org/activemq/browse/AMQ-1342],,,,,,,,,,,,,,,,,,
Thread gets stuck in a WAIT and never returns,MB-48,12515478,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 1:04 PM,24/Jul/07 12:20 PM,29/Nov/16 4:18 PM,24/Jul/07 12:20 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.9,,,,,,,0,,"The thread that gets stuck in the wait is:

{code}
ActiveMQ Connection Dispatcher: 8012937"" daemon prio=6 tid=0x04565400 nid=0xb4 in Object.wait() [0x051bf000..0x051bfd18]
  java.lang.Thread.State: WAITING (on object monitor)
       at java.lang.Object.wait(Native Method)
       - waiting on <0x0a71db28> (a java.lang.Object)
       at java.lang.Object.wait(Object.java:485)
       at org.apache.activemq.thread.DedicatedTaskRunner.shutdown(DedicatedTaskRunner.java:70)
       - locked <0x0a71db28> (a java.lang.Object)
       at org.apache.activemq.broker.AbstractConnection.stop(AbstractConnection.java:190)
       at org.apache.activemq.broker.TransportConnection.stop(TransportConnection.java:95)
       at org.apache.activemq.broker.AbstractConnection.processShutdown(AbstractConnection.java:389)
       at org.apache.activemq.command.ShutdownInfo.visit(ShutdownInfo.java:35)
       at org.apache.activemq.broker.AbstractConnection.service(AbstractConnection.java:315)
       at org.apache.activemq.broker.TransportConnection$1.onCommand(TransportConnection.java:63)
       at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:91)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
       at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:44)
       at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
       at org.apache.activemq.network.DemandForwardingBridgeSupport.stop(DemandForwardingBridgeSupport.java:296)
       at org.apache.activemq.util.ServiceSupport.dispose(ServiceSupport.java:39)
       at org.apache.activemq.network.DiscoveryNetworkConnector.onServiceRemove(DiscoveryNetworkConnector.java:154)
       at org.apache.activemq.transport.discovery.simple.SimpleDiscoveryAgent.serviceFailed(SimpleDiscoveryAgent.java:117)
       at org.apache.activemq.network.DiscoveryNetworkConnector$2.fireServiceFailed(DiscoveryNetworkConnector.java:254)
       at org.apache.activemq.network.DiscoveryNetworkConnector$2.serviceLocalException(DiscoveryNetworkConnector.java:241)
       at org.apache.activemq.network.DemandForwardingBridgeSupport.serviceLocalCommand(DemandForwardingBridgeSupport.java:536)
       at org.apache.activemq.network.DemandForwardingBridgeSupport$1.onCommand(DemandForwardingBridgeSupport.java:118)
       at org.apache.activemq.transport.ResponseCorrelator.onCommand(ResponseCorrelator.java:91)
       at org.apache.activemq.transport.TransportFilter.onCommand(TransportFilter.java:63)
       at org.apache.activemq.transport.vm.VMTransport.oneway(VMTransport.java:76)
       at org.apache.activemq.transport.MutexTransport.oneway(MutexTransport.java:47)
       - locked <0x0a71de08> (a java.lang.Object)
       at org.apache.activemq.transport.ResponseCorrelator.oneway(ResponseCorrelator.java:58)
       at org.apache.activemq.broker.TransportConnection.dispatch(TransportConnection.java:213)
       at org.apache.activemq.broker.AbstractConnection.processDispatch(AbstractConnection.java:842)
       at org.apache.activemq.broker.AbstractConnection.iterate(AbstractConnection.java:879)
       at org.apache.activemq.thread.DedicatedTaskRunner.runTask(DedicatedTaskRunner.java:100)
       at org.apache.activemq.thread.DedicatedTaskRunner.access$000(DedicatedTaskRunner.java:24)
       at org.apache.activemq.thread.DedicatedTaskRunner$1.run(DedicatedTaskRunner.java:38)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzk5kn:,177884,,,,,,,,19/Jul/07 1:05 PM;chirino;fixed in rev [10255|http://projects.open.iona.com/projects/trac/iona/changeset/10255],23/Jul/07 3:45 PM;chirino;re-opening so that fix can be ported to trunk,24/Jul/07 12:20 PM;chirino;ported to trunk.  see [AMQ-1340|https://issues.apache.org/activemq/browse/AMQ-1340],,,,,,,,,,,,,,,,,
Network conntions not shutdown propertly when a InvalidClientIDException occurs,MB-47,12515477,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:57 PM,24/Jul/07 1:51 PM,29/Nov/16 4:18 PM,24/Jul/07 1:51 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.9,,,,,,,0,,"If a network connection fail due to a remote exception like InvalidClientIDException, the connection fails to get shutdown properly due to some threads blocking on the startedLatch
",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzk5lb:,177887,,,,,,,,19/Jul/07 12:58 PM;chirino;fixed in [10222|http://projects.open.iona.com/projects/trac/iona/changeset/10222],23/Jul/07 3:40 PM;chirino;re-open so that fix can be ported to trunk,24/Jul/07 1:51 PM;chirino;fixed in trunk see [AMQ-1343|https://issues.apache.org/activemq/browse/AMQ-1343],,,,,,,,,,,,,,,,,
Deadlock could occur on shutdown,MB-44,12515474,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:52 PM,19/Jul/07 12:52 PM,29/Nov/16 4:18 PM,19/Jul/07 12:52 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8,,,,,,,0,,fixed in rev [8399|http://projects.open.iona.com/projects/trac/iona/changeset/8399],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5i7:,177873,,,,,,,,,,,,,,,,,,,,,,,,,,,
Message compression option is not compressing messages.,MB-42,12515472,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:15 PM,20/Jul/07 11:42 AM,29/Nov/16 4:18 PM,19/Jul/07 12:16 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8, fuse-4.1.2.2,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5j3:,177877,,,,,,,,"19/Jul/07 12:16 PM;chirino;fixed in [8388|http://projects.open.iona.com/projects/trac/iona/changeset/8388]

see [AMQ-1140|https://issues.apache.org/activemq/browse/AMQ-1140]",,,,,,,,,,,,,,,,,,,
Deadlock can occur when cerating and deleting many destinations concurrently,MB-41,12515471,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:14 PM,24/Jul/07 2:28 PM,29/Nov/16 4:18 PM,24/Jul/07 2:28 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzk5nb:,177896,,,,,,,,19/Jul/07 12:14 PM;chirino;fixed in [8332|http://projects.open.iona.com/projects/trac/iona/changeset/8332],24/Jul/07 2:14 PM;chirino;needs to get ported to trunk.,24/Jul/07 2:28 PM;chirino;ported to trunk see: [AMQ-1344|https://issues.apache.org/activemq/browse/AMQ-1344],,,,,,,,,,,,,,,,,
JMX tabula data could not view viewed. (viewing messages via JMX) ,MB-40,12515470,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:12 PM,19/Jul/07 12:12 PM,29/Nov/16 4:18 PM,19/Jul/07 12:12 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8,,,,,,,0,,fixed in [8331|http://projects.open.iona.com/projects/trac/iona/changeset/8331] ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5hb:,177869,,,,,,,,,,,,,,,,,,,,,,,,,,,
A broker side connection could hang if the connection fails when the connection is being shutdown,MB-39,12515469,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Duplicate Issue,chirino,chirino,chirino,19/Jul/07 12:06 PM,19/Jul/07 12:08 PM,29/Nov/16 4:18 PM,19/Jul/07 12:08 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8,,,,,,,0,,,,,,,,,,,,MB-36,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5gv:,177867,,,,,,,,,,,,,,,,,,,,,,,,,,,
A connection that is blocked on send due to queue limits could not be shutdown,MB-38,12515468,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:05 PM,19/Jul/07 12:43 PM,29/Nov/16 4:18 PM,19/Jul/07 12:43 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8,,,,,,,0,,fixed in [8253|http://projects.open.iona.com/projects/trac/iona/changeset/8253],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5hz:,177872,,,,,,,,,,,,,,,,,,,,,,,,,,,
Memory limits for topics was not returning to normal after it's consumers were disconnected,MB-37,12515467,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 12:03 PM,24/Jul/07 2:16 PM,29/Nov/16 4:18 PM,19/Jul/07 12:03 PM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.8,,,,,,,0,,fixed in [8252|http://projects.open.iona.com/projects/trac/iona/changeset/8252],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5lz:,177890,,,,,,,,24/Jul/07 2:16 PM;chirino;fix is in trunk.,,,,,,,,,,,,,,,,,,,
Messages consumed with the Resource Adapter (RA) are intermittently not delivered,MB-33,12515463,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:42 AM,20/Jul/07 11:56 AM,29/Nov/16 4:18 PM,19/Jul/07 11:42 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.7,fuse-4.1.2.4,,,,,,0,,fixed in rev [8181|http://projects.open.iona.com/projects/trac/iona/changeset/8181],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5jj:,177879,,,,,,,,20/Jul/07 11:56 AM;chirino;Fixed applied in 4.1.2 branch re [11242|http://projects.open.iona.com/projects/trac/iona/changeset/11242],,,,,,,,,,,,,,,,,,,
ActiveMQ Resource Adapter did not serialize properly when stored in JNDI,MB-32,12515462,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:40 AM,19/Jul/07 11:40 AM,29/Nov/16 4:18 PM,19/Jul/07 11:40 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.7,,,,,,,0,,fixed in [8180|http://projects.open.iona.com/projects/trac/iona/changeset/8180],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5g7:,177864,,,,,,,,,,,,,,,,,,,,,,,,,,,
Sync oneway of a ShutdownInfo from the broker to the client could deadlock the vm transport,MB-30,12515460,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:35 AM,19/Jul/07 11:36 AM,29/Nov/16 4:18 PM,19/Jul/07 11:36 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.7,,,,java client,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5fz:,177863,,,,,,,,19/Jul/07 11:36 AM;chirino;Fixed in [8130|http://projects.open.iona.com/projects/trac/iona/changeset/8130]  -  Sending that ShutdownInfo in the async dispatch thread now.,,,,,,,,,,,,,,,,,,,
Temp reply to destinations do erroneously reported as not existing when using network of brokers,MB-29,12515459,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:28 AM,19/Jul/07 11:33 AM,29/Nov/16 4:18 PM,19/Jul/07 11:33 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.7,,,,,,,0,,This is due to timing issues with the advisory messages that are broadcasted across the network.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5fr:,177862,,,,,,,,19/Jul/07 11:33 AM;chirino;This problem can be resolved my disabling the use of advisories on the client. See MB-28 for more details.,,,,,,,,,,,,,,,,,,,
File descriptor leak due to if connection attempt is not successful ,MB-27,12515457,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:19 AM,19/Jul/07 11:19 AM,29/Nov/16 4:18 PM,19/Jul/07 11:19 AM,,,,,,,,,,,,,,,,,,,,,,,,,,,,0,,This can also just manifest itself as a slow memory leak.,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5fb:,177860,,,,,,,,19/Jul/07 11:19 AM;chirino;fixed in [8098|http://projects.open.iona.com/projects/trac/iona/changeset/8098],,,,,,,,,,,,,,,,,,,
Thrown Nullpointer exception from ConnectionStateTracker can lead to stack overflow,MB-26,12515456,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:17 AM,24/Jul/07 2:19 PM,29/Nov/16 4:18 PM,19/Jul/07 11:17 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.7,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk5mn:,177893,,,,,,,,19/Jul/07 11:17 AM;chirino;fixed in [7978|http://projects.open.iona.com/projects/trac/iona/changeset/7978],24/Jul/07 2:19 PM;chirino;fix is in trunk.,,,,,,,,,,,,,,,,,,
The ActiveMQ PooledConnectionFactory continually created new connections,MB-25,12515455,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 11:12 AM,24/Jul/07 2:18 PM,29/Nov/16 4:18 PM,19/Jul/07 11:13 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.7,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk5mf:,177892,,,,,,,,19/Jul/07 11:13 AM;chirino;fixed in [7977|http://projects.open.iona.com/projects/trac/iona/changeset/7977],24/Jul/07 2:18 PM;chirino;Fix is in trunk,,,,,,,,,,,,,,,,,,
DestinationMap exponentially uses more memory the deeper the destination hierarchy gets,MB-22,12515452,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 10:46 AM,24/Jul/07 2:20 PM,29/Nov/16 4:18 PM,19/Jul/07 10:47 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.6,,,,broker,,,0,,see [AMQ-1068|http://issues.apache.org/activemq/browse/AMQ-1068],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,3.0,,1|hzk5mv:,177894,,,,,,,,19/Jul/07 10:47 AM;chirino;fixed in rev [7690|http://projects.open.iona.com/projects/trac/iona/changeset/7690],19/Jul/07 10:48 AM;chirino;and [7701|http://projects.open.iona.com/projects/trac/iona/changeset/7701],24/Jul/07 2:20 PM;chirino;Fix is in trunk,,,,,,,,,,,,,,,,,
PooledConnectionFactory does not work with the org.springframework.jms.listener.DefaultMessageListenerContainer in the failure case,MB-20,12515450,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 10:39 AM,19/Jul/07 10:39 AM,29/Nov/16 4:18 PM,19/Jul/07 10:39 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.6,,,,java client,,,0,,see [AMQ-1045|http://issues.apache.org/activemq/browse/AMQ-1045],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5ev:,177858,,,,,,,,19/Jul/07 10:39 AM;chirino;fixed in rev [7395|http://projects.open.iona.com/projects/trac/iona/changeset/7395],,,,,,,,,,,,,,,,,,,
The JMSConsumerTest interminitently failed on linux systems.,MB-19,12515451,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 10:34 AM,19/Jul/07 10:37 AM,29/Nov/16 4:18 PM,19/Jul/07 10:37 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.6,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5en:,177857,,,,,,,,"19/Jul/07 10:37 AM;chirino;Fixed applied in change [7287|http://projects.open.iona.com/projects/trac/iona/changeset/7287] and released in fuse-4.1.0.4.
But this changed added substantial performance reduction so was backed out in change [7498|http://projects.open.iona.com/projects/trac/iona/changeset/7498] which fixed the issues by adding better synchronization to the test case.",,,,,,,,,,,,,,,,,,,
Message delivered out of order to a MessageListener when session is transacted and a rollback occurs.,MB-18,12515448,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 10:27 AM,24/Jul/07 2:21 PM,29/Nov/16 4:18 PM,19/Jul/07 10:28 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.4,,,,,,,0,,"Port fix done on this revision to the activemq fuse 4.1.0 branch.rev [472345|http://svn.apache.org/viewvc?view=rev&revision=472345]

See: [AMQ-1031|http://issues.apache.org/activemq/browse/AMQ-1031] [AMQ-1032|http://issues.apache.org/activemq/browse/AMQ-1032]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk5n3:,177895,,,,,,,,19/Jul/07 10:28 AM;chirino;fixed ported in rev [7284|http://projects.open.iona.com/projects/trac/iona/changeset/7284],24/Jul/07 2:21 PM;chirino;fix is in trunk,,,,,,,,,,,,,,,,,,
"When client uses failover to reconnect to broker, broker state can get messed up when it has 2 concurrent connections.",MB-16,12515449,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 10:03 AM,19/Jul/07 10:21 AM,29/Nov/16 4:18 PM,19/Jul/07 10:11 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.6,,,,,,,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,2.0,,1|hzk5ef:,177856,,,,,,,,"19/Jul/07 10:11 AM;chirino;Fix took a few change sets:
[7049|http://projects.open.iona.com/projects/trac/iona/changeset/7049] 
[7064|http://projects.open.iona.com/projects/trac/iona/changeset/7064] 
[7071|http://projects.open.iona.com/projects/trac/iona/changeset/7071]
[7081|http://projects.open.iona.com/projects/trac/iona/changeset/7081]
[7085|http://projects.open.iona.com/projects/trac/iona/changeset/7085]
[7374|http://projects.open.iona.com/projects/trac/iona/changeset/7374]
[7381|http://projects.open.iona.com/projects/trac/iona/changeset/7381] 
",19/Jul/07 10:21 AM;chirino;Lots of little tweaks and changes took place with the changes sets related to this issue.  I'm sure that if we review those change sets we can generate a few more jira issues detailing the changes.,,,,,,,,,,,,,,,,,,
JMX Connector not created when there is an existing MBeanServer,MB-14,12515445,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:56 AM,19/Jul/07 9:56 AM,29/Nov/16 4:18 PM,19/Jul/07 9:56 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,fixed in [6256|http://projects.open.iona.com/projects/trac/iona/changeset/6256],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5dr:,177853,,,,,,,,,,,,,,,,,,,,,,,,,,,
Inactivity Monitor causes a InterruptedException in broker when connection is disconnected.,MB-13,12515443,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:53 AM,19/Jul/07 9:54 AM,29/Nov/16 4:18 PM,19/Jul/07 9:54 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,The reason for this is that ScheduledFuture.cancel(true) was being called in Scheduler.java,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5dj:,177852,,,,,,,,"19/Jul/07 9:54 AM;chirino;fixed in [6203|http://projects.open.iona.com/projects/trac/iona/changeset/6203]
see [AMQ-983|https://issues.apache.org/activemq/browse/AMQ-983]",,,,,,,,,,,,,,,,,,,
Source Builds are Broken,MB-12,12515444,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,bsnyder1,bsnyder1,bsnyder1,19/Jul/07 9:47 AM,19/Jul/07 9:48 AM,29/Nov/16 4:18 PM,19/Jul/07 9:48 AM,,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,"{code}
[ERROR] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] A required plugin was not found: Plugin could not be found - check that the goal name is correct: Unable to download the artifact from any repository

Try downloading the file manually from the project website.

Then, install it using the command: 
    mvn install:install-file -DgroupId=org.apache.xbean -DartifactId=maven-xbean-plugin \
        -Dversion=fuse-2.5.0.0 -Dpackaging=maven-plugin -Dfile=/path/to/file


  org.apache.xbean:maven-xbean-plugin:maven-plugin:fuse-2.5.0.0

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)

  org.apache.xbean:maven-xbean-plugin:maven-plugin:fuse-2.5.0.0

from the specified remote repositories:
  central (http://repo1.maven.org/maven2)
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5db:,177851,,,,,,,,19/Jul/07 9:48 AM;chirino;fixed in [6184|http://projects.open.iona.com/projects/trac/iona/changeset/6184],,,,,,,,,,,,,,,,,,,
ssl:// protocol broken on the client side: get a java.net.SocketException: Unconnected sockets not implemented,MB-10,12515440,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:32 AM,19/Jul/07 9:34 AM,29/Nov/16 4:18 PM,19/Jul/07 9:34 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,java client,,,0,,"{code}
producer:
     [echo] Running producer against server at $url = ssl://localhost:61617 for subject $subject = TEST.FOO
     [java] Connecting to URL: ssl://localhost:61617
     [java] Publishing a Message with size 1000 to queue: TEST.FOO
     [java] Using non-durable publishing
     [java] Sleeping between publish 0 ms
     [java] Caught: javax.jms.JMSException: Could not connect to broker URL: ssl://localhost:61617. Reason: java.net.SocketException: Unconnected sockets not implemented
     [java] javax.jms.JMSException: Could not connect to broker URL: ssl://localhost:61617. Reason: java.net.SocketException: Unconnected sockets not implemented
     [java]     at org.apache.activemq.util.JMSExceptionSupport.create(JMSExceptionSupport.java:32)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:252)     
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:211)     
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createConnection(ActiveMQConnectionFactory.java:158)
     [java]     at ToolSupport.createConnection(Unknown Source)
     [java]     at ProducerTool.run(Unknown Source)
     [java]     at ProducerTool.runTool(Unknown Source)
     [java]     at ProducerTool.main(Unknown Source)
     [java] Caused by: java.net.SocketException: Unconnected sockets not implemented
     [java]     at javax.net.SocketFactory.createSocket(SocketFactory.java:97)
     [java]     at org.apache.activemq.transport.tcp.TcpTransport.<init>(TcpTransport.java:80)
     [java]     at org.apache.activemq.transport.tcp.TcpTransportFactory.createTcpTransport(TcpTransportFactory.java:130)     
     [java]     at org.apache.activemq.transport.tcp.TcpTransportFactory.createTransport(TcpTransportFactory.java:115)     
     [java]     at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:115)
     [java]     at org.apache.activemq.transport.TransportFactory.doConnect(TransportFactory.java:42)
     [java]     at org.apache.activemq.transport.TransportFactory.connect(TransportFactory.java:76)
     [java]     at org.apache.activemq.ActiveMQConnectionFactory.createActiveMQConnection(ActiveMQConnectionFactory.java:223)     
     [java]     ... 6 more
{code}",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5cv:,177849,,,,,,,,19/Jul/07 9:34 AM;chirino;fixed in [6117|http://projects.open.iona.com/projects/trac/iona/changeset/6117],,,,,,,,,,,,,,,,,,,
Inactivity Monitor timeout does not on disconnected client does not cause blocked dispatch to client to fail.,MB-8,12515437,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:18 AM,19/Jul/07 9:19 AM,29/Nov/16 4:18 PM,19/Jul/07 9:19 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,see [AMQ-918|http://issues.apache.org/activemq/browse/AMQ-918],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5cf:,177847,,,,,,,,19/Jul/07 9:19 AM;chirino;fixed in  [5943|http://projects.open.iona.com/projects/trac/iona/changeset/5943],,,,,,,,,,,,,,,,,,,
Failover transport does not replay all the transaction operations on failover.,MB-7,12515439,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:13 AM,19/Jul/07 9:15 AM,29/Nov/16 4:18 PM,19/Jul/07 9:15 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,see [AMQ-915|https://issues.apache.org/activemq/browse/AMQ-915],,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5c7:,177846,,,,,,,,"19/Jul/07 9:15 AM;chirino;fix committed in rev [5826|http://projects.open.iona.com/projects/trac/iona/changeset/5826] and [5942|http://projects.open.iona.com/projects/trac/iona/changeset/5942]
",,,,,,,,,,,,,,,,,,,
Transient connection failure with Failover transport can cause InvalidClientIDException,MB-6,12515436,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:07 AM,19/Jul/07 9:08 AM,29/Nov/16 4:18 PM,19/Jul/07 9:08 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,"see: http://issues.apache.org/activemq/browse/AMQ-911

fixed in rev [5777|http://projects.open.iona.com/projects/trac/iona/changeset/5777]",,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5br:,177844,,,,,,,,,,,,,,,,,,,,,,,,,,,
Clients and Brokers of different versions could not connect to each other.,MB-5,12515433,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,chirino,chirino,chirino,19/Jul/07 9:04 AM,19/Jul/07 9:11 AM,29/Nov/16 4:18 PM,19/Jul/07 9:04 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.2,,,,,,,0,,OpenWire Negotiation fixed in rev 5775,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,1.0,,1|hzk5bz:,177845,,,,,,,,19/Jul/07 9:11 AM;chirino;see: [AMQ-913|http://issues.apache.org/activemq/browse/AMQ-913],,,,,,,,,,,,,,,,,,,
Timing bug could cause duplicate client id exception in network code.,MB-4,12515432,Bug,Resolved,MB,FUSE Message Broker,software,garytully,"FUSE Message Broker, the FuseSource distribution of Apache ActiveMQ, is the JMS platform of choice, providing high performance, unlimited scalability, and mission-critical reliability for distributed enterprise computing. FUSE Message Broker is a truly cost-effective and flexible messaging platform for reliably executing transactions and moving data, efficiently scaling operations, and connecting processes across heterogeneous database and application environments.",http://www.fusesource.com/products/fuse-message-broker/,Major,Done,rajdavies,chirino,chirino,19/Jul/07 8:18 AM,19/Jul/07 8:55 AM,29/Nov/16 4:18 PM,19/Jul/07 8:55 AM,fuse-4.1.0.0,,,,,,,,,,,,,,,,,,,,fuse-4.1.0.1,,,,,,,0,,fixed in rev 5444,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,0.0,0.0,,1|hzk5bj:,177843,,,,,,,,,,,,,,,,,,,,,,,,,,,
